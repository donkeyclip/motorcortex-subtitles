!(function (e) {
  var t = window.webpackHotUpdate;
  window.webpackHotUpdate = function (e, n) {
    !(function (e, t) {
      if (!w[e] || !x[e]) return;
      for (var n in ((x[e] = !1), t))
        Object.prototype.hasOwnProperty.call(t, n) && (d[n] = t[n]);
      0 == --y && 0 === v && S();
    })(e, n),
      t && t(e, n);
  };
  var n,
    r = !0,
    i = "bf6c10efa33ffc91d215",
    a = {},
    o = [],
    s = [];
  function u(e) {
    var t = A[e];
    if (!t) return C;
    var r = function (r) {
        return (
          t.hot.active
            ? (A[r]
                ? -1 === A[r].parents.indexOf(e) && A[r].parents.push(e)
                : ((o = [e]), (n = r)),
              -1 === t.children.indexOf(r) && t.children.push(r))
            : (console.warn(
                "[HMR] unexpected require(" + r + ") from disposed module " + e
              ),
              (o = [])),
          C(r)
        );
      },
      i = function (e) {
        return {
          configurable: !0,
          enumerable: !0,
          get: function () {
            return C[e];
          },
          set: function (t) {
            C[e] = t;
          },
        };
      };
    for (var a in C)
      Object.prototype.hasOwnProperty.call(C, a) &&
        "e" !== a &&
        "t" !== a &&
        Object.defineProperty(r, a, i(a));
    return (
      (r.e = function (e) {
        return (
          "ready" === f && p("prepare"),
          v++,
          C.e(e).then(t, function (e) {
            throw (t(), e);
          })
        );
        function t() {
          v--, "prepare" === f && (b[e] || M(e), 0 === v && 0 === y && S());
        }
      }),
      (r.t = function (e, t) {
        return 1 & t && (e = r(e)), C.t(e, -2 & t);
      }),
      r
    );
  }
  function c(t) {
    var r = {
      _acceptedDependencies: {},
      _declinedDependencies: {},
      _selfAccepted: !1,
      _selfDeclined: !1,
      _selfInvalidated: !1,
      _disposeHandlers: [],
      _main: n !== t,
      active: !0,
      accept: function (e, t) {
        if (void 0 === e) r._selfAccepted = !0;
        else if ("function" == typeof e) r._selfAccepted = e;
        else if ("object" == typeof e)
          for (var n = 0; n < e.length; n++)
            r._acceptedDependencies[e[n]] = t || function () {};
        else r._acceptedDependencies[e] = t || function () {};
      },
      decline: function (e) {
        if (void 0 === e) r._selfDeclined = !0;
        else if ("object" == typeof e)
          for (var t = 0; t < e.length; t++) r._declinedDependencies[e[t]] = !0;
        else r._declinedDependencies[e] = !0;
      },
      dispose: function (e) {
        r._disposeHandlers.push(e);
      },
      addDisposeHandler: function (e) {
        r._disposeHandlers.push(e);
      },
      removeDisposeHandler: function (e) {
        var t = r._disposeHandlers.indexOf(e);
        t >= 0 && r._disposeHandlers.splice(t, 1);
      },
      invalidate: function () {
        switch (((this._selfInvalidated = !0), f)) {
          case "idle":
            ((d = {})[t] = e[t]), p("ready");
            break;
          case "ready":
            O(t);
            break;
          case "prepare":
          case "check":
          case "dispose":
          case "apply":
            (g = g || []).push(t);
        }
      },
      check: E,
      apply: _,
      status: function (e) {
        if (!e) return f;
        l.push(e);
      },
      addStatusHandler: function (e) {
        l.push(e);
      },
      removeStatusHandler: function (e) {
        var t = l.indexOf(e);
        t >= 0 && l.splice(t, 1);
      },
      data: a[t],
    };
    return (n = void 0), r;
  }
  var l = [],
    f = "idle";
  function p(e) {
    f = e;
    for (var t = 0; t < l.length; t++) l[t].call(null, e);
  }
  var h,
    d,
    m,
    g,
    y = 0,
    v = 0,
    b = {},
    x = {},
    w = {};
  function N(e) {
    return +e + "" === e ? +e : e;
  }
  function E(e) {
    if ("idle" !== f) throw new Error("check() is only allowed in idle status");
    return (
      (r = e),
      p("check"),
      ((t = 1e4),
      (t = t || 1e4),
      new Promise(function (e, n) {
        if ("undefined" == typeof XMLHttpRequest)
          return n(new Error("No browser support"));
        try {
          var r = new XMLHttpRequest(),
            a = C.p + "" + i + ".hot-update.json";
          r.open("GET", a, !0), (r.timeout = t), r.send(null);
        } catch (e) {
          return n(e);
        }
        r.onreadystatechange = function () {
          if (4 === r.readyState)
            if (0 === r.status)
              n(new Error("Manifest request to " + a + " timed out."));
            else if (404 === r.status) e();
            else if (200 !== r.status && 304 !== r.status)
              n(new Error("Manifest request to " + a + " failed."));
            else {
              try {
                var t = JSON.parse(r.responseText);
              } catch (e) {
                return void n(e);
              }
              e(t);
            }
        };
      })).then(function (e) {
        if (!e) return p(k() ? "ready" : "idle"), null;
        (x = {}), (b = {}), (w = e.c), (m = e.h), p("prepare");
        var t = new Promise(function (e, t) {
          h = { resolve: e, reject: t };
        });
        d = {};
        return M(0), "prepare" === f && 0 === v && 0 === y && S(), t;
      })
    );
    var t;
  }
  function M(e) {
    w[e]
      ? ((x[e] = !0),
        y++,
        (function (e) {
          var t = document.createElement("script");
          (t.charset = "utf-8"),
            (t.src = C.p + "" + e + "." + i + ".hot-update.js"),
            document.head.appendChild(t);
        })(e))
      : (b[e] = !0);
  }
  function S() {
    p("ready");
    var e = h;
    if (((h = null), e))
      if (r)
        Promise.resolve()
          .then(function () {
            return _(r);
          })
          .then(
            function (t) {
              e.resolve(t);
            },
            function (t) {
              e.reject(t);
            }
          );
      else {
        var t = [];
        for (var n in d)
          Object.prototype.hasOwnProperty.call(d, n) && t.push(N(n));
        e.resolve(t);
      }
  }
  function _(t) {
    if ("ready" !== f)
      throw new Error("apply() is only allowed in ready status");
    return (function t(r) {
      var s, u, c, l, f;
      function h(e) {
        for (
          var t = [e],
            n = {},
            r = t.map(function (e) {
              return { chain: [e], id: e };
            });
          r.length > 0;

        ) {
          var i = r.pop(),
            a = i.id,
            o = i.chain;
          if ((l = A[a]) && (!l.hot._selfAccepted || l.hot._selfInvalidated)) {
            if (l.hot._selfDeclined)
              return { type: "self-declined", chain: o, moduleId: a };
            if (l.hot._main)
              return { type: "unaccepted", chain: o, moduleId: a };
            for (var s = 0; s < l.parents.length; s++) {
              var u = l.parents[s],
                c = A[u];
              if (c) {
                if (c.hot._declinedDependencies[a])
                  return {
                    type: "declined",
                    chain: o.concat([u]),
                    moduleId: a,
                    parentId: u,
                  };
                -1 === t.indexOf(u) &&
                  (c.hot._acceptedDependencies[a]
                    ? (n[u] || (n[u] = []), y(n[u], [a]))
                    : (delete n[u],
                      t.push(u),
                      r.push({ chain: o.concat([u]), id: u })));
              }
            }
          }
        }
        return {
          type: "accepted",
          moduleId: e,
          outdatedModules: t,
          outdatedDependencies: n,
        };
      }
      function y(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          -1 === e.indexOf(r) && e.push(r);
        }
      }
      k();
      var v = {},
        b = [],
        x = {},
        E = function () {
          console.warn(
            "[HMR] unexpected require(" + S.moduleId + ") to disposed module"
          );
        };
      for (var M in d)
        if (Object.prototype.hasOwnProperty.call(d, M)) {
          var S;
          (f = N(M)), (S = d[M] ? h(f) : { type: "disposed", moduleId: M });
          var _ = !1,
            O = !1,
            T = !1,
            I = "";
          switch (
            (S.chain && (I = "\nUpdate propagation: " + S.chain.join(" -> ")),
            S.type)
          ) {
            case "self-declined":
              r.onDeclined && r.onDeclined(S),
                r.ignoreDeclined ||
                  (_ = new Error(
                    "Aborted because of self decline: " + S.moduleId + I
                  ));
              break;
            case "declined":
              r.onDeclined && r.onDeclined(S),
                r.ignoreDeclined ||
                  (_ = new Error(
                    "Aborted because of declined dependency: " +
                      S.moduleId +
                      " in " +
                      S.parentId +
                      I
                  ));
              break;
            case "unaccepted":
              r.onUnaccepted && r.onUnaccepted(S),
                r.ignoreUnaccepted ||
                  (_ = new Error(
                    "Aborted because " + f + " is not accepted" + I
                  ));
              break;
            case "accepted":
              r.onAccepted && r.onAccepted(S), (O = !0);
              break;
            case "disposed":
              r.onDisposed && r.onDisposed(S), (T = !0);
              break;
            default:
              throw new Error("Unexception type " + S.type);
          }
          if (_) return p("abort"), Promise.reject(_);
          if (O)
            for (f in ((x[f] = d[f]),
            y(b, S.outdatedModules),
            S.outdatedDependencies))
              Object.prototype.hasOwnProperty.call(S.outdatedDependencies, f) &&
                (v[f] || (v[f] = []), y(v[f], S.outdatedDependencies[f]));
          T && (y(b, [S.moduleId]), (x[f] = E));
        }
      var P,
        B = [];
      for (u = 0; u < b.length; u++)
        (f = b[u]),
          A[f] &&
            A[f].hot._selfAccepted &&
            x[f] !== E &&
            !A[f].hot._selfInvalidated &&
            B.push({
              module: f,
              parents: A[f].parents.slice(),
              errorHandler: A[f].hot._selfAccepted,
            });
      p("dispose"),
        Object.keys(w).forEach(function (e) {
          !1 === w[e] &&
            (function (e) {
              delete installedChunks[e];
            })(e);
        });
      var D,
        j,
        R = b.slice();
      for (; R.length > 0; )
        if (((f = R.pop()), (l = A[f]))) {
          var L = {},
            z = l.hot._disposeHandlers;
          for (c = 0; c < z.length; c++) (s = z[c])(L);
          for (
            a[f] = L, l.hot.active = !1, delete A[f], delete v[f], c = 0;
            c < l.children.length;
            c++
          ) {
            var q = A[l.children[c]];
            q && (P = q.parents.indexOf(f)) >= 0 && q.parents.splice(P, 1);
          }
        }
      for (f in v)
        if (Object.prototype.hasOwnProperty.call(v, f) && (l = A[f]))
          for (j = v[f], c = 0; c < j.length; c++)
            (D = j[c]),
              (P = l.children.indexOf(D)) >= 0 && l.children.splice(P, 1);
      p("apply"), void 0 !== m && ((i = m), (m = void 0));
      for (f in ((d = void 0), x))
        Object.prototype.hasOwnProperty.call(x, f) && (e[f] = x[f]);
      var F = null;
      for (f in v)
        if (Object.prototype.hasOwnProperty.call(v, f) && (l = A[f])) {
          j = v[f];
          var U = [];
          for (u = 0; u < j.length; u++)
            if (((D = j[u]), (s = l.hot._acceptedDependencies[D]))) {
              if (-1 !== U.indexOf(s)) continue;
              U.push(s);
            }
          for (u = 0; u < U.length; u++) {
            s = U[u];
            try {
              s(j);
            } catch (e) {
              r.onErrored &&
                r.onErrored({
                  type: "accept-errored",
                  moduleId: f,
                  dependencyId: j[u],
                  error: e,
                }),
                r.ignoreErrored || F || (F = e);
            }
          }
        }
      for (u = 0; u < B.length; u++) {
        var V = B[u];
        (f = V.module), (o = V.parents), (n = f);
        try {
          C(f);
        } catch (e) {
          if ("function" == typeof V.errorHandler)
            try {
              V.errorHandler(e);
            } catch (t) {
              r.onErrored &&
                r.onErrored({
                  type: "self-accept-error-handler-errored",
                  moduleId: f,
                  error: t,
                  originalError: e,
                }),
                r.ignoreErrored || F || (F = t),
                F || (F = e);
            }
          else
            r.onErrored &&
              r.onErrored({
                type: "self-accept-errored",
                moduleId: f,
                error: e,
              }),
              r.ignoreErrored || F || (F = e);
        }
      }
      if (F) return p("fail"), Promise.reject(F);
      if (g)
        return t(r).then(function (e) {
          return (
            b.forEach(function (t) {
              e.indexOf(t) < 0 && e.push(t);
            }),
            e
          );
        });
      return (
        p("idle"),
        new Promise(function (e) {
          e(b);
        })
      );
    })((t = t || {}));
  }
  function k() {
    if (g) return d || (d = {}), g.forEach(O), (g = void 0), !0;
  }
  function O(t) {
    Object.prototype.hasOwnProperty.call(d, t) || (d[t] = e[t]);
  }
  var A = {};
  function C(t) {
    if (A[t]) return A[t].exports;
    var n = (A[t] = {
      i: t,
      l: !1,
      exports: {},
      hot: c(t),
      parents: ((s = o), (o = []), s),
      children: [],
    });
    return e[t].call(n.exports, n, n.exports, u(t)), (n.l = !0), n.exports;
  }
  (C.m = e),
    (C.c = A),
    (C.d = function (e, t, n) {
      C.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
    }),
    (C.r = function (e) {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (C.t = function (e, t) {
      if ((1 & t && (e = C(e)), 8 & t)) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var n = Object.create(null);
      if (
        (C.r(n),
        Object.defineProperty(n, "default", { enumerable: !0, value: e }),
        2 & t && "string" != typeof e)
      )
        for (var r in e)
          C.d(
            n,
            r,
            function (t) {
              return e[t];
            }.bind(null, r)
          );
      return n;
    }),
    (C.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return C.d(t, "a", t), t;
    }),
    (C.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (C.p = ""),
    (C.h = function () {
      return i;
    }),
    u(59)((C.s = 59));
})([
  function (e, t) {
    var n,
      r,
      i = (e.exports = {});
    function a() {
      throw new Error("setTimeout has not been defined");
    }
    function o() {
      throw new Error("clearTimeout has not been defined");
    }
    function s(e) {
      if (n === setTimeout) return setTimeout(e, 0);
      if ((n === a || !n) && setTimeout)
        return (n = setTimeout), setTimeout(e, 0);
      try {
        return n(e, 0);
      } catch (t) {
        try {
          return n.call(null, e, 0);
        } catch (t) {
          return n.call(this, e, 0);
        }
      }
    }
    !(function () {
      try {
        n = "function" == typeof setTimeout ? setTimeout : a;
      } catch (e) {
        n = a;
      }
      try {
        r = "function" == typeof clearTimeout ? clearTimeout : o;
      } catch (e) {
        r = o;
      }
    })();
    var u,
      c = [],
      l = !1,
      f = -1;
    function p() {
      l &&
        u &&
        ((l = !1), u.length ? (c = u.concat(c)) : (f = -1), c.length && h());
    }
    function h() {
      if (!l) {
        var e = s(p);
        l = !0;
        for (var t = c.length; t; ) {
          for (u = c, c = []; ++f < t; ) u && u[f].run();
          (f = -1), (t = c.length);
        }
        (u = null),
          (l = !1),
          (function (e) {
            if (r === clearTimeout) return clearTimeout(e);
            if ((r === o || !r) && clearTimeout)
              return (r = clearTimeout), clearTimeout(e);
            try {
              r(e);
            } catch (t) {
              try {
                return r.call(null, e);
              } catch (t) {
                return r.call(this, e);
              }
            }
          })(e);
      }
    }
    function d(e, t) {
      (this.fun = e), (this.array = t);
    }
    function m() {}
    (i.nextTick = function (e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
      c.push(new d(e, t)), 1 !== c.length || l || s(h);
    }),
      (d.prototype.run = function () {
        this.fun.apply(null, this.array);
      }),
      (i.title = "browser"),
      (i.browser = !0),
      (i.env = {}),
      (i.argv = []),
      (i.version = ""),
      (i.versions = {}),
      (i.on = m),
      (i.addListener = m),
      (i.once = m),
      (i.off = m),
      (i.removeListener = m),
      (i.removeAllListeners = m),
      (i.emit = m),
      (i.prependListener = m),
      (i.prependOnceListener = m),
      (i.listeners = function (e) {
        return [];
      }),
      (i.binding = function (e) {
        throw new Error("process.binding is not supported");
      }),
      (i.cwd = function () {
        return "/";
      }),
      (i.chdir = function (e) {
        throw new Error("process.chdir is not supported");
      }),
      (i.umask = function () {
        return 0;
      });
  },
  function (e, t) {
    "function" == typeof Object.create
      ? (e.exports = function (e, t) {
          t &&
            ((e.super_ = t),
            (e.prototype = Object.create(t.prototype, {
              constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })));
        })
      : (e.exports = function (e, t) {
          if (t) {
            e.super_ = t;
            var n = function () {};
            (n.prototype = t.prototype),
              (e.prototype = new n()),
              (e.prototype.constructor = e);
          }
        });
  },
  function (e, t) {
    var n;
    n = (function () {
      return this;
    })();
    try {
      n = n || new Function("return this")();
    } catch (e) {
      "object" == typeof window && (n = window);
    }
    e.exports = n;
  },
  function (e, t, n) {
    "use strict";
    var r = n(13),
      i =
        Object.keys ||
        function (e) {
          var t = [];
          for (var n in e) t.push(n);
          return t;
        };
    e.exports = f;
    var a = Object.create(n(9));
    a.inherits = n(1);
    var o = n(18),
      s = n(16);
    a.inherits(f, o);
    for (var u = i(s.prototype), c = 0; c < u.length; c++) {
      var l = u[c];
      f.prototype[l] || (f.prototype[l] = s.prototype[l]);
    }
    function f(e) {
      if (!(this instanceof f)) return new f(e);
      o.call(this, e),
        s.call(this, e),
        e && !1 === e.readable && (this.readable = !1),
        e && !1 === e.writable && (this.writable = !1),
        (this.allowHalfOpen = !0),
        e && !1 === e.allowHalfOpen && (this.allowHalfOpen = !1),
        this.once("end", p);
    }
    function p() {
      this.allowHalfOpen || this._writableState.ended || r.nextTick(h, this);
    }
    function h(e) {
      e.end();
    }
    Object.defineProperty(f.prototype, "writableHighWaterMark", {
      enumerable: !1,
      get: function () {
        return this._writableState.highWaterMark;
      },
    }),
      Object.defineProperty(f.prototype, "destroyed", {
        get: function () {
          return (
            void 0 !== this._readableState &&
            void 0 !== this._writableState &&
            this._readableState.destroyed &&
            this._writableState.destroyed
          );
        },
        set: function (e) {
          void 0 !== this._readableState &&
            void 0 !== this._writableState &&
            ((this._readableState.destroyed = e),
            (this._writableState.destroyed = e));
        },
      }),
      (f.prototype._destroy = function (e, t) {
        this.push(null), this.end(), r.nextTick(t, e);
      });
  },
  function (e, t, n) {
    "use strict";
    var r = {};
    function i(e, t, n) {
      n || (n = Error);
      var i = (function (e) {
        var n, r;
        function i(n, r, i) {
          return (
            e.call(
              this,
              (function (e, n, r) {
                return "string" == typeof t ? t : t(e, n, r);
              })(n, r, i)
            ) || this
          );
        }
        return (
          (r = e),
          ((n = i).prototype = Object.create(r.prototype)),
          (n.prototype.constructor = n),
          (n.__proto__ = r),
          i
        );
      })(n);
      (i.prototype.name = n.name), (i.prototype.code = e), (r[e] = i);
    }
    function a(e, t) {
      if (Array.isArray(e)) {
        var n = e.length;
        return (
          (e = e.map(function (e) {
            return String(e);
          })),
          n > 2
            ? "one of "
                .concat(t, " ")
                .concat(e.slice(0, n - 1).join(", "), ", or ") + e[n - 1]
            : 2 === n
            ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1])
            : "of ".concat(t, " ").concat(e[0])
        );
      }
      return "of ".concat(t, " ").concat(String(e));
    }
    i(
      "ERR_INVALID_OPT_VALUE",
      function (e, t) {
        return 'The value "' + t + '" is invalid for option "' + e + '"';
      },
      TypeError
    ),
      i(
        "ERR_INVALID_ARG_TYPE",
        function (e, t, n) {
          var r, i, o, s;
          if (
            ("string" == typeof t &&
            ((i = "not "), t.substr(!o || o < 0 ? 0 : +o, i.length) === i)
              ? ((r = "must not be"), (t = t.replace(/^not /, "")))
              : (r = "must be"),
            (function (e, t, n) {
              return (
                (void 0 === n || n > e.length) && (n = e.length),
                e.substring(n - t.length, n) === t
              );
            })(e, " argument"))
          )
            s = "The ".concat(e, " ").concat(r, " ").concat(a(t, "type"));
          else {
            var u = (function (e, t, n) {
              return (
                "number" != typeof n && (n = 0),
                !(n + t.length > e.length) && -1 !== e.indexOf(t, n)
              );
            })(e, ".")
              ? "property"
              : "argument";
            s = 'The "'
              .concat(e, '" ')
              .concat(u, " ")
              .concat(r, " ")
              .concat(a(t, "type"));
          }
          return (s += ". Received type ".concat(typeof n));
        },
        TypeError
      ),
      i("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
      i("ERR_METHOD_NOT_IMPLEMENTED", function (e) {
        return "The " + e + " method is not implemented";
      }),
      i("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
      i("ERR_STREAM_DESTROYED", function (e) {
        return "Cannot call " + e + " after a stream was destroyed";
      }),
      i("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
      i("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
      i("ERR_STREAM_WRITE_AFTER_END", "write after end"),
      i(
        "ERR_STREAM_NULL_VALUES",
        "May not write null values to stream",
        TypeError
      ),
      i(
        "ERR_UNKNOWN_ENCODING",
        function (e) {
          return "Unknown encoding: " + e;
        },
        TypeError
      ),
      i(
        "ERR_STREAM_UNSHIFT_AFTER_END_EVENT",
        "stream.unshift() after end event"
      ),
      (e.exports.codes = r);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r =
        Object.keys ||
        function (e) {
          var t = [];
          for (var n in e) t.push(n);
          return t;
        };
      e.exports = c;
      var i = n(24),
        a = n(28);
      n(1)(c, i);
      for (var o = r(a.prototype), s = 0; s < o.length; s++) {
        var u = o[s];
        c.prototype[u] || (c.prototype[u] = a.prototype[u]);
      }
      function c(e) {
        if (!(this instanceof c)) return new c(e);
        i.call(this, e),
          a.call(this, e),
          (this.allowHalfOpen = !0),
          e &&
            (!1 === e.readable && (this.readable = !1),
            !1 === e.writable && (this.writable = !1),
            !1 === e.allowHalfOpen &&
              ((this.allowHalfOpen = !1), this.once("end", l)));
      }
      function l() {
        this._writableState.ended || t.nextTick(f, this);
      }
      function f(e) {
        e.end();
      }
      Object.defineProperty(c.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function () {
          return this._writableState.highWaterMark;
        },
      }),
        Object.defineProperty(c.prototype, "writableBuffer", {
          enumerable: !1,
          get: function () {
            return this._writableState && this._writableState.getBuffer();
          },
        }),
        Object.defineProperty(c.prototype, "writableLength", {
          enumerable: !1,
          get: function () {
            return this._writableState.length;
          },
        }),
        Object.defineProperty(c.prototype, "destroyed", {
          enumerable: !1,
          get: function () {
            return (
              void 0 !== this._readableState &&
              void 0 !== this._writableState &&
              this._readableState.destroyed &&
              this._writableState.destroyed
            );
          },
          set: function (e) {
            void 0 !== this._readableState &&
              void 0 !== this._writableState &&
              ((this._readableState.destroyed = e),
              (this._writableState.destroyed = e));
          },
        });
    }.call(this, n(0)));
  },
  function (e, t, n) {
    (function (e) {
      !(function (t, n, r) {
        "use strict";
        function i(e) {
          return e && "object" == typeof e && "default" in e
            ? e
            : { default: e };
        }
        var a = i(n),
          o = i(r);
        function s(e) {
          return (s =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function u(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function c(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              "value" in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function l(e, t, n) {
          return t && c(e.prototype, t), n && c(e, n), e;
        }
        function f(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function p(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function h(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? p(Object(n), !0).forEach(function (t) {
                  f(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : p(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function d(e, t) {
          if ("function" != typeof t && null !== t)
            throw new TypeError(
              "Super expression must either be null or a function"
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t &&
              (function (e, t) {
                (
                  Object.setPrototypeOf ||
                  function (e, t) {
                    return (e.__proto__ = t), e;
                  }
                )(e, t);
              })(e, t);
        }
        function m(e) {
          return (m = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function g(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function y(e, t) {
          return !t || ("object" != typeof t && "function" != typeof t)
            ? g(e)
            : t;
        }
        function v(e) {
          var t = (function () {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
              return (
                Date.prototype.toString.call(
                  Reflect.construct(Date, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = m(e);
            if (t) {
              var i = m(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return y(this, n);
          };
        }
        function b(e, t) {
          for (
            ;
            !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = m(e));

          );
          return e;
        }
        function x(e, t, n) {
          return (x =
            "undefined" != typeof Reflect && Reflect.get
              ? Reflect.get
              : function (e, t, n) {
                  var r = b(e, t);
                  if (r) {
                    var i = Object.getOwnPropertyDescriptor(r, t);
                    return i.get ? i.get.call(n) : i.value;
                  }
                })(e, t, n || e);
        }
        function w(e, t, n, r) {
          return (w =
            "undefined" != typeof Reflect && Reflect.set
              ? Reflect.set
              : function (e, t, n, r) {
                  var i,
                    a = b(e, t);
                  if (a) {
                    if ((i = Object.getOwnPropertyDescriptor(a, t)).set)
                      return i.set.call(r, n), !0;
                    if (!i.writable) return !1;
                  }
                  if ((i = Object.getOwnPropertyDescriptor(r, t))) {
                    if (!i.writable) return !1;
                    (i.value = n), Object.defineProperty(r, t, i);
                  } else f(r, t, n);
                  return !0;
                })(e, t, n, r);
        }
        function N(e, t, n, r, i) {
          if (!w(e, t, n, r || e) && i)
            throw new Error("failed to set property");
          return n;
        }
        function E(e, t) {
          return (
            S(e) ||
            (function (e, t) {
              if (
                "undefined" != typeof Symbol &&
                Symbol.iterator in Object(e)
              ) {
                var n = [],
                  r = !0,
                  i = !1,
                  a = void 0;
                try {
                  for (
                    var o, s = e[Symbol.iterator]();
                    !(r = (o = s.next()).done) &&
                    (n.push(o.value), !t || n.length !== t);
                    r = !0
                  );
                } catch (e) {
                  (i = !0), (a = e);
                } finally {
                  try {
                    r || null == s.return || s.return();
                  } finally {
                    if (i) throw a;
                  }
                }
                return n;
              }
            })(e, t) ||
            k(e, t) ||
            A()
          );
        }
        function M(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return O(e);
            })(e) ||
            _(e) ||
            k(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
        function S(e) {
          if (Array.isArray(e)) return e;
        }
        function _(e) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e))
            return Array.from(e);
        }
        function k(e, t) {
          if (e) {
            if ("string" == typeof e) return O(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              "Object" === n && e.constructor && (n = e.constructor.name),
              "Map" === n || "Set" === n
                ? Array.from(e)
                : "Arguments" === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? O(e, t)
                : void 0
            );
          }
        }
        function O(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        function A() {
          throw new TypeError(
            "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        function C(e) {
          var t = (function (e, t) {
            if ("object" != typeof e || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var r = n.call(e, t);
              if ("object" != typeof r) return r;
              throw new TypeError(
                "@@toPrimitive must return a primitive value."
              );
            }
            return String(e);
          })(e, "string");
          return "symbol" == typeof t ? t : String(t);
        }
        function T(e, t, n, r) {
          var i = (function () {
            var e = {
              elementsDefinitionOrder: [["method"], ["field"]],
              initializeInstanceElements: function (e, t) {
                ["method", "field"].forEach(function (n) {
                  t.forEach(function (t) {
                    t.kind === n &&
                      "own" === t.placement &&
                      this.defineClassElement(e, t);
                  }, this);
                }, this);
              },
              initializeClassElements: function (e, t) {
                var n = e.prototype;
                ["method", "field"].forEach(function (r) {
                  t.forEach(function (t) {
                    var i = t.placement;
                    if (t.kind === r && ("static" === i || "prototype" === i)) {
                      var a = "static" === i ? e : n;
                      this.defineClassElement(a, t);
                    }
                  }, this);
                }, this);
              },
              defineClassElement: function (e, t) {
                var n = t.descriptor;
                if ("field" === t.kind) {
                  var r = t.initializer;
                  n = {
                    enumerable: n.enumerable,
                    writable: n.writable,
                    configurable: n.configurable,
                    value: void 0 === r ? void 0 : r.call(e),
                  };
                }
                Object.defineProperty(e, t.key, n);
              },
              decorateClass: function (e, t) {
                var n = [],
                  r = [],
                  i = { static: [], prototype: [], own: [] };
                if (
                  (e.forEach(function (e) {
                    this.addElementPlacement(e, i);
                  }, this),
                  e.forEach(function (e) {
                    if (!B(e)) return n.push(e);
                    var t = this.decorateElement(e, i);
                    n.push(t.element),
                      n.push.apply(n, t.extras),
                      r.push.apply(r, t.finishers);
                  }, this),
                  !t)
                )
                  return { elements: n, finishers: r };
                var a = this.decorateConstructor(n, t);
                return r.push.apply(r, a.finishers), (a.finishers = r), a;
              },
              addElementPlacement: function (e, t, n) {
                var r = t[e.placement];
                if (!n && -1 !== r.indexOf(e.key))
                  throw new TypeError("Duplicated element (" + e.key + ")");
                r.push(e.key);
              },
              decorateElement: function (e, t) {
                for (
                  var n = [], r = [], i = e.decorators, a = i.length - 1;
                  a >= 0;
                  a--
                ) {
                  var o = t[e.placement];
                  o.splice(o.indexOf(e.key), 1);
                  var s = this.fromElementDescriptor(e),
                    u = this.toElementFinisherExtras((0, i[a])(s) || s);
                  (e = u.element),
                    this.addElementPlacement(e, t),
                    u.finisher && r.push(u.finisher);
                  var c = u.extras;
                  if (c) {
                    for (var l = 0; l < c.length; l++)
                      this.addElementPlacement(c[l], t);
                    n.push.apply(n, c);
                  }
                }
                return { element: e, finishers: r, extras: n };
              },
              decorateConstructor: function (e, t) {
                for (var n = [], r = t.length - 1; r >= 0; r--) {
                  var i = this.fromClassDescriptor(e),
                    a = this.toClassDescriptor((0, t[r])(i) || i);
                  if (
                    (void 0 !== a.finisher && n.push(a.finisher),
                    void 0 !== a.elements)
                  ) {
                    e = a.elements;
                    for (var o = 0; o < e.length - 1; o++)
                      for (var s = o + 1; s < e.length; s++)
                        if (
                          e[o].key === e[s].key &&
                          e[o].placement === e[s].placement
                        )
                          throw new TypeError(
                            "Duplicated element (" + e[o].key + ")"
                          );
                  }
                }
                return { elements: e, finishers: n };
              },
              fromElementDescriptor: function (e) {
                var t = {
                  kind: e.kind,
                  key: e.key,
                  placement: e.placement,
                  descriptor: e.descriptor,
                };
                return (
                  Object.defineProperty(t, Symbol.toStringTag, {
                    value: "Descriptor",
                    configurable: !0,
                  }),
                  "field" === e.kind && (t.initializer = e.initializer),
                  t
                );
              },
              toElementDescriptors: function (e) {
                var t;
                if (void 0 !== e)
                  return ((t = e), S(t) || _(t) || k(t) || A()).map(function (
                    e
                  ) {
                    var t = this.toElementDescriptor(e);
                    return (
                      this.disallowProperty(
                        e,
                        "finisher",
                        "An element descriptor"
                      ),
                      this.disallowProperty(
                        e,
                        "extras",
                        "An element descriptor"
                      ),
                      t
                    );
                  },
                  this);
              },
              toElementDescriptor: function (e) {
                var t = String(e.kind);
                if ("method" !== t && "field" !== t)
                  throw new TypeError(
                    'An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "' +
                      t +
                      '"'
                  );
                var n = C(e.key),
                  r = String(e.placement);
                if ("static" !== r && "prototype" !== r && "own" !== r)
                  throw new TypeError(
                    'An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "' +
                      r +
                      '"'
                  );
                var i = e.descriptor;
                this.disallowProperty(e, "elements", "An element descriptor");
                var a = {
                  kind: t,
                  key: n,
                  placement: r,
                  descriptor: Object.assign({}, i),
                };
                return (
                  "field" !== t
                    ? this.disallowProperty(
                        e,
                        "initializer",
                        "A method descriptor"
                      )
                    : (this.disallowProperty(
                        i,
                        "get",
                        "The property descriptor of a field descriptor"
                      ),
                      this.disallowProperty(
                        i,
                        "set",
                        "The property descriptor of a field descriptor"
                      ),
                      this.disallowProperty(
                        i,
                        "value",
                        "The property descriptor of a field descriptor"
                      ),
                      (a.initializer = e.initializer)),
                  a
                );
              },
              toElementFinisherExtras: function (e) {
                return {
                  element: this.toElementDescriptor(e),
                  finisher: j(e, "finisher"),
                  extras: this.toElementDescriptors(e.extras),
                };
              },
              fromClassDescriptor: function (e) {
                var t = {
                  kind: "class",
                  elements: e.map(this.fromElementDescriptor, this),
                };
                return (
                  Object.defineProperty(t, Symbol.toStringTag, {
                    value: "Descriptor",
                    configurable: !0,
                  }),
                  t
                );
              },
              toClassDescriptor: function (e) {
                var t = String(e.kind);
                if ("class" !== t)
                  throw new TypeError(
                    'A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "' +
                      t +
                      '"'
                  );
                this.disallowProperty(e, "key", "A class descriptor"),
                  this.disallowProperty(e, "placement", "A class descriptor"),
                  this.disallowProperty(e, "descriptor", "A class descriptor"),
                  this.disallowProperty(e, "initializer", "A class descriptor"),
                  this.disallowProperty(e, "extras", "A class descriptor");
                var n = j(e, "finisher");
                return {
                  elements: this.toElementDescriptors(e.elements),
                  finisher: n,
                };
              },
              runClassFinishers: function (e, t) {
                for (var n = 0; n < t.length; n++) {
                  var r = (0, t[n])(e);
                  if (void 0 !== r) {
                    if ("function" != typeof r)
                      throw new TypeError(
                        "Finishers must return a constructor."
                      );
                    e = r;
                  }
                }
                return e;
              },
              disallowProperty: function (e, t, n) {
                if (void 0 !== e[t])
                  throw new TypeError(n + " can't have a ." + t + " property.");
              },
            };
            return e;
          })();
          if (r) for (var a = 0; a < r.length; a++) i = r[a](i);
          var o = t(function (e) {
              i.initializeInstanceElements(e, s.elements);
            }, n),
            s = i.decorateClass(
              (function (e) {
                for (
                  var t = [],
                    n = function (e) {
                      return (
                        "method" === e.kind &&
                        e.key === a.key &&
                        e.placement === a.placement
                      );
                    },
                    r = 0;
                  r < e.length;
                  r++
                ) {
                  var i,
                    a = e[r];
                  if ("method" === a.kind && (i = t.find(n)))
                    if (D(a.descriptor) || D(i.descriptor)) {
                      if (B(a) || B(i))
                        throw new ReferenceError(
                          "Duplicated methods (" +
                            a.key +
                            ") can't be decorated."
                        );
                      i.descriptor = a.descriptor;
                    } else {
                      if (B(a)) {
                        if (B(i))
                          throw new ReferenceError(
                            "Decorators can't be placed on different accessors with for the same property (" +
                              a.key +
                              ")."
                          );
                        i.decorators = a.decorators;
                      }
                      P(a, i);
                    }
                  else t.push(a);
                }
                return t;
              })(o.d.map(I)),
              e
            );
          return (
            i.initializeClassElements(o.F, s.elements),
            i.runClassFinishers(o.F, s.finishers)
          );
        }
        function I(e) {
          var t,
            n = C(e.key);
          "method" === e.kind
            ? (t = {
                value: e.value,
                writable: !0,
                configurable: !0,
                enumerable: !1,
              })
            : "get" === e.kind
            ? (t = { get: e.value, configurable: !0, enumerable: !1 })
            : "set" === e.kind
            ? (t = { set: e.value, configurable: !0, enumerable: !1 })
            : "field" === e.kind &&
              (t = { configurable: !0, writable: !0, enumerable: !0 });
          var r = {
            kind: "field" === e.kind ? "field" : "method",
            key: n,
            placement: e.static
              ? "static"
              : "field" === e.kind
              ? "own"
              : "prototype",
            descriptor: t,
          };
          return (
            e.decorators && (r.decorators = e.decorators),
            "field" === e.kind && (r.initializer = e.value),
            r
          );
        }
        function P(e, t) {
          void 0 !== e.descriptor.get
            ? (t.descriptor.get = e.descriptor.get)
            : (t.descriptor.set = e.descriptor.set);
        }
        function B(e) {
          return e.decorators && e.decorators.length;
        }
        function D(e) {
          return void 0 !== e && !(void 0 === e.value && void 0 === e.writable);
        }
        function j(e, t) {
          var n = e[t];
          if (void 0 !== n && "function" != typeof n)
            throw new TypeError("Expected '" + t + "' to be a function");
          return n;
        }
        var R = [
            { key: "info", style: "color: #666;", level: 5 },
            {
              key: "notice",
              style:
                "background: rgba(0, 0, 0, 0.8); color:white; padding:8px;",
              level: 4,
            },
            {
              key: "warning",
              style: "color: black; background: orange;",
              level: 2,
            },
            { key: "error", style: "color: black; background: red;", level: 1 },
          ],
          L = "data-motorcortex2-id",
          z = "closed",
          q = "MotorCortex",
          F = {
            staggerPreface: "@stagger",
            mathExpPreface: "@expression",
            attibuteValue: "@attribute",
            dynamicDuration: "dynamic",
            totalElements: "total",
            elementIndex: "index",
          };
        window.AudioContext = window.AudioContext || window.webkitAudioContext;
        var U = new window.AudioContext();
        function V(e) {
          return "number" == typeof e && isFinite(e);
        }
        function $(e) {
          return "string" == typeof e || e instanceof String;
        }
        function H(e) {
          return "object" === s(e);
        }
        function W(e) {
          return e && "[object Function]" === {}.toString.call(e);
        }
        function G(e) {
          return e.charAt(0).toUpperCase() + e.slice(1);
        }
        function J(e) {
          if (null === e && void 0 === e)
            return { result: !0, analysis: { width: null, height: null } };
          var t = new RegExp("^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)", "gi");
          if (!H(e))
            return {
              result: !1,
              errors: [
                'originalDims should be an object containing the "width" and "height" keys',
              ],
            };
          if (
            !Object.prototype.hasOwnProperty.call(e, "width") ||
            !Object.prototype.hasOwnProperty.call(e, "height")
          )
            return {
              result: !1,
              errors: [
                'originalDims should be an object containing both the "width" and "height" keys',
              ],
            };
          if (!$(e.width))
            return {
              result: !1,
              errors: [
                "originalDims.width should be defined either on px or %.",
              ],
            };
          if (!$(e.height))
            return {
              result: !1,
              errors: [
                "originalDims.height should be defined either on px or %.",
              ],
            };
          var n = e.width.match(t)[0],
            r = e.width.substring(n.length);
          if (!V(Number(n)) || ("%" !== r && "px" !== r))
            return {
              result: !1,
              errors: [
                "originalDims.width should be defined either on px or %.",
              ],
            };
          var i = e.height.match(t)[0],
            a = e.height.substring(i.length);
          return !V(Number(i)) || ("%" != a && "px" != a)
            ? {
                result: !1,
                errors: [
                  "originalDims.heigth should be defined either on px or %.",
                ],
              }
            : { result: !0, analysis: Y(e) };
        }
        function Y(e) {
          var t = new RegExp("^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)", "gi"),
            n = null,
            r = null;
          if (H(e) && null != e) {
            if (
              Object.prototype.hasOwnProperty.call(e, "width") &&
              $(e.width)
            ) {
              var i = e.width.match(t)[0],
                a = e.width.substring(i.length);
              n =
                !V(Number(i)) || ("%" !== a && "px" !== a)
                  ? null
                  : { number: Number(i), unit: a };
            }
            if (
              Object.prototype.hasOwnProperty.call(e, "height") &&
              $(e.height)
            ) {
              var o = e.height.match(t)[0],
                s = e.height.substring(o.length);
              r =
                !V(Number(o)) || ("%" != s && "px" != s)
                  ? null
                  : { number: Number(o), unit: s };
            }
          }
          return { width: n, height: r };
        }
        function Z(e, t) {
          return Math.round(e / t) * t;
        }
        function X(e) {
          var t = e.split("___");
          return { mcid: t[0], attribute: t[1] };
        }
        function K() {
          return Math.floor(65536 * (1 + Math.random()))
            .toString(16)
            .substring(1);
        }
        function Q() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
            t = e ? "_" : "-";
          return K() + K() + t + K() + t + K();
        }
        function ee(e, t) {
          return new Function("return `".concat(e, "`;")).call(t);
        }
        function te(e, t) {
          return "".concat(e).concat("___").concat(t);
        }
        function ne(e, t, n) {
          for (var r = t.split("."), i = e, a = 0; a < r.length - 1; a++) {
            if (!Object.prototype.hasOwnProperty.call(i, r[a])) return !1;
            i = i[r[a]];
          }
          return (
            !!Object.prototype.hasOwnProperty.call(i, r[r.length - 1]) &&
            ((i[r[r.length - 1]] = n), !0)
          );
        }
        var re = (function () {
            function e(t) {
              u(this, e);
              var n = 1;
              t &&
                Object.prototype.hasOwnProperty.call(t, "logLevel") &&
                (n = t.logLevel);
              for (var r = 0; r < R.length; r++) {
                var i = R[r];
                n >= i.level
                  ? (this[i.key] = window.console.log.bind(
                      window.console,
                      "MotorCortex - ".concat(i.key, ": ")
                    ))
                  : (this[i.key] = function () {});
              }
              this.log =
                n >= 3
                  ? window.console.log.bind(window.console, "MotorCortex - ")
                  : function () {};
            }
            return (
              l(e, [
                {
                  key: "validateProps",
                  value: function (e, t, n) {
                    var r = t(e);
                    if (r.length > 0) {
                      for (
                        var i = "Error on plugin's \""
                            .concat(n.plugin_npm_name, '" "')
                            .concat(
                              n.ClassName,
                              '" instantiation. Errors (op props):'
                            ),
                          a = 0;
                        a < r.length;
                        a++
                      )
                        i += "\n - "
                          .concat(r[a].message, ". ")
                          .concat(r[a].actual, " provided");
                      return console.error(i), { result: !1, errors: r };
                    }
                    return { result: !0 };
                  },
                },
                {
                  key: "getElementByMCID",
                  value: function (e, t) {
                    return e.rootElement.querySelectorAll(
                      "[".concat(L, '="').concat(t, '"]')
                    )[0];
                  },
                },
                {
                  key: "buildInitialValuesValidationRules",
                  value: function (e) {
                    var t = JSON.parse(JSON.stringify(e));
                    return (
                      (function e(t) {
                        if (
                          (("string" == typeof t || t instanceof String) &&
                            (t = { type: t }),
                          (t.optional = !0),
                          "object" === t.type)
                        )
                          for (var n in t.props) e(t.props[n]);
                      })(t),
                      t
                    );
                  },
                },
                {
                  key: "systoleDiastoleProjections",
                  value: function (e, t, n) {
                    for (var r = [], i = 0; i < e.length; i++) {
                      var a = e[i],
                        o = a.parentMillisecond - n;
                      1 !== t &&
                        r.push({
                          id: a.incident.id,
                          start: o * t + n,
                          end: o * t + n + a.incident.duration * t,
                          startDelta: o * t + n - a.millisecond,
                        });
                    }
                    return r;
                  },
                },
              ]),
              e
            );
          })(),
          ie = new re();
        function ae(e) {
          return e.result
            ? { result: !0, execute: e.execute }
            : { result: !1, errors: e.errors };
        }
        var oe = (function () {
          function e(t) {
            u(this, e),
              (this.runTimeInfo = t.runTimeInfo),
              (this.context = t.context),
              this.onInitialise(),
              (this.getIncidentById = t.getIncidentById);
          }
          return (
            l(
              e,
              [
                { key: "onInitialise", value: function () {} },
                {
                  key: "_resize",
                  value: function () {
                    ie.log("Please overwite the _resize method of the Channel");
                  },
                },
                {
                  key: "addIncidents",
                  value: function (e) {
                    return ae(this.checkAddition(e));
                  },
                },
                {
                  key: "editIncidents",
                  value: function (e, t) {
                    return ae(this.checkEdit(e, t));
                  },
                },
                {
                  key: "removeIncidents",
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return ae(this.checkDelete(e, t));
                  },
                },
                { key: "recalcScratchValues", value: function (e) {} },
                {
                  key: "checkAddition",
                  value: function (e) {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "checkEdit",
                  value: function (e, t) {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "checkDelete",
                  value: function (e) {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "checkResizedIncidents",
                  value: function (e) {
                    return { result: !0, execute: function () {} };
                  },
                },
                { key: "moveTo", value: function (e, t, n) {} },
              ],
              [
                {
                  key: "type",
                  get: function () {
                    return "plain";
                  },
                },
              ]
            ),
            e
          );
        })();
        function se(e) {
          e.descriptor.value = function (e) {
            this.duration = this.duration * e;
          };
        }
        var ue = "up",
          ce = "down",
          le = "native.tree.bypass",
          fe = T(null, function (e) {
            return {
              F: function t() {
                var n =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                u(this, t),
                  e(this),
                  (this.parentNode = null),
                  (this.isNode = !1),
                  Object.prototype.hasOwnProperty.call(n, "id")
                    ? (this.id = n.id)
                    : (this.id = Q()),
                  (this.props = n);
              },
              d: [
                {
                  kind: "get",
                  key: "name",
                  value: function () {
                    return Object.prototype.hasOwnProperty.call(
                      this.props,
                      "name"
                    )
                      ? this.props.name
                      : null;
                  },
                },
                {
                  kind: "set",
                  key: "name",
                  value: function (e) {
                    this.props.name = e;
                  },
                },
                {
                  kind: "get",
                  key: "delay",
                  value: function () {
                    return Object.prototype.hasOwnProperty.call(
                      this.props,
                      "delay"
                    )
                      ? this.props.delay
                      : 0;
                  },
                },
                {
                  kind: "set",
                  key: "delay",
                  value: function (e) {
                    0 !== e && (this.props.delay = e);
                  },
                },
                {
                  kind: "get",
                  key: "hiatus",
                  value: function () {
                    return Object.prototype.hasOwnProperty.call(
                      this.props,
                      "hiatus"
                    )
                      ? this.props.hiatus
                      : 0;
                  },
                },
                {
                  kind: "set",
                  key: "hiatus",
                  value: function (e) {
                    0 !== e && (this.props.hiatus = e);
                  },
                },
                {
                  kind: "get",
                  key: "repeats",
                  value: function () {
                    return Object.prototype.hasOwnProperty.call(
                      this.props,
                      "repeats"
                    )
                      ? this.props.repeats
                      : 1;
                  },
                },
                {
                  kind: "set",
                  key: "repeats",
                  value: function (e) {
                    this.props.repeats = e;
                  },
                },
                {
                  kind: "get",
                  key: "duration",
                  value: function () {
                    return (
                      this.repeats *
                      (this.delay + this.props.duration + this.hiatus)
                    );
                  },
                },
                {
                  kind: "set",
                  key: "duration",
                  value: function (e) {
                    var t = e / this.duration;
                    (this.props.duration *= t),
                      (this.hiatus *= t),
                      (this.delay *= t);
                  },
                },
                {
                  kind: "method",
                  key: "setNewDuration",
                  value: function (e) {
                    (this.duration = e),
                      this.putMessageOnPipe("recalcDuration", {}, "Groups", {
                        selfExecute: !1,
                        direction: ue,
                      });
                  },
                },
                {
                  kind: "method",
                  decorators: [se],
                  key: "systoleDiastole",
                  value: function () {},
                },
                {
                  kind: "get",
                  key: "hasParent",
                  value: function () {
                    return null !== this.parentNode;
                  },
                },
                {
                  kind: "method",
                  key: "attachToNode",
                  value: function (e) {
                    this.parentNode = e;
                  },
                },
                {
                  kind: "method",
                  key: "detachFromParent",
                  value: function () {
                    this.parentNode = null;
                  },
                },
                {
                  kind: "method",
                  key: "putMessageOnPipe",
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : {};
                    if (
                      (Object.prototype.hasOwnProperty.call(r, "direction") ||
                        (r.direction = ce),
                      r.direction !== ce ||
                        Object.prototype.hasOwnProperty.call(
                          r,
                          "positionDelta"
                        ) ||
                        (r.positionDelta = 0),
                      r.selfExecute)
                    ) {
                      var i = "handle".concat(G(e)),
                        a = "function" == typeof this[i];
                      if (a) {
                        var o = this[i](n, t);
                        if (o !== le) {
                          var s = { response: o, responder: this };
                          return r.direction === ue
                            ? s
                            : [
                                h(
                                  h({}, s),
                                  {},
                                  { positionDelta: r.positionDelta }
                                ),
                              ];
                        }
                      }
                    }
                    return r.direction === ue
                      ? this.hasParent
                        ? this.parentNode.putMessageOnPipe(e, t, n, {
                            selfExecute: !0,
                            direction: ue,
                          })
                        : { response: !1, responder: null }
                      : [];
                  },
                },
                {
                  kind: "method",
                  key: "bypass",
                  value: function () {
                    return le;
                  },
                },
                {
                  kind: "get",
                  key: "positionOnPyramidion",
                  value: function () {
                    return this.getPositionOnPyramidion();
                  },
                },
                {
                  kind: "method",
                  key: "getPositionOnPyramidion",
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 0;
                    if (this.hasParent) {
                      var t = this.putMessageOnPipe(
                        "getPositionOnPyramidion",
                        { delta: e, id: this.id },
                        "Parent",
                        { selfExecute: !1, direction: ue }
                      );
                      return t.response;
                    }
                    return e;
                  },
                },
              ],
            };
          }),
          pe = "Leaf has already been attached to another Node",
          he = "Negative positioning of childs on nodes is not allowed",
          de = "The Leaf with the requested id couldn't be found on the Tree",
          me = T(
            null,
            function (e, t) {
              var n = (function (t) {
                d(r, t);
                var n = v(r);
                function r() {
                  var t,
                    i =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                  return (
                    u(this, r),
                    (t = n.call(this, i)),
                    e(g(t)),
                    (t.isNode = !0),
                    (t.children = {}),
                    (t.calculatedDuration = 0),
                    t
                  );
                }
                return r;
              })(t);
              return {
                F: n,
                d: [
                  {
                    kind: "get",
                    key: "duration",
                    value: function () {
                      return this.calculatedDuration;
                    },
                  },
                  {
                    kind: "set",
                    key: "duration",
                    value: function (e) {
                      var t = e / this.duration;
                      for (var n in (this.props &&
                        Object.prototype.hasOwnProperty.call(
                          this.props,
                          "duration"
                        ) &&
                        (this.props.duration = e),
                      (this.calculatedDuration = e),
                      this.children)) {
                        var r = this.children[n];
                        this.editPosition(r.id, r.position * t, !0),
                          r.leaf.systoleDiastole(t);
                      }
                    },
                  },
                  {
                    kind: "method",
                    key: "setNewDuration",
                    value: function (e) {
                      (this.duration = e),
                        this.putMessageOnPipe("recalcDuration", {}, "Groups", {
                          selfExecute: !1,
                          direction: ue,
                        });
                    },
                  },
                  {
                    kind: "method",
                    key: "_calculateDuration",
                    value: function () {
                      var e = 0;
                      for (var t in this.children) {
                        var n = this.children[t];
                        n.position + n.leaf.duration > e &&
                          (e = n.position + n.leaf.duration);
                      }
                      return (
                        e !== this.calculatedDuration &&
                        (this.props &&
                          Object.prototype.hasOwnProperty.call(
                            this.props,
                            "duration"
                          ) &&
                          (this.props.duration = e),
                        (this.calculatedDuration = e),
                        !0)
                      );
                    },
                  },
                  {
                    kind: "method",
                    decorators: [se],
                    key: "systoleDiastole",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    key: "handleRecalcDuration",
                    value: function (e, t) {
                      return (
                        !this._calculateDuration() ||
                        this.putMessageOnPipe("recalcDuration", {}, "Groups", {
                          selfExecute: !1,
                          direction: ue,
                        })
                      );
                    },
                  },
                  {
                    kind: "method",
                    key: "getLeafById",
                    value: function (e) {
                      var t =
                        arguments.length > 1 &&
                        void 0 !== arguments[1] &&
                        arguments[1];
                      if (
                        Object.prototype.hasOwnProperty.call(this.children, e)
                      )
                        return this.children[e].leaf;
                      if (t) return null;
                      for (var n in this.children) {
                        var r = this.children[n].leaf;
                        if (r.isNode) {
                          var i = r.getLeafById(e);
                          if (null != i) return i;
                        }
                      }
                      return null;
                    },
                  },
                  {
                    kind: "method",
                    key: "getLeafPosition",
                    value: function (e) {
                      if (
                        Object.prototype.hasOwnProperty.call(this.children, e)
                      )
                        return this.children[e].position;
                      var t = this.putMessageOnPipe(
                        "getLeafPosition",
                        { id: e },
                        "Groups",
                        { selfExecute: !1, direction: ce }
                      );
                      return t.length > 0
                        ? t[0].positionDelta + t[0].response
                        : void 0;
                    },
                  },
                  {
                    kind: "method",
                    key: "handleGetLeafPosition",
                    value: function (e, t) {
                      return this.getLeafPosition(t.id);
                    },
                  },
                  {
                    kind: "method",
                    key: "checkAddition",
                    value: function (e, t) {
                      return e.hasParent
                        ? { result: !1, reason: pe }
                        : t < 0
                        ? { result: !1, reason: he }
                        : { result: !0 };
                    },
                  },
                  {
                    kind: "method",
                    key: "addChild",
                    value: function (e, t) {
                      return e.hasParent
                        ? { result: !1, reason: pe }
                        : ((this.children[e.id] = {
                            id: e.id,
                            leaf: e,
                            position: t,
                          }),
                          e.attachToNode(this),
                          this.putMessageOnPipe(
                            "recalcDuration",
                            {},
                            "Groups",
                            { selfExecute: !0, direction: ue }
                          ),
                          { result: !0 });
                    },
                  },
                  {
                    kind: "method",
                    key: "checkRemoveChild",
                    value: function (e) {
                      return Object.prototype.hasOwnProperty.call(
                        this.children,
                        e
                      )
                        ? { result: !0 }
                        : { result: !1, reason: de };
                    },
                  },
                  {
                    kind: "method",
                    key: "removeChild",
                    value: function (e) {
                      return (
                        this.children[e].leaf.detachFromParent(),
                        delete this.children[e],
                        this.putMessageOnPipe("recalcDuration", {}, "Groups", {
                          selfExecute: !0,
                          direction: ue,
                        }),
                        { result: !0 }
                      );
                    },
                  },
                  {
                    kind: "method",
                    key: "checkEditPosition",
                    value: function (e, t) {
                      return t < 0
                        ? { result: !1, reason: he }
                        : Object.prototype.hasOwnProperty.call(this.children, e)
                        ? { result: !0 }
                        : { result: !1, reason: de };
                    },
                  },
                  {
                    kind: "method",
                    key: "editPosition",
                    value: function (e, t) {
                      var n =
                        arguments.length > 2 &&
                        void 0 !== arguments[2] &&
                        arguments[2];
                      if (
                        Object.prototype.hasOwnProperty.call(this.children, e)
                      )
                        return (
                          (this.children[e].position = t),
                          n ||
                            this.putMessageOnPipe(
                              "recalcDuration",
                              {},
                              "Groups",
                              { selfExecute: !0, direction: ue }
                            ),
                          { result: !0 }
                        );
                    },
                  },
                  {
                    kind: "method",
                    key: "putMessageOnPipe",
                    value: function (e, t, r) {
                      var i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : {};
                      if (
                        (Object.prototype.hasOwnProperty.call(i, "direction") ||
                          (i.direction = ce),
                        i.direction !== ce ||
                          Object.prototype.hasOwnProperty.call(
                            i,
                            "positionDelta"
                          ) ||
                          (i.positionDelta = 0),
                        i.direction === ue)
                      )
                        return x(m(n.prototype), "putMessageOnPipe", this).call(
                          this,
                          e,
                          t,
                          r,
                          i
                        );
                      var a = x(m(n.prototype), "putMessageOnPipe", this).call(
                        this,
                        e,
                        t,
                        r,
                        i
                      );
                      if (a.length > 0) return a;
                      for (var o in this.children) {
                        var s = this.children[o].leaf,
                          u = h(
                            h({}, i),
                            {},
                            {
                              selfExecute: !0,
                              positionDelta:
                                i.positionDelta + this.children[o].position,
                            }
                          );
                        a = a.concat(s.putMessageOnPipe(e, t, r, u));
                      }
                      return a;
                    },
                  },
                  {
                    kind: "method",
                    key: "handleGetPositionOnPyramidion",
                    value: function (e, t) {
                      var n = t.delta + this.getLeafPosition(t.id);
                      return this.getPositionOnPyramidion(n);
                    },
                  },
                ],
              };
            },
            fe
          );
        function ge(e) {
          e.descriptor.value = function (e) {
            void 0 === this.blockID && (this.blockID = Q()),
              this.DescriptiveIncident.putMessageOnPipe(
                "setBlock",
                {
                  id: this.blockID,
                  description: e,
                  incidentId: this.DescriptiveIncident.id,
                  realIncidentId: this.id,
                },
                "rootClip",
                { selfExecute: !0, direction: ue }
              );
          };
        }
        function ye(e) {
          e.descriptor.value = function (e) {
            return this.id === e ? this : this.bypass();
          };
        }
        function ve(e) {
          e.descriptor.value = function () {
            this.DescriptiveIncident.putMessageOnPipe(
              "unBlock",
              { id: this.blockID },
              "rootClip",
              { selfExecute: !0, direction: ue }
            );
          };
        }
        var be = T(
            null,
            function (e, t) {
              var n = (function (t) {
                d(r, t);
                var n = v(r);
                function r(t, i) {
                  var a;
                  return (
                    u(this, r),
                    (a = n.call(this, i)),
                    e(g(a)),
                    (a.mc_plugin_npm_name = "motor-cortex-js"),
                    (a.plugin_channel_class = oe),
                    (a.hasIncidents = !0),
                    a.onGroupInitialise(),
                    (a.calculatedDuration = 0),
                    a
                  );
                }
                return r;
              })(t);
              return {
                F: n,
                d: [
                  {
                    kind: "method",
                    key: "onGroupInitialise",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    key: "handleAddIncident",
                    value: function (e, t) {
                      if (this.id === e) {
                        var n = (0, t.incidentFromDescription)(
                          t.incident,
                          t.contextData,
                          t.audio
                        );
                        return null === n ? this.bypass() : n;
                      }
                      return this.bypass();
                    },
                  },
                  {
                    kind: "method",
                    key: "handleMoveIncident",
                    value: function (e, t) {
                      if (this.id === e) {
                        var n = this.getLeafById(t.incidentId, !0);
                        return null === n ? this.bypass() : n;
                      }
                      return this.bypass();
                    },
                  },
                  {
                    kind: "method",
                    key: "handleRemoveIncident",
                    value: function (e, t) {
                      if (this.id === e) {
                        var n = this.getLeafById(t.incidentId, !0);
                        return null === n ? this.bypass() : n;
                      }
                      return this.bypass();
                    },
                  },
                  {
                    kind: "method",
                    decorators: [ye],
                    key: "handleResize",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    key: "removeChild",
                    value: function (e) {
                      this.children[e].leaf.lastWish(),
                        x(m(n.prototype), "removeChild", this).call(this, e);
                    },
                  },
                  {
                    kind: "method",
                    key: "getIncidentsByChannel",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : 0,
                        t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        n = {};
                      for (var r in ((n["motor-cortex-js"] = [
                        {
                          millisecond: e,
                          parentMillisecond: t,
                          incident: this,
                          id: this.id,
                        },
                      ]),
                      this.children)) {
                        var i = this.children[r],
                          a = i.leaf.getIncidentsByChannel(e + i.position, e);
                        for (var o in a)
                          Object.prototype.hasOwnProperty.call(n, o)
                            ? (n[o] = n[o].concat(a[o]))
                            : (n[o] = a[o]);
                      }
                      return n;
                    },
                  },
                  {
                    kind: "method",
                    key: "lastWish",
                    value: function () {
                      for (var e in this.children)
                        this.children[e].leaf.lastWish();
                    },
                  },
                  {
                    kind: "method",
                    decorators: [ge],
                    key: "setBlock",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [ve],
                    key: "unblock",
                    value: function () {},
                  },
                ],
              };
            },
            me
          ),
          xe =
            "undefined" != typeof globalThis
              ? globalThis
              : "undefined" != typeof window
              ? window
              : void 0 !== e
              ? e
              : "undefined" != typeof self
              ? self
              : {};
        function we(e) {
          return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, "default")
            ? e.default
            : e;
        }
        function Ne(e, t) {
          return e((t = { exports: {} }), t.exports), t.exports;
        }
        function Ee() {
          throw new Error(
            "Dynamic requires are not currently supported by @rollup/plugin-commonjs"
          );
        }
        var Me = Ne(function (e, t) {
            var n = "__lodash_hash_undefined__",
              r = 9007199254740991,
              i = "[object Arguments]",
              a = "[object Array]",
              o = "[object Boolean]",
              s = "[object Date]",
              u = "[object Error]",
              c = "[object Function]",
              l = "[object Map]",
              f = "[object Number]",
              p = "[object Object]",
              h = "[object Promise]",
              d = "[object RegExp]",
              m = "[object Set]",
              g = "[object String]",
              y = "[object Symbol]",
              v = "[object WeakMap]",
              b = "[object ArrayBuffer]",
              x = "[object DataView]",
              w = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
              N = /^\w*$/,
              E = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
              M = /\\(\\)?/g,
              S = /^\[object .+?Constructor\]$/,
              _ = /^(?:0|[1-9]\d*)$/,
              k = {};
            (k["[object Float32Array]"] = k["[object Float64Array]"] = k[
              "[object Int8Array]"
            ] = k["[object Int16Array]"] = k["[object Int32Array]"] = k[
              "[object Uint8Array]"
            ] = k["[object Uint8ClampedArray]"] = k["[object Uint16Array]"] = k[
              "[object Uint32Array]"
            ] = !0),
              (k[i] = k[a] = k[b] = k[o] = k[x] = k[s] = k[u] = k[c] = k[l] = k[
                f
              ] = k[p] = k[d] = k[m] = k[g] = k[v] = !1);
            var O = "object" == typeof xe && xe && xe.Object === Object && xe,
              A =
                "object" == typeof self &&
                self &&
                self.Object === Object &&
                self,
              C = O || A || Function("return this")(),
              T = t && !t.nodeType && t,
              I = T && e && !e.nodeType && e,
              P = I && I.exports === T,
              B = P && O.process,
              D = (function () {
                try {
                  return B && B.binding && B.binding("util");
                } catch (e) {}
              })(),
              j = D && D.isTypedArray;
            function R(e, t) {
              for (
                var n = -1, r = null == e ? 0 : e.length, i = 0, a = [];
                ++n < r;

              ) {
                var o = e[n];
                t(o, n, e) && (a[i++] = o);
              }
              return a;
            }
            function L(e, t) {
              for (var n = -1, r = null == e ? 0 : e.length; ++n < r; )
                if (t(e[n], n, e)) return !0;
              return !1;
            }
            function z(e) {
              var t = -1,
                n = Array(e.size);
              return (
                e.forEach(function (e, r) {
                  n[++t] = [r, e];
                }),
                n
              );
            }
            function q(e) {
              var t = -1,
                n = Array(e.size);
              return (
                e.forEach(function (e) {
                  n[++t] = e;
                }),
                n
              );
            }
            var F,
              U,
              V,
              $ = Array.prototype,
              H = Function.prototype,
              W = Object.prototype,
              G = C["__core-js_shared__"],
              J = H.toString,
              Y = W.hasOwnProperty,
              Z = (F = /[^.]+$/.exec((G && G.keys && G.keys.IE_PROTO) || ""))
                ? "Symbol(src)_1." + F
                : "",
              X = W.toString,
              K = RegExp(
                "^" +
                  J.call(Y)
                    .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                    .replace(
                      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                      "$1.*?"
                    ) +
                  "$"
              ),
              Q = P ? C.Buffer : void 0,
              ee = C.Symbol,
              te = C.Uint8Array,
              ne = W.propertyIsEnumerable,
              re = $.splice,
              ie = ee ? ee.toStringTag : void 0,
              ae = Object.getOwnPropertySymbols,
              oe = Q ? Q.isBuffer : void 0,
              se =
                ((U = Object.keys),
                (V = Object),
                function (e) {
                  return U(V(e));
                }),
              ue = Ve(C, "DataView"),
              ce = Ve(C, "Map"),
              le = Ve(C, "Promise"),
              fe = Ve(C, "Set"),
              pe = Ve(C, "WeakMap"),
              he = Ve(Object, "create"),
              de = Ke(ue),
              me = Ke(ce),
              ge = Ke(le),
              ye = Ke(fe),
              ve = Ke(pe),
              be = ee ? ee.prototype : void 0,
              we = be ? be.valueOf : void 0,
              Ne = be ? be.toString : void 0;
            function Ee(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Me(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Se(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function _e(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.__data__ = new Se(); ++t < n; ) this.add(e[t]);
            }
            function ke(e) {
              var t = (this.__data__ = new Me(e));
              this.size = t.size;
            }
            function Oe(e, t) {
              for (var n = e.length; n--; ) if (et(e[n][0], t)) return n;
              return -1;
            }
            (Ee.prototype.clear = function () {
              (this.__data__ = he ? he(null) : {}), (this.size = 0);
            }),
              (Ee.prototype.delete = function (e) {
                var t = this.has(e) && delete this.__data__[e];
                return (this.size -= t ? 1 : 0), t;
              }),
              (Ee.prototype.get = function (e) {
                var t = this.__data__;
                if (he) {
                  var r = t[e];
                  return r === n ? void 0 : r;
                }
                return Y.call(t, e) ? t[e] : void 0;
              }),
              (Ee.prototype.has = function (e) {
                var t = this.__data__;
                return he ? void 0 !== t[e] : Y.call(t, e);
              }),
              (Ee.prototype.set = function (e, t) {
                var r = this.__data__;
                return (
                  (this.size += this.has(e) ? 0 : 1),
                  (r[e] = he && void 0 === t ? n : t),
                  this
                );
              }),
              (Me.prototype.clear = function () {
                (this.__data__ = []), (this.size = 0);
              }),
              (Me.prototype.delete = function (e) {
                var t = this.__data__,
                  n = Oe(t, e);
                return !(
                  n < 0 ||
                  (n == t.length - 1 ? t.pop() : re.call(t, n, 1),
                  --this.size,
                  0)
                );
              }),
              (Me.prototype.get = function (e) {
                var t = this.__data__,
                  n = Oe(t, e);
                return n < 0 ? void 0 : t[n][1];
              }),
              (Me.prototype.has = function (e) {
                return Oe(this.__data__, e) > -1;
              }),
              (Me.prototype.set = function (e, t) {
                var n = this.__data__,
                  r = Oe(n, e);
                return (
                  r < 0 ? (++this.size, n.push([e, t])) : (n[r][1] = t), this
                );
              }),
              (Se.prototype.clear = function () {
                (this.size = 0),
                  (this.__data__ = {
                    hash: new Ee(),
                    map: new (ce || Me)(),
                    string: new Ee(),
                  });
              }),
              (Se.prototype.delete = function (e) {
                var t = Ue(this, e).delete(e);
                return (this.size -= t ? 1 : 0), t;
              }),
              (Se.prototype.get = function (e) {
                return Ue(this, e).get(e);
              }),
              (Se.prototype.has = function (e) {
                return Ue(this, e).has(e);
              }),
              (Se.prototype.set = function (e, t) {
                var n = Ue(this, e),
                  r = n.size;
                return n.set(e, t), (this.size += n.size == r ? 0 : 1), this;
              }),
              (_e.prototype.add = _e.prototype.push = function (e) {
                return this.__data__.set(e, n), this;
              }),
              (_e.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (ke.prototype.clear = function () {
                (this.__data__ = new Me()), (this.size = 0);
              }),
              (ke.prototype.delete = function (e) {
                var t = this.__data__,
                  n = t.delete(e);
                return (this.size = t.size), n;
              }),
              (ke.prototype.get = function (e) {
                return this.__data__.get(e);
              }),
              (ke.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (ke.prototype.set = function (e, t) {
                var n = this.__data__;
                if (n instanceof Me) {
                  var r = n.__data__;
                  if (!ce || r.length < 199)
                    return r.push([e, t]), (this.size = ++n.size), this;
                  n = this.__data__ = new Se(r);
                }
                return n.set(e, t), (this.size = n.size), this;
              });
            var Ae,
              Ce =
                ((Ae = function (e, t) {
                  return e && Ie(e, t, ft);
                }),
                function (e, t) {
                  if (null == e) return e;
                  if (!rt(e)) return Ae(e, t);
                  for (
                    var n = e.length, r = -1, i = Object(e);
                    ++r < n && !1 !== t(i[r], r, i);

                  );
                  return e;
                });
            function Te(e, t) {
              var n = [];
              return (
                Ce(e, function (e, r, i) {
                  t(e, r, i) && n.push(e);
                }),
                n
              );
            }
            var Ie = function (e, t, n) {
              for (var r = -1, i = Object(e), a = n(e), o = a.length; o--; ) {
                var s = a[++r];
                if (!1 === t(i[s], s, i)) break;
              }
              return e;
            };
            function Pe(e, t) {
              for (var n = 0, r = (t = ze(t, e)).length; null != e && n < r; )
                e = e[Xe(t[n++])];
              return n && n == r ? e : void 0;
            }
            function Be(e) {
              return null == e
                ? void 0 === e
                  ? "[object Undefined]"
                  : "[object Null]"
                : ie && ie in Object(e)
                ? (function (e) {
                    var t = Y.call(e, ie),
                      n = e[ie];
                    try {
                      e[ie] = void 0;
                      var r = !0;
                    } catch (e) {}
                    var i = X.call(e);
                    return r && (t ? (e[ie] = n) : delete e[ie]), i;
                  })(e)
                : (function (e) {
                    return X.call(e);
                  })(e);
            }
            function De(e, t) {
              return null != e && t in Object(e);
            }
            function je(e) {
              return ut(e) && Be(e) == i;
            }
            function Re(e, t, n, r, c) {
              return (
                e === t ||
                (null == e || null == t || (!ut(e) && !ut(t))
                  ? e != e && t != t
                  : (function (e, t, n, r, c, h) {
                      var v = nt(e),
                        w = nt(t),
                        N = v ? a : He(e),
                        E = w ? a : He(t),
                        M = (N = N == i ? p : N) == p,
                        S = (E = E == i ? p : E) == p,
                        _ = N == E;
                      if (_ && it(e)) {
                        if (!it(t)) return !1;
                        (v = !0), (M = !1);
                      }
                      if (_ && !M)
                        return (
                          h || (h = new ke()),
                          v || lt(e)
                            ? qe(e, t, n, r, c, h)
                            : (function (e, t, n, r, i, a, c) {
                                switch (n) {
                                  case x:
                                    if (
                                      e.byteLength != t.byteLength ||
                                      e.byteOffset != t.byteOffset
                                    )
                                      return !1;
                                    (e = e.buffer), (t = t.buffer);
                                  case b:
                                    return !(
                                      e.byteLength != t.byteLength ||
                                      !a(new te(e), new te(t))
                                    );
                                  case o:
                                  case s:
                                  case f:
                                    return et(+e, +t);
                                  case u:
                                    return (
                                      e.name == t.name && e.message == t.message
                                    );
                                  case d:
                                  case g:
                                    return e == t + "";
                                  case l:
                                    var p = z;
                                  case m:
                                    var h = 1 & r;
                                    if ((p || (p = q), e.size != t.size && !h))
                                      return !1;
                                    var v = c.get(e);
                                    if (v) return v == t;
                                    (r |= 2), c.set(e, t);
                                    var w = qe(p(e), p(t), r, i, a, c);
                                    return c.delete(e), w;
                                  case y:
                                    if (we) return we.call(e) == we.call(t);
                                }
                                return !1;
                              })(e, t, N, n, r, c, h)
                        );
                      if (!(1 & n)) {
                        var k = M && Y.call(e, "__wrapped__"),
                          O = S && Y.call(t, "__wrapped__");
                        if (k || O) {
                          var A = k ? e.value() : e,
                            C = O ? t.value() : t;
                          return h || (h = new ke()), c(A, C, n, r, h);
                        }
                      }
                      return (
                        !!_ &&
                        (h || (h = new ke()),
                        (function (e, t, n, r, i, a) {
                          var o = 1 & n,
                            s = Fe(e),
                            u = s.length;
                          if (u != Fe(t).length && !o) return !1;
                          for (var c = u; c--; ) {
                            var l = s[c];
                            if (!(o ? l in t : Y.call(t, l))) return !1;
                          }
                          var f = a.get(e);
                          if (f && a.get(t)) return f == t;
                          var p = !0;
                          a.set(e, t), a.set(t, e);
                          for (var h = o; ++c < u; ) {
                            var d = e[(l = s[c])],
                              m = t[l];
                            if (r)
                              var g = o
                                ? r(m, d, l, t, e, a)
                                : r(d, m, l, e, t, a);
                            if (
                              !(void 0 === g ? d === m || i(d, m, n, r, a) : g)
                            ) {
                              p = !1;
                              break;
                            }
                            h || (h = "constructor" == l);
                          }
                          if (p && !h) {
                            var y = e.constructor,
                              v = t.constructor;
                            y == v ||
                              !("constructor" in e) ||
                              !("constructor" in t) ||
                              ("function" == typeof y &&
                                y instanceof y &&
                                "function" == typeof v &&
                                v instanceof v) ||
                              (p = !1);
                          }
                          return a.delete(e), a.delete(t), p;
                        })(e, t, n, r, c, h))
                      );
                    })(e, t, n, r, Re, c))
              );
            }
            function Le(e) {
              if ("string" == typeof e) return e;
              if (nt(e))
                return (
                  (function (e, t) {
                    for (
                      var n = -1, r = null == e ? 0 : e.length, i = Array(r);
                      ++n < r;

                    )
                      i[n] = t(e[n], n, e);
                    return i;
                  })(e, Le) + ""
                );
              if (ct(e)) return Ne ? Ne.call(e) : "";
              var t = e + "";
              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function ze(e, t) {
              return nt(e)
                ? e
                : Ge(e, t)
                ? [e]
                : Ze(
                    (function (e) {
                      return null == e ? "" : Le(e);
                    })(e)
                  );
            }
            function qe(e, t, n, r, i, a) {
              var o = 1 & n,
                s = e.length,
                u = t.length;
              if (s != u && !(o && u > s)) return !1;
              var c = a.get(e);
              if (c && a.get(t)) return c == t;
              var l = -1,
                f = !0,
                p = 2 & n ? new _e() : void 0;
              for (a.set(e, t), a.set(t, e); ++l < s; ) {
                var h = e[l],
                  d = t[l];
                if (r) var m = o ? r(d, h, l, t, e, a) : r(h, d, l, e, t, a);
                if (void 0 !== m) {
                  if (m) continue;
                  f = !1;
                  break;
                }
                if (p) {
                  if (
                    !L(t, function (e, t) {
                      if (((o = t), !p.has(o) && (h === e || i(h, e, n, r, a))))
                        return p.push(t);
                      var o;
                    })
                  ) {
                    f = !1;
                    break;
                  }
                } else if (h !== d && !i(h, d, n, r, a)) {
                  f = !1;
                  break;
                }
              }
              return a.delete(e), a.delete(t), f;
            }
            function Fe(e) {
              return (function (e, t, n) {
                var r = t(e);
                return nt(e)
                  ? r
                  : (function (e, t) {
                      for (var n = -1, r = t.length, i = e.length; ++n < r; )
                        e[i + n] = t[n];
                      return e;
                    })(r, n(e));
              })(e, ft, $e);
            }
            function Ue(e, t) {
              var n,
                r,
                i = e.__data__;
              return (
                "string" == (r = typeof (n = t)) ||
                "number" == r ||
                "symbol" == r ||
                "boolean" == r
                  ? "__proto__" !== n
                  : null === n
              )
                ? i["string" == typeof t ? "string" : "hash"]
                : i.map;
            }
            function Ve(e, t) {
              var n = (function (e, t) {
                return null == e ? void 0 : e[t];
              })(e, t);
              return (function (e) {
                return (
                  !(
                    !st(e) ||
                    (function (e) {
                      return !!Z && Z in e;
                    })(e)
                  ) && (at(e) ? K : S).test(Ke(e))
                );
              })(n)
                ? n
                : void 0;
            }
            var $e = ae
                ? function (e) {
                    return null == e
                      ? []
                      : ((e = Object(e)),
                        R(ae(e), function (t) {
                          return ne.call(e, t);
                        }));
                  }
                : function () {
                    return [];
                  },
              He = Be;
            function We(e, t) {
              var n = typeof e;
              return (
                !!(t = null == t ? r : t) &&
                ("number" == n || ("symbol" != n && _.test(e))) &&
                e > -1 &&
                e % 1 == 0 &&
                e < t
              );
            }
            function Ge(e, t) {
              if (nt(e)) return !1;
              var n = typeof e;
              return (
                !(
                  "number" != n &&
                  "symbol" != n &&
                  "boolean" != n &&
                  null != e &&
                  !ct(e)
                ) ||
                N.test(e) ||
                !w.test(e) ||
                (null != t && e in Object(t))
              );
            }
            function Je(e) {
              return e == e && !st(e);
            }
            function Ye(e, t) {
              return function (n) {
                return (
                  null != n && n[e] === t && (void 0 !== t || e in Object(n))
                );
              };
            }
            ((ue && He(new ue(new ArrayBuffer(1))) != x) ||
              (ce && He(new ce()) != l) ||
              (le && He(le.resolve()) != h) ||
              (fe && He(new fe()) != m) ||
              (pe && He(new pe()) != v)) &&
              (He = function (e) {
                var t = Be(e),
                  n = t == p ? e.constructor : void 0,
                  r = n ? Ke(n) : "";
                if (r)
                  switch (r) {
                    case de:
                      return x;
                    case me:
                      return l;
                    case ge:
                      return h;
                    case ye:
                      return m;
                    case ve:
                      return v;
                  }
                return t;
              });
            var Ze = (function (e) {
              var t = Qe(
                  function (e) {
                    var t = [];
                    return (
                      46 === e.charCodeAt(0) && t.push(""),
                      e.replace(E, function (e, n, r, i) {
                        t.push(r ? i.replace(M, "$1") : n || e);
                      }),
                      t
                    );
                  },
                  function (e) {
                    return 500 === n.size && n.clear(), e;
                  }
                ),
                n = t.cache;
              return t;
            })();
            function Xe(e) {
              if ("string" == typeof e || ct(e)) return e;
              var t = e + "";
              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function Ke(e) {
              if (null != e) {
                try {
                  return J.call(e);
                } catch (e) {}
                try {
                  return e + "";
                } catch (e) {}
              }
              return "";
            }
            function Qe(e, t) {
              if (
                "function" != typeof e ||
                (null != t && "function" != typeof t)
              )
                throw new TypeError("Expected a function");
              var n = function () {
                var r = arguments,
                  i = t ? t.apply(this, r) : r[0],
                  a = n.cache;
                if (a.has(i)) return a.get(i);
                var o = e.apply(this, r);
                return (n.cache = a.set(i, o) || a), o;
              };
              return (n.cache = new (Qe.Cache || Se)()), n;
            }
            function et(e, t) {
              return e === t || (e != e && t != t);
            }
            Qe.Cache = Se;
            var tt = je(
                (function () {
                  return arguments;
                })()
              )
                ? je
                : function (e) {
                    return (
                      ut(e) && Y.call(e, "callee") && !ne.call(e, "callee")
                    );
                  },
              nt = Array.isArray;
            function rt(e) {
              return null != e && ot(e.length) && !at(e);
            }
            var it =
              oe ||
              function () {
                return !1;
              };
            function at(e) {
              if (!st(e)) return !1;
              var t = Be(e);
              return (
                t == c ||
                "[object GeneratorFunction]" == t ||
                "[object AsyncFunction]" == t ||
                "[object Proxy]" == t
              );
            }
            function ot(e) {
              return "number" == typeof e && e > -1 && e % 1 == 0 && e <= r;
            }
            function st(e) {
              var t = typeof e;
              return null != e && ("object" == t || "function" == t);
            }
            function ut(e) {
              return null != e && "object" == typeof e;
            }
            function ct(e) {
              return "symbol" == typeof e || (ut(e) && Be(e) == y);
            }
            var lt = j
              ? (function (e) {
                  return function (t) {
                    return e(t);
                  };
                })(j)
              : function (e) {
                  return ut(e) && ot(e.length) && !!k[Be(e)];
                };
            function ft(e) {
              return rt(e)
                ? (function (e, t) {
                    var n = nt(e),
                      r = !n && tt(e),
                      i = !n && !r && it(e),
                      a = !n && !r && !i && lt(e),
                      o = n || r || i || a,
                      s = o
                        ? (function (e, t) {
                            for (var n = -1, r = Array(e); ++n < e; )
                              r[n] = t(n);
                            return r;
                          })(e.length, String)
                        : [],
                      u = s.length;
                    for (var c in e)
                      (!t && !Y.call(e, c)) ||
                        (o &&
                          ("length" == c ||
                            (i && ("offset" == c || "parent" == c)) ||
                            (a &&
                              ("buffer" == c ||
                                "byteLength" == c ||
                                "byteOffset" == c)) ||
                            We(c, u))) ||
                        s.push(c);
                    return s;
                  })(e)
                : (function (e) {
                    if (
                      ((n = (t = e) && t.constructor),
                      t !== (("function" == typeof n && n.prototype) || W))
                    )
                      return se(e);
                    var t,
                      n,
                      r = [];
                    for (var i in Object(e))
                      Y.call(e, i) && "constructor" != i && r.push(i);
                    return r;
                  })(e);
            }
            function pt(e) {
              return e;
            }
            e.exports = function (e, t) {
              return (nt(e) ? R : Te)(
                e,
                (function (e) {
                  return "function" == typeof e
                    ? e
                    : null == e
                    ? pt
                    : "object" == typeof e
                    ? nt(e)
                      ? (function (e, t) {
                          return Ge(e) && Je(t)
                            ? Ye(Xe(e), t)
                            : function (n) {
                                var r = (function (e, t, n) {
                                  var r = null == e ? void 0 : Pe(e, t);
                                  return void 0 === r ? void 0 : r;
                                })(n, e);
                                return void 0 === r && r === t
                                  ? (function (e, t) {
                                      return (
                                        null != e &&
                                        (function (e, t, n) {
                                          for (
                                            var r = -1,
                                              i = (t = ze(t, e)).length,
                                              a = !1;
                                            ++r < i;

                                          ) {
                                            var o = Xe(t[r]);
                                            if (!(a = null != e && n(e, o)))
                                              break;
                                            e = e[o];
                                          }
                                          return a || ++r != i
                                            ? a
                                            : !!(i =
                                                null == e ? 0 : e.length) &&
                                                ot(i) &&
                                                We(o, i) &&
                                                (nt(e) || tt(e));
                                        })(e, t, De)
                                      );
                                    })(n, e)
                                  : Re(t, r, 3);
                              };
                        })(e[0], e[1])
                      : (function (e) {
                          var t = (function (e) {
                            for (var t = ft(e), n = t.length; n--; ) {
                              var r = t[n],
                                i = e[r];
                              t[n] = [r, i, Je(i)];
                            }
                            return t;
                          })(e);
                          return 1 == t.length && t[0][2]
                            ? Ye(t[0][0], t[0][1])
                            : function (n) {
                                return (
                                  n === e ||
                                  (function (e, t, n, r) {
                                    var i = n.length,
                                      a = i;
                                    if (null == e) return !a;
                                    for (e = Object(e); i--; ) {
                                      var o = n[i];
                                      if (
                                        o[2] ? o[1] !== e[o[0]] : !(o[0] in e)
                                      )
                                        return !1;
                                    }
                                    for (; ++i < a; ) {
                                      var s = (o = n[i])[0],
                                        u = e[s],
                                        c = o[1];
                                      if (o[2]) {
                                        if (void 0 === u && !(s in e))
                                          return !1;
                                      } else {
                                        var l,
                                          f = new ke();
                                        if (
                                          !(void 0 === l
                                            ? Re(c, u, 3, r, f)
                                            : l)
                                        )
                                          return !1;
                                      }
                                    }
                                    return !0;
                                  })(n, 0, t)
                                );
                              };
                        })(e)
                    : (function (e) {
                        return Ge(e)
                          ? ((t = Xe(e)),
                            function (e) {
                              return null == e ? void 0 : e[t];
                            })
                          : (function (e) {
                              return function (t) {
                                return Pe(t, e);
                              };
                            })(e);
                        var t;
                      })(e);
                })(t)
              );
            };
          }),
          Se = Ne(function (e, t) {
            var n = "__lodash_hash_undefined__",
              r = 9007199254740991,
              i = "[object Arguments]",
              a = "[object Array]",
              o = "[object Boolean]",
              s = "[object Date]",
              u = "[object Error]",
              c = "[object Function]",
              l = "[object Map]",
              f = "[object Number]",
              p = "[object Object]",
              h = "[object Promise]",
              d = "[object RegExp]",
              m = "[object Set]",
              g = "[object String]",
              y = "[object Symbol]",
              v = "[object WeakMap]",
              b = "[object ArrayBuffer]",
              x = "[object DataView]",
              w = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
              N = /^\w*$/,
              E = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
              M = /\\(\\)?/g,
              S = /^\[object .+?Constructor\]$/,
              _ = /^(?:0|[1-9]\d*)$/,
              k = {};
            (k["[object Float32Array]"] = k["[object Float64Array]"] = k[
              "[object Int8Array]"
            ] = k["[object Int16Array]"] = k["[object Int32Array]"] = k[
              "[object Uint8Array]"
            ] = k["[object Uint8ClampedArray]"] = k["[object Uint16Array]"] = k[
              "[object Uint32Array]"
            ] = !0),
              (k[i] = k[a] = k[b] = k[o] = k[x] = k[s] = k[u] = k[c] = k[l] = k[
                f
              ] = k[p] = k[d] = k[m] = k[g] = k[v] = !1);
            var O = "object" == typeof xe && xe && xe.Object === Object && xe,
              A =
                "object" == typeof self &&
                self &&
                self.Object === Object &&
                self,
              C = O || A || Function("return this")(),
              T = t && !t.nodeType && t,
              I = T && e && !e.nodeType && e,
              P = I && I.exports === T,
              B = P && O.process,
              D = (function () {
                try {
                  return B && B.binding && B.binding("util");
                } catch (e) {}
              })(),
              j = D && D.isTypedArray;
            function R(e, t, n) {
              switch (n.length) {
                case 0:
                  return e.call(t);
                case 1:
                  return e.call(t, n[0]);
                case 2:
                  return e.call(t, n[0], n[1]);
                case 3:
                  return e.call(t, n[0], n[1], n[2]);
              }
              return e.apply(t, n);
            }
            function L(e, t) {
              for (
                var n = -1, r = null == e ? 0 : e.length, i = Array(r);
                ++n < r;

              )
                i[n] = t(e[n], n, e);
              return i;
            }
            function z(e, t) {
              for (var n = -1, r = t.length, i = e.length; ++n < r; )
                e[i + n] = t[n];
              return e;
            }
            function q(e, t) {
              for (var n = -1, r = null == e ? 0 : e.length; ++n < r; )
                if (t(e[n], n, e)) return !0;
              return !1;
            }
            function F(e) {
              return function (t) {
                return e(t);
              };
            }
            function U(e) {
              var t = -1,
                n = Array(e.size);
              return (
                e.forEach(function (e, r) {
                  n[++t] = [r, e];
                }),
                n
              );
            }
            function V(e) {
              var t = -1,
                n = Array(e.size);
              return (
                e.forEach(function (e) {
                  n[++t] = e;
                }),
                n
              );
            }
            var $,
              H,
              W,
              G = Array.prototype,
              J = Function.prototype,
              Y = Object.prototype,
              Z = C["__core-js_shared__"],
              X = J.toString,
              K = Y.hasOwnProperty,
              Q = ($ = /[^.]+$/.exec((Z && Z.keys && Z.keys.IE_PROTO) || ""))
                ? "Symbol(src)_1." + $
                : "",
              ee = Y.toString,
              te = RegExp(
                "^" +
                  X.call(K)
                    .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                    .replace(
                      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                      "$1.*?"
                    ) +
                  "$"
              ),
              ne = P ? C.Buffer : void 0,
              re = C.Symbol,
              ie = C.Uint8Array,
              ae = Y.propertyIsEnumerable,
              oe = G.splice,
              se = re ? re.isConcatSpreadable : void 0,
              ue = re ? re.toStringTag : void 0,
              ce = (function () {
                try {
                  var e = Ke(Object, "defineProperty");
                  return e({}, "", {}), e;
                } catch (e) {}
              })(),
              le = Object.getOwnPropertySymbols,
              fe = ne ? ne.isBuffer : void 0,
              pe =
                ((H = Object.keys),
                (W = Object),
                function (e) {
                  return H(W(e));
                }),
              he = Math.max,
              de = Date.now,
              me = Ke(C, "DataView"),
              ge = Ke(C, "Map"),
              ye = Ke(C, "Promise"),
              ve = Ke(C, "Set"),
              be = Ke(C, "WeakMap"),
              we = Ke(Object, "create"),
              Ne = lt(me),
              Ee = lt(ge),
              Me = lt(ye),
              Se = lt(ve),
              _e = lt(be),
              ke = re ? re.prototype : void 0,
              Oe = ke ? ke.valueOf : void 0,
              Ae = ke ? ke.toString : void 0;
            function Ce(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Te(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Ie(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Pe(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.__data__ = new Ie(); ++t < n; ) this.add(e[t]);
            }
            function Be(e) {
              var t = (this.__data__ = new Te(e));
              this.size = t.size;
            }
            function De(e, t) {
              for (var n = e.length; n--; ) if (ht(e[n][0], t)) return n;
              return -1;
            }
            (Ce.prototype.clear = function () {
              (this.__data__ = we ? we(null) : {}), (this.size = 0);
            }),
              (Ce.prototype.delete = function (e) {
                var t = this.has(e) && delete this.__data__[e];
                return (this.size -= t ? 1 : 0), t;
              }),
              (Ce.prototype.get = function (e) {
                var t = this.__data__;
                if (we) {
                  var r = t[e];
                  return r === n ? void 0 : r;
                }
                return K.call(t, e) ? t[e] : void 0;
              }),
              (Ce.prototype.has = function (e) {
                var t = this.__data__;
                return we ? void 0 !== t[e] : K.call(t, e);
              }),
              (Ce.prototype.set = function (e, t) {
                var r = this.__data__;
                return (
                  (this.size += this.has(e) ? 0 : 1),
                  (r[e] = we && void 0 === t ? n : t),
                  this
                );
              }),
              (Te.prototype.clear = function () {
                (this.__data__ = []), (this.size = 0);
              }),
              (Te.prototype.delete = function (e) {
                var t = this.__data__,
                  n = De(t, e);
                return !(
                  n < 0 ||
                  (n == t.length - 1 ? t.pop() : oe.call(t, n, 1),
                  --this.size,
                  0)
                );
              }),
              (Te.prototype.get = function (e) {
                var t = this.__data__,
                  n = De(t, e);
                return n < 0 ? void 0 : t[n][1];
              }),
              (Te.prototype.has = function (e) {
                return De(this.__data__, e) > -1;
              }),
              (Te.prototype.set = function (e, t) {
                var n = this.__data__,
                  r = De(n, e);
                return (
                  r < 0 ? (++this.size, n.push([e, t])) : (n[r][1] = t), this
                );
              }),
              (Ie.prototype.clear = function () {
                (this.size = 0),
                  (this.__data__ = {
                    hash: new Ce(),
                    map: new (ge || Te)(),
                    string: new Ce(),
                  });
              }),
              (Ie.prototype.delete = function (e) {
                var t = Xe(this, e).delete(e);
                return (this.size -= t ? 1 : 0), t;
              }),
              (Ie.prototype.get = function (e) {
                return Xe(this, e).get(e);
              }),
              (Ie.prototype.has = function (e) {
                return Xe(this, e).has(e);
              }),
              (Ie.prototype.set = function (e, t) {
                var n = Xe(this, e),
                  r = n.size;
                return n.set(e, t), (this.size += n.size == r ? 0 : 1), this;
              }),
              (Pe.prototype.add = Pe.prototype.push = function (e) {
                return this.__data__.set(e, n), this;
              }),
              (Pe.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (Be.prototype.clear = function () {
                (this.__data__ = new Te()), (this.size = 0);
              }),
              (Be.prototype.delete = function (e) {
                var t = this.__data__,
                  n = t.delete(e);
                return (this.size = t.size), n;
              }),
              (Be.prototype.get = function (e) {
                return this.__data__.get(e);
              }),
              (Be.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (Be.prototype.set = function (e, t) {
                var n = this.__data__;
                if (n instanceof Te) {
                  var r = n.__data__;
                  if (!ge || r.length < 199)
                    return r.push([e, t]), (this.size = ++n.size), this;
                  n = this.__data__ = new Ie(r);
                }
                return n.set(e, t), (this.size = n.size), this;
              });
            var je,
              Re =
                ((je = function (e, t) {
                  return e && Le(e, t, Mt);
                }),
                function (e, t) {
                  if (null == e) return e;
                  if (!gt(e)) return je(e, t);
                  for (
                    var n = e.length, r = -1, i = Object(e);
                    ++r < n && !1 !== t(i[r], r, i);

                  );
                  return e;
                }),
              Le = function (e, t, n) {
                for (var r = -1, i = Object(e), a = n(e), o = a.length; o--; ) {
                  var s = a[++r];
                  if (!1 === t(i[s], s, i)) break;
                }
                return e;
              };
            function ze(e, t) {
              for (var n = 0, r = (t = Ge(t, e)).length; null != e && n < r; )
                e = e[ct(t[n++])];
              return n && n == r ? e : void 0;
            }
            function qe(e) {
              return null == e
                ? void 0 === e
                  ? "[object Undefined]"
                  : "[object Null]"
                : ue && ue in Object(e)
                ? (function (e) {
                    var t = K.call(e, ue),
                      n = e[ue];
                    try {
                      e[ue] = void 0;
                      var r = !0;
                    } catch (e) {}
                    var i = ee.call(e);
                    return r && (t ? (e[ue] = n) : delete e[ue]), i;
                  })(e)
                : (function (e) {
                    return ee.call(e);
                  })(e);
            }
            function Fe(e, t) {
              return null != e && t in Object(e);
            }
            function Ue(e) {
              return wt(e) && qe(e) == i;
            }
            function Ve(e, t, n, r, c) {
              return (
                e === t ||
                (null == e || null == t || (!wt(e) && !wt(t))
                  ? e != e && t != t
                  : (function (e, t, n, r, c, h) {
                      var v = mt(e),
                        w = mt(t),
                        N = v ? a : et(e),
                        E = w ? a : et(t),
                        M = (N = N == i ? p : N) == p,
                        S = (E = E == i ? p : E) == p,
                        _ = N == E;
                      if (_ && yt(e)) {
                        if (!yt(t)) return !1;
                        (v = !0), (M = !1);
                      }
                      if (_ && !M)
                        return (
                          h || (h = new Be()),
                          v || Et(e)
                            ? Ye(e, t, n, r, c, h)
                            : (function (e, t, n, r, i, a, c) {
                                switch (n) {
                                  case x:
                                    if (
                                      e.byteLength != t.byteLength ||
                                      e.byteOffset != t.byteOffset
                                    )
                                      return !1;
                                    (e = e.buffer), (t = t.buffer);
                                  case b:
                                    return !(
                                      e.byteLength != t.byteLength ||
                                      !a(new ie(e), new ie(t))
                                    );
                                  case o:
                                  case s:
                                  case f:
                                    return ht(+e, +t);
                                  case u:
                                    return (
                                      e.name == t.name && e.message == t.message
                                    );
                                  case d:
                                  case g:
                                    return e == t + "";
                                  case l:
                                    var p = U;
                                  case m:
                                    var h = 1 & r;
                                    if ((p || (p = V), e.size != t.size && !h))
                                      return !1;
                                    var v = c.get(e);
                                    if (v) return v == t;
                                    (r |= 2), c.set(e, t);
                                    var w = Ye(p(e), p(t), r, i, a, c);
                                    return c.delete(e), w;
                                  case y:
                                    if (Oe) return Oe.call(e) == Oe.call(t);
                                }
                                return !1;
                              })(e, t, N, n, r, c, h)
                        );
                      if (!(1 & n)) {
                        var k = M && K.call(e, "__wrapped__"),
                          O = S && K.call(t, "__wrapped__");
                        if (k || O) {
                          var A = k ? e.value() : e,
                            C = O ? t.value() : t;
                          return h || (h = new Be()), c(A, C, n, r, h);
                        }
                      }
                      return (
                        !!_ &&
                        (h || (h = new Be()),
                        (function (e, t, n, r, i, a) {
                          var o = 1 & n,
                            s = Ze(e),
                            u = s.length;
                          if (u != Ze(t).length && !o) return !1;
                          for (var c = u; c--; ) {
                            var l = s[c];
                            if (!(o ? l in t : K.call(t, l))) return !1;
                          }
                          var f = a.get(e);
                          if (f && a.get(t)) return f == t;
                          var p = !0;
                          a.set(e, t), a.set(t, e);
                          for (var h = o; ++c < u; ) {
                            var d = e[(l = s[c])],
                              m = t[l];
                            if (r)
                              var g = o
                                ? r(m, d, l, t, e, a)
                                : r(d, m, l, e, t, a);
                            if (
                              !(void 0 === g ? d === m || i(d, m, n, r, a) : g)
                            ) {
                              p = !1;
                              break;
                            }
                            h || (h = "constructor" == l);
                          }
                          if (p && !h) {
                            var y = e.constructor,
                              v = t.constructor;
                            y == v ||
                              !("constructor" in e) ||
                              !("constructor" in t) ||
                              ("function" == typeof y &&
                                y instanceof y &&
                                "function" == typeof v &&
                                v instanceof v) ||
                              (p = !1);
                          }
                          return a.delete(e), a.delete(t), p;
                        })(e, t, n, r, c, h))
                      );
                    })(e, t, n, r, Ve, c))
              );
            }
            function $e(e) {
              return "function" == typeof e
                ? e
                : null == e
                ? St
                : "object" == typeof e
                ? mt(e)
                  ? (function (e, t) {
                      return it(e) && at(t)
                        ? ot(ct(e), t)
                        : function (n) {
                            var r = (function (e, t, n) {
                              var r = null == e ? void 0 : ze(e, t);
                              return void 0 === r ? void 0 : r;
                            })(n, e);
                            return void 0 === r && r === t
                              ? (function (e, t) {
                                  return (
                                    null != e &&
                                    (function (e, t, n) {
                                      for (
                                        var r = -1,
                                          i = (t = Ge(t, e)).length,
                                          a = !1;
                                        ++r < i;

                                      ) {
                                        var o = ct(t[r]);
                                        if (!(a = null != e && n(e, o))) break;
                                        e = e[o];
                                      }
                                      return a || ++r != i
                                        ? a
                                        : !!(i = null == e ? 0 : e.length) &&
                                            bt(i) &&
                                            nt(o, i) &&
                                            (mt(e) || dt(e));
                                    })(e, t, Fe)
                                  );
                                })(n, e)
                              : Ve(t, r, 3);
                          };
                    })(e[0], e[1])
                  : (function (e) {
                      var t = (function (e) {
                        for (var t = Mt(e), n = t.length; n--; ) {
                          var r = t[n],
                            i = e[r];
                          t[n] = [r, i, at(i)];
                        }
                        return t;
                      })(e);
                      return 1 == t.length && t[0][2]
                        ? ot(t[0][0], t[0][1])
                        : function (n) {
                            return (
                              n === e ||
                              (function (e, t, n, r) {
                                var i = n.length,
                                  a = i;
                                if (null == e) return !a;
                                for (e = Object(e); i--; ) {
                                  var o = n[i];
                                  if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
                                    return !1;
                                }
                                for (; ++i < a; ) {
                                  var s = (o = n[i])[0],
                                    u = e[s],
                                    c = o[1];
                                  if (o[2]) {
                                    if (void 0 === u && !(s in e)) return !1;
                                  } else {
                                    var l,
                                      f = new Be();
                                    if (!(void 0 === l ? Ve(c, u, 3, r, f) : l))
                                      return !1;
                                  }
                                }
                                return !0;
                              })(n, 0, t)
                            );
                          };
                    })(e)
                : (function (e) {
                    return it(e)
                      ? ((t = ct(e)),
                        function (e) {
                          return null == e ? void 0 : e[t];
                        })
                      : (function (e) {
                          return function (t) {
                            return ze(t, e);
                          };
                        })(e);
                    var t;
                  })(e);
            }
            var He = ce
              ? function (e, t) {
                  return ce(e, "toString", {
                    configurable: !0,
                    enumerable: !1,
                    value:
                      ((n = t),
                      function () {
                        return n;
                      }),
                    writable: !0,
                  });
                  var n;
                }
              : St;
            function We(e) {
              if ("string" == typeof e) return e;
              if (mt(e)) return L(e, We) + "";
              if (Nt(e)) return Ae ? Ae.call(e) : "";
              var t = e + "";
              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function Ge(e, t) {
              return mt(e)
                ? e
                : it(e, t)
                ? [e]
                : ut(
                    (function (e) {
                      return null == e ? "" : We(e);
                    })(e)
                  );
            }
            function Je(e, t) {
              if (e !== t) {
                var n = void 0 !== e,
                  r = null === e,
                  i = e == e,
                  a = Nt(e),
                  o = void 0 !== t,
                  s = null === t,
                  u = t == t,
                  c = Nt(t);
                if (
                  (!s && !c && !a && e > t) ||
                  (a && o && u && !s && !c) ||
                  (r && o && u) ||
                  (!n && u) ||
                  !i
                )
                  return 1;
                if (
                  (!r && !a && !c && e < t) ||
                  (c && n && i && !r && !a) ||
                  (s && n && i) ||
                  (!o && i) ||
                  !u
                )
                  return -1;
              }
              return 0;
            }
            function Ye(e, t, n, r, i, a) {
              var o = 1 & n,
                s = e.length,
                u = t.length;
              if (s != u && !(o && u > s)) return !1;
              var c = a.get(e);
              if (c && a.get(t)) return c == t;
              var l = -1,
                f = !0,
                p = 2 & n ? new Pe() : void 0;
              for (a.set(e, t), a.set(t, e); ++l < s; ) {
                var h = e[l],
                  d = t[l];
                if (r) var m = o ? r(d, h, l, t, e, a) : r(h, d, l, e, t, a);
                if (void 0 !== m) {
                  if (m) continue;
                  f = !1;
                  break;
                }
                if (p) {
                  if (
                    !q(t, function (e, t) {
                      if (((o = t), !p.has(o) && (h === e || i(h, e, n, r, a))))
                        return p.push(t);
                      var o;
                    })
                  ) {
                    f = !1;
                    break;
                  }
                } else if (h !== d && !i(h, d, n, r, a)) {
                  f = !1;
                  break;
                }
              }
              return a.delete(e), a.delete(t), f;
            }
            function Ze(e) {
              return (function (e, t, n) {
                var r = t(e);
                return mt(e) ? r : z(r, n(e));
              })(e, Mt, Qe);
            }
            function Xe(e, t) {
              var n,
                r,
                i = e.__data__;
              return (
                "string" == (r = typeof (n = t)) ||
                "number" == r ||
                "symbol" == r ||
                "boolean" == r
                  ? "__proto__" !== n
                  : null === n
              )
                ? i["string" == typeof t ? "string" : "hash"]
                : i.map;
            }
            function Ke(e, t) {
              var n = (function (e, t) {
                return null == e ? void 0 : e[t];
              })(e, t);
              return (function (e) {
                return (
                  !(
                    !xt(e) ||
                    (function (e) {
                      return !!Q && Q in e;
                    })(e)
                  ) && (vt(e) ? te : S).test(lt(e))
                );
              })(n)
                ? n
                : void 0;
            }
            var Qe = le
                ? function (e) {
                    return null == e
                      ? []
                      : ((e = Object(e)),
                        (function (e, t) {
                          for (
                            var n = -1,
                              r = null == e ? 0 : e.length,
                              i = 0,
                              a = [];
                            ++n < r;

                          ) {
                            var o = e[n];
                            t(o) && (a[i++] = o);
                          }
                          return a;
                        })(le(e), function (t) {
                          return ae.call(e, t);
                        }));
                  }
                : function () {
                    return [];
                  },
              et = qe;
            function tt(e) {
              return mt(e) || dt(e) || !!(se && e && e[se]);
            }
            function nt(e, t) {
              var n = typeof e;
              return (
                !!(t = null == t ? r : t) &&
                ("number" == n || ("symbol" != n && _.test(e))) &&
                e > -1 &&
                e % 1 == 0 &&
                e < t
              );
            }
            function rt(e, t, n) {
              if (!xt(n)) return !1;
              var r = typeof t;
              return (
                !!("number" == r
                  ? gt(n) && nt(t, n.length)
                  : "string" == r && t in n) && ht(n[t], e)
              );
            }
            function it(e, t) {
              if (mt(e)) return !1;
              var n = typeof e;
              return (
                !(
                  "number" != n &&
                  "symbol" != n &&
                  "boolean" != n &&
                  null != e &&
                  !Nt(e)
                ) ||
                N.test(e) ||
                !w.test(e) ||
                (null != t && e in Object(t))
              );
            }
            function at(e) {
              return e == e && !xt(e);
            }
            function ot(e, t) {
              return function (n) {
                return (
                  null != n && n[e] === t && (void 0 !== t || e in Object(n))
                );
              };
            }
            ((me && et(new me(new ArrayBuffer(1))) != x) ||
              (ge && et(new ge()) != l) ||
              (ye && et(ye.resolve()) != h) ||
              (ve && et(new ve()) != m) ||
              (be && et(new be()) != v)) &&
              (et = function (e) {
                var t = qe(e),
                  n = t == p ? e.constructor : void 0,
                  r = n ? lt(n) : "";
                if (r)
                  switch (r) {
                    case Ne:
                      return x;
                    case Ee:
                      return l;
                    case Me:
                      return h;
                    case Se:
                      return m;
                    case _e:
                      return v;
                  }
                return t;
              });
            var st = (function (e) {
                var t = 0,
                  n = 0;
                return function () {
                  var r = de(),
                    i = 16 - (r - n);
                  if (((n = r), i > 0)) {
                    if (++t >= 800) return arguments[0];
                  } else t = 0;
                  return e.apply(void 0, arguments);
                };
              })(He),
              ut = (function (e) {
                var t = pt(
                    function (e) {
                      var t = [];
                      return (
                        46 === e.charCodeAt(0) && t.push(""),
                        e.replace(E, function (e, n, r, i) {
                          t.push(r ? i.replace(M, "$1") : n || e);
                        }),
                        t
                      );
                    },
                    function (e) {
                      return 500 === n.size && n.clear(), e;
                    }
                  ),
                  n = t.cache;
                return t;
              })();
            function ct(e) {
              if ("string" == typeof e || Nt(e)) return e;
              var t = e + "";
              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function lt(e) {
              if (null != e) {
                try {
                  return X.call(e);
                } catch (e) {}
                try {
                  return e + "";
                } catch (e) {}
              }
              return "";
            }
            var ft = (function (e, t) {
              return st(
                (function (e, t, n) {
                  return (
                    (t = he(void 0 === t ? e.length - 1 : t, 0)),
                    function () {
                      for (
                        var r = arguments,
                          i = -1,
                          a = he(r.length - t, 0),
                          o = Array(a);
                        ++i < a;

                      )
                        o[i] = r[t + i];
                      i = -1;
                      for (var s = Array(t + 1); ++i < t; ) s[i] = r[i];
                      return (s[t] = n(o)), R(e, this, s);
                    }
                  );
                })(e, void 0, St),
                e + ""
              );
            })(function (e, t) {
              if (null == e) return [];
              var n = t.length;
              return (
                n > 1 && rt(e, t[0], t[1])
                  ? (t = [])
                  : n > 2 && rt(t[0], t[1], t[2]) && (t = [t[0]]),
                (function (e, t, n) {
                  var r = -1;
                  return (
                    (t = L(t.length ? t : [St], F($e))),
                    (function (e, t) {
                      var n = e.length;
                      for (e.sort(t); n--; ) e[n] = e[n].value;
                      return e;
                    })(
                      (function (e, t) {
                        var n = -1,
                          r = gt(e) ? Array(e.length) : [];
                        return (
                          Re(e, function (e, i, a) {
                            r[++n] = t(e);
                          }),
                          r
                        );
                      })(e, function (e, n, i) {
                        return {
                          criteria: L(t, function (t) {
                            return t(e);
                          }),
                          index: ++r,
                          value: e,
                        };
                      }),
                      function (e, t) {
                        return (function (e, t, n) {
                          for (
                            var r = -1,
                              i = e.criteria,
                              a = t.criteria,
                              o = i.length,
                              s = n.length;
                            ++r < o;

                          ) {
                            var u = Je(i[r], a[r]);
                            if (u)
                              return r >= s ? u : u * ("desc" == n[r] ? -1 : 1);
                          }
                          return e.index - t.index;
                        })(e, t, n);
                      }
                    )
                  );
                })(
                  e,
                  (function e(t, n, r, i, a) {
                    var o = -1,
                      s = t.length;
                    for (r || (r = tt), a || (a = []); ++o < s; ) {
                      var u = t[o];
                      n > 0 && r(u)
                        ? n > 1
                          ? e(u, n - 1, r, i, a)
                          : z(a, u)
                        : i || (a[a.length] = u);
                    }
                    return a;
                  })(t, 1),
                  []
                )
              );
            });
            function pt(e, t) {
              if (
                "function" != typeof e ||
                (null != t && "function" != typeof t)
              )
                throw new TypeError("Expected a function");
              var n = function () {
                var r = arguments,
                  i = t ? t.apply(this, r) : r[0],
                  a = n.cache;
                if (a.has(i)) return a.get(i);
                var o = e.apply(this, r);
                return (n.cache = a.set(i, o) || a), o;
              };
              return (n.cache = new (pt.Cache || Ie)()), n;
            }
            function ht(e, t) {
              return e === t || (e != e && t != t);
            }
            pt.Cache = Ie;
            var dt = Ue(
                (function () {
                  return arguments;
                })()
              )
                ? Ue
                : function (e) {
                    return (
                      wt(e) && K.call(e, "callee") && !ae.call(e, "callee")
                    );
                  },
              mt = Array.isArray;
            function gt(e) {
              return null != e && bt(e.length) && !vt(e);
            }
            var yt =
              fe ||
              function () {
                return !1;
              };
            function vt(e) {
              if (!xt(e)) return !1;
              var t = qe(e);
              return (
                t == c ||
                "[object GeneratorFunction]" == t ||
                "[object AsyncFunction]" == t ||
                "[object Proxy]" == t
              );
            }
            function bt(e) {
              return "number" == typeof e && e > -1 && e % 1 == 0 && e <= r;
            }
            function xt(e) {
              var t = typeof e;
              return null != e && ("object" == t || "function" == t);
            }
            function wt(e) {
              return null != e && "object" == typeof e;
            }
            function Nt(e) {
              return "symbol" == typeof e || (wt(e) && qe(e) == y);
            }
            var Et = j
              ? F(j)
              : function (e) {
                  return wt(e) && bt(e.length) && !!k[qe(e)];
                };
            function Mt(e) {
              return gt(e)
                ? (function (e, t) {
                    var n = mt(e),
                      r = !n && dt(e),
                      i = !n && !r && yt(e),
                      a = !n && !r && !i && Et(e),
                      o = n || r || i || a,
                      s = o
                        ? (function (e, t) {
                            for (var n = -1, r = Array(e); ++n < e; )
                              r[n] = t(n);
                            return r;
                          })(e.length, String)
                        : [],
                      u = s.length;
                    for (var c in e)
                      (!t && !K.call(e, c)) ||
                        (o &&
                          ("length" == c ||
                            (i && ("offset" == c || "parent" == c)) ||
                            (a &&
                              ("buffer" == c ||
                                "byteLength" == c ||
                                "byteOffset" == c)) ||
                            nt(c, u))) ||
                        s.push(c);
                    return s;
                  })(e)
                : (function (e) {
                    if (
                      ((n = (t = e) && t.constructor),
                      t !== (("function" == typeof n && n.prototype) || Y))
                    )
                      return pe(e);
                    var t,
                      n,
                      r = [];
                    for (var i in Object(e))
                      K.call(e, i) && "constructor" != i && r.push(i);
                    return r;
                  })(e);
            }
            function St(e) {
              return e;
            }
            e.exports = ft;
          }),
          _e = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              return u(this, n), t.apply(this, arguments);
            }
            return (
              l(n, [
                {
                  key: "onInitialise",
                  value: function () {
                    (this.incidents = []), (this.incidentsById = {});
                  },
                },
                {
                  key: "_incidentById",
                  value: function (e) {
                    return this.incidentsById[e];
                  },
                },
                {
                  key: "_resize",
                  value: function (e) {
                    for (var t = 0; t < this.incidents.length; t++)
                      this.incidents[t].millisecond =
                        this.incidents[t].millisecond * e;
                  },
                },
                {
                  key: "checkAddition",
                  value: function (e) {
                    for (var t = [], n = {}, r = [], i = 0; i < e.length; i++)
                      (n[e[i].id] = e[i].incident),
                        r.push({ id: e[i].id, millisecond: e[i].millisecond }),
                        Object.prototype.hasOwnProperty.call(
                          this.incidentsById,
                          e[i].id
                        ) &&
                          (ie.error(
                            "Incident with the id ".concat(
                              e[i].id,
                              " already exists. Addition is rejected."
                            )
                          ),
                          t.push({
                            type: "Already existing id",
                            meta: { id: e[i].id },
                          }));
                    if (t.length > 0) return { result: !1, errors: t };
                    var a = this;
                    return {
                      result: !0,
                      execute: function () {
                        (a.incidentsById = Object.assign(a.incidentsById, n)),
                          (a.incidents = a.incidents.concat(r)),
                          (a.incidents = Se(a.incidents, [
                            function (e) {
                              return e.millisecond;
                            },
                          ]));
                        for (var t = 0; t < e.length; t++)
                          a._incidentById(e[t].id)._onGetContextOnce(a.context);
                      },
                    };
                  },
                },
                {
                  key: "checkEdit",
                  value: function (e, t) {
                    var n = this;
                    return {
                      result: !0,
                      execute: function () {
                        for (var r = 0; r < e.length; r++)
                          for (var i = 0; i < n.incidents.length; i++)
                            if (n.incidents[i].id === e[r].id) {
                              n.incidents[i].millisecond += t;
                              break;
                            }
                        n.incidents = Se(n.incidents, [
                          function (e) {
                            return e.millisecond;
                          },
                        ]);
                      },
                    };
                  },
                },
                {
                  key: "checkDelete",
                  value: function (e) {
                    for (var t = this, n = [], r = 0; r < e.length; r++)
                      n.push(e[r].id);
                    return {
                      result: !0,
                      execute: function () {
                        var e = Me(t.incidents, function (e) {
                          return -1 === n.indexOf(e.id);
                        });
                        t.incidents = e;
                        for (var r = 0; r < n.length; r++)
                          delete t.incidentsById[n[r]];
                      },
                    };
                  },
                },
                {
                  key: "checkResizedIncidents",
                  value: function (e) {
                    var t = this;
                    return {
                      result: !0,
                      execute: function () {
                        for (var n = 0; n < e.length; n++)
                          for (var r = 0; r < t.incidents.length; r++)
                            if (t.incidents[r].id === e[n].id) {
                              t.incidents[r].millisecond += e[n].startDelta;
                              break;
                            }
                        t.incidents = Se(t.incidents, [
                          function (e) {
                            return e.millisecond;
                          },
                        ]);
                      },
                    };
                  },
                },
                {
                  key: "moveTo",
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 &&
                      void 0 !== arguments[3] &&
                      arguments[3];
                    if (r)
                      for (var i = 0; i < this.incidents.length; i++) {
                        var a = this.incidents[i],
                          o = this._incidentById(a.id);
                        t < a.millisecond
                          ? o.onProgress(0, 0, n, !0)
                          : t > a.millisecond + o.duration
                          ? o.onProgress(1, o.duration, n, !0)
                          : o.onProgress(
                              (t - a.millisecond) / o.duration,
                              t - a.millisecond,
                              n,
                              !0
                            );
                      }
                    else {
                      var s,
                        u = this;
                      s = Me(
                        this.incidents,
                        t > e
                          ? function (n) {
                              return (
                                (n.millisecond +
                                  u._incidentById(n.id).duration >=
                                  e &&
                                  n.millisecond +
                                    u._incidentById(n.id).duration <=
                                    t) ||
                                (u._incidentById(n.id).duration +
                                  n.millisecond >=
                                  t &&
                                  n.millisecond <= t)
                              );
                            }
                          : function (n) {
                              return (
                                (n.millisecond +
                                  u._incidentById(n.id).duration >=
                                  t &&
                                  n.millisecond +
                                    u._incidentById(n.id).duration <=
                                    e) ||
                                (u._incidentById(n.id).duration +
                                  n.millisecond >=
                                  e &&
                                  n.millisecond <= e)
                              );
                            }
                      );
                      for (var c = 0; c < s.length; c++) {
                        var l = s[c],
                          f = this._incidentById(l.id),
                          p = (t - l.millisecond) / f.duration >= 1,
                          h = p ? 1 : (t - l.millisecond) / f.duration,
                          d = p ? f.duration : t - l.millisecond;
                        f.onProgress(h, d, n, !1);
                      }
                    }
                  },
                },
              ]),
              n
            );
          })(oe),
          ke = "function" == typeof Float32Array;
        function Oe(e, t) {
          return 1 - 3 * t + 3 * e;
        }
        function Ae(e, t) {
          return 3 * t - 6 * e;
        }
        function Ce(e) {
          return 3 * e;
        }
        function Te(e, t, n) {
          return ((Oe(t, n) * e + Ae(t, n)) * e + Ce(t)) * e;
        }
        function Ie(e, t, n) {
          return 3 * Oe(t, n) * e * e + 2 * Ae(t, n) * e + Ce(t);
        }
        function Pe(e) {
          return e;
        }
        var Be = function (e, t, n, r) {
          if (!(0 <= e && e <= 1 && 0 <= n && n <= 1))
            throw new Error("bezier x values must be in [0, 1] range");
          if (e === t && n === r) return Pe;
          for (
            var i = ke ? new Float32Array(11) : new Array(11), a = 0;
            a < 11;
            ++a
          )
            i[a] = Te(0.1 * a, e, n);
          function o(t) {
            for (var r = 0, a = 1; 10 !== a && i[a] <= t; ++a) r += 0.1;
            --a;
            var o = r + ((t - i[a]) / (i[a + 1] - i[a])) * 0.1,
              s = Ie(o, e, n);
            return s >= 0.001
              ? (function (e, t, n, r) {
                  for (var i = 0; i < 4; ++i) {
                    var a = Ie(t, n, r);
                    if (0 === a) return t;
                    t -= (Te(t, n, r) - e) / a;
                  }
                  return t;
                })(t, o, e, n)
              : 0 === s
              ? o
              : (function (e, t, n, r, i) {
                  var a,
                    o,
                    s = 0;
                  do {
                    (a = Te((o = t + (n - t) / 2), r, i) - e) > 0
                      ? (n = o)
                      : (t = o);
                  } while (Math.abs(a) > 1e-7 && ++s < 10);
                  return o;
                })(t, r, r + 0.1, e, n);
          }
          return function (e) {
            return 0 === e ? 0 : 1 === e ? 1 : Te(o(e), t, r);
          };
        };
        function De(e) {
          e.descriptor.value = function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n = {};
            return (
              (n[this.mc_plugin_npm_name] = [
                {
                  millisecond: e,
                  parentMillisecond: t,
                  incident: this,
                  id: this.id,
                },
              ]),
              n
            );
          };
        }
        var je = T(null, function (e) {
            return {
              F: function t() {
                var n =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  r =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  i = arguments.length > 2 ? arguments[2] : void 0;
                u(this, t),
                  e(this),
                  (this.attrs = n),
                  (this.props = r),
                  (this.dna = i),
                  (this.context = i.context),
                  (this.mcid = i.mcid),
                  (this.id = r.id || Q()),
                  (this.modelId = r.modelId),
                  (this.gotContext = !1),
                  (this.plugin_channel_class = oe),
                  (this.mc_plugin_npm_name = "motor-cortex-js"),
                  Object.prototype.hasOwnProperty.call(
                    r,
                    "plugin_channel_class"
                  ) && (this.plugin_channel_class = r.plugin_channel_class),
                  Object.prototype.hasOwnProperty.call(
                    r,
                    "mc_plugin_npm_name"
                  ) && (this.mc_plugin_npm_name = r.mc_plugin_npm_name),
                  (this.hasIncidents = !1),
                  (this.initialValues = {}),
                  (this.userDefinedInitialValues = n.initialValues || {}),
                  (this.pureInitialValues = null),
                  (this.autoGenerated = !1),
                  this.onInitialise(n, r);
              },
              d: [
                {
                  kind: "get",
                  key: "selector",
                  value: function () {
                    return this.props.selector;
                  },
                },
                {
                  kind: "get",
                  key: "animAttributes",
                  value: function () {
                    return this.attrs.animatedAttrs;
                  },
                },
                {
                  kind: "set",
                  key: "animAttributes",
                  value: function (e) {
                    this.attrs.animatedAttrs[this.attributeKey] = e;
                  },
                },
                {
                  kind: "method",
                  key: "getScratchValue",
                  value: function () {
                    return 0;
                  },
                },
                {
                  kind: "get",
                  key: "element",
                  value: function () {
                    return null === this.contex
                      ? []
                      : this.context.getElementByMCID
                      ? this.context.getElementByMCID(this.mcid)
                      : this.context.getElements(this.selector)[0];
                  },
                },
                {
                  kind: "get",
                  key: "attributeKey",
                  value: function () {
                    return Object.keys(this.attrs.animatedAttrs)[0];
                  },
                },
                {
                  kind: "get",
                  key: "targetValue",
                  value: function () {
                    return this.animAttributes[this.attributeKey];
                  },
                },
                {
                  kind: "method",
                  key: "getElementAttribute",
                  value: function (e) {
                    return this.element.getAttribute(e);
                  },
                },
                {
                  kind: "method",
                  decorators: [De],
                  key: "getIncidentsByChannel",
                  value: function () {},
                },
                {
                  kind: "method",
                  key: "hasUserDefinedInitialValue",
                  value: function () {
                    return !!Object.prototype.hasOwnProperty.call(
                      this.userDefinedInitialValues,
                      this.attributeKey
                    );
                  },
                },
                {
                  kind: "method",
                  key: "setInitialValue",
                  value: function (e) {
                    var t =
                      !(arguments.length > 1 && void 0 !== arguments[1]) ||
                      arguments[1];
                    if (
                      (t &&
                        (this.pureInitialValues = JSON.parse(
                          JSON.stringify(e)
                        )),
                      this.hasUserDefinedInitialValue())
                    )
                      if ("object" === s(this.targetValue)) {
                        for (var n in this.userDefinedInitialValues[
                          this.attributeKey
                        ])
                          e[n] = this.userDefinedInitialValues[
                            this.attributeKey
                          ][n];
                        this.initialValues[this.attributeKey] = e;
                      } else
                        this.initialValues[
                          this.attributeKey
                        ] = this.userDefinedInitialValues[this.attributeKey];
                    else this.initialValues[this.attributeKey] = e;
                  },
                },
                {
                  kind: "get",
                  key: "initialValue",
                  value: function () {
                    return this.initialValues[this.attributeKey];
                  },
                },
                {
                  kind: "method",
                  key: "getInitialValue",
                  value: function () {
                    return this.initialValues[this.attributeKey];
                  },
                },
                {
                  kind: "method",
                  key: "_onGetContextOnce",
                  value: function () {
                    try {
                      if (!0 === this.context.fragment) return;
                      this.gotContext ||
                        (this.onGetContext(), (this.gotContext = !0));
                    } catch (e) {
                      console.log(e), console.log(this.mcid);
                    }
                  },
                },
                {
                  kind: "method",
                  key: "onGetContext",
                  value: function () {
                    ie.info(
                      'Overwritte the "onGetContext" method with the code you want to get executed',
                      "info"
                    );
                  },
                },
                { kind: "method", key: "lastWish", value: function () {} },
                {
                  kind: "method",
                  key: "onInitialise",
                  value: function () {
                    ie.info(
                      'Overwritte the "onInialise" method with the code you want to get executed',
                      "info"
                    );
                  },
                },
                {
                  kind: "method",
                  key: "onProgress",
                  value: function (e, t) {},
                },
                {
                  kind: "method",
                  decorators: [ge],
                  key: "setBlock",
                  value: function () {},
                },
                {
                  kind: "method",
                  decorators: [ve],
                  key: "unblock",
                  value: function () {},
                },
              ],
            };
          }),
          Re = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r, i) {
              var a;
              return (
                u(this, n),
                ((a = t.call(this, e, r, i)).runTimeInfo = {
                  currentMillisecond: 0,
                }),
                a
              );
            }
            return (
              l(n, [
                {
                  key: "lastWish",
                  value: function () {
                    this.ownClip && this.ownClip.ownContext.unmount();
                  },
                },
                {
                  key: "onGetContext",
                  value: function () {
                    var e = this,
                      t = this.DescriptiveIncident.realClip.exportConstructionArguments(),
                      n = ie.getElementByMCID(this.context, this.mcid),
                      r = h(
                        h({}, t.props),
                        {},
                        {
                          selector: void 0,
                          host: n,
                          containerParams:
                            this.DescriptiveIncident.props.containerParams ||
                            {},
                          originalDims:
                            this.DescriptiveIncident.constructor.originalDims ||
                            {},
                        }
                      );
                    (this.ownClip = new this.DescriptiveIncident.constructor.Incident(
                      t.attrs,
                      r
                    )),
                      (this.ownClip.DescriptiveIncident = this.DescriptiveIncident),
                      this.DescriptiveIncident.realClip.addContext(
                        {
                          clipId: this.id,
                          context: this.ownClip.ownContext,
                          unblock: function () {
                            return e.unblock();
                          },
                        },
                        !0
                      );
                  },
                },
                {
                  key: "onProgress",
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 &&
                      void 0 !== arguments[2] &&
                      arguments[2];
                    if (
                      !1 !==
                      this.DescriptiveIncident.realClip.context.contextLoaded
                    ) {
                      for (var r in this.DescriptiveIncident.realClip
                        .instantiatedChannels) {
                        var i = this.DescriptiveIncident.realClip
                          .instantiatedChannels[r];
                        i.moveTo(
                          this.runTimeInfo.currentMillisecond,
                          t,
                          this.id,
                          n
                        );
                      }
                      (this.runTimeInfo.currentMillisecond = t),
                        this.ownClip.onAfterProgress(e, t);
                    } else this.setBlock();
                  },
                },
                {
                  key: "duration",
                  get: function () {
                    return this.DescriptiveIncident.realClip.duration;
                  },
                  set: function (e) {
                    this.DescriptiveIncident.realClip._resize(
                      e / this.realClip.duration
                    );
                  },
                },
              ]),
              n
            );
          })(je);
        function Le(e) {
          var t = new e.Incident(
            e.attrs,
            h(h({}, e.props), {}, { id: e.id || Q() }),
            { context: e.context, mcid: e.mcid }
          );
          return (
            (t.mc_plugin_npm_name = e.plugin_npm_name),
            (t.plugin_channel_class = e.Channel),
            (t.DescriptiveIncident = e.DescriptiveIncident),
            t
          );
        }
        var ze = {
            linear: function (e) {
              return e;
            },
            easeInQuad: function (e) {
              return e * e;
            },
            easeOutQuad: function (e) {
              return e * (2 - e);
            },
            easeInOutQuad: function (e) {
              return e < 0.5 ? 2 * e * e : (4 - 2 * e) * e - 1;
            },
            easeInCubic: function (e) {
              return e * e * e;
            },
            easeOutCubic: function (e) {
              return --e * e * e + 1;
            },
            easeInOutCubic: function (e) {
              return e < 0.5
                ? 4 * e * e * e
                : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1;
            },
            easeInQuart: function (e) {
              return e * e * e * e;
            },
            easeOutQuart: function (e) {
              return 1 - --e * e * e * e;
            },
            easeInOutQuart: function (e) {
              return e < 0.5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e;
            },
            easeInQuint: function (e) {
              return e * e * e * e * e;
            },
            easeOutQuint: function (e) {
              return 1 + --e * e * e * e * e;
            },
            easeInOutQuint: function (e) {
              return e < 0.5
                ? 16 * e * e * e * e * e
                : 1 + 16 * --e * e * e * e * e;
            },
            easeInSine: function (e) {
              return -1 * Math.cos((e / 1) * (Math.PI / 2)) + 1;
            },
            easeOutSine: function (e) {
              return 1 * Math.sin((e / 1) * (Math.PI / 2));
            },
            easeInOutSine: function (e) {
              return -0.5 * (Math.cos((Math.PI * e) / 1) - 1);
            },
            easeInExpo: function (e) {
              return 0 == e ? 1 : 1 * Math.pow(2, 10 * (e / 1 - 1));
            },
            easeOutExpo: function (e) {
              return 1 == e ? 1 : 1 * (1 - Math.pow(2, (-10 * e) / 1));
            },
            easeInOutExpo: function (e) {
              return 0 == e
                ? 0
                : 1 == e
                ? 1
                : (e /= 0.5) < 1
                ? 0.5 * Math.pow(2, 10 * (e - 1))
                : 0.5 * (2 - Math.pow(2, -10 * --e));
            },
            easeInCirc: function (e) {
              return e >= 1 ? e : -1 * (Math.sqrt(1 - (e /= 1) * e) - 1);
            },
            easeOutCirc: function (e) {
              return 1 * Math.sqrt(1 - (e = e / 1 - 1) * e);
            },
            easeInOutCirc: function (e) {
              return (e /= 0.5) < 1
                ? -0.5 * (Math.sqrt(1 - e * e) - 1)
                : 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1);
            },
            easeInElastic: function (e) {
              var t = 1.70158,
                n = 0,
                r = 1;
              return 0 == e
                ? 0
                : 1 == (e /= 1)
                ? 1
                : (n || (n = 0.3),
                  r < Math.abs(1)
                    ? ((r = 1), (t = n / 4))
                    : (t = (n / (2 * Math.PI)) * Math.asin(1 / r)),
                  -r *
                    Math.pow(2, 10 * (e -= 1)) *
                    Math.sin(((1 * e - t) * (2 * Math.PI)) / n));
            },
            easeOutElastic: function (e) {
              var t = 1.70158,
                n = 0,
                r = 1;
              return 0 == e
                ? 0
                : 1 == (e /= 1)
                ? 1
                : (n || (n = 0.3),
                  r < Math.abs(1)
                    ? ((r = 1), (t = n / 4))
                    : (t = (n / (2 * Math.PI)) * Math.asin(1 / r)),
                  r *
                    Math.pow(2, -10 * e) *
                    Math.sin(((1 * e - t) * (2 * Math.PI)) / n) +
                    1);
            },
            easeInOutElastic: function (e) {
              var t = 1.70158,
                n = 0,
                r = 1;
              return 0 == e
                ? 0
                : 2 == (e /= 0.5)
                ? 1
                : (n || (n = 0.3 * 1.5 * 1),
                  r < Math.abs(1)
                    ? ((r = 1), (t = n / 4))
                    : (t = (n / (2 * Math.PI)) * Math.asin(1 / r)),
                  e < 1
                    ? r *
                      Math.pow(2, 10 * (e -= 1)) *
                      Math.sin(((1 * e - t) * (2 * Math.PI)) / n) *
                      -0.5
                    : r *
                        Math.pow(2, -10 * (e -= 1)) *
                        Math.sin(((1 * e - t) * (2 * Math.PI)) / n) *
                        0.5 +
                      1);
            },
            easeInBack: function (e) {
              var t = 1.70158;
              return 1 * (e /= 1) * e * ((t + 1) * e - t);
            },
            easeOutBack: function (e) {
              var t = 1.70158;
              return 1 * ((e = e / 1 - 1) * e * ((t + 1) * e + t) + 1);
            },
            easeInOutBack: function (e) {
              var t = 1.70158;
              return (e /= 0.5) < 1
                ? e * e * ((1 + (t *= 1.525)) * e - t) * 0.5
                : 0.5 * ((e -= 2) * e * ((1 + (t *= 1.525)) * e + t) + 2);
            },
            easeInBounce: function (e) {
              return 1 - ze.easeOutBounce(1 - e);
            },
            easeOutBounce: function (e) {
              return (e /= 1) < 1 / 2.75
                ? 7.5625 * e * e * 1
                : e < 2 / 2.75
                ? 1 * (7.5625 * (e -= 1.5 / 2.75) * e + 0.75)
                : e < 2.5 / 2.75
                ? 1 * (7.5625 * (e -= 2.25 / 2.75) * e + 0.9375)
                : 1 * (7.5625 * (e -= 2.625 / 2.75) * e + 0.984375);
            },
            easeInOutBounce: function (e) {
              return e < 0.5
                ? 0.5 * ze.easeInBounce(2 * e)
                : 0.5 * ze.easeOutBounce(2 * e - 1) + 0.5;
            },
          },
          qe = T(
            null,
            function (e, t) {
              return {
                F: (function (t) {
                  d(r, t);
                  var n = v(r);
                  function r(t, i, a, o) {
                    var s;
                    return (
                      u(this, r),
                      (s = n.call(this, {
                        id: "".concat(t.incidentId, "_").concat(a),
                      })),
                      e(g(s)),
                      (s.contexts = {}),
                      (s.constructionIngredients = t),
                      (s.mcid = a),
                      (s._duration = o.realClip.duration),
                      (s.DescriptiveIncident = o),
                      (s.mc_plugin_npm_name = t.plugin_npm_name),
                      (s.plugin_channel_class = t.Channel),
                      s.addContext(i),
                      o.realClip.subscribeToDurationChange(function (e) {
                        (s._duration = e),
                          s.putMessageOnPipe("recalcDuration", {}, "Groups", {
                            selfExecute: !0,
                            direction: ue,
                          });
                      }),
                      (s.easing = ze.linear),
                      Object.prototype.hasOwnProperty.call(
                        s.DescriptiveIncident.props,
                        "easing"
                      ) &&
                        (Array.isArray(s.DescriptiveIncident.props.easing)
                          ? (s.easing = Be(
                              s.DescriptiveIncident.props.easing[0],
                              s.DescriptiveIncident.props.easing[1],
                              s.DescriptiveIncident.props.easing[2],
                              s.DescriptiveIncident.props.easing[3]
                            ))
                          : (s.easing =
                              ze[s.DescriptiveIncident.props.easing])),
                      s
                    );
                  }
                  return r;
                })(t),
                d: [
                  {
                    kind: "get",
                    key: "originalContext",
                    value: function () {
                      return this.contexts[this.originalContextKey];
                    },
                  },
                  {
                    kind: "get",
                    key: "duration",
                    value: function () {
                      return this._duration;
                    },
                  },
                  {
                    kind: "method",
                    key: "onProgress",
                    value: function (e, t, n) {
                      var r =
                          arguments.length > 3 &&
                          void 0 !== arguments[3] &&
                          arguments[3],
                        i = this.easing(e) || 0,
                        a = i * this.duration;
                      !1 !== this.originalContext.context.contextLoaded &&
                        this.contexts[n].onProgress(i, a, r);
                    },
                  },
                  {
                    kind: "method",
                    key: "addContext",
                    value: function (e) {
                      var t =
                        arguments.length > 1 &&
                        void 0 !== arguments[1] &&
                        arguments[1];
                      0 === Object.keys(this.contexts).length &&
                        (this.originalContextKey = e.clipId);
                      var n = h(
                        h({}, this.constructionIngredients),
                        {},
                        {
                          context: e.context,
                          mcid: this.mcid,
                          Incident: Re,
                          DescriptiveIncident: this.DescriptiveIncident,
                        }
                      );
                      (this.contexts[e.clipId] = Le(n)),
                        t && this.contexts[e.clipId]._onGetContextOnce();
                    },
                  },
                  {
                    kind: "method",
                    key: "handleAddContext",
                    value: function (e, t) {
                      return this.addContext(t, !0), !0;
                    },
                  },
                  {
                    kind: "method",
                    key: "handleContextLoaded",
                    value: function (e, t) {
                      this._onGetContextOnce();
                    },
                  },
                  {
                    kind: "method",
                    decorators: [De],
                    key: "getIncidentsByChannel",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    key: "gotContext",
                    value: function () {
                      for (var e in this.contexts)
                        this.contexts[e].gotContext();
                    },
                  },
                  {
                    kind: "method",
                    key: "_onGetContextOnce",
                    value: function () {
                      if (!1 !== this.originalContext.contextLoaded)
                        for (var e in this.contexts)
                          this.contexts[e]._onGetContextOnce();
                    },
                  },
                  {
                    kind: "method",
                    key: "lastWish",
                    value: function () {
                      for (var e in this.contexts) this.contexts[e].lastWish();
                    },
                  },
                  {
                    kind: "method",
                    key: "onGetContext",
                    value: function () {
                      if (!1 !== this.originalContext.contextLoaded)
                        for (var e in this.contexts)
                          this.contexts[e].onGetContext();
                    },
                  },
                ],
              };
            },
            fe
          ),
          Fe = T(
            null,
            function (e, t) {
              var n = (function (t) {
                d(r, t);
                var n = v(r);
                function r(t, i, a, o) {
                  var c;
                  return (
                    u(this, r),
                    (c = n.call(
                      this,
                      h(
                        h({}, t.props),
                        {},
                        {
                          id:
                            null !== o
                              ? ""
                                  .concat(t.incidentId, "_")
                                  .concat(a, "_")
                                  .concat(o)
                              : "".concat(t.incidentId, "_").concat(a),
                        }
                      )
                    )),
                    e(g(c)),
                    (c.contexts = {}),
                    (c.constructionIngredients = t),
                    (c.mcid = a),
                    (c.attribute = o),
                    (c.mc_plugin_npm_name = t.plugin_npm_name),
                    (c.plugin_channel_class = t.Channel),
                    (c.DescriptiveIncident = t.DescriptiveIncident),
                    c.addContext(i),
                    null !== o &&
                      ("object" ===
                      s(
                        c.constructionIngredients.attrs.animatedAttrs[
                          c.attribute
                        ]
                      )
                        ? (c.originalAnimatedAttributeValue = h(
                            {},
                            c.constructionIngredients.attrs.animatedAttrs[
                              c.attribute
                            ]
                          ))
                        : (c.originalAnimatedAttributeValue =
                            c.constructionIngredients.attrs.animatedAttrs[
                              c.attribute
                            ])),
                    (c.easing = ze.linear),
                    Object.prototype.hasOwnProperty.call(c.props, "easing") &&
                      (Array.isArray(c.props.easing)
                        ? (c.easing = Be(
                            c.props.easing[0],
                            c.props.easing[1],
                            c.props.easing[2],
                            c.props.easing[3]
                          ))
                        : (c.easing = ze[c.props.easing])),
                    c
                  );
                }
                return r;
              })(t);
              return {
                F: n,
                d: [
                  {
                    kind: "get",
                    key: "originalContext",
                    value: function () {
                      return this.contexts[this.originalContextKey];
                    },
                  },
                  {
                    kind: "get",
                    key: "duration",
                    value: function () {
                      return x(m(n.prototype), "duration", this);
                    },
                  },
                  {
                    kind: "set",
                    key: "duration",
                    value: function (e) {
                      for (var t in (N(m(n.prototype), "duration", e, this, !0),
                      this.contexts))
                        this.contexts[t].duration = e;
                    },
                  },
                  {
                    kind: "method",
                    key: "addContext",
                    value: function (e) {
                      var t =
                          arguments.length > 1 &&
                          void 0 !== arguments[1] &&
                          arguments[1],
                        n = !1;
                      0 === Object.keys(this.contexts).length &&
                        ((this.originalContextKey = e.clipId),
                        (this.originalClipContext = e.context),
                        (n = !0));
                      var r = h(
                        h({}, this.constructionIngredients),
                        {},
                        { context: e.context, mcid: this.mcid }
                      );
                      console.log(r);
                      var i = Le(r);
                      (this.contexts[e.clipId] = i),
                        n ||
                          null === this.attribute ||
                          this.contexts[e.clipId].setInitialValue(
                            this.getInitialValue()
                          ),
                        t && this.contexts[e.clipId]._onGetContextOnce();
                    },
                  },
                  {
                    kind: "method",
                    key: "handleAddContext",
                    value: function (e, t) {
                      return this.addContext(t, !0), !0;
                    },
                  },
                  {
                    kind: "method",
                    key: "handleContextLoaded",
                    value: function (e, t) {
                      return this._onGetContextOnce(), !0;
                    },
                  },
                  {
                    kind: "method",
                    decorators: [De],
                    key: "getIncidentsByChannel",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    key: "onProgress",
                    value: function (e, t, n) {
                      var r =
                        t % (this.delay + this.props.duration + this.hiatus);
                      0 !== t &&
                        0 === r &&
                        (r = this.delay + this.props.duration);
                      var i = r - this.delay;
                      i < 0
                        ? (i = 0)
                        : i > this.props.duration && (i = this.props.duration);
                      var a = i / this.props.duration,
                        o = this.easing(a),
                        s = o * this.props.duration;
                      if (void 0 !== n)
                        !1 !== this.originalContext.context.contextLoaded &&
                          this.contexts[n].onProgress(o, s);
                      else
                        for (var u in this.contexts)
                          (this.originalContextKey === u &&
                            !0 === this.originalContext.fragment) ||
                            this.contexts[u].onProgress(o, s);
                    },
                  },
                  {
                    kind: "get",
                    key: "animatedAttributeValue",
                    value: function () {
                      return this.constructionIngredients.attrs.animatedAttrs[
                        this.attribute
                      ];
                    },
                  },
                  {
                    kind: "set",
                    key: "animatedAttributeValue",
                    value: function (e) {
                      this.constructionIngredients.attrs.animatedAttrs[
                        this.attribute
                      ] = e;
                    },
                  },
                  {
                    kind: "method",
                    key: "gotContext",
                    value: function () {
                      for (var e in this.contexts)
                        this.contexts[e].gotContext();
                    },
                  },
                  {
                    kind: "method",
                    key: "_onGetContextOnce",
                    value: function () {
                      if (!1 !== this.originalContext.context.contextLoaded)
                        for (var e in this.contexts)
                          this.contexts[e]._onGetContextOnce();
                    },
                  },
                  {
                    kind: "method",
                    key: "lastWish",
                    value: function () {
                      for (var e in this.contexts) this.contexts[e].lastWish();
                    },
                  },
                  {
                    kind: "method",
                    key: "onGetContext",
                    value: function () {
                      if (!1 !== this.originalContext.contextLoaded)
                        for (var e in this.contexts)
                          this.contexts[e].onGetContext();
                    },
                  },
                  {
                    kind: "method",
                    key: "getInitialValue",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : null;
                      return (
                        null === e && (e = this.attribute),
                        this.originalContext.getInitialValue()
                      );
                    },
                  },
                  {
                    kind: "get",
                    key: "initialValue",
                    value: function () {
                      return this.getInitialValue();
                    },
                  },
                  {
                    kind: "get",
                    key: "scratchValue",
                    value: function () {
                      return this.originalContext.scratchValue;
                    },
                  },
                  {
                    kind: "get",
                    key: "pureInitialValues",
                    value: function () {
                      return this.originalContext.pureInitialValues;
                    },
                  },
                  {
                    kind: "method",
                    key: "setInitialValue",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : null,
                        t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1];
                      for (var n in (null === e && (e = this.getScratchValue()),
                      this.contexts))
                        this.contexts[n].setInitialValue(
                          JSON.parse(JSON.stringify(e)),
                          t
                        );
                    },
                  },
                  {
                    kind: "method",
                    key: "getScratchValue",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : null;
                      if (!1 === this.originalContext.context.contextLoaded)
                        return 0;
                      if (null === e) {
                        var t = Object.keys(this.contexts);
                        if (
                          Object.prototype.hasOwnProperty.call(
                            this.originalClipContext,
                            "nonFragmentedContext"
                          )
                        ) {
                          var n = h(
                              h({}, this.constructionIngredients),
                              {},
                              {
                                context: this.originalClipContext
                                  .nonFragmentedContext,
                                mcid: this.mcid,
                              }
                            ),
                            r = Le(n);
                          return r.getScratchValue();
                        }
                        return 1 === t.length
                          ? this.originalContext.getScratchValue()
                          : this.contexts[t[1]].getScratchValue();
                      }
                      return this.contexts[e].getScratchValue();
                    },
                  },
                  {
                    kind: "method",
                    key: "setCompoAttrKeyValue",
                    value: function (e, t) {
                      for (var n in this.contexts)
                        (this.contexts[n].attrs.animatedAttrs[this.attribute][
                          e
                        ] = t),
                          this.contexts[n].lastWish(),
                          this.contexts[n].onGetContext();
                    },
                  },
                  {
                    kind: "method",
                    key: "play",
                    value: function (e, t, n) {
                      return this.contexts[n].play(t);
                    },
                  },
                  {
                    kind: "method",
                    key: "stop",
                    value: function (e) {
                      this.contexts[e].stop();
                    },
                  },
                ],
              };
            },
            fe
          ),
          Ue = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r, i, a) {
              var o,
                s =
                  arguments.length > 4 && void 0 !== arguments[4]
                    ? arguments[4]
                    : null;
              return (
                u(this, n),
                ((o = t.call(
                  this,
                  {},
                  { id: "".concat(e.id, "_").concat(i) }
                )).mcid = i),
                (o.selector = a),
                (o.dynamicValues = null !== s ? s : { attrs: [], props: [] }),
                o.setUp(e, r),
                o
              );
            }
            return (
              l(n, [
                {
                  key: "setUp",
                  value: function (e, t) {
                    var n = e.attrs,
                      r = e.props;
                    if (this.dynamicValues.attrs.length > 0) {
                      n = JSON.parse(JSON.stringify(e.attrs));
                      for (var i = 0; i < this.dynamicValues.attrs.length; i++)
                        ne(
                          n,
                          this.dynamicValues.attrs[i].path,
                          this.dynamicValues.attrs[i].value
                        );
                    }
                    if (this.dynamicValues.props.length > 0) {
                      r = JSON.parse(JSON.stringify(e.props));
                      for (var a = 0; a < this.dynamicValues.props.length; a++)
                        ne(
                          r,
                          this.dynamicValues.props[a].path,
                          this.dynamicValues.props[a].value
                        );
                    }
                    for (var o in n.animatedAttrs) {
                      var s = {};
                      s[o] = n.animatedAttrs[o];
                      var u = h(h({}, n), {}, { animatedAttrs: s }),
                        c = h(h({}, r), {}, { selector: this.selector }),
                        l = {
                          incidentId: e.id,
                          attrs: u,
                          props: c,
                          Incident: e.constructor.Incident,
                          plugin_npm_name: e.constructor.plugin_npm_name,
                          Channel: e.constructor.Channel,
                          DescriptiveIncident: e,
                        },
                        f = new Fe(l, t, this.mcid, o);
                      this.addChild(f, 0);
                    }
                  },
                },
              ]),
              n
            );
          })(be);
        function Ve(e, t) {
          for (var n = [], r = 0; r < e.length; r++)
            n.push({ path: e[r].path, value: e[r].values[t] });
          return n;
        }
        function $e(e, t) {
          for (var n = [], r = 0; r < e.length; r++)
            n.push({ path: e[r].path, value: e[r].values[t] });
          return n;
        }
        var He = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r) {
              var i;
              return (
                u(this, n),
                ((i = t.call(this, {}, { id: e.id })).contexts = {}),
                (i.contexts[r.clipId] = r.context),
                (i.originalContextKey = r.clipId),
                (i.instantiatedCopiesContexts = r.instantiatedCopiesContexts),
                (i.descriptiveIncident = e),
                (i.staggerAttrs = []),
                (i.staggerProps = []),
                i.setUp(e, r),
                i
              );
            }
            return (
              l(n, [
                {
                  key: "parsePropsDynamicValues",
                  value: function (e, t) {
                    for (var n = 0; n < e.propsStaggers.length; n++)
                      this.staggerProps.push({
                        path: e.propsStaggers[n].path,
                        values: e.propsStaggers[n].stagger.calculateValues(t),
                      });
                  },
                },
                {
                  key: "parseAttrsDynamicValues",
                  value: function (e, t) {
                    for (var n = 0; n < e.attributesStaggers.length; n++)
                      this.staggerAttrs.push({
                        path: e.attributesStaggers[n].path,
                        values: e.attributesStaggers[n].stagger.calculateValues(
                          t
                        ),
                      });
                  },
                },
                {
                  key: "setUp",
                  value: function (e, t) {
                    var n,
                      r,
                      i = this.originalContext.getElements(e.selector());
                    this.parsePropsDynamicValues(e, i),
                      this.parseAttrsDynamicValues(e, i);
                    for (var a = 0; a < i.length; a++) {
                      for (var o in ((n = i[a]),
                      (r = this._getElementMCID(n)),
                      this.instantiatedCopiesContexts))
                        this._setElementMCID(
                          this.instantiatedCopiesContexts[o],
                          this.instantiatedCopiesContexts[o].getElements(
                            e.selector()
                          )[a],
                          r
                        );
                      this._createElementIncident(n, e, t, a, i.length, r);
                    }
                  },
                },
                {
                  key: "handleRecalcDuration",
                  value: function (e, t) {
                    var r = x(
                      m(n.prototype),
                      "handleRecalcDuration",
                      this
                    ).call(this, e, t);
                    return (
                      this.descriptiveIncident.propsStaggers.length > 0 &&
                        (this.descriptiveIncident.dynamicDurationValue =
                          1 * this.duration),
                      r
                    );
                  },
                },
                {
                  key: "lastWish",
                  value: function () {
                    this.descriptiveIncident.propsStaggers.length > 0 &&
                      ((this.descriptiveIncident.dynamicDurationValue = null),
                      this.descriptiveIncident.putMessageOnPipe(
                        "setDurationDynamic",
                        {},
                        "Groups",
                        { selfExecute: !1, direction: ue }
                      )),
                      x(m(n.prototype), "lastWish", this).call(this);
                  },
                },
                {
                  key: "_getElementMCID",
                  value: function (e) {
                    var t = this.originalContext.getMCID(e);
                    return (
                      t || ((t = Q(!0)), this.originalContext.setMCID(e, t)), t
                    );
                  },
                },
                {
                  key: "_setElementMCID",
                  value: function (e, t, n) {
                    e.getMCID(t) || e.setMCID(t, n);
                  },
                },
                {
                  key: "_createElementIncident",
                  value: function (e, t, n, r, i, a) {
                    if (
                      Object.prototype.hasOwnProperty.call(
                        t.attrs,
                        "animatedAttrs"
                      )
                    ) {
                      var o = new Ue(
                        t,
                        n,
                        a,
                        n.context.getElementSelectorByMCID(a),
                        {
                          attrs: Ve(this.staggerAttrs, r),
                          props: $e(this.staggerProps, r),
                        }
                      );
                      this.addChild(o, 0);
                    } else {
                      var s = t.attrs,
                        u = h({}, t.props),
                        c = {
                          incidentId: t.id,
                          attrs: s,
                          props: u,
                          Incident: t.constructor.Incident,
                          plugin_npm_name: t.constructor.plugin_npm_name,
                          Channel: t.constructor.Channel,
                          DescriptiveIncident: t,
                        },
                        l = new Fe(c, n, a, null);
                      this.addChild(l, 0);
                    }
                  },
                },
                {
                  key: "originalContext",
                  get: function () {
                    return this.contexts[this.originalContextKey];
                  },
                },
              ]),
              n
            );
          })(be),
          We = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r) {
              var i;
              return (
                u(this, n), ((i = t.call(this, e, r)).realClip = e.realClip), i
              );
            }
            return (
              l(n, [
                {
                  key: "_createElementIncident",
                  value: function (e, t, n, r, i, a) {
                    var o = t.realClip.exportConstructionArguments(),
                      s = {
                        incidentId: t.id,
                        attrs: o.attrs,
                        props: h(
                          h({}, o.props),
                          {},
                          {
                            selector: n.context.getElementSelectorByMCID(a),
                            runTimeInfo: t.runTimeInfo,
                          }
                        ),
                        Incident: t.constructor.Incident,
                        plugin_npm_name: t.constructor.plugin_npm_name,
                        Channel: _e,
                        DescriptiveIncident: t,
                      },
                      u = new qe(s, n, a, t);
                    this.addChild(u, 0);
                  },
                },
                {
                  key: "duration",
                  get: function () {
                    return x(m(n.prototype), "duration", this);
                  },
                  set: function (e) {
                    this.realClip._resize(e / this.realClip.duration),
                      (this._duration = e);
                  },
                },
              ]),
              n
            );
          })(He),
          Ge = function (e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : q,
              i =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : window;
            Object.prototype.hasOwnProperty.call(i, r) || (i[r] = {});
            for (var a = i[r], o = e.split("."), s = 0; s < o.length - 1; s++)
              Object.prototype.hasOwnProperty.call(a, o[s]) || (a[o[s]] = {}),
                (a = a[o[s]]);
            return !(
              (Object.prototype.hasOwnProperty.call(a, o[o.length - 1]) &&
                !1 === n) ||
              ((a[o[o.length - 1]] = t), 0)
            );
          };
        function Je(e) {
          return (
            "object" == typeof e &&
            !Array.isArray(e) &&
            null != e &&
            Object.keys(e).length > 0
          );
        }
        var Ye = function e(t, n, r = {}) {
            for (let i in n)
              if (Je(n[i])) (t[i] = t[i] || {}), e(t[i], n[i], r);
              else {
                if (!0 === r.skipIfExist && void 0 !== t[i]) continue;
                t[i] = n[i];
              }
            return t;
          },
          Ze = {
            required: "The '{field}' field is required.",
            string: "The '{field}' field must be a string.",
            stringEmpty: "The '{field}' field must not be empty.",
            stringMin:
              "The '{field}' field length must be greater than or equal to {expected} characters long.",
            stringMax:
              "The '{field}' field length must be less than or equal to {expected} characters long.",
            stringLength:
              "The '{field}' field length must be {expected} characters long.",
            stringPattern:
              "The '{field}' field fails to match the required pattern.",
            stringContains:
              "The '{field}' field must contain the '{expected}' text.",
            stringEnum:
              "The '{field}' field does not match any of the allowed values.",
            stringNumeric: "The '{field}' field must be a numeric string.",
            stringAlpha: "The '{field}' field must be an alphabetic string.",
            stringAlphanum:
              "The '{field}' field must be an alphanumeric string.",
            stringAlphadash: "The '{field}' field must be an alphadash string.",
            stringHex: "The '{field}' field must be a hex string.",
            stringSingleLine:
              "The '{field}' field must be a single line string.",
            number: "The '{field}' field must be a number.",
            numberMin:
              "The '{field}' field must be greater than or equal to {expected}.",
            numberMax:
              "The '{field}' field must be less than or equal to {expected}.",
            numberEqual: "The '{field}' field must be equal to {expected}.",
            numberNotEqual: "The '{field}' field can't be equal to {expected}.",
            numberInteger: "The '{field}' field must be an integer.",
            numberPositive: "The '{field}' field must be a positive number.",
            numberNegative: "The '{field}' field must be a negative number.",
            array: "The '{field}' field must be an array.",
            arrayEmpty: "The '{field}' field must not be an empty array.",
            arrayMin:
              "The '{field}' field must contain at least {expected} items.",
            arrayMax:
              "The '{field}' field must contain less than or equal to {expected} items.",
            arrayLength: "The '{field}' field must contain {expected} items.",
            arrayContains:
              "The '{field}' field must contain the '{expected}' item.",
            arrayUnique:
              "The '{actual}' value in '{field}' field does not unique the '{expected}' values.",
            arrayEnum:
              "The '{actual}' value in '{field}' field does not match any of the '{expected}' values.",
            tuple: "The '{field}' field must be an array.",
            tupleEmpty: "The '{field}' field must not be an empty array.",
            tupleLength: "The '{field}' field must contain {expected} items.",
            boolean: "The '{field}' field must be a boolean.",
            currency: "The '{field}' must be a valid currency format",
            date: "The '{field}' field must be a Date.",
            dateMin:
              "The '{field}' field must be greater than or equal to {expected}.",
            dateMax:
              "The '{field}' field must be less than or equal to {expected}.",
            enumValue:
              "The '{field}' field value '{expected}' does not match any of the allowed values.",
            equalValue:
              "The '{field}' field value must be equal to '{expected}'.",
            equalField:
              "The '{field}' field value must be equal to '{expected}' field value.",
            forbidden: "The '{field}' field is forbidden.",
            function: "The '{field}' field must be a function.",
            email: "The '{field}' field must be a valid e-mail.",
            emailEmpty: "The '{field}' field must not be empty.",
            luhn: "The '{field}' field must be a valid checksum luhn.",
            mac: "The '{field}' field must be a valid MAC address.",
            object: "The '{field}' must be an Object.",
            objectStrict:
              "The object '{field}' contains forbidden keys: '{actual}'.",
            objectMinProps:
              "The object '{field}' must contain at least {expected} properties.",
            objectMaxProps:
              "The object '{field}' must contain {expected} properties at most.",
            url: "The '{field}' field must be a valid URL.",
            urlEmpty: "The '{field}' field must not be empty.",
            uuid: "The '{field}' field must be a valid UUID.",
            uuidVersion:
              "The '{field}' field must be a valid UUID version provided.",
            classInstanceOf:
              "The '{field}' field must be an instance of the '{expected}' class.",
            objectID: "The '{field}' field must be an valid ObjectID",
          },
          Xe = function () {
            const e = [];
            return e.push("\n\t\treturn value;\n\t"), { source: e.join("\n") };
          },
          Ke = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            if (
              (i.push(
                `\n\t\tif (!Array.isArray(value)) {\n\t\t\t${this.makeError({
                  type: "array",
                  actual: "value",
                  messages: t,
                })}\n\t\t\treturn value;\n\t\t}\n\n\t\tvar len = value.length;\n\t`
              ),
              !1 === e.empty &&
                i.push(
                  `\n\t\t\tif (len === 0) {\n\t\t\t\t${this.makeError({
                    type: "arrayEmpty",
                    actual: "value",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.min &&
                i.push(
                  `\n\t\t\tif (len < ${e.min}) {\n\t\t\t\t${this.makeError({
                    type: "arrayMin",
                    expected: e.min,
                    actual: "len",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.max &&
                i.push(
                  `\n\t\t\tif (len > ${e.max}) {\n\t\t\t\t${this.makeError({
                    type: "arrayMax",
                    expected: e.max,
                    actual: "len",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.length &&
                i.push(
                  `\n\t\t\tif (len !== ${
                    e.length
                  }) {\n\t\t\t\t${this.makeError({
                    type: "arrayLength",
                    expected: e.length,
                    actual: "len",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.contains &&
                i.push(
                  `\n\t\t\tif (value.indexOf(${JSON.stringify(
                    e.contains
                  )}) === -1) {\n\t\t\t\t${this.makeError({
                    type: "arrayContains",
                    expected: JSON.stringify(e.contains),
                    actual: "value",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              !0 === e.unique &&
                i.push(
                  `\n\t\t\tif(len > (new Set(value)).size) {\n\t\t\t\t${this.makeError(
                    {
                      type: "arrayUnique",
                      expected:
                        "Array.from(new Set(value.filter((item, index) => value.indexOf(item) !== index)))",
                      actual: "value",
                      messages: t,
                    }
                  )}\n\t\t\t}\n\t\t`
                ),
              null != e.enum)
            ) {
              const n = JSON.stringify(e.enum);
              i.push(
                `\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tif (${n}.indexOf(value[i]) === -1) {\n\t\t\t\t\t${this.makeError(
                  {
                    type: "arrayEnum",
                    expected: '"' + e.enum.join(", ") + '"',
                    actual: "value[i]",
                    messages: t,
                  }
                )}\n\t\t\t\t}\n\t\t\t}\n\t\t`
              );
            }
            if (null != e.items) {
              i.push(
                "\n\t\t\tvar arr = value;\n\t\t\tvar parentField = field;\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t"
              );
              const t = n + "[]",
                a = this.getRuleFromSchema(e.items),
                o =
                  'arr[i] = context.fn[%%INDEX%%](arr[i], (parentField ? parentField : "") + "[" + i + "]", parent, errors, context)';
              i.push(this.compileRule(a, r, t, o, "arr[i]")),
                i.push("\n\t\t\t}\n\t\t");
            }
            return i.push("\n\t\treturn value;\n\t"), { source: i.join("\n") };
          },
          Qe = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            let a = !1;
            return (
              i.push("\n\t\tvar origValue = value;\n\t"),
              !0 === e.convert &&
                ((a = !0),
                i.push(
                  '\n\t\t\tif (typeof value !== "boolean") {\n\t\t\t\tif (\n\t\t\t\tvalue === 1\n\t\t\t\t|| value === "true"\n\t\t\t\t|| value === "1"\n\t\t\t\t|| value === "on"\n\t\t\t\t) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else if (\n\t\t\t\tvalue === 0\n\t\t\t\t|| value === "false"\n\t\t\t\t|| value === "0"\n\t\t\t\t|| value === "off"\n\t\t\t\t) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t}\n\t\t\t}\n\t\t'
                )),
              i.push(
                `\n\t\tif (typeof value !== "boolean") {\n\t\t\t${this.makeError(
                  { type: "boolean", actual: "origValue", messages: t }
                )}\n\t\t}\n\t\t\n\t\treturn value;\n\t`
              ),
              { sanitized: a, source: i.join("\n") }
            );
          },
          et = function ({ schema: e, messages: t, index: n }, r, i) {
            const a = [],
              o = e.instanceOf.name ? e.instanceOf.name : "<UnknowClass>";
            return (
              i.customs[n]
                ? (i.customs[n].schema = e)
                : (i.customs[n] = { schema: e }),
              a.push(
                `\n\t\tif (!(value instanceof context.customs[${n}].schema.instanceOf))\n\t\t\t${this.makeError(
                  {
                    type: "classInstanceOf",
                    actual: "value",
                    expected: "'" + o + "'",
                    messages: t,
                  }
                )}\n\t`
              ),
              a.push("\n\t\treturn value;\n\t"),
              { source: a.join("\n") }
            );
          },
          tt = function ({ schema: e, messages: t, index: n }, r, i) {
            const a = [];
            return (
              a.push(
                `\n\t\t${this.makeCustomValidator({
                  fnName: "check",
                  path: r,
                  schema: e,
                  messages: t,
                  context: i,
                  ruleIndex: n,
                })}\n\t\treturn value;\n\t`
              ),
              { source: a.join("\n") }
            );
          },
          nt = function ({ schema: e, messages: t }, n, r) {
            const i = e.currencySymbol || null,
              a = e.thousandSeparator || ",",
              o = e.decimalSeparator || ".",
              s = e.customRegex;
            let u = !e.symbolOptional,
              c = "(?=.*\\d)^(-?~1|~1-?)(([0-9]\\d{0,2}(~2\\d{3})*)|0)?(\\~3\\d{1,2})?$"
                .replace(/~1/g, i ? `\\${i}${u ? "" : "?"}` : "")
                .replace("~2", a)
                .replace("~3", o);
            return {
              source: `\n\t\t\tif (!value.match(${
                s || new RegExp(c)
              })){\n\t\t\treturn ${this.makeError({
                type: "currency",
                actual: "value",
                messages: t,
              })}\n\t\t\t}\n\t\t\treturn value;\n\t\t`,
            };
          },
          rt = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            let a = !1;
            return (
              i.push("\n\t\tvar origValue = value;\n\t"),
              !0 === e.convert &&
                ((a = !0),
                i.push(
                  "\n\t\t\tif (!(value instanceof Date)) {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t"
                )),
              i.push(
                `\n\t\tif (!(value instanceof Date) || isNaN(value.getTime()))\n\t\t\t${this.makeError(
                  { type: "date", actual: "origValue", messages: t }
                )}\n\n\t\treturn value;\n\t`
              ),
              { sanitized: a, source: i.join("\n") }
            );
          };
        const it = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
          at = /^\S+@\S+\.\S+$/;
        var ot = function ({ schema: e, messages: t }, n, r) {
            const i = [],
              a = "precise" == e.mode ? it : at;
            let o = !1;
            return (
              i.push(
                `\n\t\tif (typeof value !== "string") {\n\t\t\t${this.makeError(
                  { type: "string", actual: "value", messages: t }
                )}\n\t\t\treturn value;\n\t\t}\n\t`
              ),
              e.empty
                ? i.push("\n\t\t\tif (value.length === 0) return value;\n\t\t")
                : i.push(
                    `\n\t\t\tif (value.length === 0) {\n\t\t\t\treturn ${this.makeError(
                      { type: "emailEmpty", actual: "value", messages: t }
                    )}\n\t\t\t}\n\t\t`
                  ),
              e.normalize &&
                ((o = !0),
                i.push("\n\t\t\tvalue = value.trim().toLowerCase();\n\t\t")),
              i.push(
                `\n\t\tif (!${a.toString()}.test(value)) {\n\t\t\t${this.makeError(
                  { type: "email", actual: "value", messages: t }
                )}\n\t\t}\n\n\t\treturn value;\n\t`
              ),
              { sanitized: o, source: i.join("\n") }
            );
          },
          st = function ({ schema: e, messages: t }, n, r) {
            return {
              source: `\n\t\t\tif (${JSON.stringify(
                e.values || []
              )}.indexOf(value) === -1)\n\t\t\t\t${this.makeError({
                type: "enumValue",
                expected: '"' + e.values.join(", ") + '"',
                actual: "value",
                messages: t,
              })}\n\t\t\t\n\t\t\treturn value;\n\t\t`,
            };
          },
          ut = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            return (
              e.field
                ? (e.strict
                    ? i.push(
                        `\n\t\t\t\tif (value !== parent["${e.field}"])\n\t\t\t`
                      )
                    : i.push(
                        `\n\t\t\t\tif (value != parent["${e.field}"])\n\t\t\t`
                      ),
                  i.push(
                    `\n\t\t\t\t${this.makeError({
                      type: "equalField",
                      actual: "value",
                      expected: JSON.stringify(e.field),
                      messages: t,
                    })}\n\t\t`
                  ))
                : (e.strict
                    ? i.push(
                        `\n\t\t\t\tif (value !== ${JSON.stringify(
                          e.value
                        )})\n\t\t\t`
                      )
                    : i.push(
                        `\n\t\t\t\tif (value != ${JSON.stringify(
                          e.value
                        )})\n\t\t\t`
                      ),
                  i.push(
                    `\n\t\t\t\t${this.makeError({
                      type: "equalValue",
                      actual: "value",
                      expected: JSON.stringify(e.value),
                      messages: t,
                    })}\n\t\t`
                  )),
              i.push("\n\t\treturn value;\n\t"),
              { source: i.join("\n") }
            );
          },
          ct = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            return (
              i.push("\n\t\tif (value !== null && value !== undefined) {\n\t"),
              e.remove
                ? i.push("\n\t\t\treturn undefined;\n\t\t")
                : i.push(
                    `\n\t\t\t${this.makeError({
                      type: "forbidden",
                      actual: "value",
                      messages: t,
                    })}\n\t\t`
                  ),
              i.push("\n\t\t}\n\n\t\treturn value;\n\t"),
              { source: i.join("\n") }
            );
          },
          lt = function ({ schema: e, messages: t }, n, r) {
            return {
              source: `\n\t\t\tif (typeof value !== "function")\n\t\t\t\t${this.makeError(
                { type: "function", actual: "value", messages: t }
              )}\n\n\t\t\treturn value;\n\t\t`,
            };
          },
          ft = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            i.push(
              "\n\t\tvar prevErrLen = errors.length;\n\t\tvar errBefore;\n\t\tvar hasValid = false;\n\t\tvar newVal = value;\n\t"
            );
            for (let t = 0; t < e.rules.length; t++) {
              i.push(
                "\n\t\t\tif (!hasValid) {\n\t\t\t\terrBefore = errors.length;\n\t\t"
              );
              const a = this.getRuleFromSchema(e.rules[t]);
              i.push(
                this.compileRule(
                  a,
                  r,
                  n,
                  "var tmpVal = context.fn[%%INDEX%%](value, field, parent, errors, context);",
                  "tmpVal"
                )
              ),
                i.push(
                  "\n\t\t\t\tif (errors.length == errBefore) {\n\t\t\t\t\thasValid = true;\n\t\t\t\t\tnewVal = tmpVal;\n\t\t\t\t}\n\t\t\t}\n\t\t"
                );
            }
            return (
              i.push(
                "\n\t\tif (hasValid) {\n\t\t\terrors.length = prevErrLen;\n\t\t}\n\t\t\n\t\treturn newVal;\n\t"
              ),
              { source: i.join("\n") }
            );
          },
          pt = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            i.push("\n\t\tvar origValue = value;\n\t");
            let a = !1;
            return (
              !0 === e.convert &&
                ((a = !0),
                i.push(
                  '\n\t\t\tif (typeof value !== "number") {\n\t\t\t\tvalue = Number(value);\n\t\t\t}\n\t\t'
                )),
              i.push(
                `\n\t\tif (typeof value !== "number" || isNaN(value) || !isFinite(value)) {\n\t\t\t${this.makeError(
                  { type: "number", actual: "origValue", messages: t }
                )}\n\t\t\treturn value;\n\t\t}\n\t`
              ),
              null != e.min &&
                i.push(
                  `\n\t\t\tif (value < ${e.min}) {\n\t\t\t\t${this.makeError({
                    type: "numberMin",
                    expected: e.min,
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.max &&
                i.push(
                  `\n\t\t\tif (value > ${e.max}) {\n\t\t\t\t${this.makeError({
                    type: "numberMax",
                    expected: e.max,
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.equal &&
                i.push(
                  `\n\t\t\tif (value !== ${
                    e.equal
                  }) {\n\t\t\t\t${this.makeError({
                    type: "numberEqual",
                    expected: e.equal,
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.notEqual &&
                i.push(
                  `\n\t\t\tif (value === ${
                    e.notEqual
                  }) {\n\t\t\t\t${this.makeError({
                    type: "numberNotEqual",
                    expected: e.notEqual,
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              !0 === e.integer &&
                i.push(
                  `\n\t\t\tif (value % 1 !== 0) {\n\t\t\t\t${this.makeError({
                    type: "numberInteger",
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              !0 === e.positive &&
                i.push(
                  `\n\t\t\tif (value <= 0) {\n\t\t\t\t${this.makeError({
                    type: "numberPositive",
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              !0 === e.negative &&
                i.push(
                  `\n\t\t\tif (value >= 0) {\n\t\t\t\t${this.makeError({
                    type: "numberNegative",
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              i.push("\n\t\treturn value;\n\t"),
              { sanitized: a, source: i.join("\n") }
            );
          };
        const ht = /^[_$a-zA-Z][_$a-zA-Z0-9]*$/,
          dt = /["'\\\n\r\u2028\u2029]/g;
        function mt(e) {
          return e.replace(dt, function (e) {
            switch (e) {
              case '"':
              case "'":
              case "\\":
                return "\\" + e;
              case "\n":
                return "\\n";
              case "\r":
                return "\\r";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
            }
          });
        }
        var gt = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            i.push(
              `\n\t\tif (typeof value !== "object" || value === null || Array.isArray(value)) {\n\t\t\t${this.makeError(
                { type: "object", actual: "value", messages: t }
              )}\n\t\t\treturn value;\n\t\t}\n\t`
            );
            const a = e.properties || e.props;
            if (a) {
              i.push("var parentObj = value;"),
                i.push("var parentField = field;");
              const o = Object.keys(a);
              for (let e = 0; e < o.length; e++) {
                const t = o[e],
                  s = mt(t),
                  u = ht.test(s) ? "." + s : `['${s}']`,
                  c = "parentObj" + u,
                  l = (n ? n + "." : "") + t;
                i.push("\n// Field: " + mt(l)),
                  i.push(
                    `field = parentField ? parentField + "${u}" : "${s}";`
                  ),
                  i.push(`value = ${c};`);
                const f = this.getRuleFromSchema(a[t]),
                  p = `\n\t\t\t\t${c} = context.fn[%%INDEX%%](value, field, parentObj, errors, context);\n\t\t\t`;
                i.push(this.compileRule(f, r, l, p, c));
              }
              if (e.strict) {
                const n = Object.keys(a);
                i.push(
                  `\n\t\t\t\tfield = parentField;\n\t\t\t\tvar invalidProps = [];\n\t\t\t\tvar props = Object.keys(parentObj);\n\n\t\t\t\tfor (let i = 0; i < props.length; i++) {\n\t\t\t\t\tif (${JSON.stringify(
                    n
                  )}.indexOf(props[i]) === -1) {\n\t\t\t\t\t\tinvalidProps.push(props[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (invalidProps.length) {\n\t\t\t`
                ),
                  "remove" == e.strict
                    ? i.push(
                        "\n\t\t\t\t\tinvalidProps.forEach(function(field) {\n\t\t\t\t\t\tdelete parentObj[field];\n\t\t\t\t\t});\n\t\t\t\t"
                      )
                    : i.push(
                        `\n\t\t\t\t\t${this.makeError({
                          type: "objectStrict",
                          expected: '"' + n.join(", ") + '"',
                          actual: "invalidProps.join(', ')",
                          messages: t,
                        })}\n\t\t\t\t`
                      ),
                  i.push("\n\t\t\t\t}\n\t\t\t");
              }
            }
            return (
              (null == e.minProps && null == e.maxProps) ||
                (e.strict
                  ? i.push(
                      `\n\t\t\t\tprops = Object.keys(${
                        a ? "parentObj" : "value"
                      });\n\t\t\t`
                    )
                  : i.push(
                      `\n\t\t\t\tvar props = Object.keys(${
                        a ? "parentObj" : "value"
                      });\n\t\t\t\t${a ? "field = parentField;" : ""}\n\t\t\t`
                    )),
              null != e.minProps &&
                i.push(
                  `\n\t\t\tif (props.length < ${
                    e.minProps
                  }) {\n\t\t\t\t${this.makeError({
                    type: "objectMinProps",
                    expected: e.minProps,
                    actual: "props.length",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.maxProps &&
                i.push(
                  `\n\t\t\tif (props.length > ${
                    e.maxProps
                  }) {\n\t\t\t\t${this.makeError({
                    type: "objectMaxProps",
                    expected: e.maxProps,
                    actual: "props.length",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              a
                ? i.push("\n\t\t\treturn parentObj;\n\t\t")
                : i.push("\n\t\t\treturn value;\n\t\t"),
              { source: i.join("\n") }
            );
          },
          yt = function ({ schema: e, messages: t, index: n }, r, i) {
            const a = [];
            return (
              i.customs[n]
                ? (i.customs[n].schema = e)
                : (i.customs[n] = { schema: e }),
              a.push(
                `\n\t\tconst ObjectID = context.customs[${n}].schema.ObjectID;\n\t\tif (!ObjectID.isValid(value)) {\n\t\t\t${this.makeError(
                  { type: "objectID", actual: "value", messages: t }
                )}\n\t\t\treturn;\n\t\t}\n\t`
              ),
              !0 === e.convert
                ? a.push("return new ObjectID(value)")
                : "hexString" === e.convert
                ? a.push("return value.toString()")
                : a.push("return value"),
              { source: a.join("\n") }
            );
          };
        const vt = /^-?[0-9]\d*(\.\d+)?$/,
          bt = /^[a-zA-Z]+$/,
          xt = /^[a-zA-Z0-9]+$/,
          wt = /^[a-zA-Z0-9_-]+$/,
          Nt = /^[0-9a-fA-F]+$/;
        var Et = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            let a = !1;
            if (
              (!0 === e.convert &&
                ((a = !0),
                i.push(
                  '\n\t\t\tif (typeof value !== "string") {\n\t\t\t\tvalue = String(value);\n\t\t\t}\n\t\t'
                )),
              i.push(
                `\n\t\tif (typeof value !== "string") {\n\t\t\t${this.makeError(
                  { type: "string", actual: "value", messages: t }
                )}\n\t\t\treturn value;\n\t\t}\n\n\t\tvar origValue = value;\n\t`
              ),
              e.trim &&
                ((a = !0), i.push("\n\t\t\tvalue = value.trim();\n\t\t")),
              e.trimLeft &&
                ((a = !0), i.push("\n\t\t\tvalue = value.trimLeft();\n\t\t")),
              e.trimRight &&
                ((a = !0), i.push("\n\t\t\tvalue = value.trimRight();\n\t\t")),
              e.padStart)
            ) {
              a = !0;
              const t = null != e.padChar ? e.padChar : " ";
              i.push(
                `\n\t\t\tvalue = value.padStart(${e.padStart}, ${JSON.stringify(
                  t
                )});\n\t\t`
              );
            }
            if (e.padEnd) {
              a = !0;
              const t = null != e.padChar ? e.padChar : " ";
              i.push(
                `\n\t\t\tvalue = value.padEnd(${e.padEnd}, ${JSON.stringify(
                  t
                )});\n\t\t`
              );
            }
            if (
              (e.lowercase &&
                ((a = !0),
                i.push("\n\t\t\tvalue = value.toLowerCase();\n\t\t")),
              e.uppercase &&
                ((a = !0),
                i.push("\n\t\t\tvalue = value.toUpperCase();\n\t\t")),
              e.localeLowercase &&
                ((a = !0),
                i.push("\n\t\t\tvalue = value.toLocaleLowerCase();\n\t\t")),
              e.localeUppercase &&
                ((a = !0),
                i.push("\n\t\t\tvalue = value.toLocaleUpperCase();\n\t\t")),
              i.push("\n\t\t\tvar len = value.length;\n\t"),
              !1 === e.empty &&
                i.push(
                  `\n\t\t\tif (len === 0) {\n\t\t\t\t${this.makeError({
                    type: "stringEmpty",
                    actual: "value",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.min &&
                i.push(
                  `\n\t\t\tif (len < ${e.min}) {\n\t\t\t\t${this.makeError({
                    type: "stringMin",
                    expected: e.min,
                    actual: "len",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.max &&
                i.push(
                  `\n\t\t\tif (len > ${e.max}) {\n\t\t\t\t${this.makeError({
                    type: "stringMax",
                    expected: e.max,
                    actual: "len",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.length &&
                i.push(
                  `\n\t\t\tif (len !== ${
                    e.length
                  }) {\n\t\t\t\t${this.makeError({
                    type: "stringLength",
                    expected: e.length,
                    actual: "len",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.pattern)
            ) {
              let n = e.pattern;
              "string" == typeof e.pattern &&
                (n = new RegExp(e.pattern, e.patternFlags));
              const r = `\n\t\t\tif (!${n.toString()}.test(value))\n\t\t\t\t${this.makeError(
                {
                  type: "stringPattern",
                  expected: '"' + n.toString().replace('"', '\\"') + '"',
                  actual: "origValue",
                  messages: t,
                }
              )}\n\t\t`;
              i.push(
                `\n\t\t\tif (${e.empty} === true && len === 0) {\n\t\t\t\t// Do nothing\n\t\t\t} else {\n\t\t\t\t${r}\n\t\t\t}\n\t\t`
              );
            }
            if (
              (null != e.contains &&
                i.push(
                  `\n\t\t\tif (value.indexOf("${
                    e.contains
                  }") === -1) {\n\t\t\t\t${this.makeError({
                    type: "stringContains",
                    expected: '"' + e.contains + '"',
                    actual: "origValue",
                    messages: t,
                  })}\n\t\t\t}\n\t\t`
                ),
              null != e.enum)
            ) {
              const n = JSON.stringify(e.enum);
              i.push(
                `\n\t\t\tif (${n}.indexOf(value) === -1) {\n\t\t\t\t${this.makeError(
                  {
                    type: "stringEnum",
                    expected: '"' + e.enum.join(", ") + '"',
                    actual: "origValue",
                    messages: t,
                  }
                )}\n\t\t\t}\n\t\t`
              );
            }
            return (
              !0 === e.numeric &&
                i.push(
                  `\n\t\t\tif (!${vt.toString()}.test(value) ) {\n\t\t\t\t${this.makeError(
                    { type: "stringNumeric", actual: "origValue", messages: t }
                  )}\n\t\t\t}\n\t\t`
                ),
              !0 === e.alpha &&
                i.push(
                  `\n\t\t\tif(!${bt.toString()}.test(value)) {\n\t\t\t\t${this.makeError(
                    { type: "stringAlpha", actual: "origValue", messages: t }
                  )}\n\t\t\t}\n\t\t`
                ),
              !0 === e.alphanum &&
                i.push(
                  `\n\t\t\tif(!${xt.toString()}.test(value)) {\n\t\t\t\t${this.makeError(
                    { type: "stringAlphanum", actual: "origValue", messages: t }
                  )}\n\t\t\t}\n\t\t`
                ),
              !0 === e.alphadash &&
                i.push(
                  `\n\t\t\tif(!${wt.toString()}.test(value)) {\n\t\t\t\t${this.makeError(
                    {
                      type: "stringAlphadash",
                      actual: "origValue",
                      messages: t,
                    }
                  )}\n\t\t\t}\n\t\t`
                ),
              !0 === e.hex &&
                i.push(
                  `\n\t\t\tif(value.length % 2 !== 0 || !${Nt.toString()}.test(value)) {\n\t\t\t\t${this.makeError(
                    { type: "stringHex", actual: "origValue", messages: t }
                  )}\n\t\t\t}\n\t\t`
                ),
              !0 === e.singleLine &&
                i.push(
                  `\n\t\t\tif(value.includes("\\n")) {\n\t\t\t\t${this.makeError(
                    { type: "stringSingleLine", messages: t }
                  )}\n\t\t\t}\n\t\t`
                ),
              i.push("\n\t\treturn value;\n\t"),
              { sanitized: a, source: i.join("\n") }
            );
          },
          Mt = function ({ schema: e, messages: t }, n, r) {
            const i = [];
            if (null != e.items) {
              if (!Array.isArray(e.items))
                throw new Error(
                  `Invalid '${e.type}' schema. The 'items' field must be an array.`
                );
              if (0 === e.items.length)
                throw new Error(
                  `Invalid '${e.type}' schema. The 'items' field must not be an empty array.`
                );
            }
            if (
              (i.push(
                `\n\t\tif (!Array.isArray(value)) {\n\t\t\t${this.makeError({
                  type: "tuple",
                  actual: "value",
                  messages: t,
                })}\n\t\t\treturn value;\n\t\t}\n\n\t\tvar len = value.length;\n\t`
              ),
              !1 === e.empty &&
                i.push(
                  `\n\t\t\tif (len === 0) {\n\t\t\t\t${this.makeError({
                    type: "tupleEmpty",
                    actual: "value",
                    messages: t,
                  })}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t`
                ),
              null != e.items)
            ) {
              i.push(
                `\n\t\t\tif (${
                  e.empty
                } !== false && len === 0) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (len !== ${
                  e.items.length
                }) {\n\t\t\t\t${this.makeError({
                  type: "tupleLength",
                  expected: e.items.length,
                  actual: "len",
                  messages: t,
                })}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t`
              ),
                i.push(
                  "\n\t\t\tvar arr = value;\n\t\t\tvar parentField = field;\n\t\t"
                );
              for (let t = 0; t < e.items.length; t++) {
                const a = `${n}[${t}]`,
                  o = this.getRuleFromSchema(e.items[t]),
                  s = `\n\t\t\tarr[${t}] = context.fn[%%INDEX%%](arr[${t}], (parentField ? parentField : "") + "[" + ${t} + "]", parent, errors, context);\n\t\t`;
                i.push(this.compileRule(o, r, a, s, `arr[${t}]`));
              }
            }
            return i.push("\n\t\treturn value;\n\t"), { source: i.join("\n") };
          };
        const St = /^https?:\/\/\S+/;
        var _t = function ({ schema: e, messages: t }, n, r) {
          const i = [];
          return (
            i.push(
              `\n\t\tif (typeof value !== "string") {\n\t\t\t${this.makeError({
                type: "string",
                actual: "value",
                messages: t,
              })}\n\t\t\treturn value;\n\t\t}\n\t`
            ),
            e.empty
              ? i.push("\n\t\t\tif (value.length === 0) return value;\n\t\t")
              : i.push(
                  `\n\t\t\tif (value.length === 0) {\n\t\t\t\treturn ${this.makeError(
                    { type: "urlEmpty", actual: "value", messages: t }
                  )}\n\t\t\t}\n\t\t`
                ),
            i.push(
              `\n\t\tif (!${St.toString()}.test(value)) {\n\t\t\t${this.makeError(
                { type: "url", actual: "value", messages: t }
              )}\n\t\t}\n\n\t\treturn value;\n\t`
            ),
            { source: i.join("\n") }
          );
        };
        const kt = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-6][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
        var Ot = function ({ schema: e, messages: t }, n) {
          const r = [];
          return (
            r.push(
              `\n\t\tif (typeof value !== "string") {\n\t\t\t${this.makeError({
                type: "string",
                actual: "value",
                messages: t,
              })}\n\t\t\treturn value;\n\t\t}\n\n\t\tvar val = value.toLowerCase();\n\t\tif (!${kt.toString()}.test(val)) {\n\t\t\t${this.makeError(
                { type: "uuid", actual: "value", messages: t }
              )}\n\t\t\treturn value;\n\t\t}\n\n\t\tconst version = val.charAt(14) | 0;\n\t`
            ),
            e.version &&
              r.push(
                `\n\t\t\tif (${
                  e.version
                } !== version) {\n\t\t\t\t${this.makeError({
                  type: "uuidVersion",
                  expected: e.version,
                  actual: "version",
                  messages: t,
                })}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t`
              ),
            r.push(
              `\n\t\tswitch (version) {\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 6:\n\t\t\tbreak;\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 5:\n\t\t\tif (["8", "9", "a", "b"].indexOf(val.charAt(19)) === -1) {\n\t\t\t\t${this.makeError(
                { type: "uuid", actual: "value", messages: t }
              )}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t`
            ),
            { source: r.join("\n") }
          );
        };
        const At = /^((([a-f0-9][a-f0-9]+[-]){5}|([a-f0-9][a-f0-9]+[:]){5})([a-f0-9][a-f0-9])$)|(^([a-f0-9][a-f0-9][a-f0-9][a-f0-9]+[.]){2}([a-f0-9][a-f0-9][a-f0-9][a-f0-9]))$/i;
        var Ct = function ({ schema: e, messages: t }, n, r) {
            return {
              source: `\n\t\t\tif (typeof value !== "string") {\n\t\t\t\t${this.makeError(
                { type: "string", actual: "value", messages: t }
              )}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar v = value.toLowerCase();\n\t\t\tif (!${At.toString()}.test(v)) {\n\t\t\t\t${this.makeError(
                { type: "mac", actual: "value", messages: t }
              )}\n\t\t\t}\n\t\t\t\n\t\t\treturn value;\n\t\t`,
            };
          },
          Tt = function ({ schema: e, messages: t }, n, r) {
            return {
              source: `\n\t\t\tif (typeof value !== "string") {\n\t\t\t\t${this.makeError(
                { type: "string", actual: "value", messages: t }
              )}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (typeof value !== "string")\n\t\t\t\tvalue = String(value);\n\n\t\t\tval = value.replace(/\\D+/g, "");\n\n\t\t\tvar array = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];\n\t\t\tvar len = val ? val.length : 0,\n\t\t\t\tbit = 1,\n\t\t\t\tsum = 0;\n\t\t\twhile (len--) {\n\t\t\t\tsum += !(bit ^= 1) ? parseInt(val[len], 10) : array[val[len]];\n\t\t\t}\n\n\t\t\tif (!(sum % 10 === 0 && sum > 0)) {\n\t\t\t\t${this.makeError(
                { type: "luhn", actual: "value", messages: t }
              )}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t`,
            };
          };
        let It, Pt, Bt, Dt;
        var jt = function (e) {
          It ||
            ((It = Ee()),
            (Pt = {
              parser: "babel",
              useTabs: !1,
              printWidth: 120,
              trailingComma: "none",
              tabWidth: 4,
              singleQuote: !1,
              semi: !0,
              bracketSpacing: !0,
            }),
            (Bt = Ee()),
            (Dt = {
              language: "js",
              theme: Bt.fromJson({
                keyword: ["white", "bold"],
                built_in: "magenta",
                literal: "cyan",
                number: "magenta",
                regexp: "red",
                string: ["yellow", "bold"],
                symbol: "plain",
                class: "blue",
                attr: "plain",
                function: ["white", "bold"],
                title: "plain",
                params: "green",
                comment: "grey",
              }),
            }));
          const t = It.format(e, Pt);
          return Bt.highlight(t, Dt);
        };
        function Rt(e) {
          return (
            (e = e.replace(/ /g, "")),
            !!/^@stagger\(([_A-z0-9.%-]+?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+))\)$/.test(
              e
            )
          );
        }
        var Lt = function (e) {
            var t =
              !(arguments.length > 1 && void 0 !== arguments[1]) ||
              arguments[1];
            if (((e = e.replace(/ /g, "")), t && !Rt(e))) return !1;
            var n = /.*\((.*)\).*/,
              r = n.exec(e)[1],
              i = r.split(",");
            return {
              start: i[0],
              end: i[1],
              startFraction: 1 * i[2] || 0,
              easing: i[3] || "linear",
              mode: i[4] || "linear",
              reverse: "true" === i[5],
            };
          },
          zt = function (e, t, n) {
            var r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : null;
            null === r && (r = "linear");
            var i = ze[r](n);
            return i * (t - e) + e;
          },
          qt = (function () {
            function e(t) {
              u(this, e), (this.staggerProps = t);
            }
            return (
              l(e, [
                {
                  key: "resize",
                  value: function (e) {
                    return (
                      (this.staggerProps.from *= e),
                      (this.staggerProps.to *= e),
                      !0 === this.staggerProps.integer &&
                        ((this.staggerProps.from = Math.round(
                          this.staggerProps.from
                        )),
                        (this.staggerProps.to = Math.round(
                          this.staggerProps.to
                        ))),
                      "@stagger("
                        .concat(this.staggerProps.from)
                        .concat(this.staggerProps.unit, ", ")
                        .concat(this.staggerProps.to)
                        .concat(this.staggerProps.unit, ", ")
                        .concat(this.staggerProps.fraction || 0, ", ")
                        .concat(this.staggerProps.easing || "linear", ", ")
                        .concat(this.staggerProps.mode || "linear", ", ")
                        .concat(this.staggerProps.reverse || !1, ")")
                    );
                  },
                },
                {
                  key: "calculateValues",
                  value: function (e) {
                    for (
                      var t = (function (e) {
                          var t =
                              arguments.length > 1 && void 0 !== arguments[1]
                                ? arguments[1]
                                : 0,
                            n =
                              arguments.length > 2 && void 0 !== arguments[2]
                                ? arguments[2]
                                : "linear",
                            r =
                              arguments.length > 3 &&
                              void 0 !== arguments[3] &&
                              arguments[3],
                            i = [];
                          if ("linear" === n)
                            for (var a = 0; a < e; a++) {
                              var o = a / (e - 1),
                                s = void 0;
                              (s = o < t ? o + 1 - t + 1 / (e - 1) : o - t),
                                !0 === r && (s = 1 - s),
                                i.push(s);
                            }
                          else if ("omni" === n)
                            for (var u = 1 - t, c = 0; c < e; c++) {
                              var l = Math.abs(c / (e - 1) - t) / u;
                              !0 === r && (l = 1 - l), i.push(l);
                            }
                          return i;
                        })(
                          e.length,
                          this.staggerProps.fraction,
                          this.staggerProps.mode,
                          this.staggerProps.reverse
                        ),
                        n = [],
                        r = 0;
                      r < t.length;
                      r++
                    ) {
                      var i = zt(
                        this.staggerProps.from,
                        this.staggerProps.to,
                        t[r],
                        this.staggerProps.easing
                      );
                      !0 === this.staggerProps.integer && (i = Math.round(i)),
                        "measurement" === this.staggerProps.type &&
                          (i += this.staggerProps.unit),
                        n.push(i);
                    }
                    return n;
                  },
                },
              ]),
              e
            );
          })(),
          Ft = Rt,
          Ut = {
            epsilon: 1e-12,
            matrix: "Matrix",
            number: "number",
            precision: 64,
            predictable: !1,
            randomSeed: null,
          };
        function Vt(e) {
          return (Vt =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function $t(e) {
          return "number" == typeof e;
        }
        function Ht(e) {
          return (e && !0 === e.constructor.prototype.isBigNumber) || !1;
        }
        function Wt(e) {
          return (
            (e &&
              "object" === Vt(e) &&
              !0 === Object.getPrototypeOf(e).isComplex) ||
            !1
          );
        }
        function Gt(e) {
          return (
            (e &&
              "object" === Vt(e) &&
              !0 === Object.getPrototypeOf(e).isFraction) ||
            !1
          );
        }
        function Jt(e) {
          return (e && !0 === e.constructor.prototype.isUnit) || !1;
        }
        function Yt(e) {
          return "string" == typeof e;
        }
        var Zt = Array.isArray;
        function Xt(e) {
          return (e && !0 === e.constructor.prototype.isMatrix) || !1;
        }
        function Kt(e) {
          return Array.isArray(e) || Xt(e);
        }
        function Qt(e) {
          return (
            (e && e.isDenseMatrix && !0 === e.constructor.prototype.isMatrix) ||
            !1
          );
        }
        function en(e) {
          return (
            (e &&
              e.isSparseMatrix &&
              !0 === e.constructor.prototype.isMatrix) ||
            !1
          );
        }
        function tn(e) {
          return (e && !0 === e.constructor.prototype.isRange) || !1;
        }
        function nn(e) {
          return (e && !0 === e.constructor.prototype.isIndex) || !1;
        }
        function rn(e) {
          return "boolean" == typeof e;
        }
        function an(e) {
          return (e && !0 === e.constructor.prototype.isResultSet) || !1;
        }
        function on(e) {
          return (e && !0 === e.constructor.prototype.isHelp) || !1;
        }
        function sn(e) {
          return "function" == typeof e;
        }
        function un(e) {
          return e instanceof Date;
        }
        function cn(e) {
          return e instanceof RegExp;
        }
        function ln(e) {
          return !(
            !e ||
            "object" !== Vt(e) ||
            e.constructor !== Object ||
            Wt(e) ||
            Gt(e)
          );
        }
        function fn(e) {
          return null === e;
        }
        function pn(e) {
          return void 0 === e;
        }
        function hn(e) {
          return (
            (e &&
              !0 === e.isAccessorNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function dn(e) {
          return (
            (e &&
              !0 === e.isArrayNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function mn(e) {
          return (
            (e &&
              !0 === e.isAssignmentNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function gn(e) {
          return (
            (e &&
              !0 === e.isBlockNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function yn(e) {
          return (
            (e &&
              !0 === e.isConditionalNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function vn(e) {
          return (
            (e &&
              !0 === e.isConstantNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function bn(e) {
          return (
            (e &&
              !0 === e.isFunctionAssignmentNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function xn(e) {
          return (
            (e &&
              !0 === e.isFunctionNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function wn(e) {
          return (
            (e &&
              !0 === e.isIndexNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function Nn(e) {
          return (
            (e && !0 === e.isNode && !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function En(e) {
          return (
            (e &&
              !0 === e.isObjectNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function Mn(e) {
          return (
            (e &&
              !0 === e.isOperatorNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function Sn(e) {
          return (
            (e &&
              !0 === e.isParenthesisNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function _n(e) {
          return (
            (e &&
              !0 === e.isRangeNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function kn(e) {
          return (
            (e &&
              !0 === e.isSymbolNode &&
              !0 === e.constructor.prototype.isNode) ||
            !1
          );
        }
        function On(e) {
          return (e && !0 === e.constructor.prototype.isChain) || !1;
        }
        function An(e) {
          var t = Vt(e);
          return "object" === t
            ? null === e
              ? "null"
              : Array.isArray(e)
              ? "Array"
              : e instanceof Date
              ? "Date"
              : e instanceof RegExp
              ? "RegExp"
              : Ht(e)
              ? "BigNumber"
              : Wt(e)
              ? "Complex"
              : Gt(e)
              ? "Fraction"
              : Xt(e)
              ? "Matrix"
              : Jt(e)
              ? "Unit"
              : nn(e)
              ? "Index"
              : tn(e)
              ? "Range"
              : an(e)
              ? "ResultSet"
              : Nn(e)
              ? e.type
              : On(e)
              ? "Chain"
              : on(e)
              ? "Help"
              : "Object"
            : "function" === t
            ? "Function"
            : t;
        }
        function Cn(e) {
          return (Cn =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function Tn(e) {
          var t = Cn(e);
          if ("number" === t || "string" === t || "boolean" === t || null == e)
            return e;
          if ("function" == typeof e.clone) return e.clone();
          if (Array.isArray(e))
            return e.map(function (e) {
              return Tn(e);
            });
          if (e instanceof Date) return new Date(e.valueOf());
          if (Ht(e)) return e;
          if (e instanceof RegExp) throw new TypeError("Cannot clone " + e);
          return (function (e, t) {
            var n = {};
            for (var r in e) Bn(e, r) && (n[r] = t(e[r]));
            return n;
          })(e, Tn);
        }
        function In(e, t) {
          for (var n in t) Bn(t, n) && (e[n] = t[n]);
          return e;
        }
        function Pn(e, t) {
          var n, r, i;
          if (Array.isArray(e)) {
            if (!Array.isArray(t)) return !1;
            if (e.length !== t.length) return !1;
            for (r = 0, i = e.length; r < i; r++)
              if (!Pn(e[r], t[r])) return !1;
            return !0;
          }
          if ("function" == typeof e) return e === t;
          if (e instanceof Object) {
            if (Array.isArray(t) || !(t instanceof Object)) return !1;
            for (n in e) if (!(n in t) || !Pn(e[n], t[n])) return !1;
            for (n in t) if (!(n in e) || !Pn(e[n], t[n])) return !1;
            return !0;
          }
          return e === t;
        }
        function Bn(e, t) {
          return e && Object.hasOwnProperty.call(e, t);
        }
        function Dn() {
          return (Dn =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        var jn = function (e) {
          if (e)
            throw new Error(
              "The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n"
            );
          return Object.freeze(Ut);
        };
        Dn(jn, Ut, {
          MATRIX_OPTIONS: ["Matrix", "Array"],
          NUMBER_OPTIONS: ["number", "BigNumber", "Fraction"],
        });
        var Rn = Ne(function (e, t) {
          e.exports = (function () {
            function e() {
              return !0;
            }
            function t() {
              return !1;
            }
            function n() {}
            return (function r() {
              var i = [
                  {
                    name: "number",
                    test: function (e) {
                      return "number" == typeof e;
                    },
                  },
                  {
                    name: "string",
                    test: function (e) {
                      return "string" == typeof e;
                    },
                  },
                  {
                    name: "boolean",
                    test: function (e) {
                      return "boolean" == typeof e;
                    },
                  },
                  {
                    name: "Function",
                    test: function (e) {
                      return "function" == typeof e;
                    },
                  },
                  { name: "Array", test: Array.isArray },
                  {
                    name: "Date",
                    test: function (e) {
                      return e instanceof Date;
                    },
                  },
                  {
                    name: "RegExp",
                    test: function (e) {
                      return e instanceof RegExp;
                    },
                  },
                  {
                    name: "Object",
                    test: function (e) {
                      return (
                        "object" == typeof e &&
                        null !== e &&
                        e.constructor === Object
                      );
                    },
                  },
                  {
                    name: "null",
                    test: function (e) {
                      return null === e;
                    },
                  },
                  {
                    name: "undefined",
                    test: function (e) {
                      return void 0 === e;
                    },
                  },
                ],
                a = { name: "any", test: e },
                o = [],
                s = [],
                u = { types: i, conversions: s, ignore: o };
              function c(e) {
                var t = $(u.types, function (t) {
                  return t.name === e;
                });
                if (t) return t;
                if ("any" === e) return a;
                var n = $(u.types, function (t) {
                  return t.name.toLowerCase() === e.toLowerCase();
                });
                throw new TypeError(
                  'Unknown type "' +
                    e +
                    '"' +
                    (n ? '. Did you mean "' + n.name + '"?' : "")
                );
              }
              function l(e) {
                return e === a ? 999 : u.types.indexOf(e);
              }
              function f(e) {
                var t = $(u.types, function (t) {
                  return t.test(e);
                });
                if (t) return t.name;
                throw new TypeError("Value has unknown type. Value: " + e);
              }
              function p(e) {
                return e
                  .map(function (e) {
                    var t = e.types.map(w);
                    return (e.restParam ? "..." : "") + t.join("|");
                  })
                  .join(",");
              }
              function h(e, t) {
                var n = 0 === e.indexOf("..."),
                  r = (n ? (e.length > 3 ? e.slice(3) : "any") : e)
                    .split("|")
                    .map(j)
                    .filter(R)
                    .filter(D),
                  i = (function (e, t) {
                    var n = {};
                    return (
                      e.forEach(function (e) {
                        -1 !== t.indexOf(e.from) ||
                          -1 === t.indexOf(e.to) ||
                          n[e.from] ||
                          (n[e.from] = e);
                      }),
                      Object.keys(n).map(function (e) {
                        return n[e];
                      })
                    );
                  })(t, r),
                  a = r.map(function (e) {
                    var t = c(e);
                    return {
                      name: e,
                      typeIndex: l(t),
                      test: t.test,
                      conversion: null,
                      conversionIndex: -1,
                    };
                  }),
                  o = i.map(function (e) {
                    var n = c(e.from);
                    return {
                      name: e.from,
                      typeIndex: l(n),
                      test: n.test,
                      conversion: e,
                      conversionIndex: t.indexOf(e),
                    };
                  });
                return { types: a.concat(o), restParam: n };
              }
              function d(e, t, n) {
                var r = [];
                return (
                  "" !== e.trim() &&
                    (r = e
                      .split(",")
                      .map(j)
                      .map(function (e, t, r) {
                        var i = h(e, n);
                        if (i.restParam && t !== r.length - 1)
                          throw new SyntaxError(
                            'Unexpected rest parameter "' +
                              e +
                              '": only allowed for the last parameter'
                          );
                        return i;
                      })),
                  r.some(z) ? null : { params: r, fn: t }
                );
              }
              function m(e) {
                var t = q(e);
                return !!t && t.restParam;
              }
              function g(e) {
                return e.types.some(function (e) {
                  return null != e.conversion;
                });
              }
              function y(t) {
                if (t && 0 !== t.types.length) {
                  if (1 === t.types.length) return c(t.types[0].name).test;
                  if (2 === t.types.length) {
                    var n = c(t.types[0].name).test,
                      r = c(t.types[1].name).test;
                    return function (e) {
                      return n(e) || r(e);
                    };
                  }
                  var i = t.types.map(function (e) {
                    return c(e.name).test;
                  });
                  return function (e) {
                    for (var t = 0; t < i.length; t++) if (i[t](e)) return !0;
                    return !1;
                  };
                }
                return e;
              }
              function v(e) {
                var t, n, r;
                if (m(e)) {
                  var i = (t = (function (e) {
                      return e.slice(0, e.length - 1);
                    })(e).map(y)).length,
                    a = y(q(e));
                  return function (e) {
                    for (var n = 0; n < t.length; n++)
                      if (!t[n](e[n])) return !1;
                    return (
                      (function (e) {
                        for (var t = i; t < e.length; t++)
                          if (!a(e[t])) return !1;
                        return !0;
                      })(e) && e.length >= i + 1
                    );
                  };
                }
                return 0 === e.length
                  ? function (e) {
                      return 0 === e.length;
                    }
                  : 1 === e.length
                  ? ((n = y(e[0])),
                    function (e) {
                      return n(e[0]) && 1 === e.length;
                    })
                  : 2 === e.length
                  ? ((n = y(e[0])),
                    (r = y(e[1])),
                    function (e) {
                      return n(e[0]) && r(e[1]) && 2 === e.length;
                    })
                  : ((t = e.map(y)),
                    function (e) {
                      for (var n = 0; n < t.length; n++)
                        if (!t[n](e[n])) return !1;
                      return e.length === t.length;
                    });
              }
              function b(e, t) {
                return t < e.params.length
                  ? e.params[t]
                  : m(e.params)
                  ? q(e.params)
                  : null;
              }
              function x(e, t, n) {
                var r = b(e, t);
                return (r ? (n ? r.types.filter(N) : r.types) : []).map(w);
              }
              function w(e) {
                return e.name;
              }
              function N(e) {
                return null === e.conversion || void 0 === e.conversion;
              }
              function E(e, t) {
                var n = (function (e) {
                  for (var t = {}, n = 0; n < e.length; n++) t[e[n]] = !0;
                  return Object.keys(t);
                })(
                  H(e, function (e) {
                    return x(e, t, !1);
                  })
                );
                return -1 !== n.indexOf("any") ? ["any"] : n;
              }
              function M(e, t, n) {
                var r,
                  i,
                  a,
                  o = e || "unnamed",
                  s = n;
                for (a = 0; a < t.length; a++) {
                  var u = s.filter(function (e) {
                    var n = y(b(e, a));
                    return (a < e.params.length || m(e.params)) && n(t[a]);
                  });
                  if (0 === u.length) {
                    if ((i = E(s, a)).length > 0) {
                      var c = f(t[a]);
                      return (
                        ((r = new TypeError(
                          "Unexpected type of argument in function " +
                            o +
                            " (expected: " +
                            i.join(" or ") +
                            ", actual: " +
                            c +
                            ", index: " +
                            a +
                            ")"
                        )).data = {
                          category: "wrongType",
                          fn: o,
                          index: a,
                          actual: c,
                          expected: i,
                        }),
                        r
                      );
                    }
                  } else s = u;
                }
                var l = s.map(function (e) {
                  return m(e.params) ? 1 / 0 : e.params.length;
                });
                if (t.length < Math.min.apply(null, l))
                  return (
                    (i = E(s, a)),
                    ((r = new TypeError(
                      "Too few arguments in function " +
                        o +
                        " (expected: " +
                        i.join(" or ") +
                        ", index: " +
                        t.length +
                        ")"
                    )).data = {
                      category: "tooFewArgs",
                      fn: o,
                      index: t.length,
                      expected: i,
                    }),
                    r
                  );
                var p = Math.max.apply(null, l);
                return t.length > p
                  ? (((r = new TypeError(
                      "Too many arguments in function " +
                        o +
                        " (expected: " +
                        p +
                        ", actual: " +
                        t.length +
                        ")"
                    )).data = {
                      category: "tooManyArgs",
                      fn: o,
                      index: t.length,
                      expectedLength: p,
                    }),
                    r)
                  : (((r = new TypeError(
                      'Arguments of type "' +
                        t.join(", ") +
                        '" do not match any of the defined signatures of function ' +
                        o +
                        "."
                    )).data = { category: "mismatch", actual: t.map(f) }),
                    r);
              }
              function S(e) {
                for (var t = 999, n = 0; n < e.types.length; n++)
                  N(e.types[n]) && (t = Math.min(t, e.types[n].typeIndex));
                return t;
              }
              function _(e) {
                for (var t = 999, n = 0; n < e.types.length; n++)
                  N(e.types[n]) ||
                    (t = Math.min(t, e.types[n].conversionIndex));
                return t;
              }
              function k(e, t) {
                var n;
                return 0 != (n = e.restParam - t.restParam) ||
                  0 != (n = g(e) - g(t)) ||
                  0 != (n = S(e) - S(t))
                  ? n
                  : _(e) - _(t);
              }
              function O(e, t) {
                var n,
                  r,
                  i = Math.min(e.params.length, t.params.length);
                if (0 != (r = e.params.some(g) - t.params.some(g))) return r;
                for (n = 0; n < i; n++)
                  if (0 != (r = g(e.params[n]) - g(t.params[n]))) return r;
                for (n = 0; n < i; n++)
                  if (0 !== (r = k(e.params[n], t.params[n]))) return r;
                return e.params.length - t.params.length;
              }
              function A(e, t) {
                var n = t;
                if (e.some(g)) {
                  var r = m(e),
                    i = e.map(C);
                  n = function () {
                    for (
                      var e = [],
                        n = r ? arguments.length - 1 : arguments.length,
                        a = 0;
                      a < n;
                      a++
                    )
                      e[a] = i[a](arguments[a]);
                    return (
                      r && (e[n] = arguments[n].map(i[n])), t.apply(this, e)
                    );
                  };
                }
                var a = n;
                if (m(e)) {
                  var o = e.length - 1;
                  a = function () {
                    return n.apply(
                      this,
                      F(arguments, 0, o).concat([F(arguments, o)])
                    );
                  };
                }
                return a;
              }
              function C(e) {
                var t,
                  n,
                  r,
                  i,
                  a = [],
                  o = [];
                switch (
                  (e.types.forEach(function (e) {
                    e.conversion &&
                      (a.push(c(e.conversion.from).test),
                      o.push(e.conversion.convert));
                  }),
                  o.length)
                ) {
                  case 0:
                    return function (e) {
                      return e;
                    };
                  case 1:
                    return (
                      (t = a[0]),
                      (r = o[0]),
                      function (e) {
                        return t(e) ? r(e) : e;
                      }
                    );
                  case 2:
                    return (
                      (t = a[0]),
                      (n = a[1]),
                      (r = o[0]),
                      (i = o[1]),
                      function (e) {
                        return t(e) ? r(e) : n(e) ? i(e) : e;
                      }
                    );
                  default:
                    return function (e) {
                      for (var t = 0; t < o.length; t++)
                        if (a[t](e)) return o[t](e);
                      return e;
                    };
                }
              }
              function T(e) {
                var t = {};
                return (
                  e.forEach(function (e) {
                    e.params.some(g) ||
                      I(e.params, !0).forEach(function (n) {
                        t[p(n)] = e.fn;
                      });
                  }),
                  t
                );
              }
              function I(e, t) {
                return (function e(n, r, i) {
                  if (r < n.length) {
                    var a,
                      o = n[r],
                      s = t ? o.types.filter(N) : o.types;
                    if (o.restParam) {
                      var u = s.filter(N);
                      a = u.length < s.length ? [u, s] : [s];
                    } else
                      a = s.map(function (e) {
                        return [e];
                      });
                    return H(a, function (t) {
                      return e(n, r + 1, i.concat([t]));
                    });
                  }
                  return [
                    i.map(function (e, t) {
                      return {
                        types: e,
                        restParam: t === n.length - 1 && m(n),
                      };
                    }),
                  ];
                })(e, 0, []);
              }
              function P(e, t) {
                for (
                  var n = Math.max(e.params.length, t.params.length), r = 0;
                  r < n;
                  r++
                )
                  if (!V(x(e, r, !0), x(t, r, !0))) return !1;
                var i = e.params.length,
                  a = t.params.length,
                  o = m(e.params),
                  s = m(t.params);
                return o ? (s ? i === a : a >= i) : s ? i >= a : i === a;
              }
              function B(e, r) {
                if (0 === Object.keys(r).length)
                  throw new SyntaxError("No signatures provided");
                var i = [];
                Object.keys(r)
                  .map(function (e) {
                    return d(e, r[e], u.conversions);
                  })
                  .filter(L)
                  .forEach(function (e) {
                    var t = $(i, function (t) {
                      return P(t, e);
                    });
                    if (t)
                      throw new TypeError(
                        'Conflicting signatures "' +
                          p(t.params) +
                          '" and "' +
                          p(e.params) +
                          '".'
                      );
                    i.push(e);
                  });
                var a = H(i, function (e) {
                  return (e ? I(e.params, !1) : []).map(function (t) {
                    return { params: t, fn: e.fn };
                  });
                }).filter(L);
                a.sort(O);
                var o = a[0] && a[0].params.length <= 2 && !m(a[0].params),
                  s = a[1] && a[1].params.length <= 2 && !m(a[1].params),
                  c = a[2] && a[2].params.length <= 2 && !m(a[2].params),
                  l = a[3] && a[3].params.length <= 2 && !m(a[3].params),
                  f = a[4] && a[4].params.length <= 2 && !m(a[4].params),
                  h = a[5] && a[5].params.length <= 2 && !m(a[5].params),
                  g = o && s && c && l && f && h,
                  b = a.map(function (e) {
                    return v(e.params);
                  }),
                  x = o ? y(a[0].params[0]) : t,
                  w = s ? y(a[1].params[0]) : t,
                  N = c ? y(a[2].params[0]) : t,
                  E = l ? y(a[3].params[0]) : t,
                  S = f ? y(a[4].params[0]) : t,
                  _ = h ? y(a[5].params[0]) : t,
                  k = o ? y(a[0].params[1]) : t,
                  C = s ? y(a[1].params[1]) : t,
                  B = c ? y(a[2].params[1]) : t,
                  D = l ? y(a[3].params[1]) : t,
                  j = f ? y(a[4].params[1]) : t,
                  R = h ? y(a[5].params[1]) : t,
                  z = a.map(function (e) {
                    return A(e.params, e.fn);
                  }),
                  q = o ? z[0] : n,
                  F = s ? z[1] : n,
                  U = c ? z[2] : n,
                  V = l ? z[3] : n,
                  W = f ? z[4] : n,
                  G = h ? z[5] : n,
                  J = o ? a[0].params.length : -1,
                  Y = s ? a[1].params.length : -1,
                  Z = c ? a[2].params.length : -1,
                  X = l ? a[3].params.length : -1,
                  K = f ? a[4].params.length : -1,
                  Q = h ? a[5].params.length : -1,
                  ee = g ? 6 : 0,
                  te = a.length,
                  ne = function () {
                    for (var t = ee; t < te; t++)
                      if (b[t](arguments)) return z[t].apply(this, arguments);
                    throw M(e, arguments, a);
                  },
                  re = function e(t, n) {
                    return arguments.length === J && x(t) && k(n)
                      ? q.apply(e, arguments)
                      : arguments.length === Y && w(t) && C(n)
                      ? F.apply(e, arguments)
                      : arguments.length === Z && N(t) && B(n)
                      ? U.apply(e, arguments)
                      : arguments.length === X && E(t) && D(n)
                      ? V.apply(e, arguments)
                      : arguments.length === K && S(t) && j(n)
                      ? W.apply(e, arguments)
                      : arguments.length === Q && _(t) && R(n)
                      ? G.apply(e, arguments)
                      : ne.apply(e, arguments);
                  };
                try {
                  Object.defineProperty(re, "name", { value: e });
                } catch (e) {}
                return (re.signatures = T(a)), re;
              }
              function D(e) {
                return -1 === u.ignore.indexOf(e);
              }
              function j(e) {
                return e.trim();
              }
              function R(e) {
                return !!e;
              }
              function L(e) {
                return null !== e;
              }
              function z(e) {
                return 0 === e.types.length;
              }
              function q(e) {
                return e[e.length - 1];
              }
              function F(e, t, n) {
                return Array.prototype.slice.call(e, t, n);
              }
              function U(e, t) {
                return -1 !== e.indexOf(t);
              }
              function V(e, t) {
                for (var n = 0; n < e.length; n++) if (U(t, e[n])) return !0;
                return !1;
              }
              function $(e, t) {
                for (var n = 0; n < e.length; n++) if (t(e[n])) return e[n];
              }
              function H(e, t) {
                return Array.prototype.concat.apply([], e.map(t));
              }
              function W(e) {
                for (var t = "", n = 0; n < e.length; n++) {
                  var r = e[n];
                  if (
                    ("object" == typeof r.signatures ||
                      "string" == typeof r.signature) &&
                    "" !== r.name
                  )
                    if ("" === t) t = r.name;
                    else if (t !== r.name) {
                      var i = new Error(
                        "Function names do not match (expected: " +
                          t +
                          ", actual: " +
                          r.name +
                          ")"
                      );
                      throw ((i.data = { actual: r.name, expected: t }), i);
                    }
                }
                return t;
              }
              function G(e) {
                var t,
                  n = {};
                function r(e, r) {
                  if (n.hasOwnProperty(e) && r !== n[e])
                    throw (
                      (((t = new Error(
                        'Signature "' + e + '" is defined twice'
                      )).data = { signature: e }),
                      t)
                    );
                }
                for (var i = 0; i < e.length; i++) {
                  var a = e[i];
                  if ("object" == typeof a.signatures)
                    for (var o in a.signatures)
                      a.signatures.hasOwnProperty(o) &&
                        (r(o, a.signatures[o]), (n[o] = a.signatures[o]));
                  else {
                    if ("string" != typeof a.signature)
                      throw (
                        (((t = new TypeError(
                          "Function is no typed-function (index: " + i + ")"
                        )).data = { index: i }),
                        t)
                      );
                    r(a.signature, a), (n[a.signature] = a);
                  }
                }
                return n;
              }
              return (
                ((u = B("typed", {
                  "string, Object": B,
                  Object: function (e) {
                    var t = [];
                    for (var n in e) e.hasOwnProperty(n) && t.push(e[n]);
                    return B(W(t), e);
                  },
                  "...Function": function (e) {
                    return B(W(e), G(e));
                  },
                  "string, ...Function": function (e, t) {
                    return B(e, G(t));
                  },
                })).create = r),
                (u.types = i),
                (u.conversions = s),
                (u.ignore = o),
                (u.convert = function (e, t) {
                  var n = f(e);
                  if (t === n) return e;
                  for (var r = 0; r < u.conversions.length; r++) {
                    var i = u.conversions[r];
                    if (i.from === n && i.to === t) return i.convert(e);
                  }
                  throw new Error("Cannot convert from " + n + " to " + t);
                }),
                (u.find = function (e, t) {
                  if (!e.signatures)
                    throw new TypeError("Function is no typed-function");
                  var n;
                  if ("string" == typeof t) {
                    n = t.split(",");
                    for (var r = 0; r < n.length; r++) n[r] = n[r].trim();
                  } else {
                    if (!Array.isArray(t))
                      throw new TypeError(
                        "String array or a comma separated string expected"
                      );
                    n = t;
                  }
                  var i = n.join(","),
                    a = e.signatures[i];
                  if (a) return a;
                  throw new TypeError(
                    "Signature not found (signature: " +
                      (e.name || "unnamed") +
                      "(" +
                      n.join(", ") +
                      "))"
                  );
                }),
                (u.addType = function (e, t) {
                  if (
                    !e ||
                    "string" != typeof e.name ||
                    "function" != typeof e.test
                  )
                    throw new TypeError(
                      "Object with properties {name: string, test: function} expected"
                    );
                  if (!1 !== t)
                    for (var n = 0; n < u.types.length; n++)
                      if ("Object" === u.types[n].name)
                        return void u.types.splice(n, 0, e);
                  u.types.push(e);
                }),
                (u.addConversion = function (e) {
                  if (
                    !e ||
                    "string" != typeof e.from ||
                    "string" != typeof e.to ||
                    "function" != typeof e.convert
                  )
                    throw new TypeError(
                      "Object with properties {from: string, to: string, convert: function} expected"
                    );
                  u.conversions.push(e);
                }),
                u
              );
            })();
          })();
        });
        function Ln(e) {
          return (
            "boolean" == typeof e || (!!isFinite(e) && e === Math.round(e))
          );
        }
        var zn =
            Math.sign ||
            function (e) {
              return e > 0 ? 1 : e < 0 ? -1 : 0;
            },
          qn =
            Math.log2 ||
            function (e) {
              return Math.log(e) / Math.LN2;
            },
          Fn =
            Math.log10 ||
            function (e) {
              return Math.log(e) / Math.LN10;
            },
          Un =
            Math.log1p ||
            function (e) {
              return Math.log(e + 1);
            },
          Vn =
            Math.cbrt ||
            function (e) {
              if (0 === e) return e;
              var t,
                n = e < 0;
              return (
                n && (e = -e),
                (t = isFinite(e)
                  ? (e / ((t = Math.exp(Math.log(e) / 3)) * t) + 2 * t) / 3
                  : e),
                n ? -t : t
              );
            },
          $n =
            Math.expm1 ||
            function (e) {
              return e >= 2e-4 || e <= -2e-4
                ? Math.exp(e) - 1
                : e + (e * e) / 2 + (e * e * e) / 6;
            };
        function Hn(e, t) {
          if ("function" == typeof t) return t(e);
          if (e === 1 / 0) return "Infinity";
          if (e === -1 / 0) return "-Infinity";
          if (isNaN(e)) return "NaN";
          var n,
            r = "auto";
          switch (
            (t &&
              (t.notation && (r = t.notation),
              $t(t) ? (n = t) : $t(t.precision) && (n = t.precision)),
            r)
          ) {
            case "fixed":
              return Gn(e, n);
            case "exponential":
              return Jn(e, n);
            case "engineering":
              return (function (e, t) {
                if (isNaN(e) || !isFinite(e)) return String(e);
                var n = Yn(Wn(e), t),
                  r = n.exponent,
                  i = n.coefficients,
                  a = r % 3 == 0 ? r : r < 0 ? r - 3 - (r % 3) : r - (r % 3);
                if ($t(t))
                  for (; t > i.length || r - a + 1 > i.length; ) i.push(0);
                else
                  for (
                    var o = Math.abs(r - a) - (i.length - 1), s = 0;
                    s < o;
                    s++
                  )
                    i.push(0);
                for (var u = Math.abs(r - a), c = 1; u > 0; ) c++, u--;
                var l = i.slice(c).join(""),
                  f = ($t(t) && l.length) || l.match(/[1-9]/) ? "." + l : "",
                  p =
                    i.slice(0, c).join("") +
                    f +
                    "e" +
                    (r >= 0 ? "+" : "") +
                    a.toString();
                return n.sign + p;
              })(e, n);
            case "auto":
              return (function (e, t, n) {
                if (isNaN(e) || !isFinite(e)) return String(e);
                var r = n && void 0 !== n.lowerExp ? n.lowerExp : -3,
                  i = n && void 0 !== n.upperExp ? n.upperExp : 5,
                  a = Wn(e),
                  o = t ? Yn(a, t) : a;
                if (o.exponent < r || o.exponent >= i) return Jn(e, t);
                var s = o.coefficients,
                  u = o.exponent;
                s.length < t && (s = s.concat(Zn(t - s.length))),
                  (s = s.concat(
                    Zn(u - s.length + 1 + (s.length < t ? t - s.length : 0))
                  ));
                var c = u > 0 ? u : 0;
                return (
                  c < (s = Zn(-u).concat(s)).length - 1 &&
                    s.splice(c + 1, 0, "."),
                  o.sign + s.join("")
                );
              })(e, n, t && t).replace(/((\.\d*?)(0+))($|e)/, function () {
                var e = arguments[2],
                  t = arguments[4];
                return "." !== e ? e + t : t;
              });
            default:
              throw new Error(
                'Unknown notation "' +
                  r +
                  '". Choose "auto", "exponential", or "fixed".'
              );
          }
        }
        function Wn(e) {
          var t = String(e)
            .toLowerCase()
            .match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);
          if (!t) throw new SyntaxError("Invalid number " + e);
          var n = t[1],
            r = t[2],
            i = parseFloat(t[4] || "0"),
            a = r.indexOf(".");
          i += -1 !== a ? a - 1 : r.length - 1;
          var o = r
            .replace(".", "")
            .replace(/^0*/, function (e) {
              return (i -= e.length), "";
            })
            .replace(/0*$/, "")
            .split("")
            .map(function (e) {
              return parseInt(e);
            });
          return (
            0 === o.length && (o.push(0), i++),
            { sign: n, coefficients: o, exponent: i }
          );
        }
        function Gn(e, t) {
          if (isNaN(e) || !isFinite(e)) return String(e);
          var n = Wn(e),
            r = "number" == typeof t ? Yn(n, n.exponent + 1 + t) : n,
            i = r.coefficients,
            a = r.exponent + 1,
            o = a + (t || 0);
          return (
            i.length < o && (i = i.concat(Zn(o - i.length))),
            a < 0 && ((i = Zn(1 - a).concat(i)), (a = 1)),
            a < i.length && i.splice(a, 0, 0 === a ? "0." : "."),
            r.sign + i.join("")
          );
        }
        function Jn(e, t) {
          if (isNaN(e) || !isFinite(e)) return String(e);
          var n = Wn(e),
            r = t ? Yn(n, t) : n,
            i = r.coefficients,
            a = r.exponent;
          i.length < t && (i = i.concat(Zn(t - i.length)));
          var o = i.shift();
          return (
            r.sign +
            o +
            (i.length > 0 ? "." + i.join("") : "") +
            "e" +
            (a >= 0 ? "+" : "") +
            a
          );
        }
        function Yn(e, t) {
          for (
            var n = {
                sign: e.sign,
                coefficients: e.coefficients,
                exponent: e.exponent,
              },
              r = n.coefficients;
            t <= 0;

          )
            r.unshift(0), n.exponent++, t++;
          if (r.length > t && r.splice(t, r.length - t)[0] >= 5) {
            var i = t - 1;
            for (r[i]++; 10 === r[i]; )
              r.pop(), 0 === i && (r.unshift(0), n.exponent++, i++), r[--i]++;
          }
          return n;
        }
        function Zn(e) {
          for (var t = [], n = 0; n < e; n++) t.push(0);
          return t;
        }
        var Xn = Number.EPSILON || 2220446049250313e-31;
        function Kn(e, t, n) {
          if (null == n) return e === t;
          if (e === t) return !0;
          if (isNaN(e) || isNaN(t)) return !1;
          if (isFinite(e) && isFinite(t)) {
            var r = Math.abs(e - t);
            return r < Xn || r <= Math.max(Math.abs(e), Math.abs(t)) * n;
          }
          return !1;
        }
        var Qn =
            Math.acosh ||
            function (e) {
              return Math.log(Math.sqrt(e * e - 1) + e);
            },
          er =
            Math.asinh ||
            function (e) {
              return Math.log(Math.sqrt(e * e + 1) + e);
            },
          tr =
            Math.atanh ||
            function (e) {
              return Math.log((1 + e) / (1 - e)) / 2;
            },
          nr =
            Math.cosh ||
            function (e) {
              return (Math.exp(e) + Math.exp(-e)) / 2;
            },
          rr =
            Math.sinh ||
            function (e) {
              return (Math.exp(e) - Math.exp(-e)) / 2;
            },
          ir =
            Math.tanh ||
            function (e) {
              var t = Math.exp(2 * e);
              return (t - 1) / (t + 1);
            };
        function ar(e, t) {
          return void 0 !== t ? e.toExponential(t - 1) : e.toExponential();
        }
        function or(e) {
          return (or =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function sr(e, t) {
          var n = e.length - t.length,
            r = e.length;
          return e.substring(n, r) === t;
        }
        function ur(e, t) {
          return "number" == typeof e
            ? Hn(e, t)
            : Ht(e)
            ? (function (e, t) {
                if ("function" == typeof t) return t(e);
                if (!e.isFinite())
                  return e.isNaN() ? "NaN" : e.gt(0) ? "Infinity" : "-Infinity";
                var n,
                  r = "auto";
                switch (
                  (void 0 !== t &&
                    (t.notation && (r = t.notation),
                    "number" == typeof t
                      ? (n = t)
                      : t.precision && (n = t.precision)),
                  r)
                ) {
                  case "fixed":
                    return (function (e, t) {
                      return e.toFixed(t);
                    })(e, n);
                  case "exponential":
                    return ar(e, n);
                  case "engineering":
                    return (function (e, t) {
                      var n = e.e,
                        r =
                          n % 3 == 0
                            ? n
                            : n < 0
                            ? n - 3 - (n % 3)
                            : n - (n % 3),
                        i = e.mul(Math.pow(10, -r)),
                        a = i.toPrecision(t);
                      return (
                        -1 !== a.indexOf("e") && (a = i.toString()),
                        a + "e" + (n >= 0 ? "+" : "") + r.toString()
                      );
                    })(e, n);
                  case "auto":
                    var i = t && void 0 !== t.lowerExp ? t.lowerExp : -3,
                      a = t && void 0 !== t.upperExp ? t.upperExp : 5;
                    if (e.isZero()) return "0";
                    var o = e.toSignificantDigits(n),
                      s = o.e;
                    return (s >= i && s < a ? o.toFixed() : ar(e, n)).replace(
                      /((\.\d*?)(0+))($|e)/,
                      function () {
                        var e = arguments[2],
                          t = arguments[4];
                        return "." !== e ? e + t : t;
                      }
                    );
                  default:
                    throw new Error(
                      'Unknown notation "' +
                        r +
                        '". Choose "auto", "exponential", or "fixed".'
                    );
                }
              })(e, t)
            : (function (e) {
                return (
                  (e &&
                    "object" === or(e) &&
                    "number" == typeof e.s &&
                    "number" == typeof e.n &&
                    "number" == typeof e.d) ||
                  !1
                );
              })(e)
            ? t && "decimal" === t.fraction
              ? e.toString()
              : e.s * e.n + "/" + e.d
            : Array.isArray(e)
            ? (function e(t, n) {
                if (Array.isArray(t)) {
                  for (var r = "[", i = t.length, a = 0; a < i; a++)
                    0 !== a && (r += ", "), (r += e(t[a], n));
                  return (r += "]");
                }
                return ur(t, n);
              })(e, t)
            : Yt(e)
            ? '"' + e + '"'
            : "function" == typeof e
            ? e.syntax
              ? String(e.syntax)
              : "function"
            : e && "object" === or(e)
            ? "function" == typeof e.format
              ? e.format(t)
              : e && e.toString(t) !== {}.toString()
              ? e.toString(t)
              : "{" +
                Object.keys(e)
                  .map(function (n) {
                    return '"' + n + '": ' + ur(e[n], t);
                  })
                  .join(", ") +
                "}"
            : String(e);
        }
        function cr(e) {
          for (var t = String(e), n = "", r = 0; r < t.length; ) {
            var i = t.charAt(r);
            "\\" === i
              ? ((n += i),
                r++,
                ("" !== (i = t.charAt(r)) && -1 !== '"\\/bfnrtu'.indexOf(i)) ||
                  (n += "\\"),
                (n += i))
              : (n += '"' === i ? '\\"' : i),
              r++;
          }
          return '"' + n + '"';
        }
        function lr(e) {
          var t = String(e);
          return t
            .replace(/&/g, "&amp;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#39;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;");
        }
        function fr(e, t) {
          if (!Yt(e))
            throw new TypeError(
              "Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " +
                An(e) +
                ", index: 0)"
            );
          if (!Yt(t))
            throw new TypeError(
              "Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " +
                An(t) +
                ", index: 1)"
            );
          return e === t ? 0 : e > t ? 1 : -1;
        }
        function pr(e, t, n) {
          if (!(this instanceof pr))
            throw new SyntaxError(
              "Constructor must be called with the new operator"
            );
          (this.actual = e),
            (this.expected = t),
            (this.relation = n),
            (this.message =
              "Dimension mismatch (" +
              (Array.isArray(e) ? "[" + e.join(", ") + "]" : e) +
              " " +
              (this.relation || "!=") +
              " " +
              (Array.isArray(t) ? "[" + t.join(", ") + "]" : t) +
              ")"),
            (this.stack = new Error().stack);
        }
        function hr(e, t, n) {
          if (!(this instanceof hr))
            throw new SyntaxError(
              "Constructor must be called with the new operator"
            );
          (this.index = e),
            arguments.length < 3
              ? ((this.min = 0), (this.max = t))
              : ((this.min = t), (this.max = n)),
            void 0 !== this.min && this.index < this.min
              ? (this.message =
                  "Index out of range (" + this.index + " < " + this.min + ")")
              : void 0 !== this.max && this.index >= this.max
              ? (this.message =
                  "Index out of range (" +
                  this.index +
                  " > " +
                  (this.max - 1) +
                  ")")
              : (this.message = "Index out of range (" + this.index + ")"),
            (this.stack = new Error().stack);
        }
        function dr(e) {
          for (var t = []; Array.isArray(e); ) t.push(e.length), (e = e[0]);
          return t;
        }
        function mr(e, t) {
          if (0 === t.length) {
            if (Array.isArray(e)) throw new pr(e.length, 0);
          } else
            !(function e(t, n, r) {
              var i,
                a = t.length;
              if (a !== n[r]) throw new pr(a, n[r]);
              if (r < n.length - 1) {
                var o = r + 1;
                for (i = 0; i < a; i++) {
                  var s = t[i];
                  if (!Array.isArray(s))
                    throw new pr(n.length - 1, n.length, "<");
                  e(t[i], n, o);
                }
              } else
                for (i = 0; i < a; i++)
                  if (Array.isArray(t[i]))
                    throw new pr(n.length + 1, n.length, ">");
            })(e, t, 0);
        }
        function gr(e, t) {
          if (!$t(e) || !Ln(e))
            throw new TypeError("Index must be an integer (value: " + e + ")");
          if (e < 0 || ("number" == typeof t && e >= t)) throw new hr(e, t);
        }
        function yr(e, t, n) {
          if (!Array.isArray(e) || !Array.isArray(t))
            throw new TypeError("Array expected");
          if (0 === t.length)
            throw new Error("Resizing to scalar is not supported");
          return (
            t.forEach(function (e) {
              if (!$t(e) || !Ln(e) || e < 0)
                throw new TypeError(
                  "Invalid size, must contain positive integers (size: " +
                    ur(t) +
                    ")"
                );
            }),
            (function e(t, n, r, i) {
              var a,
                o,
                s = t.length,
                u = n[r],
                c = Math.min(s, u);
              if (((t.length = u), r < n.length - 1)) {
                var l = r + 1;
                for (a = 0; a < c; a++)
                  (o = t[a]),
                    Array.isArray(o) || ((o = [o]), (t[a] = o)),
                    e(o, n, l, i);
                for (a = c; a < u; a++) (o = []), (t[a] = o), e(o, n, l, i);
              } else {
                for (a = 0; a < c; a++)
                  for (; Array.isArray(t[a]); ) t[a] = t[a][0];
                for (a = c; a < u; a++) t[a] = i;
              }
            })(e, t, 0, void 0 !== n ? n : 0),
            e
          );
        }
        function vr(e, t) {
          var n,
            r = wr(e);
          function i(e) {
            return e.reduce(function (e, t) {
              return e * t;
            });
          }
          if (!Array.isArray(e) || !Array.isArray(t))
            throw new TypeError("Array expected");
          if (0 === t.length) throw new pr(0, i(dr(e)), "!=");
          for (var a = 1, o = 0; o < t.length; o++) a *= t[o];
          if (r.length !== a) throw new pr(i(t), i(dr(e)), "!=");
          try {
            n = (function (e, t) {
              for (var n, r = e, i = t.length - 1; i > 0; i--) {
                var a = t[i];
                n = [];
                for (var o = r.length / a, s = 0; s < o; s++)
                  n.push(r.slice(s * a, (s + 1) * a));
                r = n;
              }
              return r;
            })(r, t);
          } catch (n) {
            if (n instanceof pr) throw new pr(i(t), i(dr(e)), "!=");
            throw n;
          }
          return n;
        }
        function br(e, t) {
          for (var n = t || dr(e); Array.isArray(e) && 1 === e.length; )
            (e = e[0]), n.shift();
          for (var r = n.length; 1 === n[r - 1]; ) r--;
          return (
            r < n.length &&
              ((e = (function e(t, n, r) {
                var i, a;
                if (r < n) {
                  var o = r + 1;
                  for (i = 0, a = t.length; i < a; i++) t[i] = e(t[i], n, o);
                } else for (; Array.isArray(t); ) t = t[0];
                return t;
              })(e, r, 0)),
              (n.length = r)),
            e
          );
        }
        function xr(e, t, n, r) {
          var i = r || dr(e);
          if (n) for (var a = 0; a < n; a++) (e = [e]), i.unshift(1);
          for (
            e = (function e(t, n, r) {
              var i, a;
              if (Array.isArray(t)) {
                var o = r + 1;
                for (i = 0, a = t.length; i < a; i++) t[i] = e(t[i], n, o);
              } else for (var s = r; s < n; s++) t = [t];
              return t;
            })(e, t, 0);
            i.length < t;

          )
            i.push(1);
          return e;
        }
        function wr(e) {
          if (!Array.isArray(e)) return e;
          var t = [];
          return (
            e.forEach(function e(n) {
              Array.isArray(n) ? n.forEach(e) : t.push(n);
            }),
            t
          );
        }
        function Nr(e, t) {
          return Array.prototype.map.call(e, t);
        }
        function Er(e, t) {
          Array.prototype.forEach.call(e, t);
        }
        function Mr(e, t) {
          if (1 !== dr(e).length)
            throw new Error("Only one dimensional matrices supported");
          return Array.prototype.filter.call(e, t);
        }
        function Sr(e, t) {
          if (1 !== dr(e).length)
            throw new Error("Only one dimensional matrices supported");
          return Array.prototype.filter.call(e, function (e) {
            return t.test(e);
          });
        }
        function _r(e, t) {
          return Array.prototype.join.call(e, t);
        }
        function kr(e) {
          if (!Array.isArray(e)) throw new TypeError("Array input expected");
          if (0 === e.length) return e;
          var t = [],
            n = 0;
          t[0] = { value: e[0], identifier: 0 };
          for (var r = 1; r < e.length; r++)
            e[r] === e[r - 1] ? n++ : (n = 0),
              t.push({ value: e[r], identifier: n });
          return t;
        }
        function Or(e) {
          if (!Array.isArray(e)) throw new TypeError("Array input expected");
          if (0 === e.length) return e;
          for (var t = [], n = 0; n < e.length; n++) t.push(e[n].value);
          return t;
        }
        function Ar(e, t) {
          for (var n, r = 0, i = 0; i < e.length; i++) {
            var a = e[i],
              o = Array.isArray(a);
            if ((0 === i && o && (r = a.length), o && a.length !== r)) return;
            var s = o ? Ar(a, t) : t(a);
            if (void 0 === n) n = s;
            else if (n !== s) return "mixed";
          }
          return n;
        }
        function Cr(e, t, n, r) {
          function i(r) {
            var i = (function (e, t) {
              for (var n = {}, r = 0; r < t.length; r++) {
                var i = t[r],
                  a = e[i];
                void 0 !== a && (n[i] = a);
              }
              return n;
            })(r, t.map(Tr));
            return (
              (function (e, t, n) {
                if (
                  !t
                    .filter(function (e) {
                      return !(function (e) {
                        return e && "?" === e[0];
                      })(e);
                    })
                    .every(function (e) {
                      return void 0 !== n[e];
                    })
                ) {
                  var r = t.filter(function (e) {
                    return void 0 === n[e];
                  });
                  throw new Error(
                    'Cannot create function "'.concat(e, '", ') +
                      "some dependencies are missing: ".concat(
                        r
                          .map(function (e) {
                            return '"'.concat(e, '"');
                          })
                          .join(", "),
                        "."
                      )
                  );
                }
              })(e, t, r),
              n(i)
            );
          }
          return (
            (i.isFactory = !0),
            (i.fn = e),
            (i.dependencies = t.slice().sort()),
            r && (i.meta = r),
            i
          );
        }
        function Tr(e) {
          return e && "?" === e[0] ? e.slice(1) : e;
        }
        (pr.prototype = new RangeError()),
          (pr.prototype.constructor = RangeError),
          (pr.prototype.name = "DimensionError"),
          (pr.prototype.isDimensionError = !0),
          (hr.prototype = new RangeError()),
          (hr.prototype.constructor = RangeError),
          (hr.prototype.name = "IndexError"),
          (hr.prototype.isIndexError = !0);
        var Ir = function () {
            return (Ir = Rn.create), Rn;
          },
          Pr = Cr(
            "typed",
            ["?BigNumber", "?Complex", "?DenseMatrix", "?Fraction"],
            function (e) {
              var t = e.BigNumber,
                n = e.Complex,
                r = e.DenseMatrix,
                i = e.Fraction,
                a = Ir();
              return (
                (a.types = [
                  { name: "number", test: $t },
                  { name: "Complex", test: Wt },
                  { name: "BigNumber", test: Ht },
                  { name: "Fraction", test: Gt },
                  { name: "Unit", test: Jt },
                  { name: "string", test: Yt },
                  { name: "Chain", test: On },
                  { name: "Array", test: Zt },
                  { name: "Matrix", test: Xt },
                  { name: "DenseMatrix", test: Qt },
                  { name: "SparseMatrix", test: en },
                  { name: "Range", test: tn },
                  { name: "Index", test: nn },
                  { name: "boolean", test: rn },
                  { name: "ResultSet", test: an },
                  { name: "Help", test: on },
                  { name: "function", test: sn },
                  { name: "Date", test: un },
                  { name: "RegExp", test: cn },
                  { name: "null", test: fn },
                  { name: "undefined", test: pn },
                  { name: "AccessorNode", test: hn },
                  { name: "ArrayNode", test: dn },
                  { name: "AssignmentNode", test: mn },
                  { name: "BlockNode", test: gn },
                  { name: "ConditionalNode", test: yn },
                  { name: "ConstantNode", test: vn },
                  { name: "FunctionNode", test: xn },
                  { name: "FunctionAssignmentNode", test: bn },
                  { name: "IndexNode", test: wn },
                  { name: "Node", test: Nn },
                  { name: "ObjectNode", test: En },
                  { name: "OperatorNode", test: Mn },
                  { name: "ParenthesisNode", test: Sn },
                  { name: "RangeNode", test: _n },
                  { name: "SymbolNode", test: kn },
                  { name: "Object", test: ln },
                ]),
                (a.conversions = [
                  {
                    from: "number",
                    to: "BigNumber",
                    convert: function (e) {
                      if (
                        (t || Br(e),
                        e
                          .toExponential()
                          .replace(/e.*$/, "")
                          .replace(/^0\.?0*|\./, "").length > 15)
                      )
                        throw new TypeError(
                          "Cannot implicitly convert a number with >15 significant digits to BigNumber (value: " +
                            e +
                            "). Use function bignumber(x) to convert to BigNumber."
                        );
                      return new t(e);
                    },
                  },
                  {
                    from: "number",
                    to: "Complex",
                    convert: function (e) {
                      return n || Dr(e), new n(e, 0);
                    },
                  },
                  {
                    from: "number",
                    to: "string",
                    convert: function (e) {
                      return e + "";
                    },
                  },
                  {
                    from: "BigNumber",
                    to: "Complex",
                    convert: function (e) {
                      return n || Dr(e), new n(e.toNumber(), 0);
                    },
                  },
                  {
                    from: "Fraction",
                    to: "BigNumber",
                    convert: function (e) {
                      throw new TypeError(
                        "Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction."
                      );
                    },
                  },
                  {
                    from: "Fraction",
                    to: "Complex",
                    convert: function (e) {
                      return n || Dr(e), new n(e.valueOf(), 0);
                    },
                  },
                  {
                    from: "number",
                    to: "Fraction",
                    convert: function (e) {
                      i || jr(e);
                      var t = new i(e);
                      if (t.valueOf() !== e)
                        throw new TypeError(
                          "Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: " +
                            e +
                            "). Use function fraction(x) to convert to Fraction."
                        );
                      return t;
                    },
                  },
                  {
                    from: "string",
                    to: "number",
                    convert: function (e) {
                      var t = Number(e);
                      if (isNaN(t))
                        throw new Error(
                          'Cannot convert "' + e + '" to a number'
                        );
                      return t;
                    },
                  },
                  {
                    from: "string",
                    to: "BigNumber",
                    convert: function (e) {
                      t || Br(e);
                      try {
                        return new t(e);
                      } catch (t) {
                        throw new Error(
                          'Cannot convert "' + e + '" to BigNumber'
                        );
                      }
                    },
                  },
                  {
                    from: "string",
                    to: "Fraction",
                    convert: function (e) {
                      i || jr(e);
                      try {
                        return new i(e);
                      } catch (t) {
                        throw new Error(
                          'Cannot convert "' + e + '" to Fraction'
                        );
                      }
                    },
                  },
                  {
                    from: "string",
                    to: "Complex",
                    convert: function (e) {
                      n || Dr(e);
                      try {
                        return new n(e);
                      } catch (t) {
                        throw new Error(
                          'Cannot convert "' + e + '" to Complex'
                        );
                      }
                    },
                  },
                  {
                    from: "boolean",
                    to: "number",
                    convert: function (e) {
                      return +e;
                    },
                  },
                  {
                    from: "boolean",
                    to: "BigNumber",
                    convert: function (e) {
                      return t || Br(e), new t(+e);
                    },
                  },
                  {
                    from: "boolean",
                    to: "Fraction",
                    convert: function (e) {
                      return i || jr(e), new i(+e);
                    },
                  },
                  {
                    from: "boolean",
                    to: "string",
                    convert: function (e) {
                      return String(e);
                    },
                  },
                  {
                    from: "Array",
                    to: "Matrix",
                    convert: function (e) {
                      return (
                        r ||
                          (function () {
                            throw new Error(
                              "Cannot convert array into a Matrix: no class 'DenseMatrix' provided"
                            );
                          })(),
                        new r(e)
                      );
                    },
                  },
                  {
                    from: "Matrix",
                    to: "Array",
                    convert: function (e) {
                      return e.valueOf();
                    },
                  },
                ]),
                a
              );
            }
          );
        function Br(e) {
          throw new Error(
            "Cannot convert value ".concat(
              e,
              " into a BigNumber: no class 'BigNumber' provided"
            )
          );
        }
        function Dr(e) {
          throw new Error(
            "Cannot convert value ".concat(
              e,
              " into a Complex number: no class 'Complex' provided"
            )
          );
        }
        function jr(e) {
          throw new Error(
            "Cannot convert value ".concat(
              e,
              " into a Fraction, no class 'Fraction' provided."
            )
          );
        }
        var Rr,
          Lr,
          zr = Cr(
            "ResultSet",
            [],
            function () {
              function e(t) {
                if (!(this instanceof e))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                this.entries = t || [];
              }
              return (
                (e.prototype.type = "ResultSet"),
                (e.prototype.isResultSet = !0),
                (e.prototype.valueOf = function () {
                  return this.entries;
                }),
                (e.prototype.toString = function () {
                  return "[" + this.entries.join(", ") + "]";
                }),
                (e.prototype.toJSON = function () {
                  return { mathjs: "ResultSet", entries: this.entries };
                }),
                (e.fromJSON = function (t) {
                  return new e(t.entries);
                }),
                e
              );
            },
            { isClass: !0 }
          ),
          qr = 9e15,
          Fr = 1e9,
          Ur = "0123456789abcdef",
          Vr =
            "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",
          $r =
            "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",
          Hr = {
            precision: 20,
            rounding: 4,
            modulo: 1,
            toExpNeg: -7,
            toExpPos: 21,
            minE: -qr,
            maxE: qr,
            crypto: !1,
          },
          Wr = !0,
          Gr = "[DecimalError] ",
          Jr = Gr + "Invalid argument: ",
          Yr = Gr + "Precision limit exceeded",
          Zr = Gr + "crypto unavailable",
          Xr = Math.floor,
          Kr = Math.pow,
          Qr = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,
          ei = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,
          ti = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,
          ni = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          ri = 1e7,
          ii = Vr.length - 1,
          ai = $r.length - 1,
          oi = { name: "[object Decimal]" };
        function si(e) {
          var t,
            n,
            r,
            i = e.length - 1,
            a = "",
            o = e[0];
          if (i > 0) {
            for (a += o, t = 1; t < i; t++)
              (n = 7 - (r = e[t] + "").length) && (a += vi(n)), (a += r);
            (n = 7 - (r = (o = e[t]) + "").length) && (a += vi(n));
          } else if (0 === o) return "0";
          for (; o % 10 == 0; ) o /= 10;
          return a + o;
        }
        function ui(e, t, n) {
          if (e !== ~~e || e < t || e > n) throw Error(Jr + e);
        }
        function ci(e, t, n, r) {
          var i, a, o, s;
          for (a = e[0]; a >= 10; a /= 10) --t;
          return (
            --t < 0
              ? ((t += 7), (i = 0))
              : ((i = Math.ceil((t + 1) / 7)), (t %= 7)),
            (a = Kr(10, 7 - t)),
            (s = e[i] % a | 0),
            null == r
              ? t < 3
                ? (0 == t ? (s = (s / 100) | 0) : 1 == t && (s = (s / 10) | 0),
                  (o =
                    (n < 4 && 99999 == s) ||
                    (n > 3 && 49999 == s) ||
                    5e4 == s ||
                    0 == s))
                : (o =
                    (((n < 4 && s + 1 == a) || (n > 3 && s + 1 == a / 2)) &&
                      ((e[i + 1] / a / 100) | 0) == Kr(10, t - 2) - 1) ||
                    ((s == a / 2 || 0 == s) && 0 == ((e[i + 1] / a / 100) | 0)))
              : t < 4
              ? (0 == t
                  ? (s = (s / 1e3) | 0)
                  : 1 == t
                  ? (s = (s / 100) | 0)
                  : 2 == t && (s = (s / 10) | 0),
                (o = ((r || n < 4) && 9999 == s) || (!r && n > 3 && 4999 == s)))
              : (o =
                  (((r || n < 4) && s + 1 == a) ||
                    (!r && n > 3 && s + 1 == a / 2)) &&
                  ((e[i + 1] / a / 1e3) | 0) == Kr(10, t - 3) - 1),
            o
          );
        }
        function li(e, t, n) {
          for (var r, i, a = [0], o = 0, s = e.length; o < s; ) {
            for (i = a.length; i--; ) a[i] *= t;
            for (a[0] += Ur.indexOf(e.charAt(o++)), r = 0; r < a.length; r++)
              a[r] > n - 1 &&
                (void 0 === a[r + 1] && (a[r + 1] = 0),
                (a[r + 1] += (a[r] / n) | 0),
                (a[r] %= n));
          }
          return a.reverse();
        }
        (oi.absoluteValue = oi.abs = function () {
          var e = new this.constructor(this);
          return e.s < 0 && (e.s = 1), pi(e);
        }),
          (oi.ceil = function () {
            return pi(new this.constructor(this), this.e + 1, 2);
          }),
          (oi.comparedTo = oi.cmp = function (e) {
            var t,
              n,
              r,
              i,
              a = this,
              o = a.d,
              s = (e = new a.constructor(e)).d,
              u = a.s,
              c = e.s;
            if (!o || !s)
              return u && c
                ? u !== c
                  ? u
                  : o === s
                  ? 0
                  : !o ^ (u < 0)
                  ? 1
                  : -1
                : NaN;
            if (!o[0] || !s[0]) return o[0] ? u : s[0] ? -c : 0;
            if (u !== c) return u;
            if (a.e !== e.e) return (a.e > e.e) ^ (u < 0) ? 1 : -1;
            for (t = 0, n = (r = o.length) < (i = s.length) ? r : i; t < n; ++t)
              if (o[t] !== s[t]) return (o[t] > s[t]) ^ (u < 0) ? 1 : -1;
            return r === i ? 0 : (r > i) ^ (u < 0) ? 1 : -1;
          }),
          (oi.cosine = oi.cos = function () {
            var e,
              t,
              n = this,
              r = n.constructor;
            return n.d
              ? n.d[0]
                ? ((e = r.precision),
                  (t = r.rounding),
                  (r.precision = e + Math.max(n.e, n.sd()) + 7),
                  (r.rounding = 1),
                  (n = (function (e, t) {
                    var n,
                      r,
                      i = t.d.length;
                    i < 32
                      ? (r = (1 / ki(4, (n = Math.ceil(i / 3)))).toString())
                      : ((n = 16), (r = "2.3283064365386962890625e-10")),
                      (e.precision += n),
                      (t = _i(e, 1, t.times(r), new e(1)));
                    for (var a = n; a--; ) {
                      var o = t.times(t);
                      t = o.times(o).minus(o).times(8).plus(1);
                    }
                    return (e.precision -= n), t;
                  })(r, Oi(r, n))),
                  (r.precision = e),
                  (r.rounding = t),
                  pi(2 == Lr || 3 == Lr ? n.neg() : n, e, t, !0))
                : new r(1)
              : new r(NaN);
          }),
          (oi.cubeRoot = oi.cbrt = function () {
            var e,
              t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c,
              l = this,
              f = l.constructor;
            if (!l.isFinite() || l.isZero()) return new f(l);
            for (
              Wr = !1,
                (a = l.s * Kr(l.s * l, 1 / 3)) && Math.abs(a) != 1 / 0
                  ? (r = new f(a.toString()))
                  : ((n = si(l.d)),
                    (a = ((e = l.e) - n.length + 1) % 3) &&
                      (n += 1 == a || -2 == a ? "0" : "00"),
                    (a = Kr(n, 1 / 3)),
                    (e = Xr((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2))),
                    ((r = new f(
                      (n =
                        a == 1 / 0
                          ? "5e" + e
                          : (n = a.toExponential()).slice(
                              0,
                              n.indexOf("e") + 1
                            ) + e)
                    )).s = l.s)),
                o = (e = f.precision) + 3;
              ;

            )
              if (
                ((c = (u = (s = r).times(s).times(s)).plus(l)),
                (r = fi(c.plus(l).times(s), c.plus(u), o + 2, 1)),
                si(s.d).slice(0, o) === (n = si(r.d)).slice(0, o))
              ) {
                if (
                  "9999" != (n = n.slice(o - 3, o + 1)) &&
                  (i || "4999" != n)
                ) {
                  (+n && (+n.slice(1) || "5" != n.charAt(0))) ||
                    (pi(r, e + 1, 1), (t = !r.times(r).times(r).eq(l)));
                  break;
                }
                if (!i && (pi(s, e + 1, 0), s.times(s).times(s).eq(l))) {
                  r = s;
                  break;
                }
                (o += 4), (i = 1);
              }
            return (Wr = !0), pi(r, e, f.rounding, t);
          }),
          (oi.decimalPlaces = oi.dp = function () {
            var e,
              t = this.d,
              n = NaN;
            if (t) {
              if (((n = 7 * ((e = t.length - 1) - Xr(this.e / 7))), (e = t[e])))
                for (; e % 10 == 0; e /= 10) n--;
              n < 0 && (n = 0);
            }
            return n;
          }),
          (oi.dividedBy = oi.div = function (e) {
            return fi(this, new this.constructor(e));
          }),
          (oi.dividedToIntegerBy = oi.divToInt = function (e) {
            var t = this.constructor;
            return pi(fi(this, new t(e), 0, 1, 1), t.precision, t.rounding);
          }),
          (oi.equals = oi.eq = function (e) {
            return 0 === this.cmp(e);
          }),
          (oi.floor = function () {
            return pi(new this.constructor(this), this.e + 1, 3);
          }),
          (oi.greaterThan = oi.gt = function (e) {
            return this.cmp(e) > 0;
          }),
          (oi.greaterThanOrEqualTo = oi.gte = function (e) {
            var t = this.cmp(e);
            return 1 == t || 0 === t;
          }),
          (oi.hyperbolicCosine = oi.cosh = function () {
            var e,
              t,
              n,
              r,
              i,
              a = this,
              o = a.constructor,
              s = new o(1);
            if (!a.isFinite()) return new o(a.s ? 1 / 0 : NaN);
            if (a.isZero()) return s;
            (n = o.precision),
              (r = o.rounding),
              (o.precision = n + Math.max(a.e, a.sd()) + 4),
              (o.rounding = 1),
              (i = a.d.length) < 32
                ? (t = (1 / ki(4, (e = Math.ceil(i / 3)))).toString())
                : ((e = 16), (t = "2.3283064365386962890625e-10")),
              (a = _i(o, 1, a.times(t), new o(1), !0));
            for (var u, c = e, l = new o(8); c--; )
              (u = a.times(a)), (a = s.minus(u.times(l.minus(u.times(l)))));
            return pi(a, (o.precision = n), (o.rounding = r), !0);
          }),
          (oi.hyperbolicSine = oi.sinh = function () {
            var e,
              t,
              n,
              r,
              i = this,
              a = i.constructor;
            if (!i.isFinite() || i.isZero()) return new a(i);
            if (
              ((t = a.precision),
              (n = a.rounding),
              (a.precision = t + Math.max(i.e, i.sd()) + 4),
              (a.rounding = 1),
              (r = i.d.length) < 3)
            )
              i = _i(a, 2, i, i, !0);
            else {
              (e = (e = 1.4 * Math.sqrt(r)) > 16 ? 16 : 0 | e),
                (i = _i(a, 2, (i = i.times(1 / ki(5, e))), i, !0));
              for (var o, s = new a(5), u = new a(16), c = new a(20); e--; )
                (o = i.times(i)),
                  (i = i.times(s.plus(o.times(u.times(o).plus(c)))));
            }
            return (a.precision = t), (a.rounding = n), pi(i, t, n, !0);
          }),
          (oi.hyperbolicTangent = oi.tanh = function () {
            var e,
              t,
              n = this,
              r = n.constructor;
            return n.isFinite()
              ? n.isZero()
                ? new r(n)
                : ((e = r.precision),
                  (t = r.rounding),
                  (r.precision = e + 7),
                  (r.rounding = 1),
                  fi(n.sinh(), n.cosh(), (r.precision = e), (r.rounding = t)))
              : new r(n.s);
          }),
          (oi.inverseCosine = oi.acos = function () {
            var e,
              t = this,
              n = t.constructor,
              r = t.abs().cmp(1),
              i = n.precision,
              a = n.rounding;
            return -1 !== r
              ? 0 === r
                ? t.isNeg()
                  ? gi(n, i, a)
                  : new n(0)
                : new n(NaN)
              : t.isZero()
              ? gi(n, i + 4, a).times(0.5)
              : ((n.precision = i + 6),
                (n.rounding = 1),
                (t = t.asin()),
                (e = gi(n, i + 4, a).times(0.5)),
                (n.precision = i),
                (n.rounding = a),
                e.minus(t));
          }),
          (oi.inverseHyperbolicCosine = oi.acosh = function () {
            var e,
              t,
              n = this,
              r = n.constructor;
            return n.lte(1)
              ? new r(n.eq(1) ? 0 : NaN)
              : n.isFinite()
              ? ((e = r.precision),
                (t = r.rounding),
                (r.precision = e + Math.max(Math.abs(n.e), n.sd()) + 4),
                (r.rounding = 1),
                (Wr = !1),
                (n = n.times(n).minus(1).sqrt().plus(n)),
                (Wr = !0),
                (r.precision = e),
                (r.rounding = t),
                n.ln())
              : new r(n);
          }),
          (oi.inverseHyperbolicSine = oi.asinh = function () {
            var e,
              t,
              n = this,
              r = n.constructor;
            return !n.isFinite() || n.isZero()
              ? new r(n)
              : ((e = r.precision),
                (t = r.rounding),
                (r.precision = e + 2 * Math.max(Math.abs(n.e), n.sd()) + 6),
                (r.rounding = 1),
                (Wr = !1),
                (n = n.times(n).plus(1).sqrt().plus(n)),
                (Wr = !0),
                (r.precision = e),
                (r.rounding = t),
                n.ln());
          }),
          (oi.inverseHyperbolicTangent = oi.atanh = function () {
            var e,
              t,
              n,
              r,
              i = this,
              a = i.constructor;
            return i.isFinite()
              ? i.e >= 0
                ? new a(i.abs().eq(1) ? i.s / 0 : i.isZero() ? i : NaN)
                : ((e = a.precision),
                  (t = a.rounding),
                  (r = i.sd()),
                  Math.max(r, e) < 2 * -i.e - 1
                    ? pi(new a(i), e, t, !0)
                    : ((a.precision = n = r - i.e),
                      (i = fi(i.plus(1), new a(1).minus(i), n + e, 1)),
                      (a.precision = e + 4),
                      (a.rounding = 1),
                      (i = i.ln()),
                      (a.precision = e),
                      (a.rounding = t),
                      i.times(0.5)))
              : new a(NaN);
          }),
          (oi.inverseSine = oi.asin = function () {
            var e,
              t,
              n,
              r,
              i = this,
              a = i.constructor;
            return i.isZero()
              ? new a(i)
              : ((t = i.abs().cmp(1)),
                (n = a.precision),
                (r = a.rounding),
                -1 !== t
                  ? 0 === t
                    ? (((e = gi(a, n + 4, r).times(0.5)).s = i.s), e)
                    : new a(NaN)
                  : ((a.precision = n + 6),
                    (a.rounding = 1),
                    (i = i
                      .div(new a(1).minus(i.times(i)).sqrt().plus(1))
                      .atan()),
                    (a.precision = n),
                    (a.rounding = r),
                    i.times(2)));
          }),
          (oi.inverseTangent = oi.atan = function () {
            var e,
              t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c = this,
              l = c.constructor,
              f = l.precision,
              p = l.rounding;
            if (c.isFinite()) {
              if (c.isZero()) return new l(c);
              if (c.abs().eq(1) && f + 4 <= ai)
                return ((o = gi(l, f + 4, p).times(0.25)).s = c.s), o;
            } else {
              if (!c.s) return new l(NaN);
              if (f + 4 <= ai)
                return ((o = gi(l, f + 4, p).times(0.5)).s = c.s), o;
            }
            for (
              l.precision = s = f + 10,
                l.rounding = 1,
                e = n = Math.min(28, (s / 7 + 2) | 0);
              e;
              --e
            )
              c = c.div(c.times(c).plus(1).sqrt().plus(1));
            for (
              Wr = !1,
                t = Math.ceil(s / 7),
                r = 1,
                u = c.times(c),
                o = new l(c),
                i = c;
              -1 !== e;

            )
              if (
                ((i = i.times(u)),
                (a = o.minus(i.div((r += 2)))),
                (i = i.times(u)),
                void 0 !== (o = a.plus(i.div((r += 2)))).d[t])
              )
                for (e = t; o.d[e] === a.d[e] && e--; );
            return (
              n && (o = o.times(2 << (n - 1))),
              (Wr = !0),
              pi(o, (l.precision = f), (l.rounding = p), !0)
            );
          }),
          (oi.isFinite = function () {
            return !!this.d;
          }),
          (oi.isInteger = oi.isInt = function () {
            return !!this.d && Xr(this.e / 7) > this.d.length - 2;
          }),
          (oi.isNaN = function () {
            return !this.s;
          }),
          (oi.isNegative = oi.isNeg = function () {
            return this.s < 0;
          }),
          (oi.isPositive = oi.isPos = function () {
            return this.s > 0;
          }),
          (oi.isZero = function () {
            return !!this.d && 0 === this.d[0];
          }),
          (oi.lessThan = oi.lt = function (e) {
            return this.cmp(e) < 0;
          }),
          (oi.lessThanOrEqualTo = oi.lte = function (e) {
            return this.cmp(e) < 1;
          }),
          (oi.logarithm = oi.log = function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c = this,
              l = c.constructor,
              f = l.precision,
              p = l.rounding;
            if (null == e) (e = new l(10)), (t = !0);
            else {
              if (((n = (e = new l(e)).d), e.s < 0 || !n || !n[0] || e.eq(1)))
                return new l(NaN);
              t = e.eq(10);
            }
            if (((n = c.d), c.s < 0 || !n || !n[0] || c.eq(1)))
              return new l(
                n && !n[0] ? -1 / 0 : 1 != c.s ? NaN : n ? 0 : 1 / 0
              );
            if (t)
              if (n.length > 1) a = !0;
              else {
                for (i = n[0]; i % 10 == 0; ) i /= 10;
                a = 1 !== i;
              }
            if (
              ((Wr = !1),
              (o = Ei(c, (s = f + 5))),
              (r = t ? mi(l, s + 10) : Ei(e, s)),
              ci((u = fi(o, r, s, 1)).d, (i = f), p))
            )
              do {
                if (
                  ((o = Ei(c, (s += 10))),
                  (r = t ? mi(l, s + 10) : Ei(e, s)),
                  (u = fi(o, r, s, 1)),
                  !a)
                ) {
                  +si(u.d).slice(i + 1, i + 15) + 1 == 1e14 &&
                    (u = pi(u, f + 1, 0));
                  break;
                }
              } while (ci(u.d, (i += 10), p));
            return (Wr = !0), pi(u, f, p);
          }),
          (oi.minus = oi.sub = function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c,
              l,
              f,
              p,
              h = this,
              d = h.constructor;
            if (((e = new d(e)), !h.d || !e.d))
              return (
                h.s && e.s
                  ? h.d
                    ? (e.s = -e.s)
                    : (e = new d(e.d || h.s !== e.s ? h : NaN))
                  : (e = new d(NaN)),
                e
              );
            if (h.s != e.s) return (e.s = -e.s), h.plus(e);
            if (
              ((c = h.d),
              (p = e.d),
              (s = d.precision),
              (u = d.rounding),
              !c[0] || !p[0])
            ) {
              if (p[0]) e.s = -e.s;
              else {
                if (!c[0]) return new d(3 === u ? -0 : 0);
                e = new d(h);
              }
              return Wr ? pi(e, s, u) : e;
            }
            if (
              ((n = Xr(e.e / 7)),
              (l = Xr(h.e / 7)),
              (c = c.slice()),
              (a = l - n))
            ) {
              for (
                (f = a < 0)
                  ? ((t = c), (a = -a), (o = p.length))
                  : ((t = p), (n = l), (o = c.length)),
                  a > (r = Math.max(Math.ceil(s / 7), o) + 2) &&
                    ((a = r), (t.length = 1)),
                  t.reverse(),
                  r = a;
                r--;

              )
                t.push(0);
              t.reverse();
            } else {
              for (
                (f = (r = c.length) < (o = p.length)) && (o = r), r = 0;
                r < o;
                r++
              )
                if (c[r] != p[r]) {
                  f = c[r] < p[r];
                  break;
                }
              a = 0;
            }
            for (
              f && ((t = c), (c = p), (p = t), (e.s = -e.s)),
                o = c.length,
                r = p.length - o;
              r > 0;
              --r
            )
              c[o++] = 0;
            for (r = p.length; r > a; ) {
              if (c[--r] < p[r]) {
                for (i = r; i && 0 === c[--i]; ) c[i] = ri - 1;
                --c[i], (c[r] += ri);
              }
              c[r] -= p[r];
            }
            for (; 0 === c[--o]; ) c.pop();
            for (; 0 === c[0]; c.shift()) --n;
            return c[0]
              ? ((e.d = c), (e.e = di(c, n)), Wr ? pi(e, s, u) : e)
              : new d(3 === u ? -0 : 0);
          }),
          (oi.modulo = oi.mod = function (e) {
            var t,
              n = this,
              r = n.constructor;
            return (
              (e = new r(e)),
              !n.d || !e.s || (e.d && !e.d[0])
                ? new r(NaN)
                : !e.d || (n.d && !n.d[0])
                ? pi(new r(n), r.precision, r.rounding)
                : ((Wr = !1),
                  9 == r.modulo
                    ? ((t = fi(n, e.abs(), 0, 3, 1)).s *= e.s)
                    : (t = fi(n, e, 0, r.modulo, 1)),
                  (t = t.times(e)),
                  (Wr = !0),
                  n.minus(t))
            );
          }),
          (oi.naturalExponential = oi.exp = function () {
            return Ni(this);
          }),
          (oi.naturalLogarithm = oi.ln = function () {
            return Ei(this);
          }),
          (oi.negated = oi.neg = function () {
            var e = new this.constructor(this);
            return (e.s = -e.s), pi(e);
          }),
          (oi.plus = oi.add = function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c,
              l,
              f = this,
              p = f.constructor;
            if (((e = new p(e)), !f.d || !e.d))
              return (
                f.s && e.s
                  ? f.d || (e = new p(e.d || f.s === e.s ? f : NaN))
                  : (e = new p(NaN)),
                e
              );
            if (f.s != e.s) return (e.s = -e.s), f.minus(e);
            if (
              ((c = f.d),
              (l = e.d),
              (s = p.precision),
              (u = p.rounding),
              !c[0] || !l[0])
            )
              return l[0] || (e = new p(f)), Wr ? pi(e, s, u) : e;
            if (
              ((a = Xr(f.e / 7)),
              (r = Xr(e.e / 7)),
              (c = c.slice()),
              (i = a - r))
            ) {
              for (
                i < 0
                  ? ((n = c), (i = -i), (o = l.length))
                  : ((n = l), (r = a), (o = c.length)),
                  i > (o = (a = Math.ceil(s / 7)) > o ? a + 1 : o + 1) &&
                    ((i = o), (n.length = 1)),
                  n.reverse();
                i--;

              )
                n.push(0);
              n.reverse();
            }
            for (
              (o = c.length) - (i = l.length) < 0 &&
                ((i = o), (n = l), (l = c), (c = n)),
                t = 0;
              i;

            )
              (t = ((c[--i] = c[i] + l[i] + t) / ri) | 0), (c[i] %= ri);
            for (t && (c.unshift(t), ++r), o = c.length; 0 == c[--o]; ) c.pop();
            return (e.d = c), (e.e = di(c, r)), Wr ? pi(e, s, u) : e;
          }),
          (oi.precision = oi.sd = function (e) {
            var t,
              n = this;
            if (void 0 !== e && e !== !!e && 1 !== e && 0 !== e)
              throw Error(Jr + e);
            return (
              n.d
                ? ((t = yi(n.d)), e && n.e + 1 > t && (t = n.e + 1))
                : (t = NaN),
              t
            );
          }),
          (oi.round = function () {
            var e = this,
              t = e.constructor;
            return pi(new t(e), e.e + 1, t.rounding);
          }),
          (oi.sine = oi.sin = function () {
            var e,
              t,
              n = this,
              r = n.constructor;
            return n.isFinite()
              ? n.isZero()
                ? new r(n)
                : ((e = r.precision),
                  (t = r.rounding),
                  (r.precision = e + Math.max(n.e, n.sd()) + 7),
                  (r.rounding = 1),
                  (n = (function (e, t) {
                    var n,
                      r = t.d.length;
                    if (r < 3) return _i(e, 2, t, t);
                    (n = (n = 1.4 * Math.sqrt(r)) > 16 ? 16 : 0 | n),
                      (t = _i(e, 2, (t = t.times(1 / ki(5, n))), t));
                    for (
                      var i, a = new e(5), o = new e(16), s = new e(20);
                      n--;

                    )
                      (i = t.times(t)),
                        (t = t.times(a.plus(i.times(o.times(i).minus(s)))));
                    return t;
                  })(r, Oi(r, n))),
                  (r.precision = e),
                  (r.rounding = t),
                  pi(Lr > 2 ? n.neg() : n, e, t, !0))
              : new r(NaN);
          }),
          (oi.squareRoot = oi.sqrt = function () {
            var e,
              t,
              n,
              r,
              i,
              a,
              o = this,
              s = o.d,
              u = o.e,
              c = o.s,
              l = o.constructor;
            if (1 !== c || !s || !s[0])
              return new l(!c || (c < 0 && (!s || s[0])) ? NaN : s ? o : 1 / 0);
            for (
              Wr = !1,
                0 == (c = Math.sqrt(+o)) || c == 1 / 0
                  ? (((t = si(s)).length + u) % 2 == 0 && (t += "0"),
                    (c = Math.sqrt(t)),
                    (u = Xr((u + 1) / 2) - (u < 0 || u % 2)),
                    (r = new l(
                      (t =
                        c == 1 / 0
                          ? "5e" + u
                          : (t = c.toExponential()).slice(
                              0,
                              t.indexOf("e") + 1
                            ) + u)
                    )))
                  : (r = new l(c.toString())),
                n = (u = l.precision) + 3;
              ;

            )
              if (
                ((r = (a = r).plus(fi(o, a, n + 2, 1)).times(0.5)),
                si(a.d).slice(0, n) === (t = si(r.d)).slice(0, n))
              ) {
                if (
                  "9999" != (t = t.slice(n - 3, n + 1)) &&
                  (i || "4999" != t)
                ) {
                  (+t && (+t.slice(1) || "5" != t.charAt(0))) ||
                    (pi(r, u + 1, 1), (e = !r.times(r).eq(o)));
                  break;
                }
                if (!i && (pi(a, u + 1, 0), a.times(a).eq(o))) {
                  r = a;
                  break;
                }
                (n += 4), (i = 1);
              }
            return (Wr = !0), pi(r, u, l.rounding, e);
          }),
          (oi.tangent = oi.tan = function () {
            var e,
              t,
              n = this,
              r = n.constructor;
            return n.isFinite()
              ? n.isZero()
                ? new r(n)
                : ((e = r.precision),
                  (t = r.rounding),
                  (r.precision = e + 10),
                  (r.rounding = 1),
                  ((n = n.sin()).s = 1),
                  (n = fi(n, new r(1).minus(n.times(n)).sqrt(), e + 10, 0)),
                  (r.precision = e),
                  (r.rounding = t),
                  pi(2 == Lr || 4 == Lr ? n.neg() : n, e, t, !0))
              : new r(NaN);
          }),
          (oi.times = oi.mul = function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c,
              l = this,
              f = l.constructor,
              p = l.d,
              h = (e = new f(e)).d;
            if (((e.s *= l.s), !(p && p[0] && h && h[0])))
              return new f(
                !e.s || (p && !p[0] && !h) || (h && !h[0] && !p)
                  ? NaN
                  : p && h
                  ? 0 * e.s
                  : e.s / 0
              );
            for (
              n = Xr(l.e / 7) + Xr(e.e / 7),
                (u = p.length) < (c = h.length) &&
                  ((a = p), (p = h), (h = a), (o = u), (u = c), (c = o)),
                a = [],
                r = o = u + c;
              r--;

            )
              a.push(0);
            for (r = c; --r >= 0; ) {
              for (t = 0, i = u + r; i > r; )
                (s = a[i] + h[r] * p[i - r - 1] + t),
                  (a[i--] = s % ri | 0),
                  (t = (s / ri) | 0);
              a[i] = (a[i] + t) % ri | 0;
            }
            for (; !a[--o]; ) a.pop();
            return (
              t ? ++n : a.shift(),
              (e.d = a),
              (e.e = di(a, n)),
              Wr ? pi(e, f.precision, f.rounding) : e
            );
          }),
          (oi.toBinary = function (e, t) {
            return Ai(this, 2, e, t);
          }),
          (oi.toDecimalPlaces = oi.toDP = function (e, t) {
            var n = this,
              r = n.constructor;
            return (
              (n = new r(n)),
              void 0 === e
                ? n
                : (ui(e, 0, Fr),
                  void 0 === t ? (t = r.rounding) : ui(t, 0, 8),
                  pi(n, e + n.e + 1, t))
            );
          }),
          (oi.toExponential = function (e, t) {
            var n,
              r = this,
              i = r.constructor;
            return (
              void 0 === e
                ? (n = hi(r, !0))
                : (ui(e, 0, Fr),
                  void 0 === t ? (t = i.rounding) : ui(t, 0, 8),
                  (n = hi((r = pi(new i(r), e + 1, t)), !0, e + 1))),
              r.isNeg() && !r.isZero() ? "-" + n : n
            );
          }),
          (oi.toFixed = function (e, t) {
            var n,
              r,
              i = this,
              a = i.constructor;
            return (
              void 0 === e
                ? (n = hi(i))
                : (ui(e, 0, Fr),
                  void 0 === t ? (t = a.rounding) : ui(t, 0, 8),
                  (n = hi(
                    (r = pi(new a(i), e + i.e + 1, t)),
                    !1,
                    e + r.e + 1
                  ))),
              i.isNeg() && !i.isZero() ? "-" + n : n
            );
          }),
          (oi.toFraction = function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s,
              u,
              c,
              l,
              f,
              p,
              h = this,
              d = h.d,
              m = h.constructor;
            if (!d) return new m(h);
            if (
              ((c = n = new m(1)),
              (r = u = new m(0)),
              (o = (a = (t = new m(r)).e = yi(d) - h.e - 1) % 7),
              (t.d[0] = Kr(10, o < 0 ? 7 + o : o)),
              null == e)
            )
              e = a > 0 ? t : c;
            else {
              if (!(s = new m(e)).isInt() || s.lt(c)) throw Error(Jr + s);
              e = s.gt(t) ? (a > 0 ? t : c) : s;
            }
            for (
              Wr = !1,
                s = new m(si(d)),
                l = m.precision,
                m.precision = a = 7 * d.length * 2;
              (f = fi(s, t, 0, 1, 1)), 1 != (i = n.plus(f.times(r))).cmp(e);

            )
              (n = r),
                (r = i),
                (i = c),
                (c = u.plus(f.times(i))),
                (u = i),
                (i = t),
                (t = s.minus(f.times(i))),
                (s = i);
            return (
              (i = fi(e.minus(n), r, 0, 1, 1)),
              (u = u.plus(i.times(c))),
              (n = n.plus(i.times(r))),
              (u.s = c.s = h.s),
              (p =
                fi(c, r, a, 1)
                  .minus(h)
                  .abs()
                  .cmp(fi(u, n, a, 1).minus(h).abs()) < 1
                  ? [c, r]
                  : [u, n]),
              (m.precision = l),
              (Wr = !0),
              p
            );
          }),
          (oi.toHexadecimal = oi.toHex = function (e, t) {
            return Ai(this, 16, e, t);
          }),
          (oi.toNearest = function (e, t) {
            var n = this,
              r = n.constructor;
            if (((n = new r(n)), null == e)) {
              if (!n.d) return n;
              (e = new r(1)), (t = r.rounding);
            } else {
              if (
                ((e = new r(e)),
                void 0 === t ? (t = r.rounding) : ui(t, 0, 8),
                !n.d)
              )
                return e.s ? n : e;
              if (!e.d) return e.s && (e.s = n.s), e;
            }
            return (
              e.d[0]
                ? ((Wr = !1),
                  (n = fi(n, e, 0, t, 1).times(e)),
                  (Wr = !0),
                  pi(n))
                : ((e.s = n.s), (n = e)),
              n
            );
          }),
          (oi.toNumber = function () {
            return +this;
          }),
          (oi.toOctal = function (e, t) {
            return Ai(this, 8, e, t);
          }),
          (oi.toPower = oi.pow = function (e) {
            var t,
              n,
              r,
              i,
              a,
              o,
              s = this,
              u = s.constructor,
              c = +(e = new u(e));
            if (!(s.d && e.d && s.d[0] && e.d[0])) return new u(Kr(+s, c));
            if ((s = new u(s)).eq(1)) return s;
            if (((r = u.precision), (a = u.rounding), e.eq(1)))
              return pi(s, r, a);
            if (
              (t = Xr(e.e / 7)) >= e.d.length - 1 &&
              (n = c < 0 ? -c : c) <= 9007199254740991
            )
              return (
                (i = bi(u, s, n, r)), e.s < 0 ? new u(1).div(i) : pi(i, r, a)
              );
            if ((o = s.s) < 0) {
              if (t < e.d.length - 1) return new u(NaN);
              if (
                (0 == (1 & e.d[t]) && (o = 1),
                0 == s.e && 1 == s.d[0] && 1 == s.d.length)
              )
                return (s.s = o), s;
            }
            return (t =
              0 != (n = Kr(+s, c)) && isFinite(n)
                ? new u(n + "").e
                : Xr(c * (Math.log("0." + si(s.d)) / Math.LN10 + s.e + 1))) >
              u.maxE + 1 || t < u.minE - 1
              ? new u(t > 0 ? o / 0 : 0)
              : ((Wr = !1),
                (u.rounding = s.s = 1),
                (n = Math.min(12, (t + "").length)),
                (i = Ni(e.times(Ei(s, r + n)), r)).d &&
                  ci((i = pi(i, r + 5, 1)).d, r, a) &&
                  ((t = r + 10),
                  +si((i = pi(Ni(e.times(Ei(s, t + n)), t), t + 5, 1)).d).slice(
                    r + 1,
                    r + 15
                  ) +
                    1 ==
                    1e14 && (i = pi(i, r + 1, 0))),
                (i.s = o),
                (Wr = !0),
                (u.rounding = a),
                pi(i, r, a));
          }),
          (oi.toPrecision = function (e, t) {
            var n,
              r = this,
              i = r.constructor;
            return (
              void 0 === e
                ? (n = hi(r, r.e <= i.toExpNeg || r.e >= i.toExpPos))
                : (ui(e, 1, Fr),
                  void 0 === t ? (t = i.rounding) : ui(t, 0, 8),
                  (n = hi(
                    (r = pi(new i(r), e, t)),
                    e <= r.e || r.e <= i.toExpNeg,
                    e
                  ))),
              r.isNeg() && !r.isZero() ? "-" + n : n
            );
          }),
          (oi.toSignificantDigits = oi.toSD = function (e, t) {
            var n = this.constructor;
            return (
              void 0 === e
                ? ((e = n.precision), (t = n.rounding))
                : (ui(e, 1, Fr), void 0 === t ? (t = n.rounding) : ui(t, 0, 8)),
              pi(new n(this), e, t)
            );
          }),
          (oi.toString = function () {
            var e = this,
              t = e.constructor,
              n = hi(e, e.e <= t.toExpNeg || e.e >= t.toExpPos);
            return e.isNeg() && !e.isZero() ? "-" + n : n;
          }),
          (oi.truncated = oi.trunc = function () {
            return pi(new this.constructor(this), this.e + 1, 1);
          }),
          (oi.valueOf = oi.toJSON = function () {
            var e = this,
              t = e.constructor,
              n = hi(e, e.e <= t.toExpNeg || e.e >= t.toExpPos);
            return e.isNeg() ? "-" + n : n;
          });
        var fi = (function () {
          function e(e, t, n) {
            var r,
              i = 0,
              a = e.length;
            for (e = e.slice(); a--; )
              (r = e[a] * t + i), (e[a] = r % n | 0), (i = (r / n) | 0);
            return i && e.unshift(i), e;
          }
          function t(e, t, n, r) {
            var i, a;
            if (n != r) a = n > r ? 1 : -1;
            else
              for (i = a = 0; i < n; i++)
                if (e[i] != t[i]) {
                  a = e[i] > t[i] ? 1 : -1;
                  break;
                }
            return a;
          }
          function n(e, t, n, r) {
            for (var i = 0; n--; )
              (e[n] -= i),
                (i = e[n] < t[n] ? 1 : 0),
                (e[n] = i * r + e[n] - t[n]);
            for (; !e[0] && e.length > 1; ) e.shift();
          }
          return function (r, i, a, o, s, u) {
            var c,
              l,
              f,
              p,
              h,
              d,
              m,
              g,
              y,
              v,
              b,
              x,
              w,
              N,
              E,
              M,
              S,
              _,
              k,
              O,
              A = r.constructor,
              C = r.s == i.s ? 1 : -1,
              T = r.d,
              I = i.d;
            if (!(T && T[0] && I && I[0]))
              return new A(
                r.s && i.s && (T ? !I || T[0] != I[0] : I)
                  ? (T && 0 == T[0]) || !I
                    ? 0 * C
                    : C / 0
                  : NaN
              );
            for (
              u
                ? ((h = 1), (l = r.e - i.e))
                : ((u = ri), (h = 7), (l = Xr(r.e / h) - Xr(i.e / h))),
                k = I.length,
                S = T.length,
                v = (y = new A(C)).d = [],
                f = 0;
              I[f] == (T[f] || 0);
              f++
            );
            if (
              (I[f] > (T[f] || 0) && l--,
              null == a
                ? ((N = a = A.precision), (o = A.rounding))
                : (N = s ? a + (r.e - i.e) + 1 : a),
              N < 0)
            )
              v.push(1), (d = !0);
            else {
              if (((N = (N / h + 2) | 0), (f = 0), 1 == k)) {
                for (p = 0, I = I[0], N++; (f < S || p) && N--; f++)
                  (E = p * u + (T[f] || 0)),
                    (v[f] = (E / I) | 0),
                    (p = E % I | 0);
                d = p || f < S;
              } else {
                for (
                  (p = (u / (I[0] + 1)) | 0) > 1 &&
                    ((I = e(I, p, u)),
                    (T = e(T, p, u)),
                    (k = I.length),
                    (S = T.length)),
                    M = k,
                    x = (b = T.slice(0, k)).length;
                  x < k;

                )
                  b[x++] = 0;
                (O = I.slice()).unshift(0), (_ = I[0]), I[1] >= u / 2 && ++_;
                do {
                  (p = 0),
                    (c = t(I, b, k, x)) < 0
                      ? ((w = b[0]),
                        k != x && (w = w * u + (b[1] || 0)),
                        (p = (w / _) | 0) > 1
                          ? (p >= u && (p = u - 1),
                            1 ==
                              (c = t(
                                (m = e(I, p, u)),
                                b,
                                (g = m.length),
                                (x = b.length)
                              )) && (p--, n(m, k < g ? O : I, g, u)))
                          : (0 == p && (c = p = 1), (m = I.slice())),
                        (g = m.length) < x && m.unshift(0),
                        n(b, m, x, u),
                        -1 == c &&
                          (c = t(I, b, k, (x = b.length))) < 1 &&
                          (p++, n(b, k < x ? O : I, x, u)),
                        (x = b.length))
                      : 0 === c && (p++, (b = [0])),
                    (v[f++] = p),
                    c && b[0] ? (b[x++] = T[M] || 0) : ((b = [T[M]]), (x = 1));
                } while ((M++ < S || void 0 !== b[0]) && N--);
                d = void 0 !== b[0];
              }
              v[0] || v.shift();
            }
            if (1 == h) (y.e = l), (Rr = d);
            else {
              for (f = 1, p = v[0]; p >= 10; p /= 10) f++;
              (y.e = f + l * h - 1), pi(y, s ? a + y.e + 1 : a, o, d);
            }
            return y;
          };
        })();
        function pi(e, t, n, r) {
          var i,
            a,
            o,
            s,
            u,
            c,
            l,
            f,
            p,
            h = e.constructor;
          e: if (null != t) {
            if (!(f = e.d)) return e;
            for (i = 1, s = f[0]; s >= 10; s /= 10) i++;
            if ((a = t - i) < 0)
              (a += 7),
                (o = t),
                (u = ((l = f[(p = 0)]) / Kr(10, i - o - 1)) % 10 | 0);
            else if ((p = Math.ceil((a + 1) / 7)) >= (s = f.length)) {
              if (!r) break e;
              for (; s++ <= p; ) f.push(0);
              (l = u = 0), (i = 1), (o = (a %= 7) - 7 + 1);
            } else {
              for (l = s = f[p], i = 1; s >= 10; s /= 10) i++;
              u =
                (o = (a %= 7) - 7 + i) < 0
                  ? 0
                  : (l / Kr(10, i - o - 1)) % 10 | 0;
            }
            if (
              ((r =
                r ||
                t < 0 ||
                void 0 !== f[p + 1] ||
                (o < 0 ? l : l % Kr(10, i - o - 1))),
              (c =
                n < 4
                  ? (u || r) && (0 == n || n == (e.s < 0 ? 3 : 2))
                  : u > 5 ||
                    (5 == u &&
                      (4 == n ||
                        r ||
                        (6 == n &&
                          (a > 0 ? (o > 0 ? l / Kr(10, i - o) : 0) : f[p - 1]) %
                            10 &
                            1) ||
                        n == (e.s < 0 ? 8 : 7)))),
              t < 1 || !f[0])
            )
              return (
                (f.length = 0),
                c
                  ? ((t -= e.e + 1),
                    (f[0] = Kr(10, (7 - (t % 7)) % 7)),
                    (e.e = -t || 0))
                  : (f[0] = e.e = 0),
                e
              );
            if (
              (0 == a
                ? ((f.length = p), (s = 1), p--)
                : ((f.length = p + 1),
                  (s = Kr(10, 7 - a)),
                  (f[p] =
                    o > 0 ? ((l / Kr(10, i - o)) % Kr(10, o) | 0) * s : 0)),
              c)
            )
              for (;;) {
                if (0 == p) {
                  for (a = 1, o = f[0]; o >= 10; o /= 10) a++;
                  for (o = f[0] += s, s = 1; o >= 10; o /= 10) s++;
                  a != s && (e.e++, f[0] == ri && (f[0] = 1));
                  break;
                }
                if (((f[p] += s), f[p] != ri)) break;
                (f[p--] = 0), (s = 1);
              }
            for (a = f.length; 0 === f[--a]; ) f.pop();
          }
          return (
            Wr &&
              (e.e > h.maxE
                ? ((e.d = null), (e.e = NaN))
                : e.e < h.minE && ((e.e = 0), (e.d = [0]))),
            e
          );
        }
        function hi(e, t, n) {
          if (!e.isFinite()) return Mi(e);
          var r,
            i = e.e,
            a = si(e.d),
            o = a.length;
          return (
            t
              ? (n && (r = n - o) > 0
                  ? (a = a.charAt(0) + "." + a.slice(1) + vi(r))
                  : o > 1 && (a = a.charAt(0) + "." + a.slice(1)),
                (a = a + (e.e < 0 ? "e" : "e+") + e.e))
              : i < 0
              ? ((a = "0." + vi(-i - 1) + a),
                n && (r = n - o) > 0 && (a += vi(r)))
              : i >= o
              ? ((a += vi(i + 1 - o)),
                n && (r = n - i - 1) > 0 && (a = a + "." + vi(r)))
              : ((r = i + 1) < o && (a = a.slice(0, r) + "." + a.slice(r)),
                n &&
                  (r = n - o) > 0 &&
                  (i + 1 === o && (a += "."), (a += vi(r)))),
            a
          );
        }
        function di(e, t) {
          var n = e[0];
          for (t *= 7; n >= 10; n /= 10) t++;
          return t;
        }
        function mi(e, t, n) {
          if (t > ii) throw ((Wr = !0), n && (e.precision = n), Error(Yr));
          return pi(new e(Vr), t, 1, !0);
        }
        function gi(e, t, n) {
          if (t > ai) throw Error(Yr);
          return pi(new e($r), t, n, !0);
        }
        function yi(e) {
          var t = e.length - 1,
            n = 7 * t + 1;
          if ((t = e[t])) {
            for (; t % 10 == 0; t /= 10) n--;
            for (t = e[0]; t >= 10; t /= 10) n++;
          }
          return n;
        }
        function vi(e) {
          for (var t = ""; e--; ) t += "0";
          return t;
        }
        function bi(e, t, n, r) {
          var i,
            a = new e(1),
            o = Math.ceil(r / 7 + 4);
          for (Wr = !1; ; ) {
            if (
              (n % 2 && Ci((a = a.times(t)).d, o) && (i = !0),
              0 === (n = Xr(n / 2)))
            ) {
              (n = a.d.length - 1), i && 0 === a.d[n] && ++a.d[n];
              break;
            }
            Ci((t = t.times(t)).d, o);
          }
          return (Wr = !0), a;
        }
        function xi(e) {
          return 1 & e.d[e.d.length - 1];
        }
        function wi(e, t, n) {
          for (var r, i = new e(t[0]), a = 0; ++a < t.length; ) {
            if (!(r = new e(t[a])).s) {
              i = r;
              break;
            }
            i[n](r) && (i = r);
          }
          return i;
        }
        function Ni(e, t) {
          var n,
            r,
            i,
            a,
            o,
            s,
            u,
            c = 0,
            l = 0,
            f = 0,
            p = e.constructor,
            h = p.rounding,
            d = p.precision;
          if (!e.d || !e.d[0] || e.e > 17)
            return new p(
              e.d
                ? e.d[0]
                  ? e.s < 0
                    ? 0
                    : 1 / 0
                  : 1
                : e.s
                ? e.s < 0
                  ? 0
                  : e
                : NaN
            );
          for (
            null == t ? ((Wr = !1), (u = d)) : (u = t), s = new p(0.03125);
            e.e > -2;

          )
            (e = e.times(s)), (f += 5);
          for (
            u += r = ((Math.log(Kr(2, f)) / Math.LN10) * 2 + 5) | 0,
              n = a = o = new p(1),
              p.precision = u;
            ;

          ) {
            if (
              ((a = pi(a.times(e), u, 1)),
              (n = n.times(++l)),
              si((s = o.plus(fi(a, n, u, 1))).d).slice(0, u) ===
                si(o.d).slice(0, u))
            ) {
              for (i = f; i--; ) o = pi(o.times(o), u, 1);
              if (null != t) return (p.precision = d), o;
              if (!(c < 3 && ci(o.d, u - r, h, c)))
                return pi(o, (p.precision = d), h, (Wr = !0));
              (p.precision = u += 10), (n = a = s = new p(1)), (l = 0), c++;
            }
            o = s;
          }
        }
        function Ei(e, t) {
          var n,
            r,
            i,
            a,
            o,
            s,
            u,
            c,
            l,
            f,
            p,
            h = 1,
            d = e,
            m = d.d,
            g = d.constructor,
            y = g.rounding,
            v = g.precision;
          if (d.s < 0 || !m || !m[0] || (!d.e && 1 == m[0] && 1 == m.length))
            return new g(m && !m[0] ? -1 / 0 : 1 != d.s ? NaN : m ? 0 : d);
          if (
            (null == t ? ((Wr = !1), (l = v)) : (l = t),
            (g.precision = l += 10),
            (r = (n = si(m)).charAt(0)),
            !(Math.abs((a = d.e)) < 15e14))
          )
            return (
              (c = mi(g, l + 2, v).times(a + "")),
              (d = Ei(new g(r + "." + n.slice(1)), l - 10).plus(c)),
              (g.precision = v),
              null == t ? pi(d, v, y, (Wr = !0)) : d
            );
          for (; (r < 7 && 1 != r) || (1 == r && n.charAt(1) > 3); )
            (r = (n = si((d = d.times(e)).d)).charAt(0)), h++;
          for (
            a = d.e,
              r > 1
                ? ((d = new g("0." + n)), a++)
                : (d = new g(r + "." + n.slice(1))),
              f = d,
              u = o = d = fi(d.minus(1), d.plus(1), l, 1),
              p = pi(d.times(d), l, 1),
              i = 3;
            ;

          ) {
            if (
              ((o = pi(o.times(p), l, 1)),
              si((c = u.plus(fi(o, new g(i), l, 1))).d).slice(0, l) ===
                si(u.d).slice(0, l))
            ) {
              if (
                ((u = u.times(2)),
                0 !== a && (u = u.plus(mi(g, l + 2, v).times(a + ""))),
                (u = fi(u, new g(h), l, 1)),
                null != t)
              )
                return (g.precision = v), u;
              if (!ci(u.d, l - 10, y, s))
                return pi(u, (g.precision = v), y, (Wr = !0));
              (g.precision = l += 10),
                (c = o = d = fi(f.minus(1), f.plus(1), l, 1)),
                (p = pi(d.times(d), l, 1)),
                (i = s = 1);
            }
            (u = c), (i += 2);
          }
        }
        function Mi(e) {
          return String((e.s * e.s) / 0);
        }
        function Si(e, t) {
          var n, r, i;
          for (
            (n = t.indexOf(".")) > -1 && (t = t.replace(".", "")),
              (r = t.search(/e/i)) > 0
                ? (n < 0 && (n = r),
                  (n += +t.slice(r + 1)),
                  (t = t.substring(0, r)))
                : n < 0 && (n = t.length),
              r = 0;
            48 === t.charCodeAt(r);
            r++
          );
          for (i = t.length; 48 === t.charCodeAt(i - 1); --i);
          if ((t = t.slice(r, i))) {
            if (
              ((i -= r),
              (e.e = n = n - r - 1),
              (e.d = []),
              (r = (n + 1) % 7),
              n < 0 && (r += 7),
              r < i)
            ) {
              for (r && e.d.push(+t.slice(0, r)), i -= 7; r < i; )
                e.d.push(+t.slice(r, (r += 7)));
              r = 7 - (t = t.slice(r)).length;
            } else r -= i;
            for (; r--; ) t += "0";
            e.d.push(+t),
              Wr &&
                (e.e > e.constructor.maxE
                  ? ((e.d = null), (e.e = NaN))
                  : e.e < e.constructor.minE && ((e.e = 0), (e.d = [0])));
          } else (e.e = 0), (e.d = [0]);
          return e;
        }
        function _i(e, t, n, r, i) {
          var a,
            o,
            s,
            u,
            c = e.precision,
            l = Math.ceil(c / 7);
          for (Wr = !1, u = n.times(n), s = new e(r); ; ) {
            if (
              ((o = fi(s.times(u), new e(t++ * t++), c, 1)),
              (s = i ? r.plus(o) : r.minus(o)),
              (r = fi(o.times(u), new e(t++ * t++), c, 1)),
              void 0 !== (o = s.plus(r)).d[l])
            ) {
              for (a = l; o.d[a] === s.d[a] && a--; );
              if (-1 == a) break;
            }
            (a = s), (s = r), (r = o), (o = a);
          }
          return (Wr = !0), (o.d.length = l + 1), o;
        }
        function ki(e, t) {
          for (var n = e; --t; ) n *= e;
          return n;
        }
        function Oi(e, t) {
          var n,
            r = t.s < 0,
            i = gi(e, e.precision, 1),
            a = i.times(0.5);
          if ((t = t.abs()).lte(a)) return (Lr = r ? 4 : 1), t;
          if ((n = t.divToInt(i)).isZero()) Lr = r ? 3 : 2;
          else {
            if ((t = t.minus(n.times(i))).lte(a))
              return (Lr = xi(n) ? (r ? 2 : 3) : r ? 4 : 1), t;
            Lr = xi(n) ? (r ? 1 : 4) : r ? 3 : 2;
          }
          return t.minus(i).abs();
        }
        function Ai(e, t, n, r) {
          var i,
            a,
            o,
            s,
            u,
            c,
            l,
            f,
            p,
            h = e.constructor,
            d = void 0 !== n;
          if (
            (d
              ? (ui(n, 1, Fr), void 0 === r ? (r = h.rounding) : ui(r, 0, 8))
              : ((n = h.precision), (r = h.rounding)),
            e.isFinite())
          ) {
            for (
              d
                ? ((i = 2),
                  16 == t ? (n = 4 * n - 3) : 8 == t && (n = 3 * n - 2))
                : (i = t),
                (o = (l = hi(e)).indexOf(".")) >= 0 &&
                  ((l = l.replace(".", "")),
                  ((p = new h(1)).e = l.length - o),
                  (p.d = li(hi(p), 10, i)),
                  (p.e = p.d.length)),
                a = u = (f = li(l, 10, i)).length;
              0 == f[--u];

            )
              f.pop();
            if (f[0]) {
              if (
                (o < 0
                  ? a--
                  : (((e = new h(e)).d = f),
                    (e.e = a),
                    (f = (e = fi(e, p, n, r, 0, i)).d),
                    (a = e.e),
                    (c = Rr)),
                (o = f[n]),
                (s = i / 2),
                (c = c || void 0 !== f[n + 1]),
                (c =
                  r < 4
                    ? (void 0 !== o || c) &&
                      (0 === r || r === (e.s < 0 ? 3 : 2))
                    : o > s ||
                      (o === s &&
                        (4 === r ||
                          c ||
                          (6 === r && 1 & f[n - 1]) ||
                          r === (e.s < 0 ? 8 : 7)))),
                (f.length = n),
                c)
              )
                for (; ++f[--n] > i - 1; ) (f[n] = 0), n || (++a, f.unshift(1));
              for (u = f.length; !f[u - 1]; --u);
              for (o = 0, l = ""; o < u; o++) l += Ur.charAt(f[o]);
              if (d) {
                if (u > 1)
                  if (16 == t || 8 == t) {
                    for (o = 16 == t ? 4 : 3, --u; u % o; u++) l += "0";
                    for (u = (f = li(l, i, t)).length; !f[u - 1]; --u);
                    for (o = 1, l = "1."; o < u; o++) l += Ur.charAt(f[o]);
                  } else l = l.charAt(0) + "." + l.slice(1);
                l = l + (a < 0 ? "p" : "p+") + a;
              } else if (a < 0) {
                for (; ++a; ) l = "0" + l;
                l = "0." + l;
              } else if (++a > u) for (a -= u; a--; ) l += "0";
              else a < u && (l = l.slice(0, a) + "." + l.slice(a));
            } else l = d ? "0p+0" : "0";
            l = (16 == t ? "0x" : 2 == t ? "0b" : 8 == t ? "0o" : "") + l;
          } else l = Mi(e);
          return e.s < 0 ? "-" + l : l;
        }
        function Ci(e, t) {
          if (e.length > t) return (e.length = t), !0;
        }
        function Ti(e) {
          return new this(e).abs();
        }
        function Ii(e) {
          return new this(e).acos();
        }
        function Pi(e) {
          return new this(e).acosh();
        }
        function Bi(e, t) {
          return new this(e).plus(t);
        }
        function Di(e) {
          return new this(e).asin();
        }
        function ji(e) {
          return new this(e).asinh();
        }
        function Ri(e) {
          return new this(e).atan();
        }
        function Li(e) {
          return new this(e).atanh();
        }
        function zi(e, t) {
          (e = new this(e)), (t = new this(t));
          var n,
            r = this.precision,
            i = this.rounding,
            a = r + 4;
          return (
            e.s && t.s
              ? e.d || t.d
                ? !t.d || e.isZero()
                  ? ((n = t.s < 0 ? gi(this, r, i) : new this(0)).s = e.s)
                  : !e.d || t.isZero()
                  ? ((n = gi(this, a, 1).times(0.5)).s = e.s)
                  : t.s < 0
                  ? ((this.precision = a),
                    (this.rounding = 1),
                    (n = this.atan(fi(e, t, a, 1))),
                    (t = gi(this, a, 1)),
                    (this.precision = r),
                    (this.rounding = i),
                    (n = e.s < 0 ? n.minus(t) : n.plus(t)))
                  : (n = this.atan(fi(e, t, a, 1)))
                : ((n = gi(this, a, 1).times(t.s > 0 ? 0.25 : 0.75)).s = e.s)
              : (n = new this(NaN)),
            n
          );
        }
        function qi(e) {
          return new this(e).cbrt();
        }
        function Fi(e) {
          return pi((e = new this(e)), e.e + 1, 2);
        }
        function Ui(e) {
          if (!e || "object" != typeof e) throw Error(Gr + "Object expected");
          var t,
            n,
            r,
            i = !0 === e.defaults,
            a = [
              "precision",
              1,
              Fr,
              "rounding",
              0,
              8,
              "toExpNeg",
              -qr,
              0,
              "toExpPos",
              0,
              qr,
              "maxE",
              0,
              qr,
              "minE",
              -qr,
              0,
              "modulo",
              0,
              9,
            ];
          for (t = 0; t < a.length; t += 3)
            if (((n = a[t]), i && (this[n] = Hr[n]), void 0 !== (r = e[n]))) {
              if (!(Xr(r) === r && r >= a[t + 1] && r <= a[t + 2]))
                throw Error(Jr + n + ": " + r);
              this[n] = r;
            }
          if (((n = "crypto"), i && (this[n] = Hr[n]), void 0 !== (r = e[n]))) {
            if (!0 !== r && !1 !== r && 0 !== r && 1 !== r)
              throw Error(Jr + n + ": " + r);
            if (r) {
              if (
                "undefined" == typeof crypto ||
                !crypto ||
                (!crypto.getRandomValues && !crypto.randomBytes)
              )
                throw Error(Zr);
              this[n] = !0;
            } else this[n] = !1;
          }
          return this;
        }
        function Vi(e) {
          return new this(e).cos();
        }
        function $i(e) {
          return new this(e).cosh();
        }
        function Hi(e, t) {
          return new this(e).div(t);
        }
        function Wi(e) {
          return new this(e).exp();
        }
        function Gi(e) {
          return pi((e = new this(e)), e.e + 1, 3);
        }
        function Ji() {
          var e,
            t,
            n = new this(0);
          for (Wr = !1, e = 0; e < arguments.length; )
            if ((t = new this(arguments[e++])).d)
              n.d && (n = n.plus(t.times(t)));
            else {
              if (t.s) return (Wr = !0), new this(1 / 0);
              n = t;
            }
          return (Wr = !0), n.sqrt();
        }
        function Yi(e) {
          return e instanceof ma || (e && "[object Decimal]" === e.name) || !1;
        }
        function Zi(e) {
          return new this(e).ln();
        }
        function Xi(e, t) {
          return new this(e).log(t);
        }
        function Ki(e) {
          return new this(e).log(2);
        }
        function Qi(e) {
          return new this(e).log(10);
        }
        function ea() {
          return wi(this, arguments, "lt");
        }
        function ta() {
          return wi(this, arguments, "gt");
        }
        function na(e, t) {
          return new this(e).mod(t);
        }
        function ra(e, t) {
          return new this(e).mul(t);
        }
        function ia(e, t) {
          return new this(e).pow(t);
        }
        function aa(e) {
          var t,
            n,
            r,
            i,
            a = 0,
            o = new this(1),
            s = [];
          if (
            (void 0 === e ? (e = this.precision) : ui(e, 1, Fr),
            (r = Math.ceil(e / 7)),
            this.crypto)
          )
            if (crypto.getRandomValues)
              for (t = crypto.getRandomValues(new Uint32Array(r)); a < r; )
                (i = t[a]) >= 429e7
                  ? (t[a] = crypto.getRandomValues(new Uint32Array(1))[0])
                  : (s[a++] = i % 1e7);
            else {
              if (!crypto.randomBytes) throw Error(Zr);
              for (t = crypto.randomBytes((r *= 4)); a < r; )
                (i =
                  t[a] +
                  (t[a + 1] << 8) +
                  (t[a + 2] << 16) +
                  ((127 & t[a + 3]) << 24)) >= 214e7
                  ? crypto.randomBytes(4).copy(t, a)
                  : (s.push(i % 1e7), (a += 4));
              a = r / 4;
            }
          else for (; a < r; ) s[a++] = (1e7 * Math.random()) | 0;
          for (
            e %= 7,
              (r = s[--a]) &&
                e &&
                ((i = Kr(10, 7 - e)), (s[a] = ((r / i) | 0) * i));
            0 === s[a];
            a--
          )
            s.pop();
          if (a < 0) (n = 0), (s = [0]);
          else {
            for (n = -1; 0 === s[0]; n -= 7) s.shift();
            for (r = 1, i = s[0]; i >= 10; i /= 10) r++;
            r < 7 && (n -= 7 - r);
          }
          return (o.e = n), (o.d = s), o;
        }
        function oa(e) {
          return pi((e = new this(e)), e.e + 1, this.rounding);
        }
        function sa(e) {
          return (e = new this(e)).d ? (e.d[0] ? e.s : 0 * e.s) : e.s || NaN;
        }
        function ua(e) {
          return new this(e).sin();
        }
        function ca(e) {
          return new this(e).sinh();
        }
        function la(e) {
          return new this(e).sqrt();
        }
        function fa(e, t) {
          return new this(e).sub(t);
        }
        function pa(e) {
          return new this(e).tan();
        }
        function ha(e) {
          return new this(e).tanh();
        }
        function da(e) {
          return pi((e = new this(e)), e.e + 1, 1);
        }
        (oi[Symbol.for("nodejs.util.inspect.custom")] = oi.toString),
          (oi[Symbol.toStringTag] = "Decimal");
        var ma = (function e(t) {
          var n, r, i;
          function a(e) {
            var t,
              n,
              r,
              i = this;
            if (!(i instanceof a)) return new a(e);
            if (((i.constructor = a), e instanceof a))
              return (
                (i.s = e.s),
                void (Wr
                  ? !e.d || e.e > a.maxE
                    ? ((i.e = NaN), (i.d = null))
                    : e.e < a.minE
                    ? ((i.e = 0), (i.d = [0]))
                    : ((i.e = e.e), (i.d = e.d.slice()))
                  : ((i.e = e.e), (i.d = e.d ? e.d.slice() : e.d)))
              );
            if ("number" == (r = typeof e)) {
              if (0 === e)
                return (i.s = 1 / e < 0 ? -1 : 1), (i.e = 0), void (i.d = [0]);
              if (
                (e < 0 ? ((e = -e), (i.s = -1)) : (i.s = 1),
                e === ~~e && e < 1e7)
              ) {
                for (t = 0, n = e; n >= 10; n /= 10) t++;
                return void (Wr
                  ? t > a.maxE
                    ? ((i.e = NaN), (i.d = null))
                    : t < a.minE
                    ? ((i.e = 0), (i.d = [0]))
                    : ((i.e = t), (i.d = [e]))
                  : ((i.e = t), (i.d = [e])));
              }
              return 0 * e != 0
                ? (e || (i.s = NaN), (i.e = NaN), void (i.d = null))
                : Si(i, e.toString());
            }
            if ("string" !== r) throw Error(Jr + e);
            return (
              45 === (n = e.charCodeAt(0))
                ? ((e = e.slice(1)), (i.s = -1))
                : (43 === n && (e = e.slice(1)), (i.s = 1)),
              ni.test(e)
                ? Si(i, e)
                : (function (e, t) {
                    var n, r, i, a, o, s, u, c, l;
                    if ("Infinity" === t || "NaN" === t)
                      return +t || (e.s = NaN), (e.e = NaN), (e.d = null), e;
                    if (ei.test(t)) (n = 16), (t = t.toLowerCase());
                    else if (Qr.test(t)) n = 2;
                    else {
                      if (!ti.test(t)) throw Error(Jr + t);
                      n = 8;
                    }
                    for (
                      (a = t.search(/p/i)) > 0
                        ? ((u = +t.slice(a + 1)), (t = t.substring(2, a)))
                        : (t = t.slice(2)),
                        o = (a = t.indexOf(".")) >= 0,
                        r = e.constructor,
                        o &&
                          ((a = (s = (t = t.replace(".", "")).length) - a),
                          (i = bi(r, new r(n), a, 2 * a))),
                        a = l = (c = li(t, n, ri)).length - 1;
                      0 === c[a];
                      --a
                    )
                      c.pop();
                    return a < 0
                      ? new r(0 * e.s)
                      : ((e.e = di(c, l)),
                        (e.d = c),
                        (Wr = !1),
                        o && (e = fi(e, i, 4 * s)),
                        u &&
                          (e = e.times(
                            Math.abs(u) < 54 ? Kr(2, u) : ma.pow(2, u)
                          )),
                        (Wr = !0),
                        e);
                  })(i, e)
            );
          }
          if (
            ((a.prototype = oi),
            (a.ROUND_UP = 0),
            (a.ROUND_DOWN = 1),
            (a.ROUND_CEIL = 2),
            (a.ROUND_FLOOR = 3),
            (a.ROUND_HALF_UP = 4),
            (a.ROUND_HALF_DOWN = 5),
            (a.ROUND_HALF_EVEN = 6),
            (a.ROUND_HALF_CEIL = 7),
            (a.ROUND_HALF_FLOOR = 8),
            (a.EUCLID = 9),
            (a.config = a.set = Ui),
            (a.clone = e),
            (a.isDecimal = Yi),
            (a.abs = Ti),
            (a.acos = Ii),
            (a.acosh = Pi),
            (a.add = Bi),
            (a.asin = Di),
            (a.asinh = ji),
            (a.atan = Ri),
            (a.atanh = Li),
            (a.atan2 = zi),
            (a.cbrt = qi),
            (a.ceil = Fi),
            (a.cos = Vi),
            (a.cosh = $i),
            (a.div = Hi),
            (a.exp = Wi),
            (a.floor = Gi),
            (a.hypot = Ji),
            (a.ln = Zi),
            (a.log = Xi),
            (a.log10 = Qi),
            (a.log2 = Ki),
            (a.max = ea),
            (a.min = ta),
            (a.mod = na),
            (a.mul = ra),
            (a.pow = ia),
            (a.random = aa),
            (a.round = oa),
            (a.sign = sa),
            (a.sin = ua),
            (a.sinh = ca),
            (a.sqrt = la),
            (a.sub = fa),
            (a.tan = pa),
            (a.tanh = ha),
            (a.trunc = da),
            void 0 === t && (t = {}),
            t && !0 !== t.defaults)
          )
            for (
              i = [
                "precision",
                "rounding",
                "toExpNeg",
                "toExpPos",
                "maxE",
                "minE",
                "modulo",
                "crypto",
              ],
                n = 0;
              n < i.length;

            )
              t.hasOwnProperty((r = i[n++])) || (t[r] = this[r]);
          return a.config(t), a;
        })(Hr);
        (Vr = new ma(Vr)), ($r = new ma($r));
        var ga = Cr(
            "BigNumber",
            ["?on", "config"],
            function (e) {
              var t = e.on,
                n = e.config,
                r = ma.clone({ precision: n.precision, modulo: 9 });
              return (
                (r.prototype.type = "BigNumber"),
                (r.prototype.isBigNumber = !0),
                (r.prototype.toJSON = function () {
                  return { mathjs: "BigNumber", value: this.toString() };
                }),
                (r.fromJSON = function (e) {
                  return new r(e.value);
                }),
                t &&
                  t("config", function (e, t) {
                    e.precision !== t.precision &&
                      r.config({ precision: e.precision });
                  }),
                r
              );
            },
            { isClass: !0 }
          ),
          ya = we(
            Ne(function (e, t) {
              /**
               * @license Complex.js v2.0.11 11/02/2016
               *
               * Copyright (c) 2016, Robert Eisele (robert@xarg.org)
               * Dual licensed under the MIT or GPL Version 2 licenses.
               **/
              !(function (n) {
                var r = function (e) {
                    return 0.5 * (Math.exp(e) + Math.exp(-e));
                  },
                  i = function (e) {
                    return 0.5 * (Math.exp(e) - Math.exp(-e));
                  },
                  a = function () {
                    throw SyntaxError("Invalid Param");
                  };
                function o(e, t) {
                  var n = Math.abs(e),
                    r = Math.abs(t);
                  return 0 === e
                    ? Math.log(r)
                    : 0 === t
                    ? Math.log(n)
                    : n < 3e3 && r < 3e3
                    ? 0.5 * Math.log(e * e + t * t)
                    : Math.log(e / Math.cos(Math.atan2(t, e)));
                }
                function s(e, t) {
                  if (!(this instanceof s)) return new s(e, t);
                  var n = (function (e, t) {
                    var n = { re: 0, im: 0 };
                    if (null == e) n.re = n.im = 0;
                    else if (void 0 !== t) (n.re = e), (n.im = t);
                    else
                      switch (typeof e) {
                        case "object":
                          if ("im" in e && "re" in e)
                            (n.re = e.re), (n.im = e.im);
                          else if ("abs" in e && "arg" in e) {
                            if (
                              !Number.isFinite(e.abs) &&
                              Number.isFinite(e.arg)
                            )
                              return s.INFINITY;
                            (n.re = e.abs * Math.cos(e.arg)),
                              (n.im = e.abs * Math.sin(e.arg));
                          } else if ("r" in e && "phi" in e) {
                            if (!Number.isFinite(e.r) && Number.isFinite(e.phi))
                              return s.INFINITY;
                            (n.re = e.r * Math.cos(e.phi)),
                              (n.im = e.r * Math.sin(e.phi));
                          } else
                            2 === e.length
                              ? ((n.re = e[0]), (n.im = e[1]))
                              : a();
                          break;
                        case "string":
                          n.im = n.re = 0;
                          var r = e.match(
                              /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g
                            ),
                            i = 1,
                            o = 0;
                          null === r && a();
                          for (var u = 0; u < r.length; u++) {
                            var c = r[u];
                            " " === c ||
                              "\t" === c ||
                              "\n" === c ||
                              ("+" === c
                                ? i++
                                : "-" === c
                                ? o++
                                : "i" === c || "I" === c
                                ? (i + o === 0 && a(),
                                  " " === r[u + 1] || isNaN(r[u + 1])
                                    ? (n.im += parseFloat(
                                        (o % 2 ? "-" : "") + "1"
                                      ))
                                    : ((n.im += parseFloat(
                                        (o % 2 ? "-" : "") + r[u + 1]
                                      )),
                                      u++),
                                  (i = o = 0))
                                : ((i + o === 0 || isNaN(c)) && a(),
                                  "i" === r[u + 1] || "I" === r[u + 1]
                                    ? ((n.im += parseFloat(
                                        (o % 2 ? "-" : "") + c
                                      )),
                                      u++)
                                    : (n.re += parseFloat(
                                        (o % 2 ? "-" : "") + c
                                      )),
                                  (i = o = 0)));
                          }
                          i + o > 0 && a();
                          break;
                        case "number":
                          (n.im = 0), (n.re = e);
                          break;
                        default:
                          a();
                      }
                    return n;
                  })(e, t);
                  (this.re = n.re), (this.im = n.im);
                }
                (s.prototype = {
                  re: 0,
                  im: 0,
                  sign: function () {
                    var e = this.abs();
                    return new s(this.re / e, this.im / e);
                  },
                  add: function (e, t) {
                    var n = new s(e, t);
                    return this.isInfinite() && n.isInfinite()
                      ? s.NAN
                      : this.isInfinite() || n.isInfinite()
                      ? s.INFINITY
                      : new s(this.re + n.re, this.im + n.im);
                  },
                  sub: function (e, t) {
                    var n = new s(e, t);
                    return this.isInfinite() && n.isInfinite()
                      ? s.NAN
                      : this.isInfinite() || n.isInfinite()
                      ? s.INFINITY
                      : new s(this.re - n.re, this.im - n.im);
                  },
                  mul: function (e, t) {
                    var n = new s(e, t);
                    return (this.isInfinite() && n.isZero()) ||
                      (this.isZero() && n.isInfinite())
                      ? s.NAN
                      : this.isInfinite() || n.isInfinite()
                      ? s.INFINITY
                      : 0 === n.im && 0 === this.im
                      ? new s(this.re * n.re, 0)
                      : new s(
                          this.re * n.re - this.im * n.im,
                          this.re * n.im + this.im * n.re
                        );
                  },
                  div: function (e, t) {
                    var n = new s(e, t);
                    if (
                      (this.isZero() && n.isZero()) ||
                      (this.isInfinite() && n.isInfinite())
                    )
                      return s.NAN;
                    if (this.isInfinite() || n.isZero()) return s.INFINITY;
                    if (this.isZero() || n.isInfinite()) return s.ZERO;
                    (e = this.re), (t = this.im);
                    var r,
                      i,
                      a = n.re,
                      o = n.im;
                    return 0 === o
                      ? new s(e / a, t / a)
                      : Math.abs(a) < Math.abs(o)
                      ? new s(
                          (e * (i = a / o) + t) / (r = a * i + o),
                          (t * i - e) / r
                        )
                      : new s(
                          (e + t * (i = o / a)) / (r = o * i + a),
                          (t - e * i) / r
                        );
                  },
                  pow: function (e, t) {
                    var n = new s(e, t);
                    if (((e = this.re), (t = this.im), n.isZero()))
                      return s.ONE;
                    if (0 === n.im) {
                      if (0 === t && e >= 0) return new s(Math.pow(e, n.re), 0);
                      if (0 === e)
                        switch (((n.re % 4) + 4) % 4) {
                          case 0:
                            return new s(Math.pow(t, n.re), 0);
                          case 1:
                            return new s(0, Math.pow(t, n.re));
                          case 2:
                            return new s(-Math.pow(t, n.re), 0);
                          case 3:
                            return new s(0, -Math.pow(t, n.re));
                        }
                    }
                    if (0 === e && 0 === t && n.re > 0 && n.im >= 0)
                      return s.ZERO;
                    var r = Math.atan2(t, e),
                      i = o(e, t);
                    return (
                      (e = Math.exp(n.re * i - n.im * r)),
                      (t = n.im * i + n.re * r),
                      new s(e * Math.cos(t), e * Math.sin(t))
                    );
                  },
                  sqrt: function () {
                    var e,
                      t,
                      n = this.re,
                      r = this.im,
                      i = this.abs();
                    if (n >= 0) {
                      if (0 === r) return new s(Math.sqrt(n), 0);
                      e = 0.5 * Math.sqrt(2 * (i + n));
                    } else e = Math.abs(r) / Math.sqrt(2 * (i - n));
                    return (
                      (t =
                        n <= 0
                          ? 0.5 * Math.sqrt(2 * (i - n))
                          : Math.abs(r) / Math.sqrt(2 * (i + n))),
                      new s(e, r < 0 ? -t : t)
                    );
                  },
                  exp: function () {
                    var e = Math.exp(this.re);
                    return (
                      this.im,
                      new s(e * Math.cos(this.im), e * Math.sin(this.im))
                    );
                  },
                  expm1: function () {
                    var e = this.re,
                      t = this.im;
                    return new s(
                      Math.expm1(e) * Math.cos(t) +
                        (function (e) {
                          var t = Math.PI / 4;
                          if (e < -t || e > t) return Math.cos(e) - 1;
                          var n = e * e;
                          return (
                            n *
                            (n *
                              (1 / 24 +
                                n *
                                  (-1 / 720 +
                                    n *
                                      (1 / 40320 +
                                        n *
                                          (-1 / 3628800 +
                                            n *
                                              (1 / 4790014600 +
                                                n *
                                                  (-1 / 87178291200 +
                                                    n *
                                                      (1 /
                                                        20922789888e3))))))) -
                              0.5)
                          );
                        })(t),
                      Math.exp(e) * Math.sin(t)
                    );
                  },
                  log: function () {
                    var e = this.re,
                      t = this.im;
                    return new s(o(e, t), Math.atan2(t, e));
                  },
                  abs: function () {
                    return (
                      (e = this.re),
                      (t = this.im),
                      (n = Math.abs(e)),
                      (r = Math.abs(t)),
                      n < 3e3 && r < 3e3
                        ? Math.sqrt(n * n + r * r)
                        : (n < r ? ((n = r), (r = e / t)) : (r = t / e),
                          n * Math.sqrt(1 + r * r))
                    );
                    var e, t, n, r;
                  },
                  arg: function () {
                    return Math.atan2(this.im, this.re);
                  },
                  sin: function () {
                    var e = this.re,
                      t = this.im;
                    return new s(Math.sin(e) * r(t), Math.cos(e) * i(t));
                  },
                  cos: function () {
                    var e = this.re,
                      t = this.im;
                    return new s(Math.cos(e) * r(t), -Math.sin(e) * i(t));
                  },
                  tan: function () {
                    var e = 2 * this.re,
                      t = 2 * this.im,
                      n = Math.cos(e) + r(t);
                    return new s(Math.sin(e) / n, i(t) / n);
                  },
                  cot: function () {
                    var e = 2 * this.re,
                      t = 2 * this.im,
                      n = Math.cos(e) - r(t);
                    return new s(-Math.sin(e) / n, i(t) / n);
                  },
                  sec: function () {
                    var e = this.re,
                      t = this.im,
                      n = 0.5 * r(2 * t) + 0.5 * Math.cos(2 * e);
                    return new s(
                      (Math.cos(e) * r(t)) / n,
                      (Math.sin(e) * i(t)) / n
                    );
                  },
                  csc: function () {
                    var e = this.re,
                      t = this.im,
                      n = 0.5 * r(2 * t) - 0.5 * Math.cos(2 * e);
                    return new s(
                      (Math.sin(e) * r(t)) / n,
                      (-Math.cos(e) * i(t)) / n
                    );
                  },
                  asin: function () {
                    var e = this.re,
                      t = this.im,
                      n = new s(t * t - e * e + 1, -2 * e * t).sqrt(),
                      r = new s(n.re - t, n.im + e).log();
                    return new s(r.im, -r.re);
                  },
                  acos: function () {
                    var e = this.re,
                      t = this.im,
                      n = new s(t * t - e * e + 1, -2 * e * t).sqrt(),
                      r = new s(n.re - t, n.im + e).log();
                    return new s(Math.PI / 2 - r.im, r.re);
                  },
                  atan: function () {
                    var e = this.re,
                      t = this.im;
                    if (0 === e) {
                      if (1 === t) return new s(0, 1 / 0);
                      if (-1 === t) return new s(0, -1 / 0);
                    }
                    var n = e * e + (1 - t) * (1 - t),
                      r = new s((1 - t * t - e * e) / n, (-2 * e) / n).log();
                    return new s(-0.5 * r.im, 0.5 * r.re);
                  },
                  acot: function () {
                    var e = this.re,
                      t = this.im;
                    if (0 === t) return new s(Math.atan2(1, e), 0);
                    var n = e * e + t * t;
                    return 0 !== n
                      ? new s(e / n, -t / n).atan()
                      : new s(0 !== e ? e / 0 : 0, 0 !== t ? -t / 0 : 0).atan();
                  },
                  asec: function () {
                    var e = this.re,
                      t = this.im;
                    if (0 === e && 0 === t) return new s(0, 1 / 0);
                    var n = e * e + t * t;
                    return 0 !== n
                      ? new s(e / n, -t / n).acos()
                      : new s(0 !== e ? e / 0 : 0, 0 !== t ? -t / 0 : 0).acos();
                  },
                  acsc: function () {
                    var e = this.re,
                      t = this.im;
                    if (0 === e && 0 === t) return new s(Math.PI / 2, 1 / 0);
                    var n = e * e + t * t;
                    return 0 !== n
                      ? new s(e / n, -t / n).asin()
                      : new s(0 !== e ? e / 0 : 0, 0 !== t ? -t / 0 : 0).asin();
                  },
                  sinh: function () {
                    var e = this.re,
                      t = this.im;
                    return new s(i(e) * Math.cos(t), r(e) * Math.sin(t));
                  },
                  cosh: function () {
                    var e = this.re,
                      t = this.im;
                    return new s(r(e) * Math.cos(t), i(e) * Math.sin(t));
                  },
                  tanh: function () {
                    var e = 2 * this.re,
                      t = 2 * this.im,
                      n = r(e) + Math.cos(t);
                    return new s(i(e) / n, Math.sin(t) / n);
                  },
                  coth: function () {
                    var e = 2 * this.re,
                      t = 2 * this.im,
                      n = r(e) - Math.cos(t);
                    return new s(i(e) / n, -Math.sin(t) / n);
                  },
                  csch: function () {
                    var e = this.re,
                      t = this.im,
                      n = Math.cos(2 * t) - r(2 * e);
                    return new s(
                      (-2 * i(e) * Math.cos(t)) / n,
                      (2 * r(e) * Math.sin(t)) / n
                    );
                  },
                  sech: function () {
                    var e = this.re,
                      t = this.im,
                      n = Math.cos(2 * t) + r(2 * e);
                    return new s(
                      (2 * r(e) * Math.cos(t)) / n,
                      (-2 * i(e) * Math.sin(t)) / n
                    );
                  },
                  asinh: function () {
                    var e = this.im;
                    (this.im = -this.re), (this.re = e);
                    var t = this.asin();
                    return (
                      (this.re = -this.im),
                      (this.im = e),
                      (e = t.re),
                      (t.re = -t.im),
                      (t.im = e),
                      t
                    );
                  },
                  acosh: function () {
                    var e = this.acos();
                    if (e.im <= 0) {
                      var t = e.re;
                      (e.re = -e.im), (e.im = t);
                    } else (t = e.im), (e.im = -e.re), (e.re = t);
                    return e;
                  },
                  atanh: function () {
                    var e = this.re,
                      t = this.im,
                      n = e > 1 && 0 === t,
                      r = 1 - e,
                      i = 1 + e,
                      a = r * r + t * t,
                      u =
                        0 !== a
                          ? new s((i * r - t * t) / a, (t * r + i * t) / a)
                          : new s(-1 !== e ? e / 0 : 0, 0 !== t ? t / 0 : 0),
                      c = u.re;
                    return (
                      (u.re = o(u.re, u.im) / 2),
                      (u.im = Math.atan2(u.im, c) / 2),
                      n && (u.im = -u.im),
                      u
                    );
                  },
                  acoth: function () {
                    var e = this.re,
                      t = this.im;
                    if (0 === e && 0 === t) return new s(0, Math.PI / 2);
                    var n = e * e + t * t;
                    return 0 !== n
                      ? new s(e / n, -t / n).atanh()
                      : new s(
                          0 !== e ? e / 0 : 0,
                          0 !== t ? -t / 0 : 0
                        ).atanh();
                  },
                  acsch: function () {
                    var e = this.re,
                      t = this.im;
                    if (0 === t)
                      return new s(
                        0 !== e ? Math.log(e + Math.sqrt(e * e + 1)) : 1 / 0,
                        0
                      );
                    var n = e * e + t * t;
                    return 0 !== n
                      ? new s(e / n, -t / n).asinh()
                      : new s(
                          0 !== e ? e / 0 : 0,
                          0 !== t ? -t / 0 : 0
                        ).asinh();
                  },
                  asech: function () {
                    var e = this.re,
                      t = this.im;
                    if (this.isZero()) return s.INFINITY;
                    var n = e * e + t * t;
                    return 0 !== n
                      ? new s(e / n, -t / n).acosh()
                      : new s(
                          0 !== e ? e / 0 : 0,
                          0 !== t ? -t / 0 : 0
                        ).acosh();
                  },
                  inverse: function () {
                    if (this.isZero()) return s.INFINITY;
                    if (this.isInfinite()) return s.ZERO;
                    var e = this.re,
                      t = this.im,
                      n = e * e + t * t;
                    return new s(e / n, -t / n);
                  },
                  conjugate: function () {
                    return new s(this.re, -this.im);
                  },
                  neg: function () {
                    return new s(-this.re, -this.im);
                  },
                  ceil: function (e) {
                    return (
                      (e = Math.pow(10, e || 0)),
                      new s(
                        Math.ceil(this.re * e) / e,
                        Math.ceil(this.im * e) / e
                      )
                    );
                  },
                  floor: function (e) {
                    return (
                      (e = Math.pow(10, e || 0)),
                      new s(
                        Math.floor(this.re * e) / e,
                        Math.floor(this.im * e) / e
                      )
                    );
                  },
                  round: function (e) {
                    return (
                      (e = Math.pow(10, e || 0)),
                      new s(
                        Math.round(this.re * e) / e,
                        Math.round(this.im * e) / e
                      )
                    );
                  },
                  equals: function (e, t) {
                    var n = new s(e, t);
                    return (
                      Math.abs(n.re - this.re) <= s.EPSILON &&
                      Math.abs(n.im - this.im) <= s.EPSILON
                    );
                  },
                  clone: function () {
                    return new s(this.re, this.im);
                  },
                  toString: function () {
                    var e = this.re,
                      t = this.im,
                      n = "";
                    return this.isNaN()
                      ? "NaN"
                      : this.isZero()
                      ? "0"
                      : this.isInfinite()
                      ? "Infinity"
                      : (0 !== e && (n += e),
                        0 !== t &&
                          (0 !== e
                            ? (n += t < 0 ? " - " : " + ")
                            : t < 0 && (n += "-"),
                          1 !== (t = Math.abs(t)) && (n += t),
                          (n += "i")),
                        n || "0");
                  },
                  toVector: function () {
                    return [this.re, this.im];
                  },
                  valueOf: function () {
                    return 0 === this.im ? this.re : null;
                  },
                  isNaN: function () {
                    return isNaN(this.re) || isNaN(this.im);
                  },
                  isZero: function () {
                    return !(
                      (0 !== this.re && -0 !== this.re) ||
                      (0 !== this.im && -0 !== this.im)
                    );
                  },
                  isFinite: function () {
                    return isFinite(this.re) && isFinite(this.im);
                  },
                  isInfinite: function () {
                    return !(this.isNaN() || this.isFinite());
                  },
                }),
                  (s.ZERO = new s(0, 0)),
                  (s.ONE = new s(1, 0)),
                  (s.I = new s(0, 1)),
                  (s.PI = new s(Math.PI, 0)),
                  (s.E = new s(Math.E, 0)),
                  (s.INFINITY = new s(1 / 0, 1 / 0)),
                  (s.NAN = new s(NaN, NaN)),
                  (s.EPSILON = 1e-16),
                  Object.defineProperty(t, "__esModule", { value: !0 }),
                  (s.default = s),
                  (s.Complex = s),
                  (e.exports = s);
              })();
            })
          );
        function va(e) {
          return (va =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        var ba = Cr(
            "Complex",
            [],
            function () {
              return (
                (ya.prototype.type = "Complex"),
                (ya.prototype.isComplex = !0),
                (ya.prototype.toJSON = function () {
                  return { mathjs: "Complex", re: this.re, im: this.im };
                }),
                (ya.prototype.toPolar = function () {
                  return { r: this.abs(), phi: this.arg() };
                }),
                (ya.prototype.format = function (e) {
                  var t = this.im,
                    n = this.re,
                    r = Hn(this.re, e),
                    i = Hn(this.im, e),
                    a = $t(e) ? e : e ? e.precision : null;
                  if (null !== a) {
                    var o = Math.pow(10, -a);
                    Math.abs(n / t) < o && (n = 0),
                      Math.abs(t / n) < o && (t = 0);
                  }
                  return 0 === t
                    ? r
                    : 0 === n
                    ? 1 === t
                      ? "i"
                      : -1 === t
                      ? "-i"
                      : i + "i"
                    : t < 0
                    ? -1 === t
                      ? r + " - i"
                      : r + " - " + i.substring(1) + "i"
                    : 1 === t
                    ? r + " + i"
                    : r + " + " + i + "i";
                }),
                (ya.fromPolar = function (e) {
                  switch (arguments.length) {
                    case 1:
                      var t = arguments[0];
                      if ("object" === va(t)) return ya(t);
                      throw new TypeError(
                        "Input has to be an object with r and phi keys."
                      );
                    case 2:
                      var n = arguments[0],
                        r = arguments[1];
                      if ($t(n)) {
                        if (
                          (Jt(r) &&
                            r.hasBase("ANGLE") &&
                            (r = r.toNumber("rad")),
                          $t(r))
                        )
                          return new ya({ r: n, phi: r });
                        throw new TypeError(
                          "Phi is not a number nor an angle unit."
                        );
                      }
                      throw new TypeError("Radius r is not a number.");
                    default:
                      throw new SyntaxError(
                        "Wrong number of arguments in function fromPolar"
                      );
                  }
                }),
                (ya.prototype.valueOf = ya.prototype.toString),
                (ya.fromJSON = function (e) {
                  return new ya(e);
                }),
                (ya.compare = function (e, t) {
                  return e.re > t.re
                    ? 1
                    : e.re < t.re
                    ? -1
                    : e.im > t.im
                    ? 1
                    : e.im < t.im
                    ? -1
                    : 0;
                }),
                ya
              );
            },
            { isClass: !0 }
          ),
          xa = we(
            Ne(function (e, t) {
              /**
               * @license Fraction.js v4.0.12 09/09/2015
               * http://www.xarg.org/2014/03/rational-numbers-in-javascript/
               *
               * Copyright (c) 2015, Robert Eisele (robert@xarg.org)
               * Dual licensed under the MIT or GPL Version 2 licenses.
               **/
              !(function (n) {
                var r = { s: 1, n: 0, d: 1 };
                function i(e) {
                  function t() {
                    var t = Error.apply(this, arguments);
                    (t.name = this.name = e),
                      (this.stack = t.stack),
                      (this.message = t.message);
                  }
                  function n() {}
                  return (
                    (n.prototype = Error.prototype), (t.prototype = new n()), t
                  );
                }
                var a = (f.DivisionByZero = i("DivisionByZero")),
                  o = (f.InvalidParameter = i("InvalidParameter"));
                function s(e, t) {
                  return isNaN((e = parseInt(e, 10))) && u(), e * t;
                }
                function u() {
                  throw new o();
                }
                var c = function (e, t) {
                  var n,
                    i = 0,
                    o = 1,
                    c = 1,
                    l = 0,
                    f = 0,
                    p = 0,
                    h = 1,
                    d = 1,
                    m = 0,
                    g = 1,
                    y = 1,
                    v = 1,
                    b = 1e7;
                  if (null == e);
                  else if (void 0 !== t) c = (i = e) * (o = t);
                  else
                    switch (typeof e) {
                      case "object":
                        "d" in e && "n" in e
                          ? ((i = e.n), (o = e.d), "s" in e && (i *= e.s))
                          : 0 in e
                          ? ((i = e[0]), 1 in e && (o = e[1]))
                          : u(),
                          (c = i * o);
                        break;
                      case "number":
                        if ((e < 0 && ((c = e), (e = -e)), e % 1 == 0)) i = e;
                        else if (e > 0) {
                          for (
                            e >= 1 &&
                            (e /= d = Math.pow(
                              10,
                              Math.floor(1 + Math.log(e) / Math.LN10)
                            ));
                            g <= b && v <= b;

                          ) {
                            if (e === (n = (m + y) / (g + v))) {
                              g + v <= b
                                ? ((i = m + y), (o = g + v))
                                : v > g
                                ? ((i = y), (o = v))
                                : ((i = m), (o = g));
                              break;
                            }
                            e > n ? ((m += y), (g += v)) : ((y += m), (v += g)),
                              g > b ? ((i = y), (o = v)) : ((i = m), (o = g));
                          }
                          i *= d;
                        } else (isNaN(e) || isNaN(t)) && (o = i = NaN);
                        break;
                      case "string":
                        if (
                          (null === (g = e.match(/\d+|./g)) && u(),
                          "-" === g[m] ? ((c = -1), m++) : "+" === g[m] && m++,
                          g.length === m + 1
                            ? (f = s(g[m++], c))
                            : "." === g[m + 1] || "." === g[m]
                            ? ("." !== g[m] && (l = s(g[m++], c)),
                              (1 + ++m === g.length ||
                                ("(" === g[m + 1] && ")" === g[m + 3]) ||
                                ("'" === g[m + 1] && "'" === g[m + 3])) &&
                                ((f = s(g[m], c)),
                                (h = Math.pow(10, g[m].length)),
                                m++),
                              (("(" === g[m] && ")" === g[m + 2]) ||
                                ("'" === g[m] && "'" === g[m + 2])) &&
                                ((p = s(g[m + 1], c)),
                                (d = Math.pow(10, g[m + 1].length) - 1),
                                (m += 3)))
                            : "/" === g[m + 1] || ":" === g[m + 1]
                            ? ((f = s(g[m], c)), (h = s(g[m + 2], 1)), (m += 3))
                            : "/" === g[m + 3] &&
                              " " === g[m + 1] &&
                              ((l = s(g[m], c)),
                              (f = s(g[m + 2], c)),
                              (h = s(g[m + 4], 1)),
                              (m += 5)),
                          g.length <= m)
                        ) {
                          c = i = p + (o = h * d) * l + d * f;
                          break;
                        }
                      default:
                        u();
                    }
                  if (0 === o) throw new a();
                  (r.s = c < 0 ? -1 : 1),
                    (r.n = Math.abs(i)),
                    (r.d = Math.abs(o));
                };
                function l(e, t) {
                  if (!e) return t;
                  if (!t) return e;
                  for (;;) {
                    if (!(e %= t)) return t;
                    if (!(t %= e)) return e;
                  }
                }
                function f(e, t) {
                  if (!(this instanceof f)) return new f(e, t);
                  c(e, t),
                    (e = f.REDUCE ? l(r.d, r.n) : 1),
                    (this.s = r.s),
                    (this.n = r.n / e),
                    (this.d = r.d / e);
                }
                (f.REDUCE = 1),
                  (f.prototype = {
                    s: 1,
                    n: 0,
                    d: 1,
                    abs: function () {
                      return new f(this.n, this.d);
                    },
                    neg: function () {
                      return new f(-this.s * this.n, this.d);
                    },
                    add: function (e, t) {
                      return (
                        c(e, t),
                        new f(
                          this.s * this.n * r.d + r.s * this.d * r.n,
                          this.d * r.d
                        )
                      );
                    },
                    sub: function (e, t) {
                      return (
                        c(e, t),
                        new f(
                          this.s * this.n * r.d - r.s * this.d * r.n,
                          this.d * r.d
                        )
                      );
                    },
                    mul: function (e, t) {
                      return (
                        c(e, t),
                        new f(this.s * r.s * this.n * r.n, this.d * r.d)
                      );
                    },
                    div: function (e, t) {
                      return (
                        c(e, t),
                        new f(this.s * r.s * this.n * r.d, this.d * r.n)
                      );
                    },
                    clone: function () {
                      return new f(this);
                    },
                    mod: function (e, t) {
                      return isNaN(this.n) || isNaN(this.d)
                        ? new f(NaN)
                        : void 0 === e
                        ? new f((this.s * this.n) % this.d, 1)
                        : (c(e, t),
                          0 === r.n && 0 === this.d && f(0, 0),
                          new f(
                            (this.s * (r.d * this.n)) % (r.n * this.d),
                            r.d * this.d
                          ));
                    },
                    gcd: function (e, t) {
                      return (
                        c(e, t),
                        new f(l(r.n, this.n) * l(r.d, this.d), r.d * this.d)
                      );
                    },
                    lcm: function (e, t) {
                      return (
                        c(e, t),
                        0 === r.n && 0 === this.n
                          ? new f()
                          : new f(r.n * this.n, l(r.n, this.n) * l(r.d, this.d))
                      );
                    },
                    ceil: function (e) {
                      return (
                        (e = Math.pow(10, e || 0)),
                        isNaN(this.n) || isNaN(this.d)
                          ? new f(NaN)
                          : new f(Math.ceil((e * this.s * this.n) / this.d), e)
                      );
                    },
                    floor: function (e) {
                      return (
                        (e = Math.pow(10, e || 0)),
                        isNaN(this.n) || isNaN(this.d)
                          ? new f(NaN)
                          : new f(Math.floor((e * this.s * this.n) / this.d), e)
                      );
                    },
                    round: function (e) {
                      return (
                        (e = Math.pow(10, e || 0)),
                        isNaN(this.n) || isNaN(this.d)
                          ? new f(NaN)
                          : new f(Math.round((e * this.s * this.n) / this.d), e)
                      );
                    },
                    inverse: function () {
                      return new f(this.s * this.d, this.n);
                    },
                    pow: function (e) {
                      return e < 0
                        ? new f(
                            Math.pow(this.s * this.d, -e),
                            Math.pow(this.n, -e)
                          )
                        : new f(
                            Math.pow(this.s * this.n, e),
                            Math.pow(this.d, e)
                          );
                    },
                    equals: function (e, t) {
                      return (
                        c(e, t), this.s * this.n * r.d == r.s * r.n * this.d
                      );
                    },
                    compare: function (e, t) {
                      c(e, t);
                      var n = this.s * this.n * r.d - r.s * r.n * this.d;
                      return (0 < n) - (n < 0);
                    },
                    simplify: function (e) {
                      if (isNaN(this.n) || isNaN(this.d)) return this;
                      var t = this.abs().toContinued();
                      function n(e) {
                        return 1 === e.length
                          ? new f(e[0])
                          : n(e.slice(1)).inverse().add(e[0]);
                      }
                      e = e || 0.001;
                      for (var r = 0; r < t.length; r++) {
                        var i = n(t.slice(0, r + 1));
                        if (i.sub(this.abs()).abs().valueOf() < e)
                          return i.mul(this.s);
                      }
                      return this;
                    },
                    divisible: function (e, t) {
                      return (
                        c(e, t),
                        !(!(r.n * this.d) || (this.n * r.d) % (r.n * this.d))
                      );
                    },
                    valueOf: function () {
                      return (this.s * this.n) / this.d;
                    },
                    toFraction: function (e) {
                      var t,
                        n = "",
                        r = this.n,
                        i = this.d;
                      return (
                        this.s < 0 && (n += "-"),
                        1 === i
                          ? (n += r)
                          : (e &&
                              (t = Math.floor(r / i)) > 0 &&
                              ((n += t), (n += " "), (r %= i)),
                            (n += r),
                            (n += "/"),
                            (n += i)),
                        n
                      );
                    },
                    toLatex: function (e) {
                      var t,
                        n = "",
                        r = this.n,
                        i = this.d;
                      return (
                        this.s < 0 && (n += "-"),
                        1 === i
                          ? (n += r)
                          : (e &&
                              (t = Math.floor(r / i)) > 0 &&
                              ((n += t), (r %= i)),
                            (n += "\\frac{"),
                            (n += r),
                            (n += "}{"),
                            (n += i),
                            (n += "}")),
                        n
                      );
                    },
                    toContinued: function () {
                      var e,
                        t = this.n,
                        n = this.d,
                        r = [];
                      if (isNaN(this.n) || isNaN(this.d)) return r;
                      do {
                        r.push(Math.floor(t / n)),
                          (e = t % n),
                          (t = n),
                          (n = e);
                      } while (1 !== t);
                      return r;
                    },
                    toString: function (e) {
                      var t,
                        n = this.n,
                        r = this.d;
                      if (isNaN(n) || isNaN(r)) return "NaN";
                      f.REDUCE || ((n /= t = l(n, r)), (r /= t)), (e = e || 15);
                      var i = (function (e, t) {
                          for (; t % 2 == 0; t /= 2);
                          for (; t % 5 == 0; t /= 5);
                          if (1 === t) return 0;
                          for (var n = 10 % t, r = 1; 1 !== n; r++)
                            if (((n = (10 * n) % t), r > 2e3)) return 0;
                          return r;
                        })(0, r),
                        a = (function (e, t, n) {
                          for (
                            var r = 1,
                              i = (function (e, t, n) {
                                for (var r = 1; t > 0; e = (e * e) % n, t >>= 1)
                                  1 & t && (r = (r * e) % n);
                                return r;
                              })(10, n, t),
                              a = 0;
                            a < 300;
                            a++
                          ) {
                            if (r === i) return a;
                            (r = (10 * r) % t), (i = (10 * i) % t);
                          }
                          return 0;
                        })(0, r, i),
                        o = -1 === this.s ? "-" : "";
                      if (
                        ((o += (n / r) | 0),
                        (n %= r),
                        (n *= 10) && (o += "."),
                        i)
                      ) {
                        for (var s = a; s--; )
                          (o += (n / r) | 0), (n %= r), (n *= 10);
                        for (o += "(", s = i; s--; )
                          (o += (n / r) | 0), (n %= r), (n *= 10);
                        o += ")";
                      } else
                        for (s = e; n && s--; )
                          (o += (n / r) | 0), (n %= r), (n *= 10);
                      return o;
                    },
                  }),
                  Object.defineProperty(t, "__esModule", { value: !0 }),
                  (f.default = f),
                  (f.Fraction = f),
                  (e.exports = f);
              })();
            })
          ),
          wa = Cr(
            "Fraction",
            [],
            function () {
              return (
                (xa.prototype.type = "Fraction"),
                (xa.prototype.isFraction = !0),
                (xa.prototype.toJSON = function () {
                  return { mathjs: "Fraction", n: this.s * this.n, d: this.d };
                }),
                (xa.fromJSON = function (e) {
                  return new xa(e);
                }),
                xa
              );
            },
            { isClass: !0 }
          ),
          Na = Cr(
            "Range",
            [],
            function () {
              function e(t, n, r) {
                if (!(this instanceof e))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                var i = null != t,
                  a = null != n,
                  o = null != r;
                if (i)
                  if (Ht(t)) t = t.toNumber();
                  else if ("number" != typeof t)
                    throw new TypeError("Parameter start must be a number");
                if (a)
                  if (Ht(n)) n = n.toNumber();
                  else if ("number" != typeof n)
                    throw new TypeError("Parameter end must be a number");
                if (o)
                  if (Ht(r)) r = r.toNumber();
                  else if ("number" != typeof r)
                    throw new TypeError("Parameter step must be a number");
                (this.start = i ? parseFloat(t) : 0),
                  (this.end = a ? parseFloat(n) : 0),
                  (this.step = o ? parseFloat(r) : 1);
              }
              return (
                (e.prototype.type = "Range"),
                (e.prototype.isRange = !0),
                (e.parse = function (t) {
                  if ("string" != typeof t) return null;
                  var n = t.split(":").map(function (e) {
                    return parseFloat(e);
                  });
                  if (
                    n.some(function (e) {
                      return isNaN(e);
                    })
                  )
                    return null;
                  switch (n.length) {
                    case 2:
                      return new e(n[0], n[1]);
                    case 3:
                      return new e(n[0], n[2], n[1]);
                    default:
                      return null;
                  }
                }),
                (e.prototype.clone = function () {
                  return new e(this.start, this.end, this.step);
                }),
                (e.prototype.size = function () {
                  var e = 0,
                    t = this.start,
                    n = this.step,
                    r = this.end - t;
                  return (
                    zn(n) === zn(r)
                      ? (e = Math.ceil(r / n))
                      : 0 === r && (e = 0),
                    isNaN(e) && (e = 0),
                    [e]
                  );
                }),
                (e.prototype.min = function () {
                  var e = this.size()[0];
                  return e > 0
                    ? this.step > 0
                      ? this.start
                      : this.start + (e - 1) * this.step
                    : void 0;
                }),
                (e.prototype.max = function () {
                  var e = this.size()[0];
                  return e > 0
                    ? this.step > 0
                      ? this.start + (e - 1) * this.step
                      : this.start
                    : void 0;
                }),
                (e.prototype.forEach = function (e) {
                  var t = this.start,
                    n = this.step,
                    r = this.end,
                    i = 0;
                  if (n > 0) for (; t < r; ) e(t, [i], this), (t += n), i++;
                  else if (n < 0)
                    for (; t > r; ) e(t, [i], this), (t += n), i++;
                }),
                (e.prototype.map = function (e) {
                  var t = [];
                  return (
                    this.forEach(function (n, r, i) {
                      t[r[0]] = e(n, r, i);
                    }),
                    t
                  );
                }),
                (e.prototype.toArray = function () {
                  var e = [];
                  return (
                    this.forEach(function (t, n) {
                      e[n[0]] = t;
                    }),
                    e
                  );
                }),
                (e.prototype.valueOf = function () {
                  return this.toArray();
                }),
                (e.prototype.format = function (e) {
                  var t = Hn(this.start, e);
                  return (
                    1 !== this.step && (t += ":" + Hn(this.step, e)),
                    t + ":" + Hn(this.end, e)
                  );
                }),
                (e.prototype.toString = function () {
                  return this.format();
                }),
                (e.prototype.toJSON = function () {
                  return {
                    mathjs: "Range",
                    start: this.start,
                    end: this.end,
                    step: this.step,
                  };
                }),
                (e.fromJSON = function (t) {
                  return new e(t.start, t.end, t.step);
                }),
                e
              );
            },
            { isClass: !0 }
          ),
          Ea = Cr(
            "Matrix",
            [],
            function () {
              function e() {
                if (!(this instanceof e))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
              }
              return (
                (e.prototype.type = "Matrix"),
                (e.prototype.isMatrix = !0),
                (e.prototype.storage = function () {
                  throw new Error(
                    "Cannot invoke storage on a Matrix interface"
                  );
                }),
                (e.prototype.datatype = function () {
                  throw new Error(
                    "Cannot invoke datatype on a Matrix interface"
                  );
                }),
                (e.prototype.create = function (e, t) {
                  throw new Error("Cannot invoke create on a Matrix interface");
                }),
                (e.prototype.subset = function (e, t, n) {
                  throw new Error("Cannot invoke subset on a Matrix interface");
                }),
                (e.prototype.get = function (e) {
                  throw new Error("Cannot invoke get on a Matrix interface");
                }),
                (e.prototype.set = function (e, t, n) {
                  throw new Error("Cannot invoke set on a Matrix interface");
                }),
                (e.prototype.resize = function (e, t) {
                  throw new Error("Cannot invoke resize on a Matrix interface");
                }),
                (e.prototype.reshape = function (e, t) {
                  throw new Error(
                    "Cannot invoke reshape on a Matrix interface"
                  );
                }),
                (e.prototype.clone = function () {
                  throw new Error("Cannot invoke clone on a Matrix interface");
                }),
                (e.prototype.size = function () {
                  throw new Error("Cannot invoke size on a Matrix interface");
                }),
                (e.prototype.map = function (e, t) {
                  throw new Error("Cannot invoke map on a Matrix interface");
                }),
                (e.prototype.forEach = function (e) {
                  throw new Error(
                    "Cannot invoke forEach on a Matrix interface"
                  );
                }),
                (e.prototype.toArray = function () {
                  throw new Error(
                    "Cannot invoke toArray on a Matrix interface"
                  );
                }),
                (e.prototype.valueOf = function () {
                  throw new Error(
                    "Cannot invoke valueOf on a Matrix interface"
                  );
                }),
                (e.prototype.format = function (e) {
                  throw new Error("Cannot invoke format on a Matrix interface");
                }),
                (e.prototype.toString = function () {
                  throw new Error(
                    "Cannot invoke toString on a Matrix interface"
                  );
                }),
                e
              );
            },
            { isClass: !0 }
          ),
          Ma = Cr(
            "DenseMatrix",
            ["Matrix"],
            function (e) {
              var t = e.Matrix;
              function n(e, t) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (t && !Yt(t)) throw new Error("Invalid datatype: " + t);
                if (Xt(e))
                  "DenseMatrix" === e.type
                    ? ((this._data = Tn(e._data)),
                      (this._size = Tn(e._size)),
                      (this._datatype = t || e._datatype))
                    : ((this._data = e.toArray()),
                      (this._size = e.size()),
                      (this._datatype = t || e._datatype));
                else if (e && Zt(e.data) && Zt(e.size))
                  (this._data = e.data),
                    (this._size = e.size),
                    mr(this._data, this._size),
                    (this._datatype = t || e.datatype);
                else if (Zt(e))
                  (this._data = (function e(t) {
                    for (var n = 0, r = t.length; n < r; n++) {
                      var i = t[n];
                      Zt(i)
                        ? (t[n] = e(i))
                        : i && !0 === i.isMatrix && (t[n] = e(i.valueOf()));
                    }
                    return t;
                  })(e)),
                    (this._size = dr(this._data)),
                    mr(this._data, this._size),
                    (this._datatype = t);
                else {
                  if (e)
                    throw new TypeError(
                      "Unsupported type of data (" + An(e) + ")"
                    );
                  (this._data = []), (this._size = [0]), (this._datatype = t);
                }
              }
              function r(e, t) {
                if (!nn(t)) throw new TypeError("Invalid index");
                if (t.isScalar()) return e.get(t.min());
                var r = t.size();
                if (r.length !== e._size.length)
                  throw new pr(r.length, e._size.length);
                for (
                  var i = t.min(), a = t.max(), o = 0, s = e._size.length;
                  o < s;
                  o++
                )
                  gr(i[o], e._size[o]), gr(a[o], e._size[o]);
                return new n(
                  (function e(t, n, r, i) {
                    var a = i === r - 1,
                      o = n.dimension(i);
                    return a
                      ? o
                          .map(function (e) {
                            return gr(e, t.length), t[e];
                          })
                          .valueOf()
                      : o
                          .map(function (a) {
                            return gr(a, t.length), e(t[a], n, r, i + 1);
                          })
                          .valueOf();
                  })(e._data, t, r.length, 0),
                  e._datatype
                );
              }
              function i(e, t, n, r) {
                if (!t || !0 !== t.isIndex)
                  throw new TypeError("Invalid index");
                var i,
                  a = t.size(),
                  s = t.isScalar();
                if (
                  (Xt(n) ? ((i = n.size()), (n = n.valueOf())) : (i = dr(n)), s)
                ) {
                  if (0 !== i.length) throw new TypeError("Scalar expected");
                  e.set(t.min(), n, r);
                } else {
                  if (a.length < e._size.length)
                    throw new pr(a.length, e._size.length, "<");
                  if (i.length < a.length) {
                    for (var u = 0, c = 0; 1 === a[u] && 1 === i[u]; ) u++;
                    for (; 1 === a[u]; ) c++, u++;
                    n = xr(n, a.length, c, i);
                  }
                  if (!Pn(a, i)) throw new pr(a, i, ">");
                  o(
                    e,
                    t.max().map(function (e) {
                      return e + 1;
                    }),
                    r
                  );
                  var l = a.length;
                  !(function e(t, n, r, i, a) {
                    var o = a === i - 1,
                      s = n.dimension(a);
                    o
                      ? s.forEach(function (e, n) {
                          gr(e), (t[e] = r[n[0]]);
                        })
                      : s.forEach(function (o, s) {
                          gr(o), e(t[o], n, r[s[0]], i, a + 1);
                        });
                  })(e._data, t, n, l, 0);
                }
                return e;
              }
              function a(e, t, n) {
                if (0 === t.length) {
                  for (var r = e._data; Zt(r); ) r = r[0];
                  return r;
                }
                return (
                  (e._size = t.slice(0)), (e._data = yr(e._data, e._size, n)), e
                );
              }
              function o(e, t, n) {
                for (var r = e._size.slice(0), i = !1; r.length < t.length; )
                  r.push(0), (i = !0);
                for (var o = 0, s = t.length; o < s; o++)
                  t[o] > r[o] && ((r[o] = t[o]), (i = !0));
                i && a(e, r, n);
              }
              return (
                (n.prototype = new t()),
                (n.prototype.createDenseMatrix = function (e, t) {
                  return new n(e, t);
                }),
                (n.prototype.type = "DenseMatrix"),
                (n.prototype.isDenseMatrix = !0),
                (n.prototype.getDataType = function () {
                  return Ar(this._data, An);
                }),
                (n.prototype.storage = function () {
                  return "dense";
                }),
                (n.prototype.datatype = function () {
                  return this._datatype;
                }),
                (n.prototype.create = function (e, t) {
                  return new n(e, t);
                }),
                (n.prototype.subset = function (e, t, n) {
                  switch (arguments.length) {
                    case 1:
                      return r(this, e);
                    case 2:
                    case 3:
                      return i(this, e, t, n);
                    default:
                      throw new SyntaxError("Wrong number of arguments");
                  }
                }),
                (n.prototype.get = function (e) {
                  if (!Zt(e)) throw new TypeError("Array expected");
                  if (e.length !== this._size.length)
                    throw new pr(e.length, this._size.length);
                  for (var t = 0; t < e.length; t++) gr(e[t], this._size[t]);
                  for (var n = this._data, r = 0, i = e.length; r < i; r++) {
                    var a = e[r];
                    gr(a, n.length), (n = n[a]);
                  }
                  return n;
                }),
                (n.prototype.set = function (e, t, n) {
                  if (!Zt(e)) throw new TypeError("Array expected");
                  if (e.length < this._size.length)
                    throw new pr(e.length, this._size.length, "<");
                  var r, i, a;
                  o(
                    this,
                    e.map(function (e) {
                      return e + 1;
                    }),
                    n
                  );
                  var s = this._data;
                  for (r = 0, i = e.length - 1; r < i; r++)
                    gr((a = e[r]), s.length), (s = s[a]);
                  return gr((a = e[e.length - 1]), s.length), (s[a] = t), this;
                }),
                (n.prototype.resize = function (e, t, n) {
                  if (!Kt(e)) throw new TypeError("Array or Matrix expected");
                  var r = e.valueOf().map(function (e) {
                    return Array.isArray(e) && 1 === e.length ? e[0] : e;
                  });
                  return a(n ? this.clone() : this, r, t);
                }),
                (n.prototype.reshape = function (e, t) {
                  var n = t ? this.clone() : this;
                  return (n._data = vr(n._data, e)), (n._size = e.slice(0)), n;
                }),
                (n.prototype.clone = function () {
                  return new n({
                    data: Tn(this._data),
                    size: Tn(this._size),
                    datatype: this._datatype,
                  });
                }),
                (n.prototype.size = function () {
                  return this._size.slice(0);
                }),
                (n.prototype.map = function (e) {
                  var t = this,
                    r = (function n(r, i) {
                      return Zt(r)
                        ? r.map(function (e, t) {
                            return n(e, i.concat(t));
                          })
                        : e(r, i, t);
                    })(this._data, []);
                  return new n(
                    r,
                    void 0 !== this._datatype ? Ar(r, An) : void 0
                  );
                }),
                (n.prototype.forEach = function (e) {
                  var t = this;
                  !(function n(r, i) {
                    Zt(r)
                      ? r.forEach(function (e, t) {
                          n(e, i.concat(t));
                        })
                      : e(r, i, t);
                  })(this._data, []);
                }),
                (n.prototype.toArray = function () {
                  return Tn(this._data);
                }),
                (n.prototype.valueOf = function () {
                  return this._data;
                }),
                (n.prototype.format = function (e) {
                  return ur(this._data, e);
                }),
                (n.prototype.toString = function () {
                  return ur(this._data);
                }),
                (n.prototype.toJSON = function () {
                  return {
                    mathjs: "DenseMatrix",
                    data: this._data,
                    size: this._size,
                    datatype: this._datatype,
                  };
                }),
                (n.prototype.diagonal = function (e) {
                  if (e) {
                    if ((Ht(e) && (e = e.toNumber()), !$t(e) || !Ln(e)))
                      throw new TypeError(
                        "The parameter k must be an integer number"
                      );
                  } else e = 0;
                  for (
                    var t = e > 0 ? e : 0,
                      r = e < 0 ? -e : 0,
                      i = this._size[0],
                      a = this._size[1],
                      o = Math.min(i - r, a - t),
                      s = [],
                      u = 0;
                    u < o;
                    u++
                  )
                    s[u] = this._data[u + r][u + t];
                  return new n({
                    data: s,
                    size: [o],
                    datatype: this._datatype,
                  });
                }),
                (n.diagonal = function (e, t, r, i) {
                  if (!Zt(e))
                    throw new TypeError("Array expected, size parameter");
                  if (2 !== e.length)
                    throw new Error("Only two dimensions matrix are supported");
                  if (
                    ((e = e.map(function (e) {
                      if (
                        (Ht(e) && (e = e.toNumber()), !$t(e) || !Ln(e) || e < 1)
                      )
                        throw new Error(
                          "Size values must be positive integers"
                        );
                      return e;
                    })),
                    r)
                  ) {
                    if ((Ht(r) && (r = r.toNumber()), !$t(r) || !Ln(r)))
                      throw new TypeError(
                        "The parameter k must be an integer number"
                      );
                  } else r = 0;
                  var a,
                    o = r > 0 ? r : 0,
                    s = r < 0 ? -r : 0,
                    u = e[0],
                    c = e[1],
                    l = Math.min(u - s, c - o);
                  if (Zt(t)) {
                    if (t.length !== l)
                      throw new Error("Invalid value array length");
                    a = function (e) {
                      return t[e];
                    };
                  } else if (Xt(t)) {
                    var f = t.size();
                    if (1 !== f.length || f[0] !== l)
                      throw new Error("Invalid matrix length");
                    a = function (e) {
                      return t.get([e]);
                    };
                  } else
                    a = function () {
                      return t;
                    };
                  i || (i = Ht(a(0)) ? a(0).mul(0) : 0);
                  var p = [];
                  if (e.length > 0) {
                    p = yr(p, e, i);
                    for (var h = 0; h < l; h++) p[h + s][h + o] = a(h);
                  }
                  return new n({ data: p, size: [u, c] });
                }),
                (n.fromJSON = function (e) {
                  return new n(e);
                }),
                (n.prototype.swapRows = function (e, t) {
                  if (!($t(e) && Ln(e) && $t(t) && Ln(t)))
                    throw new Error("Row index must be positive integers");
                  if (2 !== this._size.length)
                    throw new Error("Only two dimensional matrix is supported");
                  return (
                    gr(e, this._size[0]),
                    gr(t, this._size[0]),
                    n._swapRows(e, t, this._data),
                    this
                  );
                }),
                (n._swapRows = function (e, t, n) {
                  var r = n[e];
                  (n[e] = n[t]), (n[t] = r);
                }),
                n
              );
            },
            { isClass: !0 }
          ),
          Sa = Cr("clone", ["typed"], function (e) {
            return (0, e.typed)("clone", { any: Tn });
          });
        function _a(e) {
          for (var t = 0; t < e.length; t++) if (Kt(e[t])) return !0;
          return !1;
        }
        function ka(e, t) {
          Xt(e) && (e = e.valueOf());
          for (var n = 0, r = e.length; n < r; n++) {
            var i = e[n];
            Array.isArray(i) ? ka(i, t) : t(i);
          }
        }
        function Oa(e, t, n) {
          return e && "function" == typeof e.map
            ? e.map(function (e) {
                return Oa(e, t);
              })
            : t(e);
        }
        function Aa(e, t, n) {
          var r = Array.isArray(e) ? dr(e) : e.size();
          if (t < 0 || t >= r.length) throw new hr(t, r.length);
          return Xt(e) ? e.create(Ca(e.valueOf(), t, n)) : Ca(e, t, n);
        }
        function Ca(e, t, n) {
          var r, i, a, o;
          if (t <= 0) {
            if (Array.isArray(e[0])) {
              for (
                o = (function (e) {
                  var t,
                    n,
                    r = e.length,
                    i = e[0].length,
                    a = [];
                  for (n = 0; n < i; n++) {
                    var o = [];
                    for (t = 0; t < r; t++) o.push(e[t][n]);
                    a.push(o);
                  }
                  return a;
                })(e),
                  i = [],
                  r = 0;
                r < o.length;
                r++
              )
                i[r] = Ca(o[r], t - 1, n);
              return i;
            }
            for (a = e[0], r = 1; r < e.length; r++) a = n(a, e[r]);
            return a;
          }
          for (i = [], r = 0; r < e.length; r++) i[r] = Ca(e[r], t - 1, n);
          return i;
        }
        function Ta(e, t, n, r, i, a, o, s, u, c, l) {
          var f,
            p,
            h,
            d,
            m = e._values,
            g = e._index,
            y = e._ptr;
          if (r)
            for (p = y[t], h = y[t + 1], f = p; f < h; f++)
              n[(d = g[f])] !== a
                ? ((n[d] = a),
                  o.push(d),
                  c
                    ? ((r[d] = u ? s(m[f], l) : s(l, m[f])), (i[d] = a))
                    : (r[d] = m[f]))
                : ((r[d] = u ? s(m[f], r[d]) : s(r[d], m[f])), (i[d] = a));
          else
            for (p = y[t], h = y[t + 1], f = p; f < h; f++)
              n[(d = g[f])] !== a ? ((n[d] = a), o.push(d)) : (i[d] = a);
        }
        var Ia = "isInteger",
          Pa = Cr(Ia, ["typed"], function (e) {
            return (0, e.typed)(Ia, {
              number: Ln,
              BigNumber: function (e) {
                return e.isInt();
              },
              Fraction: function (e) {
                return 1 === e.d && isFinite(e.n);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ba = "number",
          Da = "number, number";
        function ja(e) {
          return Math.abs(e);
        }
        function Ra(e, t) {
          return e + t;
        }
        function La(e, t) {
          return e * t;
        }
        function za(e) {
          return -e;
        }
        function qa(e) {
          return e;
        }
        function Fa(e) {
          return Vn(e);
        }
        function Ua(e) {
          return Math.ceil(e);
        }
        function Va(e) {
          return e * e * e;
        }
        function $a(e) {
          return Math.exp(e);
        }
        function Ha(e) {
          return $n(e);
        }
        function Wa(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error(
              "Parameters in function gcd must be integer numbers"
            );
          for (var n; 0 !== t; ) (n = e % t), (e = t), (t = n);
          return e < 0 ? -e : e;
        }
        function Ga(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error(
              "Parameters in function lcm must be integer numbers"
            );
          if (0 === e || 0 === t) return 0;
          for (var n, r = e * t; 0 !== t; ) (t = e % (n = t)), (e = n);
          return Math.abs(r / e);
        }
        function Ja(e) {
          return Math.log(e);
        }
        function Ya(e) {
          return Fn(e);
        }
        function Za(e) {
          return qn(e);
        }
        function Xa(e, t) {
          if (t > 0) return e - t * Math.floor(e / t);
          if (0 === t) return e;
          throw new Error("Cannot calculate mod for a negative divisor");
        }
        function Ka(e, t) {
          var n = t < 0;
          if ((n && (t = -t), 0 === t))
            throw new Error("Root must be non-zero");
          if (e < 0 && Math.abs(t) % 2 != 1)
            throw new Error("Root must be odd when a is negative.");
          if (0 === e) return n ? 1 / 0 : 0;
          if (!isFinite(e)) return n ? 0 : e;
          var r = Math.pow(Math.abs(e), 1 / t);
          return (r = e < 0 ? -r : r), n ? 1 / r : r;
        }
        function Qa(e) {
          return zn(e);
        }
        function eo(e) {
          return e * e;
        }
        function to(e, t) {
          var n,
            r,
            i,
            a = 0,
            o = 1,
            s = 1,
            u = 0;
          if (!Ln(e) || !Ln(t))
            throw new Error(
              "Parameters in function xgcd must be integer numbers"
            );
          for (; t; )
            (i = e - (r = Math.floor(e / t)) * t),
              (n = a),
              (a = o - r * a),
              (o = n),
              (n = s),
              (s = u - r * s),
              (u = n),
              (e = t),
              (t = i);
          return e < 0 ? [-e, -o, -u] : [e, e ? o : 0, u];
        }
        function no(e, t) {
          return (e * e < 1 && t === 1 / 0) || (e * e > 1 && t === -1 / 0)
            ? 0
            : Math.pow(e, t);
        }
        function ro(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
          return parseFloat(Gn(e, t));
        }
        (ja.signature = Ba),
          (Ra.signature = Da),
          (La.signature = Da),
          (za.signature = Ba),
          (qa.signature = Ba),
          (Fa.signature = Ba),
          (Ua.signature = Ba),
          (Va.signature = Ba),
          ($a.signature = Ba),
          (Ha.signature = Ba),
          (Wa.signature = Da),
          (Ga.signature = Da),
          (Ja.signature = Ba),
          (Ya.signature = Ba),
          (Za.signature = Ba),
          (Xa.signature = Da),
          (Ka.signature = Da),
          (Qa.signature = Ba),
          (eo.signature = Ba),
          (to.signature = Da),
          (no.signature = Da),
          (ro.signature = Da);
        var io = "number, number";
        function ao(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error("Integers expected in function bitAnd");
          return e & t;
        }
        function oo(e) {
          if (!Ln(e)) throw new Error("Integer expected in function bitNot");
          return ~e;
        }
        function so(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error("Integers expected in function bitOr");
          return e | t;
        }
        function uo(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error("Integers expected in function bitXor");
          return e ^ t;
        }
        function co(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error("Integers expected in function leftShift");
          return e << t;
        }
        function lo(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error("Integers expected in function rightArithShift");
          return e >> t;
        }
        function fo(e, t) {
          if (!Ln(e) || !Ln(t))
            throw new Error("Integers expected in function rightLogShift");
          return e >>> t;
        }
        function po(e, t) {
          if (t < e) return 1;
          if (t === e) return t;
          var n = (t + e) >> 1;
          return po(e, n) * po(n + 1, t);
        }
        function ho(e, t) {
          if (!Ln(e) || e < 0)
            throw new TypeError(
              "Positive integer value expected in function combinations"
            );
          if (!Ln(t) || t < 0)
            throw new TypeError(
              "Positive integer value expected in function combinations"
            );
          if (t > e) throw new TypeError("k must be less than or equal to n");
          var n = e - t;
          return t < n ? po(n + 1, e) / po(1, t) : po(t + 1, e) / po(1, n);
        }
        (ao.signature = io),
          (oo.signature = "number"),
          (so.signature = io),
          (uo.signature = io),
          (co.signature = io),
          (lo.signature = io),
          (fo.signature = io),
          (ho.signature = "number, number");
        var mo = Math.PI,
          go = 2 * Math.PI,
          yo = Math.E,
          vo = "number, number";
        function bo(e) {
          return !e;
        }
        function xo(e, t) {
          return !(!e && !t);
        }
        function wo(e, t) {
          return !!e != !!t;
        }
        function No(e, t) {
          return !(!e || !t);
        }
        function Eo(e) {
          var t;
          if (Ln(e))
            return e <= 0
              ? isFinite(e)
                ? 1 / 0
                : NaN
              : e > 171
              ? 1 / 0
              : po(1, e - 1);
          if (e < 0.5) return Math.PI / (Math.sin(Math.PI * e) * Eo(1 - e));
          if (e >= 171.35) return 1 / 0;
          if (e > 85) {
            var n = e * e,
              r = n * e,
              i = r * e,
              a = i * e;
            return (
              Math.sqrt((2 * Math.PI) / e) *
              Math.pow(e / Math.E, e) *
              (1 +
                1 / (12 * e) +
                1 / (288 * n) -
                139 / (51840 * r) -
                571 / (2488320 * i) +
                163879 / (209018880 * a) +
                5246819 / (75246796800 * a * e))
            );
          }
          --e, (t = So[0]);
          for (var o = 1; o < So.length; ++o) t += So[o] / (e + o);
          var s = e + Mo + 0.5;
          return (
            Math.sqrt(2 * Math.PI) * Math.pow(s, e + 0.5) * Math.exp(-s) * t
          );
        }
        (bo.signature = "number"),
          (xo.signature = vo),
          (wo.signature = vo),
          (No.signature = vo),
          (Eo.signature = "number");
        var Mo = 4.7421875,
          So = [
            0.9999999999999971,
            57.15623566586292,
            -59.59796035547549,
            14.136097974741746,
            -0.4919138160976202,
            3399464998481189e-20,
            4652362892704858e-20,
            -9837447530487956e-20,
            0.0001580887032249125,
            -0.00021026444172410488,
            0.00021743961811521265,
            -0.0001643181065367639,
            8441822398385275e-20,
            -26190838401581408e-21,
            36899182659531625e-22,
          ],
          _o = "number";
        function ko(e) {
          return Qn(e);
        }
        function Oo(e) {
          return Math.atan(1 / e);
        }
        function Ao(e) {
          return isFinite(e)
            ? (Math.log((e + 1) / e) + Math.log(e / (e - 1))) / 2
            : 0;
        }
        function Co(e) {
          return Math.asin(1 / e);
        }
        function To(e) {
          var t = 1 / e;
          return Math.log(t + Math.sqrt(t * t + 1));
        }
        function Io(e) {
          return Math.acos(1 / e);
        }
        function Po(e) {
          var t = 1 / e,
            n = Math.sqrt(t * t - 1);
          return Math.log(n + t);
        }
        function Bo(e) {
          return er(e);
        }
        function Do(e) {
          return tr(e);
        }
        function jo(e) {
          return 1 / Math.tan(e);
        }
        function Ro(e) {
          var t = Math.exp(2 * e);
          return (t + 1) / (t - 1);
        }
        function Lo(e) {
          return 1 / Math.sin(e);
        }
        function zo(e) {
          return 0 === e
            ? Number.POSITIVE_INFINITY
            : Math.abs(2 / (Math.exp(e) - Math.exp(-e))) * zn(e);
        }
        function qo(e) {
          return 1 / Math.cos(e);
        }
        function Fo(e) {
          return 2 / (Math.exp(e) + Math.exp(-e));
        }
        function Uo(e) {
          return rr(e);
        }
        (ko.signature = _o),
          (Oo.signature = _o),
          (Ao.signature = _o),
          (Co.signature = _o),
          (To.signature = _o),
          (Io.signature = _o),
          (Po.signature = _o),
          (Bo.signature = _o),
          (Do.signature = _o),
          (jo.signature = _o),
          (Ro.signature = _o),
          (Lo.signature = _o),
          (zo.signature = _o),
          (qo.signature = _o),
          (Fo.signature = _o),
          (Uo.signature = _o);
        var Vo = "number";
        function $o(e) {
          return e < 0;
        }
        function Ho(e) {
          return e > 0;
        }
        function Wo(e) {
          return 0 === e;
        }
        function Go(e) {
          return Number.isNaN(e);
        }
        ($o.signature = Vo),
          (Ho.signature = Vo),
          (Wo.signature = Vo),
          (Go.signature = Vo);
        var Jo = "isNegative",
          Yo = Cr(Jo, ["typed"], function (e) {
            return (0, e.typed)(Jo, {
              number: $o,
              BigNumber: function (e) {
                return e.isNeg() && !e.isZero() && !e.isNaN();
              },
              Fraction: function (e) {
                return e.s < 0;
              },
              Unit: function (e) {
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Zo = "isNumeric",
          Xo = Cr(Zo, ["typed"], function (e) {
            return (0, e.typed)(Zo, {
              "number | BigNumber | Fraction | boolean": function () {
                return !0;
              },
              "Complex | Unit | string | null | undefined | Node": function () {
                return !1;
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ko = "hasNumericValue",
          Qo = Cr(Ko, ["typed", "isNumeric"], function (e) {
            var t = e.typed,
              n = e.isNumeric;
            return t(Ko, {
              string: function (e) {
                return e.trim().length > 0 && !isNaN(Number(e));
              },
              any: function (e) {
                return n(e);
              },
            });
          }),
          es = "isPositive",
          ts = Cr(es, ["typed"], function (e) {
            return (0, e.typed)(es, {
              number: Ho,
              BigNumber: function (e) {
                return !e.isNeg() && !e.isZero() && !e.isNaN();
              },
              Fraction: function (e) {
                return e.s > 0 && e.n > 0;
              },
              Unit: function (e) {
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          ns = Cr("isZero", ["typed"], function (e) {
            return (0, e.typed)("isZero", {
              number: Wo,
              BigNumber: function (e) {
                return e.isZero();
              },
              Complex: function (e) {
                return 0 === e.re && 0 === e.im;
              },
              Fraction: function (e) {
                return 1 === e.d && 0 === e.n;
              },
              Unit: function (e) {
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          rs = Cr("isNaN", ["typed"], function (e) {
            return (0, e.typed)("isNaN", {
              number: Go,
              BigNumber: function (e) {
                return e.isNaN();
              },
              Fraction: function (e) {
                return !1;
              },
              Complex: function (e) {
                return e.isNaN();
              },
              Unit: function (e) {
                return Number.isNaN(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, Number.isNaN);
              },
            });
          }),
          is = Cr("typeOf", ["typed"], function (e) {
            return (0, e.typed)("typeOf", { any: An });
          });
        function as(e, t, n) {
          if (null == n) return e.eq(t);
          if (e.eq(t)) return !0;
          if (e.isNaN() || t.isNaN()) return !1;
          if (e.isFinite() && t.isFinite()) {
            var r = e.minus(t).abs();
            if (r.isZero()) return !0;
            var i = e.constructor.max(e.abs(), t.abs());
            return r.lte(i.times(n));
          }
          return !1;
        }
        var os = "equalScalar",
          ss = Cr(os, ["typed", "config"], function (e) {
            var t = e.typed,
              n = e.config;
            return t(os, {
              "boolean, boolean": function (e, t) {
                return e === t;
              },
              "number, number": function (e, t) {
                return Kn(e, t, n.epsilon);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.eq(t) || as(e, t, n.epsilon);
              },
              "Fraction, Fraction": function (e, t) {
                return e.equals(t);
              },
              "Complex, Complex": function (e, t) {
                return (function (e, t, n) {
                  return Kn(e.re, t.re, n) && Kn(e.im, t.im, n);
                })(e, t, n.epsilon);
              },
              "Unit, Unit": function (e, t) {
                if (!e.equalBase(t))
                  throw new Error("Cannot compare units with different base");
                return this(e.value, t.value);
              },
            });
          }),
          us =
            (Cr(os, ["typed", "config"], function (e) {
              var t = e.typed,
                n = e.config;
              return t(os, {
                "number, number": function (e, t) {
                  return Kn(e, t, n.epsilon);
                },
              });
            }),
            Cr(
              "SparseMatrix",
              ["typed", "equalScalar", "Matrix"],
              function (e) {
                var t = e.typed,
                  n = e.equalScalar,
                  r = e.Matrix;
                function i(e, t) {
                  if (!(this instanceof i))
                    throw new SyntaxError(
                      "Constructor must be called with the new operator"
                    );
                  if (t && !Yt(t)) throw new Error("Invalid datatype: " + t);
                  if (Xt(e))
                    !(function (e, t, n) {
                      "SparseMatrix" === t.type
                        ? ((e._values = t._values ? Tn(t._values) : void 0),
                          (e._index = Tn(t._index)),
                          (e._ptr = Tn(t._ptr)),
                          (e._size = Tn(t._size)),
                          (e._datatype = n || t._datatype))
                        : a(e, t.valueOf(), n || t._datatype);
                    })(this, e, t);
                  else if (e && Zt(e.index) && Zt(e.ptr) && Zt(e.size))
                    (this._values = e.values),
                      (this._index = e.index),
                      (this._ptr = e.ptr),
                      (this._size = e.size),
                      (this._datatype = t || e.datatype);
                  else if (Zt(e)) a(this, e, t);
                  else {
                    if (e)
                      throw new TypeError(
                        "Unsupported type of data (" + An(e) + ")"
                      );
                    (this._values = []),
                      (this._index = []),
                      (this._ptr = [0]),
                      (this._size = [0, 0]),
                      (this._datatype = t);
                  }
                }
                function a(e, r, i) {
                  (e._values = []),
                    (e._index = []),
                    (e._ptr = []),
                    (e._datatype = i);
                  var a = r.length,
                    o = 0,
                    s = n,
                    u = 0;
                  if (
                    (Yt(i) &&
                      ((s = t.find(n, [i, i]) || n), (u = t.convert(0, i))),
                    a > 0)
                  ) {
                    var c = 0;
                    do {
                      e._ptr.push(e._index.length);
                      for (var l = 0; l < a; l++) {
                        var f = r[l];
                        if (Zt(f)) {
                          if (
                            (0 === c && o < f.length && (o = f.length),
                            c < f.length)
                          ) {
                            var p = f[c];
                            s(p, u) || (e._values.push(p), e._index.push(l));
                          }
                        } else
                          0 === c && o < 1 && (o = 1),
                            s(f, u) || (e._values.push(f), e._index.push(l));
                      }
                      c++;
                    } while (c < o);
                  }
                  e._ptr.push(e._index.length), (e._size = [a, o]);
                }
                function o(e, t) {
                  if (!nn(t)) throw new TypeError("Invalid index");
                  if (t.isScalar()) return e.get(t.min());
                  var n,
                    r,
                    a,
                    o,
                    s = t.size();
                  if (s.length !== e._size.length)
                    throw new pr(s.length, e._size.length);
                  var u = t.min(),
                    c = t.max();
                  for (n = 0, r = e._size.length; n < r; n++)
                    gr(u[n], e._size[n]), gr(c[n], e._size[n]);
                  var l = e._values,
                    f = e._index,
                    p = e._ptr,
                    h = t.dimension(0),
                    d = t.dimension(1),
                    m = [],
                    g = [];
                  h.forEach(function (e, t) {
                    (g[e] = t[0]), (m[e] = !0);
                  });
                  var y = l ? [] : void 0,
                    v = [],
                    b = [];
                  return (
                    d.forEach(function (e) {
                      for (b.push(v.length), a = p[e], o = p[e + 1]; a < o; a++)
                        (n = f[a]),
                          !0 === m[n] && (v.push(g[n]), y && y.push(l[a]));
                    }),
                    b.push(v.length),
                    new i({
                      values: y,
                      index: v,
                      ptr: b,
                      size: s,
                      datatype: e._datatype,
                    })
                  );
                }
                function s(e, t, n, r) {
                  if (!t || !0 !== t.isIndex)
                    throw new TypeError("Invalid index");
                  var i,
                    a = t.size(),
                    o = t.isScalar();
                  if (
                    (Xt(n) ? ((i = n.size()), (n = n.toArray())) : (i = dr(n)),
                    o)
                  ) {
                    if (0 !== i.length) throw new TypeError("Scalar expected");
                    e.set(t.min(), n, r);
                  } else {
                    if (1 !== a.length && 2 !== a.length)
                      throw new pr(a.length, e._size.length, "<");
                    if (i.length < a.length) {
                      for (var s = 0, u = 0; 1 === a[s] && 1 === i[s]; ) s++;
                      for (; 1 === a[s]; ) u++, s++;
                      n = xr(n, a.length, u, i);
                    }
                    if (!Pn(a, i)) throw new pr(a, i, ">");
                    for (
                      var c = t.min()[0],
                        l = t.min()[1],
                        f = i[0],
                        p = i[1],
                        h = 0;
                      h < f;
                      h++
                    )
                      for (var d = 0; d < p; d++) {
                        var m = n[h][d];
                        e.set([h + c, d + l], m, r);
                      }
                  }
                  return e;
                }
                function u(e, t, n, r) {
                  if (n - t == 0) return n;
                  for (var i = t; i < n; i++) if (r[i] === e) return i;
                  return t;
                }
                function c(e, t, n, r, i, a, o) {
                  i.splice(e, 0, r), a.splice(e, 0, t);
                  for (var s = n + 1; s < o.length; s++) o[s]++;
                }
                function l(e, r, i, a) {
                  var o = a || 0,
                    s = n,
                    u = 0;
                  Yt(e._datatype) &&
                    ((s = t.find(n, [e._datatype, e._datatype]) || n),
                    (u = t.convert(0, e._datatype)),
                    (o = t.convert(o, e._datatype)));
                  var c,
                    l,
                    f,
                    p = !s(o, u),
                    h = e._size[0],
                    d = e._size[1];
                  if (i > d) {
                    for (l = d; l < i; l++)
                      if (((e._ptr[l] = e._values.length), p))
                        for (c = 0; c < h; c++)
                          e._values.push(o), e._index.push(c);
                    e._ptr[i] = e._values.length;
                  } else
                    i < d &&
                      (e._ptr.splice(i + 1, d - i),
                      e._values.splice(e._ptr[i], e._values.length),
                      e._index.splice(e._ptr[i], e._index.length));
                  if (((d = i), r > h)) {
                    if (p) {
                      var m = 0;
                      for (l = 0; l < d; l++) {
                        (e._ptr[l] = e._ptr[l] + m), (f = e._ptr[l + 1] + m);
                        var g = 0;
                        for (c = h; c < r; c++, g++)
                          e._values.splice(f + g, 0, o),
                            e._index.splice(f + g, 0, c),
                            m++;
                      }
                      e._ptr[d] = e._values.length;
                    }
                  } else if (r < h) {
                    var y = 0;
                    for (l = 0; l < d; l++) {
                      e._ptr[l] = e._ptr[l] - y;
                      var v = e._ptr[l],
                        b = e._ptr[l + 1] - y;
                      for (f = v; f < b; f++)
                        (c = e._index[f]) > r - 1 &&
                          (e._values.splice(f, 1), e._index.splice(f, 1), y++);
                    }
                    e._ptr[l] = e._values.length;
                  }
                  return (e._size[0] = r), (e._size[1] = i), e;
                }
                function f(e, t, n, r, i) {
                  var a,
                    o,
                    s = r[0],
                    u = r[1],
                    c = [];
                  for (a = 0; a < s; a++)
                    for (c[a] = [], o = 0; o < u; o++) c[a][o] = 0;
                  for (o = 0; o < u; o++)
                    for (var l = n[o], f = n[o + 1], p = l; p < f; p++)
                      c[(a = t[p])][o] = e ? (i ? Tn(e[p]) : e[p]) : 1;
                  return c;
                }
                return (
                  (i.prototype = new r()),
                  (i.prototype.createSparseMatrix = function (e, t) {
                    return new i(e, t);
                  }),
                  (i.prototype.type = "SparseMatrix"),
                  (i.prototype.isSparseMatrix = !0),
                  (i.prototype.getDataType = function () {
                    return Ar(this._values, An);
                  }),
                  (i.prototype.storage = function () {
                    return "sparse";
                  }),
                  (i.prototype.datatype = function () {
                    return this._datatype;
                  }),
                  (i.prototype.create = function (e, t) {
                    return new i(e, t);
                  }),
                  (i.prototype.density = function () {
                    var e = this._size[0],
                      t = this._size[1];
                    return 0 !== e && 0 !== t
                      ? this._index.length / (e * t)
                      : 0;
                  }),
                  (i.prototype.subset = function (e, t, n) {
                    if (!this._values)
                      throw new Error(
                        "Cannot invoke subset on a Pattern only matrix"
                      );
                    switch (arguments.length) {
                      case 1:
                        return o(this, e);
                      case 2:
                      case 3:
                        return s(this, e, t, n);
                      default:
                        throw new SyntaxError("Wrong number of arguments");
                    }
                  }),
                  (i.prototype.get = function (e) {
                    if (!Zt(e)) throw new TypeError("Array expected");
                    if (e.length !== this._size.length)
                      throw new pr(e.length, this._size.length);
                    if (!this._values)
                      throw new Error(
                        "Cannot invoke get on a Pattern only matrix"
                      );
                    var t = e[0],
                      n = e[1];
                    gr(t, this._size[0]), gr(n, this._size[1]);
                    var r = u(t, this._ptr[n], this._ptr[n + 1], this._index);
                    return r < this._ptr[n + 1] && this._index[r] === t
                      ? this._values[r]
                      : 0;
                  }),
                  (i.prototype.set = function (e, r, i) {
                    if (!Zt(e)) throw new TypeError("Array expected");
                    if (e.length !== this._size.length)
                      throw new pr(e.length, this._size.length);
                    if (!this._values)
                      throw new Error(
                        "Cannot invoke set on a Pattern only matrix"
                      );
                    var a = e[0],
                      o = e[1],
                      s = this._size[0],
                      f = this._size[1],
                      p = n,
                      h = 0;
                    Yt(this._datatype) &&
                      ((p = t.find(n, [this._datatype, this._datatype]) || n),
                      (h = t.convert(0, this._datatype))),
                      (a > s - 1 || o > f - 1) &&
                        (l(this, Math.max(a + 1, s), Math.max(o + 1, f), i),
                        (s = this._size[0]),
                        (f = this._size[1])),
                      gr(a, s),
                      gr(o, f);
                    var d = u(a, this._ptr[o], this._ptr[o + 1], this._index);
                    return (
                      d < this._ptr[o + 1] && this._index[d] === a
                        ? p(r, h)
                          ? (function (e, t, n, r, i) {
                              n.splice(e, 1), r.splice(e, 1);
                              for (var a = t + 1; a < i.length; a++) i[a]--;
                            })(d, o, this._values, this._index, this._ptr)
                          : (this._values[d] = r)
                        : c(d, a, o, r, this._values, this._index, this._ptr),
                      this
                    );
                  }),
                  (i.prototype.resize = function (e, t, n) {
                    if (!Kt(e)) throw new TypeError("Array or Matrix expected");
                    var r = e.valueOf().map(function (e) {
                      return Array.isArray(e) && 1 === e.length ? e[0] : e;
                    });
                    if (2 !== r.length)
                      throw new Error(
                        "Only two dimensions matrix are supported"
                      );
                    return (
                      r.forEach(function (e) {
                        if (!$t(e) || !Ln(e) || e < 0)
                          throw new TypeError(
                            "Invalid size, must contain positive integers (size: " +
                              ur(r) +
                              ")"
                          );
                      }),
                      l(n ? this.clone() : this, r[0], r[1], t)
                    );
                  }),
                  (i.prototype.reshape = function (e, t) {
                    if (!Zt(e)) throw new TypeError("Array expected");
                    if (2 !== e.length)
                      throw new Error(
                        "Sparse matrices can only be reshaped in two dimensions"
                      );
                    if (
                      (e.forEach(function (t) {
                        if (!$t(t) || !Ln(t) || t < 0)
                          throw new TypeError(
                            "Invalid size, must contain positive integers (size: " +
                              ur(e) +
                              ")"
                          );
                      }),
                      this._size[0] * this._size[1] != e[0] * e[1])
                    )
                      throw new Error(
                        "Reshaping sparse matrix will result in the wrong number of elements"
                      );
                    var n = t ? this.clone() : this;
                    if (this._size[0] === e[0] && this._size[1] === e[1])
                      return n;
                    for (var r = [], i = 0; i < n._ptr.length; i++)
                      for (var a = 0; a < n._ptr[i + 1] - n._ptr[i]; a++)
                        r.push(i);
                    for (
                      var o = n._values.slice(), s = n._index.slice(), l = 0;
                      l < n._index.length;
                      l++
                    ) {
                      var f = s[l],
                        p = r[l],
                        h = f * n._size[1] + p;
                      (r[l] = h % e[1]), (s[l] = Math.floor(h / e[1]));
                    }
                    (n._values.length = 0),
                      (n._index.length = 0),
                      (n._ptr.length = e[1] + 1),
                      (n._size = e.slice());
                    for (var d = 0; d < n._ptr.length; d++) n._ptr[d] = 0;
                    for (var m = 0; m < o.length; m++) {
                      var g = s[m],
                        y = r[m],
                        v = o[m];
                      c(
                        u(g, n._ptr[y], n._ptr[y + 1], n._index),
                        g,
                        y,
                        v,
                        n._values,
                        n._index,
                        n._ptr
                      );
                    }
                    return n;
                  }),
                  (i.prototype.clone = function () {
                    return new i({
                      values: this._values ? Tn(this._values) : void 0,
                      index: Tn(this._index),
                      ptr: Tn(this._ptr),
                      size: Tn(this._size),
                      datatype: this._datatype,
                    });
                  }),
                  (i.prototype.size = function () {
                    return this._size.slice(0);
                  }),
                  (i.prototype.map = function (e, r) {
                    if (!this._values)
                      throw new Error(
                        "Cannot invoke map on a Pattern only matrix"
                      );
                    var a = this;
                    return (function (e, r, a, o, s, u, c) {
                      var l = [],
                        f = [],
                        p = [],
                        h = n,
                        d = 0;
                      Yt(e._datatype) &&
                        ((h = t.find(n, [e._datatype, e._datatype]) || n),
                        (d = t.convert(0, e._datatype)));
                      for (
                        var m = function (e, t, n) {
                            (e = u(e, t, n)), h(e, d) || (l.push(e), f.push(t));
                          },
                          g = 0;
                        g <= s;
                        g++
                      ) {
                        p.push(l.length);
                        var y = e._ptr[g],
                          v = e._ptr[g + 1];
                        if (c)
                          for (var b = y; b < v; b++) {
                            var x = e._index[b];
                            x >= 0 && x <= a && m(e._values[b], x - 0, g - 0);
                          }
                        else {
                          for (var w = {}, N = y; N < v; N++)
                            w[e._index[N]] = e._values[N];
                          for (var E = 0; E <= a; E++)
                            m(E in w ? w[E] : 0, E - 0, g - 0);
                        }
                      }
                      return (
                        p.push(l.length),
                        new i({
                          values: l,
                          index: f,
                          ptr: p,
                          size: [a - 0 + 1, s - 0 + 1],
                        })
                      );
                    })(
                      this,
                      0,
                      this._size[0] - 1,
                      0,
                      this._size[1] - 1,
                      function (t, n, r) {
                        return e(t, [n, r], a);
                      },
                      r
                    );
                  }),
                  (i.prototype.forEach = function (e, t) {
                    if (!this._values)
                      throw new Error(
                        "Cannot invoke forEach on a Pattern only matrix"
                      );
                    for (
                      var n = this._size[0], r = this._size[1], i = 0;
                      i < r;
                      i++
                    ) {
                      var a = this._ptr[i],
                        o = this._ptr[i + 1];
                      if (t)
                        for (var s = a; s < o; s++) {
                          var u = this._index[s];
                          e(this._values[s], [u, i], this);
                        }
                      else {
                        for (var c = {}, l = a; l < o; l++)
                          c[this._index[l]] = this._values[l];
                        for (var f = 0; f < n; f++)
                          e(f in c ? c[f] : 0, [f, i], this);
                      }
                    }
                  }),
                  (i.prototype.toArray = function () {
                    return f(
                      this._values,
                      this._index,
                      this._ptr,
                      this._size,
                      !0
                    );
                  }),
                  (i.prototype.valueOf = function () {
                    return f(
                      this._values,
                      this._index,
                      this._ptr,
                      this._size,
                      !1
                    );
                  }),
                  (i.prototype.format = function (e) {
                    for (
                      var t = this._size[0],
                        n = this._size[1],
                        r = this.density(),
                        i =
                          "Sparse Matrix [" +
                          ur(t, e) +
                          " x " +
                          ur(n, e) +
                          "] density: " +
                          ur(r, e) +
                          "\n",
                        a = 0;
                      a < n;
                      a++
                    )
                      for (
                        var o = this._ptr[a], s = this._ptr[a + 1], u = o;
                        u < s;
                        u++
                      )
                        i +=
                          "\n    (" +
                          ur(this._index[u], e) +
                          ", " +
                          ur(a, e) +
                          ") ==> " +
                          (this._values ? ur(this._values[u], e) : "X");
                    return i;
                  }),
                  (i.prototype.toString = function () {
                    return ur(this.toArray());
                  }),
                  (i.prototype.toJSON = function () {
                    return {
                      mathjs: "SparseMatrix",
                      values: this._values,
                      index: this._index,
                      ptr: this._ptr,
                      size: this._size,
                      datatype: this._datatype,
                    };
                  }),
                  (i.prototype.diagonal = function (e) {
                    if (e) {
                      if ((Ht(e) && (e = e.toNumber()), !$t(e) || !Ln(e)))
                        throw new TypeError(
                          "The parameter k must be an integer number"
                        );
                    } else e = 0;
                    var t = e > 0 ? e : 0,
                      n = e < 0 ? -e : 0,
                      r = this._size[0],
                      a = this._size[1],
                      o = Math.min(r - n, a - t),
                      s = [],
                      u = [],
                      c = [];
                    c[0] = 0;
                    for (var l = t; l < a && s.length < o; l++)
                      for (
                        var f = this._ptr[l], p = this._ptr[l + 1], h = f;
                        h < p;
                        h++
                      ) {
                        var d = this._index[h];
                        if (d === l - t + n) {
                          s.push(this._values[h]), (u[s.length - 1] = d - n);
                          break;
                        }
                      }
                    return (
                      c.push(s.length),
                      new i({ values: s, index: u, ptr: c, size: [o, 1] })
                    );
                  }),
                  (i.fromJSON = function (e) {
                    return new i(e);
                  }),
                  (i.diagonal = function (e, r, a, o, s) {
                    if (!Zt(e))
                      throw new TypeError("Array expected, size parameter");
                    if (2 !== e.length)
                      throw new Error(
                        "Only two dimensions matrix are supported"
                      );
                    if (
                      ((e = e.map(function (e) {
                        if (
                          (Ht(e) && (e = e.toNumber()),
                          !$t(e) || !Ln(e) || e < 1)
                        )
                          throw new Error(
                            "Size values must be positive integers"
                          );
                        return e;
                      })),
                      a)
                    ) {
                      if ((Ht(a) && (a = a.toNumber()), !$t(a) || !Ln(a)))
                        throw new TypeError(
                          "The parameter k must be an integer number"
                        );
                    } else a = 0;
                    var u = n,
                      c = 0;
                    Yt(s) &&
                      ((u = t.find(n, [s, s]) || n), (c = t.convert(0, s)));
                    var l,
                      f = a > 0 ? a : 0,
                      p = a < 0 ? -a : 0,
                      h = e[0],
                      d = e[1],
                      m = Math.min(h - p, d - f);
                    if (Zt(r)) {
                      if (r.length !== m)
                        throw new Error("Invalid value array length");
                      l = function (e) {
                        return r[e];
                      };
                    } else if (Xt(r)) {
                      var g = r.size();
                      if (1 !== g.length || g[0] !== m)
                        throw new Error("Invalid matrix length");
                      l = function (e) {
                        return r.get([e]);
                      };
                    } else
                      l = function () {
                        return r;
                      };
                    for (var y = [], v = [], b = [], x = 0; x < d; x++) {
                      b.push(y.length);
                      var w = x - f;
                      if (w >= 0 && w < m) {
                        var N = l(w);
                        u(N, c) || (v.push(w + p), y.push(N));
                      }
                    }
                    return (
                      b.push(y.length),
                      new i({ values: y, index: v, ptr: b, size: [h, d] })
                    );
                  }),
                  (i.prototype.swapRows = function (e, t) {
                    if (!($t(e) && Ln(e) && $t(t) && Ln(t)))
                      throw new Error("Row index must be positive integers");
                    if (2 !== this._size.length)
                      throw new Error(
                        "Only two dimensional matrix is supported"
                      );
                    return (
                      gr(e, this._size[0]),
                      gr(t, this._size[0]),
                      i._swapRows(
                        e,
                        t,
                        this._size[1],
                        this._values,
                        this._index,
                        this._ptr
                      ),
                      this
                    );
                  }),
                  (i._forEachRow = function (e, t, n, r, i) {
                    for (var a = r[e], o = r[e + 1], s = a; s < o; s++)
                      i(n[s], t[s]);
                  }),
                  (i._swapRows = function (e, t, n, r, i, a) {
                    for (var o = 0; o < n; o++) {
                      var s = a[o],
                        c = a[o + 1],
                        l = u(e, s, c, i),
                        f = u(t, s, c, i);
                      if (l < c && f < c && i[l] === e && i[f] === t) {
                        if (r) {
                          var p = r[l];
                          (r[l] = r[f]), (r[f] = p);
                        }
                      } else if (
                        l < c &&
                        i[l] === e &&
                        (f >= c || i[f] !== t)
                      ) {
                        var h = r ? r[l] : void 0;
                        i.splice(f, 0, t),
                          r && r.splice(f, 0, h),
                          i.splice(f <= l ? l + 1 : l, 1),
                          r && r.splice(f <= l ? l + 1 : l, 1);
                      } else if (
                        f < c &&
                        i[f] === t &&
                        (l >= c || i[l] !== e)
                      ) {
                        var d = r ? r[f] : void 0;
                        i.splice(l, 0, e),
                          r && r.splice(l, 0, d),
                          i.splice(l <= f ? f + 1 : f, 1),
                          r && r.splice(l <= f ? f + 1 : f, 1);
                      }
                    }
                  }),
                  i
                );
              },
              { isClass: !0 }
            )),
          cs = Cr("number", ["typed"], function (e) {
            var t = (0, e.typed)("number", {
              "": function () {
                return 0;
              },
              number: function (e) {
                return e;
              },
              string: function (e) {
                if ("NaN" === e) return NaN;
                var t = Number(e);
                if (isNaN(t))
                  throw new SyntaxError(
                    'String "' + e + '" is no valid number'
                  );
                if (["0b", "0o", "0x"].includes(e.substring(0, 2))) {
                  if (t > Math.pow(2, 32) - 1)
                    throw new SyntaxError(
                      'String "'.concat(e, '" is out of range')
                    );
                  2147483648 & t && (t = -1 * ~(t - 1));
                }
                return t;
              },
              BigNumber: function (e) {
                return e.toNumber();
              },
              Fraction: function (e) {
                return e.valueOf();
              },
              Unit: function (e) {
                throw new Error("Second argument with valueless unit expected");
              },
              null: function (e) {
                return 0;
              },
              "Unit, string | Unit": function (e, t) {
                return e.toNumber(t);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
            return (
              (t.fromJSON = function (e) {
                return parseFloat(e.value);
              }),
              t
            );
          }),
          ls = Cr("string", ["typed"], function (e) {
            return (0, e.typed)("string", {
              "": function () {
                return "";
              },
              number: Hn,
              null: function (e) {
                return "null";
              },
              boolean: function (e) {
                return e + "";
              },
              string: function (e) {
                return e;
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
              any: function (e) {
                return String(e);
              },
            });
          }),
          fs = "boolean",
          ps = Cr(fs, ["typed"], function (e) {
            return (0, e.typed)(fs, {
              "": function () {
                return !1;
              },
              boolean: function (e) {
                return e;
              },
              number: function (e) {
                return !!e;
              },
              null: function (e) {
                return !1;
              },
              BigNumber: function (e) {
                return !e.isZero();
              },
              string: function (e) {
                var t = e.toLowerCase();
                if ("true" === t) return !0;
                if ("false" === t) return !1;
                var n = Number(e);
                if ("" !== e && !isNaN(n)) return !!n;
                throw new Error('Cannot convert "' + e + '" to a boolean');
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          hs = Cr("bignumber", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("bignumber", {
              "": function () {
                return new n(0);
              },
              number: function (e) {
                return new n(e + "");
              },
              string: function (e) {
                return new n(e);
              },
              BigNumber: function (e) {
                return e;
              },
              Fraction: function (e) {
                return new n(e.n).div(e.d).times(e.s);
              },
              null: function (e) {
                return new n(0);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          ds = Cr("complex", ["typed", "Complex"], function (e) {
            var t = e.typed,
              n = e.Complex;
            return t("complex", {
              "": function () {
                return n.ZERO;
              },
              number: function (e) {
                return new n(e, 0);
              },
              "number, number": function (e, t) {
                return new n(e, t);
              },
              "BigNumber, BigNumber": function (e, t) {
                return new n(e.toNumber(), t.toNumber());
              },
              Fraction: function (e) {
                return new n(e.valueOf(), 0);
              },
              Complex: function (e) {
                return e.clone();
              },
              string: function (e) {
                return n(e);
              },
              null: function (e) {
                return n(0);
              },
              Object: function (e) {
                if ("re" in e && "im" in e) return new n(e.re, e.im);
                if (("r" in e && "phi" in e) || ("abs" in e && "arg" in e))
                  return new n(e);
                throw new Error(
                  "Expected object with properties (re and im) or (r and phi) or (abs and arg)"
                );
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          ms = Cr("fraction", ["typed", "Fraction"], function (e) {
            var t = e.typed,
              n = e.Fraction;
            return t("fraction", {
              number: function (e) {
                if (!isFinite(e) || isNaN(e))
                  throw new Error(e + " cannot be represented as a fraction");
                return new n(e);
              },
              string: function (e) {
                return new n(e);
              },
              "number, number": function (e, t) {
                return new n(e, t);
              },
              null: function (e) {
                return new n(0);
              },
              BigNumber: function (e) {
                return new n(e.toString());
              },
              Fraction: function (e) {
                return e;
              },
              Object: function (e) {
                return new n(e);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          gs = Cr(
            "matrix",
            ["typed", "Matrix", "DenseMatrix", "SparseMatrix"],
            function (e) {
              var t = e.typed,
                n = (e.Matrix, e.DenseMatrix),
                r = e.SparseMatrix;
              return t("matrix", {
                "": function () {
                  return i([]);
                },
                string: function (e) {
                  return i([], e);
                },
                "string, string": function (e, t) {
                  return i([], e, t);
                },
                Array: function (e) {
                  return i(e);
                },
                Matrix: function (e) {
                  return i(e, e.storage());
                },
                "Array | Matrix, string": i,
                "Array | Matrix, string, string": i,
              });
              function i(e, t, i) {
                if ("dense" === t || "default" === t || void 0 === t)
                  return new n(e, i);
                if ("sparse" === t) return new r(e, i);
                throw new TypeError(
                  "Unknown matrix type " + JSON.stringify(t) + "."
                );
              }
            }
          ),
          ys = "splitUnit",
          vs = Cr(ys, ["typed"], function (e) {
            return (0, e.typed)(ys, {
              "Unit, Array": function (e, t) {
                return e.splitUnit(t);
              },
            });
          }),
          bs = "unaryMinus",
          xs = Cr(bs, ["typed"], function (e) {
            return (0, e.typed)(bs, {
              number: za,
              Complex: function (e) {
                return e.neg();
              },
              BigNumber: function (e) {
                return e.neg();
              },
              Fraction: function (e) {
                return e.neg();
              },
              Unit: function (e) {
                var t = e.clone();
                return (t.value = this(e.value)), t;
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          ws = "unaryPlus",
          Ns = Cr(ws, ["typed", "config", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.BigNumber;
            return t(ws, {
              number: qa,
              Complex: function (e) {
                return e;
              },
              BigNumber: function (e) {
                return e;
              },
              Fraction: function (e) {
                return e;
              },
              Unit: function (e) {
                return e.clone();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
              "boolean | string": function (e) {
                return "BigNumber" === n.number ? new r(+e) : +e;
              },
            });
          }),
          Es = Cr("abs", ["typed"], function (e) {
            return (0, e.typed)("abs", {
              number: ja,
              Complex: function (e) {
                return e.abs();
              },
              BigNumber: function (e) {
                return e.abs();
              },
              Fraction: function (e) {
                return e.abs();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
              Unit: function (e) {
                return e.abs();
              },
            });
          }),
          Ms = Cr("apply", ["typed", "isInteger"], function (e) {
            var t = e.typed,
              n = e.isInteger;
            return t("apply", {
              "Array | Matrix, number | BigNumber, function": function (
                e,
                t,
                r
              ) {
                if (!n(t))
                  throw new TypeError("Integer number expected for dimension");
                var i = Array.isArray(e) ? dr(e) : e.size();
                if (t < 0 || t >= i.length) throw new hr(t, i.length);
                return Xt(e) ? e.create(Ss(e.valueOf(), t, r)) : Ss(e, t, r);
              },
            });
          });
        function Ss(e, t, n) {
          var r, i, a;
          if (t <= 0) {
            if (Array.isArray(e[0])) {
              for (
                a = (function (e) {
                  var t,
                    n,
                    r = e.length,
                    i = e[0].length,
                    a = [];
                  for (n = 0; n < i; n++) {
                    var o = [];
                    for (t = 0; t < r; t++) o.push(e[t][n]);
                    a.push(o);
                  }
                  return a;
                })(e),
                  i = [],
                  r = 0;
                r < a.length;
                r++
              )
                i[r] = Ss(a[r], t - 1, n);
              return i;
            }
            return n(e);
          }
          for (i = [], r = 0; r < e.length; r++) i[r] = Ss(e[r], t - 1, n);
          return i;
        }
        var _s = "addScalar",
          ks = Cr(_s, ["typed"], function (e) {
            return (0, e.typed)(_s, {
              "number, number": Ra,
              "Complex, Complex": function (e, t) {
                return e.add(t);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.plus(t);
              },
              "Fraction, Fraction": function (e, t) {
                return e.add(t);
              },
              "Unit, Unit": function (e, t) {
                if (null === e.value || void 0 === e.value)
                  throw new Error(
                    "Parameter x contains a unit with undefined value"
                  );
                if (null === t.value || void 0 === t.value)
                  throw new Error(
                    "Parameter y contains a unit with undefined value"
                  );
                if (!e.equalBase(t)) throw new Error("Units do not match");
                var n = e.clone();
                return (
                  (n.value = this(n.value, t.value)), (n.fixPrefix = !1), n
                );
              },
            });
          }),
          Os = Cr(
            "cbrt",
            [
              "config",
              "typed",
              "isNegative",
              "unaryMinus",
              "matrix",
              "Complex",
              "BigNumber",
              "Fraction",
            ],
            function (e) {
              var t = e.config,
                n = e.typed,
                r = e.isNegative,
                i = e.unaryMinus,
                a = e.matrix,
                o = e.Complex,
                s = e.BigNumber,
                u = e.Fraction;
              return n("cbrt", {
                number: Fa,
                Complex: c,
                "Complex, boolean": c,
                BigNumber: function (e) {
                  return e.cbrt();
                },
                Unit: function (e) {
                  if (e.value && Wt(e.value)) {
                    var t = e.clone();
                    return (
                      (t.value = 1), ((t = t.pow(1 / 3)).value = c(e.value)), t
                    );
                  }
                  var n,
                    a = r(e.value);
                  a && (e.value = i(e.value)),
                    (n = Ht(e.value)
                      ? new s(1).div(3)
                      : Gt(e.value)
                      ? new u(1, 3)
                      : 1 / 3);
                  var o = e.pow(n);
                  return a && (o.value = i(o.value)), o;
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
              });
              function c(e, n) {
                var r = e.arg() / 3,
                  i = e.abs(),
                  s = new o(Fa(i), 0).mul(new o(0, r).exp());
                if (n) {
                  var u = [
                    s,
                    new o(Fa(i), 0).mul(new o(0, r + (2 * Math.PI) / 3).exp()),
                    new o(Fa(i), 0).mul(new o(0, r - (2 * Math.PI) / 3).exp()),
                  ];
                  return "Array" === t.matrix ? u : a(u);
                }
                return s;
              }
            }
          ),
          As = Cr("ceil", ["typed", "config", "round"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.round;
            return t("ceil", {
              number: function (e) {
                return Kn(e, r(e), n.epsilon) ? r(e) : Ua(e);
              },
              Complex: function (e) {
                return e.ceil();
              },
              BigNumber: function (e) {
                return as(e, r(e), n.epsilon) ? r(e) : e.ceil();
              },
              Fraction: function (e) {
                return e.ceil();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Cs = Cr("cube", ["typed"], function (e) {
            return (0, e.typed)("cube", {
              number: Va,
              Complex: function (e) {
                return e.mul(e).mul(e);
              },
              BigNumber: function (e) {
                return e.times(e).times(e);
              },
              Fraction: function (e) {
                return e.pow(3);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
              Unit: function (e) {
                return e.pow(3);
              },
            });
          }),
          Ts = Cr("exp", ["typed"], function (e) {
            return (0, e.typed)("exp", {
              number: $a,
              Complex: function (e) {
                return e.exp();
              },
              BigNumber: function (e) {
                return e.exp();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Is = Cr("expm1", ["typed", "Complex"], function (e) {
            var t = e.typed,
              n = e.Complex;
            return t("expm1", {
              number: Ha,
              Complex: function (e) {
                var t = Math.exp(e.re);
                return new n(t * Math.cos(e.im) - 1, t * Math.sin(e.im));
              },
              BigNumber: function (e) {
                return e.exp().minus(1);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ps = Cr("fix", ["typed", "Complex", "ceil", "floor"], function (e) {
            var t = e.typed,
              n = e.Complex,
              r = e.ceil,
              i = e.floor;
            return t("fix", {
              number: function (e) {
                return e > 0 ? i(e) : r(e);
              },
              Complex: function (e) {
                return new n(
                  e.re > 0 ? Math.floor(e.re) : Math.ceil(e.re),
                  e.im > 0 ? Math.floor(e.im) : Math.ceil(e.im)
                );
              },
              BigNumber: function (e) {
                return e.isNegative() ? r(e) : i(e);
              },
              Fraction: function (e) {
                return e.s < 0 ? e.ceil() : e.floor();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Bs = Cr("floor", ["typed", "config", "round"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.round;
            return t("floor", {
              number: function (e) {
                return Kn(e, r(e), n.epsilon) ? r(e) : Math.floor(e);
              },
              Complex: function (e) {
                return e.floor();
              },
              BigNumber: function (e) {
                return as(e, r(e), n.epsilon) ? r(e) : e.floor();
              },
              Fraction: function (e) {
                return e.floor();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ds = Cr("algorithm01", ["typed"], function (e) {
            var t = e.typed;
            return function (e, n, r, i) {
              var a = e._data,
                o = e._size,
                s = e._datatype,
                u = n._values,
                c = n._index,
                l = n._ptr,
                f = n._size,
                p = n._datatype;
              if (o.length !== f.length) throw new pr(o.length, f.length);
              if (o[0] !== f[0] || o[1] !== f[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    o +
                    ") must match Matrix B (" +
                    f +
                    ")"
                );
              if (!u)
                throw new Error(
                  "Cannot perform operation on Dense Matrix and Pattern Sparse Matrix"
                );
              var h,
                d,
                m = o[0],
                g = o[1],
                y = "string" == typeof s && s === p ? s : void 0,
                v = y ? t.find(r, [y, y]) : r,
                b = [];
              for (h = 0; h < m; h++) b[h] = [];
              var x = [],
                w = [];
              for (d = 0; d < g; d++) {
                for (var N = d + 1, E = l[d], M = l[d + 1], S = E; S < M; S++)
                  (x[(h = c[S])] = i ? v(u[S], a[h][d]) : v(a[h][d], u[S])),
                    (w[h] = N);
                for (h = 0; h < m; h++)
                  w[h] === N ? (b[h][d] = x[h]) : (b[h][d] = a[h][d]);
              }
              return e.createDenseMatrix({
                data: b,
                size: [m, g],
                datatype: y,
              });
            };
          }),
          js = Cr("algorithm04", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i) {
              var a = e._values,
                o = e._index,
                s = e._ptr,
                u = e._size,
                c = e._datatype,
                l = r._values,
                f = r._index,
                p = r._ptr,
                h = r._size,
                d = r._datatype;
              if (u.length !== h.length) throw new pr(u.length, h.length);
              if (u[0] !== h[0] || u[1] !== h[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    u +
                    ") must match Matrix B (" +
                    h +
                    ")"
                );
              var m,
                g = u[0],
                y = u[1],
                v = n,
                b = 0,
                x = i;
              "string" == typeof c &&
                c === d &&
                ((m = c),
                (v = t.find(n, [m, m])),
                (b = t.convert(0, m)),
                (x = t.find(i, [m, m])));
              var w,
                N,
                E,
                M,
                S,
                _ = a && l ? [] : void 0,
                k = [],
                O = [],
                A = a && l ? [] : void 0,
                C = a && l ? [] : void 0,
                T = [],
                I = [];
              for (N = 0; N < y; N++) {
                O[N] = k.length;
                var P = N + 1;
                for (M = s[N], S = s[N + 1], E = M; E < S; E++)
                  (w = o[E]), k.push(w), (T[w] = P), A && (A[w] = a[E]);
                for (M = p[N], S = p[N + 1], E = M; E < S; E++)
                  if (T[(w = f[E])] === P) {
                    if (A) {
                      var B = x(A[w], l[E]);
                      v(B, b) ? (T[w] = null) : (A[w] = B);
                    }
                  } else k.push(w), (I[w] = P), C && (C[w] = l[E]);
                if (A && C)
                  for (E = O[N]; E < k.length; )
                    T[(w = k[E])] === P
                      ? ((_[E] = A[w]), E++)
                      : I[w] === P
                      ? ((_[E] = C[w]), E++)
                      : k.splice(E, 1);
              }
              return (
                (O[y] = k.length),
                e.createSparseMatrix({
                  values: _,
                  index: k,
                  ptr: O,
                  size: [g, y],
                  datatype: m,
                })
              );
            };
          }),
          Rs = Cr("algorithm10", ["typed", "DenseMatrix"], function (e) {
            var t = e.typed,
              n = e.DenseMatrix;
            return function (e, r, i, a) {
              var o = e._values,
                s = e._index,
                u = e._ptr,
                c = e._size,
                l = e._datatype;
              if (!o)
                throw new Error(
                  "Cannot perform operation on Pattern Sparse Matrix and Scalar value"
                );
              var f,
                p = c[0],
                h = c[1],
                d = i;
              "string" == typeof l &&
                ((f = l), (r = t.convert(r, f)), (d = t.find(i, [f, f])));
              for (var m = [], g = [], y = [], v = 0; v < h; v++) {
                for (var b = v + 1, x = u[v], w = u[v + 1], N = x; N < w; N++) {
                  var E = s[N];
                  (g[E] = o[N]), (y[E] = b);
                }
                for (var M = 0; M < p; M++)
                  0 === v && (m[M] = []),
                    y[M] === b
                      ? (m[M][v] = a ? d(r, g[M]) : d(g[M], r))
                      : (m[M][v] = r);
              }
              return new n({ data: m, size: [p, h], datatype: f });
            };
          }),
          Ls = Cr("algorithm13", ["typed"], function (e) {
            var t = e.typed;
            return function (e, n, r) {
              var i,
                a = e._data,
                o = e._size,
                s = e._datatype,
                u = n._data,
                c = n._size,
                l = n._datatype,
                f = [];
              if (o.length !== c.length) throw new pr(o.length, c.length);
              for (var p = 0; p < o.length; p++) {
                if (o[p] !== c[p])
                  throw new RangeError(
                    "Dimension mismatch. Matrix A (" +
                      o +
                      ") must match Matrix B (" +
                      c +
                      ")"
                  );
                f[p] = o[p];
              }
              var h = r;
              "string" == typeof s &&
                s === l &&
                ((i = s), (h = t.find(r, [i, i])));
              var d =
                f.length > 0
                  ? (function e(t, n, r, i, a, o) {
                      var s = [];
                      if (n === r.length - 1)
                        for (var u = 0; u < i; u++) s[u] = t(a[u], o[u]);
                      else
                        for (var c = 0; c < i; c++)
                          s[c] = e(t, n + 1, r, r[n + 1], a[c], o[c]);
                      return s;
                    })(h, 0, f, f[0], a, u)
                  : [];
              return e.createDenseMatrix({ data: d, size: f, datatype: i });
            };
          }),
          zs = Cr("algorithm14", ["typed"], function (e) {
            var t = e.typed;
            return function (e, n, r, i) {
              var a,
                o = e._data,
                s = e._size,
                u = e._datatype,
                c = r;
              "string" == typeof u &&
                ((a = u), (n = t.convert(n, a)), (c = t.find(r, [a, a])));
              var l =
                s.length > 0
                  ? (function e(t, n, r, i, a, o, s) {
                      var u = [];
                      if (n === r.length - 1)
                        for (var c = 0; c < i; c++)
                          u[c] = s ? t(o, a[c]) : t(a[c], o);
                      else
                        for (var l = 0; l < i; l++)
                          u[l] = e(t, n + 1, r, r[n + 1], a[l], o, s);
                      return u;
                    })(c, 0, s, s[0], o, n, i)
                  : [];
              return e.createDenseMatrix({ data: l, size: Tn(s), datatype: a });
            };
          }),
          qs = Cr(
            "gcd",
            ["typed", "matrix", "equalScalar", "BigNumber", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.BigNumber,
                a = e.DenseMatrix,
                o = Ds({ typed: t }),
                s = js({ typed: t, equalScalar: r }),
                u = Rs({ typed: t, DenseMatrix: a }),
                c = Ls({ typed: t }),
                l = zs({ typed: t });
              return t("gcd", {
                "number, number": Wa,
                "BigNumber, BigNumber": function (e, t) {
                  if (!e.isInt() || !t.isInt())
                    throw new Error(
                      "Parameters in function gcd must be integer numbers"
                    );
                  for (var n = new i(0); !t.isZero(); ) {
                    var r = e.mod(t);
                    (e = t), (t = r);
                  }
                  return e.lt(n) ? e.neg() : e;
                },
                "Fraction, Fraction": function (e, t) {
                  return e.gcd(t);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return s(e, t, this);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return o(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return c(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, number | BigNumber": function (e, t) {
                  return u(e, t, this, !1);
                },
                "DenseMatrix, number | BigNumber": function (e, t) {
                  return l(e, t, this, !1);
                },
                "number | BigNumber, SparseMatrix": function (e, t) {
                  return u(t, e, this, !0);
                },
                "number | BigNumber, DenseMatrix": function (e, t) {
                  return l(t, e, this, !0);
                },
                "Array, number | BigNumber": function (e, t) {
                  return l(n(e), t, this, !1).valueOf();
                },
                "number | BigNumber, Array": function (e, t) {
                  return l(n(t), e, this, !0).valueOf();
                },
                "Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber": function (
                  e,
                  t,
                  n
                ) {
                  for (var r = this(e, t), i = 0; i < n.length; i++)
                    r = this(r, n[i]);
                  return r;
                },
              });
            }
          ),
          Fs = Cr("algorithm02", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i, a) {
              var o = e._data,
                s = e._size,
                u = e._datatype,
                c = r._values,
                l = r._index,
                f = r._ptr,
                p = r._size,
                h = r._datatype;
              if (s.length !== p.length) throw new pr(s.length, p.length);
              if (s[0] !== p[0] || s[1] !== p[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    s +
                    ") must match Matrix B (" +
                    p +
                    ")"
                );
              if (!c)
                throw new Error(
                  "Cannot perform operation on Dense Matrix and Pattern Sparse Matrix"
                );
              var d,
                m = s[0],
                g = s[1],
                y = n,
                v = 0,
                b = i;
              "string" == typeof u &&
                u === h &&
                ((d = u),
                (y = t.find(n, [d, d])),
                (v = t.convert(0, d)),
                (b = t.find(i, [d, d])));
              for (var x = [], w = [], N = [], E = 0; E < g; E++) {
                N[E] = w.length;
                for (var M = f[E], S = f[E + 1], _ = M; _ < S; _++) {
                  var k = l[_],
                    O = a ? b(c[_], o[k][E]) : b(o[k][E], c[_]);
                  y(O, v) || (w.push(k), x.push(O));
                }
              }
              return (
                (N[g] = w.length),
                r.createSparseMatrix({
                  values: x,
                  index: w,
                  ptr: N,
                  size: [m, g],
                  datatype: d,
                })
              );
            };
          }),
          Us = Cr("algorithm06", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i) {
              var a = e._values,
                o = e._size,
                s = e._datatype,
                u = r._values,
                c = r._size,
                l = r._datatype;
              if (o.length !== c.length) throw new pr(o.length, c.length);
              if (o[0] !== c[0] || o[1] !== c[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    o +
                    ") must match Matrix B (" +
                    c +
                    ")"
                );
              var f,
                p = o[0],
                h = o[1],
                d = n,
                m = 0,
                g = i;
              "string" == typeof s &&
                s === l &&
                ((f = s),
                (d = t.find(n, [f, f])),
                (m = t.convert(0, f)),
                (g = t.find(i, [f, f])));
              for (
                var y = a && u ? [] : void 0,
                  v = [],
                  b = [],
                  x = y ? [] : void 0,
                  w = [],
                  N = [],
                  E = 0;
                E < h;
                E++
              ) {
                b[E] = v.length;
                var M = E + 1;
                if ((Ta(e, E, w, x, N, M, v, g), Ta(r, E, w, x, N, M, v, g), x))
                  for (var S = b[E]; S < v.length; ) {
                    var _ = v[S];
                    if (N[_] === M) {
                      var k = x[_];
                      d(k, m) ? v.splice(S, 1) : (y.push(k), S++);
                    } else v.splice(S, 1);
                  }
                else
                  for (var O = b[E]; O < v.length; )
                    N[v[O]] !== M ? v.splice(O, 1) : O++;
              }
              return (
                (b[h] = v.length),
                e.createSparseMatrix({
                  values: y,
                  index: v,
                  ptr: b,
                  size: [p, h],
                  datatype: f,
                })
              );
            };
          }),
          Vs = Cr("algorithm11", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i, a) {
              var o = e._values,
                s = e._index,
                u = e._ptr,
                c = e._size,
                l = e._datatype;
              if (!o)
                throw new Error(
                  "Cannot perform operation on Pattern Sparse Matrix and Scalar value"
                );
              var f,
                p = c[0],
                h = c[1],
                d = n,
                m = 0,
                g = i;
              "string" == typeof l &&
                ((f = l),
                (d = t.find(n, [f, f])),
                (m = t.convert(0, f)),
                (r = t.convert(r, f)),
                (g = t.find(i, [f, f])));
              for (var y = [], v = [], b = [], x = 0; x < h; x++) {
                b[x] = v.length;
                for (var w = u[x], N = u[x + 1], E = w; E < N; E++) {
                  var M = s[E],
                    S = a ? g(r, o[E]) : g(o[E], r);
                  d(S, m) || (v.push(M), y.push(S));
                }
              }
              return (
                (b[h] = v.length),
                e.createSparseMatrix({
                  values: y,
                  index: v,
                  ptr: b,
                  size: [p, h],
                  datatype: f,
                })
              );
            };
          }),
          $s = Cr("lcm", ["typed", "matrix", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.equalScalar,
              i = Fs({ typed: t, equalScalar: r }),
              a = Us({ typed: t, equalScalar: r }),
              o = Vs({ typed: t, equalScalar: r }),
              s = Ls({ typed: t }),
              u = zs({ typed: t });
            return t("lcm", {
              "number, number": Ga,
              "BigNumber, BigNumber": function (e, t) {
                if (!e.isInt() || !t.isInt())
                  throw new Error(
                    "Parameters in function lcm must be integer numbers"
                  );
                if (e.isZero()) return e;
                if (t.isZero()) return t;
                for (var n = e.times(t); !t.isZero(); ) {
                  var r = t;
                  (t = e.mod(r)), (e = r);
                }
                return n.div(e).abs();
              },
              "Fraction, Fraction": function (e, t) {
                return e.lcm(t);
              },
              "SparseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return i(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return i(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return s(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(n(e), n(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(n(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, n(t));
              },
              "SparseMatrix, number | BigNumber": function (e, t) {
                return o(e, t, this, !1);
              },
              "DenseMatrix, number | BigNumber": function (e, t) {
                return u(e, t, this, !1);
              },
              "number | BigNumber, SparseMatrix": function (e, t) {
                return o(t, e, this, !0);
              },
              "number | BigNumber, DenseMatrix": function (e, t) {
                return u(t, e, this, !0);
              },
              "Array, number | BigNumber": function (e, t) {
                return u(n(e), t, this, !1).valueOf();
              },
              "number | BigNumber, Array": function (e, t) {
                return u(n(t), e, this, !0).valueOf();
              },
              "Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber": function (
                e,
                t,
                n
              ) {
                for (var r = this(e, t), i = 0; i < n.length; i++)
                  r = this(r, n[i]);
                return r;
              },
            });
          }),
          Hs = Cr("log10", ["typed", "config", "Complex"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.Complex;
            return t("log10", {
              number: function (e) {
                return e >= 0 || n.predictable
                  ? Ya(e)
                  : new r(e, 0).log().div(Math.LN10);
              },
              Complex: function (e) {
                return new r(e).log().div(Math.LN10);
              },
              BigNumber: function (e) {
                return !e.isNegative() || n.predictable
                  ? e.log()
                  : new r(e.toNumber(), 0).log().div(Math.LN10);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ws = Cr("log2", ["typed", "config", "Complex"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.Complex;
            return t("log2", {
              number: function (e) {
                return e >= 0 || n.predictable ? Za(e) : i(new r(e, 0));
              },
              Complex: i,
              BigNumber: function (e) {
                return !e.isNegative() || n.predictable
                  ? e.log(2)
                  : i(new r(e.toNumber(), 0));
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
            function i(e) {
              var t = Math.sqrt(e.re * e.re + e.im * e.im);
              return new r(
                Math.log2 ? Math.log2(t) : Math.log(t) / Math.LN2,
                Math.atan2(e.im, e.re) / Math.LN2
              );
            }
          }),
          Gs = Cr("algorithm03", ["typed"], function (e) {
            var t = e.typed;
            return function (e, n, r, i) {
              var a = e._data,
                o = e._size,
                s = e._datatype,
                u = n._values,
                c = n._index,
                l = n._ptr,
                f = n._size,
                p = n._datatype;
              if (o.length !== f.length) throw new pr(o.length, f.length);
              if (o[0] !== f[0] || o[1] !== f[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    o +
                    ") must match Matrix B (" +
                    f +
                    ")"
                );
              if (!u)
                throw new Error(
                  "Cannot perform operation on Dense Matrix and Pattern Sparse Matrix"
                );
              var h,
                d = o[0],
                m = o[1],
                g = 0,
                y = r;
              "string" == typeof s &&
                s === p &&
                ((h = s), (g = t.convert(0, h)), (y = t.find(r, [h, h])));
              for (var v = [], b = 0; b < d; b++) v[b] = [];
              for (var x = [], w = [], N = 0; N < m; N++) {
                for (var E = N + 1, M = l[N], S = l[N + 1], _ = M; _ < S; _++) {
                  var k = c[_];
                  (x[k] = i ? y(u[_], a[k][N]) : y(a[k][N], u[_])), (w[k] = E);
                }
                for (var O = 0; O < d; O++)
                  w[O] === E
                    ? (v[O][N] = x[O])
                    : (v[O][N] = i ? y(g, a[O][N]) : y(a[O][N], g));
              }
              return e.createDenseMatrix({
                data: v,
                size: [d, m],
                datatype: h,
              });
            };
          }),
          Js = Cr("algorithm05", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i) {
              var a = e._values,
                o = e._index,
                s = e._ptr,
                u = e._size,
                c = e._datatype,
                l = r._values,
                f = r._index,
                p = r._ptr,
                h = r._size,
                d = r._datatype;
              if (u.length !== h.length) throw new pr(u.length, h.length);
              if (u[0] !== h[0] || u[1] !== h[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    u +
                    ") must match Matrix B (" +
                    h +
                    ")"
                );
              var m,
                g = u[0],
                y = u[1],
                v = n,
                b = 0,
                x = i;
              "string" == typeof c &&
                c === d &&
                ((m = c),
                (v = t.find(n, [m, m])),
                (b = t.convert(0, m)),
                (x = t.find(i, [m, m])));
              var w,
                N,
                E,
                M,
                S = a && l ? [] : void 0,
                _ = [],
                k = [],
                O = S ? [] : void 0,
                A = S ? [] : void 0,
                C = [],
                T = [];
              for (N = 0; N < y; N++) {
                k[N] = _.length;
                var I = N + 1;
                for (E = s[N], M = s[N + 1]; E < M; E++)
                  (w = o[E]), _.push(w), (C[w] = I), O && (O[w] = a[E]);
                for (E = p[N], M = p[N + 1]; E < M; E++)
                  C[(w = f[E])] !== I && _.push(w),
                    (T[w] = I),
                    A && (A[w] = l[E]);
                if (S)
                  for (E = k[N]; E < _.length; ) {
                    var P = C[(w = _[E])],
                      B = T[w];
                    if (P === I || B === I) {
                      var D = x(P === I ? O[w] : b, B === I ? A[w] : b);
                      v(D, b) ? _.splice(E, 1) : (S.push(D), E++);
                    }
                  }
              }
              return (
                (k[y] = _.length),
                e.createSparseMatrix({
                  values: S,
                  index: _,
                  ptr: k,
                  size: [g, y],
                  datatype: m,
                })
              );
            };
          }),
          Ys = Cr("algorithm12", ["typed", "DenseMatrix"], function (e) {
            var t = e.typed,
              n = e.DenseMatrix;
            return function (e, r, i, a) {
              var o = e._values,
                s = e._index,
                u = e._ptr,
                c = e._size,
                l = e._datatype;
              if (!o)
                throw new Error(
                  "Cannot perform operation on Pattern Sparse Matrix and Scalar value"
                );
              var f,
                p = c[0],
                h = c[1],
                d = i;
              "string" == typeof l &&
                ((f = l), (r = t.convert(r, f)), (d = t.find(i, [f, f])));
              for (var m = [], g = [], y = [], v = 0; v < h; v++) {
                for (var b = v + 1, x = u[v], w = u[v + 1], N = x; N < w; N++) {
                  var E = s[N];
                  (g[E] = o[N]), (y[E] = b);
                }
                for (var M = 0; M < p; M++)
                  0 === v && (m[M] = []),
                    y[M] === b
                      ? (m[M][v] = a ? d(r, g[M]) : d(g[M], r))
                      : (m[M][v] = a ? d(r, 0) : d(0, r));
              }
              return new n({ data: m, size: [p, h], datatype: f });
            };
          }),
          Zs = Cr(
            "mod",
            ["typed", "matrix", "equalScalar", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.DenseMatrix,
                a = Fs({ typed: t, equalScalar: r }),
                o = Gs({ typed: t }),
                s = Js({ typed: t, equalScalar: r }),
                u = Vs({ typed: t, equalScalar: r }),
                c = Ys({ typed: t, DenseMatrix: i }),
                l = Ls({ typed: t }),
                f = zs({ typed: t });
              return t("mod", {
                "number, number": Xa,
                "BigNumber, BigNumber": function (e, t) {
                  if (t.isNeg())
                    throw new Error(
                      "Cannot calculate mod for a negative divisor"
                    );
                  return t.isZero() ? e : e.mod(t);
                },
                "Fraction, Fraction": function (e, t) {
                  if (t.compare(0) < 0)
                    throw new Error(
                      "Cannot calculate mod for a negative divisor"
                    );
                  return e.compare(0) >= 0 ? e.mod(t) : e.mod(t).add(t).mod(t);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return s(e, t, this, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return l(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return u(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return f(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return c(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return f(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return f(n(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return f(n(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          Xs = Cr("multiplyScalar", ["typed"], function (e) {
            return (0, e.typed)("multiplyScalar", {
              "number, number": La,
              "Complex, Complex": function (e, t) {
                return e.mul(t);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.times(t);
              },
              "Fraction, Fraction": function (e, t) {
                return e.mul(t);
              },
              "number | Fraction | BigNumber | Complex, Unit": function (e, t) {
                var n = t.clone();
                return (
                  (n.value =
                    null === n.value ? n._normalize(e) : this(n.value, e)),
                  n
                );
              },
              "Unit, number | Fraction | BigNumber | Complex": function (e, t) {
                var n = e.clone();
                return (
                  (n.value =
                    null === n.value ? n._normalize(t) : this(n.value, t)),
                  n
                );
              },
              "Unit, Unit": function (e, t) {
                return e.multiply(t);
              },
            });
          }),
          Ks = "multiply",
          Qs = Cr(
            Ks,
            [
              "typed",
              "matrix",
              "addScalar",
              "multiplyScalar",
              "equalScalar",
              "dot",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.addScalar,
                i = e.multiplyScalar,
                a = e.equalScalar,
                o = e.dot,
                s = Vs({ typed: t, equalScalar: a }),
                u = zs({ typed: t });
              function c(e, t) {
                switch (e.length) {
                  case 1:
                    switch (t.length) {
                      case 1:
                        if (e[0] !== t[0])
                          throw new RangeError(
                            "Dimension mismatch in multiplication. Vectors must have the same length"
                          );
                        break;
                      case 2:
                        if (e[0] !== t[0])
                          throw new RangeError(
                            "Dimension mismatch in multiplication. Vector length (" +
                              e[0] +
                              ") must match Matrix rows (" +
                              t[0] +
                              ")"
                          );
                        break;
                      default:
                        throw new Error(
                          "Can only multiply a 1 or 2 dimensional matrix (Matrix B has " +
                            t.length +
                            " dimensions)"
                        );
                    }
                    break;
                  case 2:
                    switch (t.length) {
                      case 1:
                        if (e[1] !== t[0])
                          throw new RangeError(
                            "Dimension mismatch in multiplication. Matrix columns (" +
                              e[1] +
                              ") must match Vector length (" +
                              t[0] +
                              ")"
                          );
                        break;
                      case 2:
                        if (e[1] !== t[0])
                          throw new RangeError(
                            "Dimension mismatch in multiplication. Matrix A columns (" +
                              e[1] +
                              ") must match Matrix B rows (" +
                              t[0] +
                              ")"
                          );
                        break;
                      default:
                        throw new Error(
                          "Can only multiply a 1 or 2 dimensional matrix (Matrix B has " +
                            t.length +
                            " dimensions)"
                        );
                    }
                    break;
                  default:
                    throw new Error(
                      "Can only multiply a 1 or 2 dimensional matrix (Matrix A has " +
                        e.length +
                        " dimensions)"
                    );
                }
              }
              function l(e, n) {
                if ("dense" !== n.storage())
                  throw new Error("Support for SparseMatrix not implemented");
                return (function (e, n) {
                  var a,
                    o = e._data,
                    s = e._size,
                    u = e._datatype,
                    c = n._data,
                    l = n._size,
                    f = n._datatype,
                    p = s[0],
                    h = l[1],
                    d = r,
                    m = i;
                  u &&
                    f &&
                    u === f &&
                    "string" == typeof u &&
                    ((a = u), (d = t.find(r, [a, a])), (m = t.find(i, [a, a])));
                  for (var g = [], y = 0; y < h; y++) {
                    for (var v = m(o[0], c[0][y]), b = 1; b < p; b++)
                      v = d(v, m(o[b], c[b][y]));
                    g[y] = v;
                  }
                  return e.createDenseMatrix({
                    data: g,
                    size: [h],
                    datatype: a,
                  });
                })(e, n);
              }
              var f = t("_multiplyMatrixVector", {
                  "DenseMatrix, any": function (e, n) {
                    var a,
                      o = e._data,
                      s = e._size,
                      u = e._datatype,
                      c = n._data,
                      l = n._datatype,
                      f = s[0],
                      p = s[1],
                      h = r,
                      d = i;
                    u &&
                      l &&
                      u === l &&
                      "string" == typeof u &&
                      ((a = u),
                      (h = t.find(r, [a, a])),
                      (d = t.find(i, [a, a])));
                    for (var m = [], g = 0; g < f; g++) {
                      for (var y = o[g], v = d(y[0], c[0]), b = 1; b < p; b++)
                        v = h(v, d(y[b], c[b]));
                      m[g] = v;
                    }
                    return e.createDenseMatrix({
                      data: m,
                      size: [f],
                      datatype: a,
                    });
                  },
                  "SparseMatrix, any": function (e, n) {
                    var o = e._values,
                      s = e._index,
                      u = e._ptr,
                      c = e._datatype;
                    if (!o)
                      throw new Error(
                        "Cannot multiply Pattern only Matrix times Dense Matrix"
                      );
                    var l,
                      f = n._data,
                      p = n._datatype,
                      h = e._size[0],
                      d = n._size[0],
                      m = [],
                      g = [],
                      y = [],
                      v = r,
                      b = i,
                      x = a,
                      w = 0;
                    c &&
                      p &&
                      c === p &&
                      "string" == typeof c &&
                      ((l = c),
                      (v = t.find(r, [l, l])),
                      (b = t.find(i, [l, l])),
                      (x = t.find(a, [l, l])),
                      (w = t.convert(0, l)));
                    var N = [],
                      E = [];
                    y[0] = 0;
                    for (var M = 0; M < d; M++) {
                      var S = f[M];
                      if (!x(S, w))
                        for (var _ = u[M], k = u[M + 1], O = _; O < k; O++) {
                          var A = s[O];
                          E[A]
                            ? (N[A] = v(N[A], b(S, o[O])))
                            : ((E[A] = !0), g.push(A), (N[A] = b(S, o[O])));
                        }
                    }
                    for (var C = g.length, T = 0; T < C; T++) {
                      var I = g[T];
                      m[T] = N[I];
                    }
                    return (
                      (y[1] = g.length),
                      e.createSparseMatrix({
                        values: m,
                        index: g,
                        ptr: y,
                        size: [h, 1],
                        datatype: l,
                      })
                    );
                  },
                }),
                p = t("_multiplyMatrixMatrix", {
                  "DenseMatrix, DenseMatrix": function (e, n) {
                    var a,
                      o = e._data,
                      s = e._size,
                      u = e._datatype,
                      c = n._data,
                      l = n._size,
                      f = n._datatype,
                      p = s[0],
                      h = s[1],
                      d = l[1],
                      m = r,
                      g = i;
                    u &&
                      f &&
                      u === f &&
                      "string" == typeof u &&
                      ((a = u),
                      (m = t.find(r, [a, a])),
                      (g = t.find(i, [a, a])));
                    for (var y = [], v = 0; v < p; v++) {
                      var b = o[v];
                      y[v] = [];
                      for (var x = 0; x < d; x++) {
                        for (var w = g(b[0], c[0][x]), N = 1; N < h; N++)
                          w = m(w, g(b[N], c[N][x]));
                        y[v][x] = w;
                      }
                    }
                    return e.createDenseMatrix({
                      data: y,
                      size: [p, d],
                      datatype: a,
                    });
                  },
                  "DenseMatrix, SparseMatrix": function (e, n) {
                    var o = e._data,
                      s = e._size,
                      u = e._datatype,
                      c = n._values,
                      l = n._index,
                      f = n._ptr,
                      p = n._size,
                      h = n._datatype;
                    if (!c)
                      throw new Error(
                        "Cannot multiply Dense Matrix times Pattern only Matrix"
                      );
                    var d,
                      m = s[0],
                      g = p[1],
                      y = r,
                      v = i,
                      b = a,
                      x = 0;
                    u &&
                      h &&
                      u === h &&
                      "string" == typeof u &&
                      ((d = u),
                      (y = t.find(r, [d, d])),
                      (v = t.find(i, [d, d])),
                      (b = t.find(a, [d, d])),
                      (x = t.convert(0, d)));
                    for (
                      var w = [],
                        N = [],
                        E = [],
                        M = n.createSparseMatrix({
                          values: w,
                          index: N,
                          ptr: E,
                          size: [m, g],
                          datatype: d,
                        }),
                        S = 0;
                      S < g;
                      S++
                    ) {
                      E[S] = N.length;
                      var _ = f[S],
                        k = f[S + 1];
                      if (k > _)
                        for (var O = 0, A = 0; A < m; A++) {
                          for (var C = A + 1, T = void 0, I = _; I < k; I++) {
                            var P = l[I];
                            O !== C
                              ? ((T = v(o[A][P], c[I])), (O = C))
                              : (T = y(T, v(o[A][P], c[I])));
                          }
                          O !== C || b(T, x) || (N.push(A), w.push(T));
                        }
                    }
                    return (E[g] = N.length), M;
                  },
                  "SparseMatrix, DenseMatrix": function (e, n) {
                    var o = e._values,
                      s = e._index,
                      u = e._ptr,
                      c = e._datatype;
                    if (!o)
                      throw new Error(
                        "Cannot multiply Pattern only Matrix times Dense Matrix"
                      );
                    var l,
                      f = n._data,
                      p = n._datatype,
                      h = e._size[0],
                      d = n._size[0],
                      m = n._size[1],
                      g = r,
                      y = i,
                      v = a,
                      b = 0;
                    c &&
                      p &&
                      c === p &&
                      "string" == typeof c &&
                      ((l = c),
                      (g = t.find(r, [l, l])),
                      (y = t.find(i, [l, l])),
                      (v = t.find(a, [l, l])),
                      (b = t.convert(0, l)));
                    for (
                      var x = [],
                        w = [],
                        N = [],
                        E = e.createSparseMatrix({
                          values: x,
                          index: w,
                          ptr: N,
                          size: [h, m],
                          datatype: l,
                        }),
                        M = [],
                        S = [],
                        _ = 0;
                      _ < m;
                      _++
                    ) {
                      N[_] = w.length;
                      for (var k = _ + 1, O = 0; O < d; O++) {
                        var A = f[O][_];
                        if (!v(A, b))
                          for (var C = u[O], T = u[O + 1], I = C; I < T; I++) {
                            var P = s[I];
                            S[P] !== k
                              ? ((S[P] = k), w.push(P), (M[P] = y(A, o[I])))
                              : (M[P] = g(M[P], y(A, o[I])));
                          }
                      }
                      for (var B = N[_], D = w.length, j = B; j < D; j++) {
                        var R = w[j];
                        x[j] = M[R];
                      }
                    }
                    return (N[m] = w.length), E;
                  },
                  "SparseMatrix, SparseMatrix": function (e, n) {
                    var a,
                      o = e._values,
                      s = e._index,
                      u = e._ptr,
                      c = e._datatype,
                      l = n._values,
                      f = n._index,
                      p = n._ptr,
                      h = n._datatype,
                      d = e._size[0],
                      m = n._size[1],
                      g = o && l,
                      y = r,
                      v = i;
                    c &&
                      h &&
                      c === h &&
                      "string" == typeof c &&
                      ((a = c),
                      (y = t.find(r, [a, a])),
                      (v = t.find(i, [a, a])));
                    for (
                      var b,
                        x,
                        w,
                        N,
                        E,
                        M,
                        S,
                        _,
                        k = g ? [] : void 0,
                        O = [],
                        A = [],
                        C = e.createSparseMatrix({
                          values: k,
                          index: O,
                          ptr: A,
                          size: [d, m],
                          datatype: a,
                        }),
                        T = g ? [] : void 0,
                        I = [],
                        P = 0;
                      P < m;
                      P++
                    ) {
                      A[P] = O.length;
                      var B = P + 1;
                      for (E = p[P], M = p[P + 1], N = E; N < M; N++)
                        if (((_ = f[N]), g))
                          for (x = u[_], w = u[_ + 1], b = x; b < w; b++)
                            I[(S = s[b])] !== B
                              ? ((I[S] = B), O.push(S), (T[S] = v(l[N], o[b])))
                              : (T[S] = y(T[S], v(l[N], o[b])));
                        else
                          for (x = u[_], w = u[_ + 1], b = x; b < w; b++)
                            I[(S = s[b])] !== B && ((I[S] = B), O.push(S));
                      if (g)
                        for (var D = A[P], j = O.length, R = D; R < j; R++) {
                          var L = O[R];
                          k[R] = T[L];
                        }
                    }
                    return (A[m] = O.length), C;
                  },
                });
              return t(
                Ks,
                In(
                  {
                    "Array, Array": function (e, t) {
                      c(dr(e), dr(t));
                      var r = this(n(e), n(t));
                      return Xt(r) ? r.valueOf() : r;
                    },
                    "Matrix, Matrix": function (e, t) {
                      var n = e.size(),
                        r = t.size();
                      return (
                        c(n, r),
                        1 === n.length
                          ? 1 === r.length
                            ? (function (e, t, n) {
                                if (0 === n)
                                  throw new Error(
                                    "Cannot multiply two empty vectors"
                                  );
                                return o(e, t);
                              })(e, t, n[0])
                            : l(e, t)
                          : 1 === r.length
                          ? f(e, t)
                          : p(e, t)
                      );
                    },
                    "Matrix, Array": function (e, t) {
                      return this(e, n(t));
                    },
                    "Array, Matrix": function (e, t) {
                      return this(n(e, t.storage()), t);
                    },
                    "SparseMatrix, any": function (e, t) {
                      return s(e, t, i, !1);
                    },
                    "DenseMatrix, any": function (e, t) {
                      return u(e, t, i, !1);
                    },
                    "any, SparseMatrix": function (e, t) {
                      return s(t, e, i, !0);
                    },
                    "any, DenseMatrix": function (e, t) {
                      return u(t, e, i, !0);
                    },
                    "Array, any": function (e, t) {
                      return u(n(e), t, i, !1).valueOf();
                    },
                    "any, Array": function (e, t) {
                      return u(n(t), e, i, !0).valueOf();
                    },
                    "any, any": i,
                    "any, any, ...any": function (e, t, n) {
                      for (var r = this(e, t), i = 0; i < n.length; i++)
                        r = this(r, n[i]);
                      return r;
                    },
                  },
                  i.signatures
                )
              );
            }
          ),
          eu = "nthRoot",
          tu = Cr(
            eu,
            ["typed", "matrix", "equalScalar", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.BigNumber,
                a = Ds({ typed: t }),
                o = Fs({ typed: t, equalScalar: r }),
                s = Us({ typed: t, equalScalar: r }),
                u = Vs({ typed: t, equalScalar: r }),
                c = Ls({ typed: t }),
                l = zs({ typed: t }),
                f =
                  "Complex number not supported in function nthRoot. Use nthRoots instead.";
              return t(eu, {
                number: function (e) {
                  return Ka(e, 2);
                },
                "number, number": Ka,
                BigNumber: function (e) {
                  return p(e, new i(2));
                },
                Complex: function (e) {
                  throw new Error(f);
                },
                "Complex, number": function (e, t) {
                  throw new Error(f);
                },
                "BigNumber, BigNumber": p,
                "Array | Matrix": function (e) {
                  return this(e, 2);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  if (1 === t.density()) return s(e, t, this);
                  throw new Error("Root must be non-zero");
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return o(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  if (1 === t.density()) return a(e, t, this, !1);
                  throw new Error("Root must be non-zero");
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return c(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, number | BigNumber": function (e, t) {
                  return u(e, t, this, !1);
                },
                "DenseMatrix, number | BigNumber": function (e, t) {
                  return l(e, t, this, !1);
                },
                "number | BigNumber, SparseMatrix": function (e, t) {
                  if (1 === t.density()) return u(t, e, this, !0);
                  throw new Error("Root must be non-zero");
                },
                "number | BigNumber, DenseMatrix": function (e, t) {
                  return l(t, e, this, !0);
                },
                "Array, number | BigNumber": function (e, t) {
                  return this(n(e), t).valueOf();
                },
                "number | BigNumber, Array": function (e, t) {
                  return this(e, n(t)).valueOf();
                },
              });
              function p(e, t) {
                var n = i.precision,
                  r = i.clone({ precision: n + 2 }),
                  a = new i(0),
                  o = new r(1),
                  s = t.isNegative();
                if ((s && (t = t.neg()), t.isZero()))
                  throw new Error("Root must be non-zero");
                if (e.isNegative() && !t.abs().mod(2).equals(1))
                  throw new Error("Root must be odd when a is negative.");
                if (e.isZero()) return s ? new r(1 / 0) : 0;
                if (!e.isFinite()) return s ? a : e;
                var u = e.abs().pow(o.div(t));
                return (
                  (u = e.isNeg() ? u.neg() : u),
                  new i((s ? o.div(u) : u).toPrecision(n))
                );
              }
            }
          ),
          nu = Cr(
            "sign",
            ["typed", "BigNumber", "Fraction", "complex"],
            function (e) {
              var t = e.typed,
                n = e.BigNumber,
                r = e.complex,
                i = e.Fraction;
              return t("sign", {
                number: Qa,
                Complex: function (e) {
                  return 0 === e.im ? r(Qa(e.re)) : e.sign();
                },
                BigNumber: function (e) {
                  return new n(e.cmp(0));
                },
                Fraction: function (e) {
                  return new i(e.s, 1);
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
                Unit: function (e) {
                  return this(e.value);
                },
              });
            }
          ),
          ru = Cr("sqrt", ["config", "typed", "Complex"], function (e) {
            var t = e.config,
              n = e.typed,
              r = e.Complex;
            return n("sqrt", {
              number: i,
              Complex: function (e) {
                return e.sqrt();
              },
              BigNumber: function (e) {
                return !e.isNegative() || t.predictable
                  ? e.sqrt()
                  : i(e.toNumber());
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
              Unit: function (e) {
                return e.pow(0.5);
              },
            });
            function i(e) {
              return isNaN(e)
                ? NaN
                : e >= 0 || t.predictable
                ? Math.sqrt(e)
                : new r(e, 0).sqrt();
            }
          }),
          iu = Cr("square", ["typed"], function (e) {
            return (0, e.typed)("square", {
              number: eo,
              Complex: function (e) {
                return e.mul(e);
              },
              BigNumber: function (e) {
                return e.times(e);
              },
              Fraction: function (e) {
                return e.mul(e);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
              Unit: function (e) {
                return e.pow(2);
              },
            });
          }),
          au = "subtract",
          ou = Cr(
            au,
            [
              "typed",
              "matrix",
              "equalScalar",
              "addScalar",
              "unaryMinus",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.addScalar,
                a = e.unaryMinus,
                o = e.DenseMatrix,
                s = Ds({ typed: t }),
                u = Gs({ typed: t }),
                c = Js({ typed: t, equalScalar: r }),
                l = Rs({ typed: t, DenseMatrix: o }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t(au, {
                "number, number": function (e, t) {
                  return e - t;
                },
                "Complex, Complex": function (e, t) {
                  return e.sub(t);
                },
                "BigNumber, BigNumber": function (e, t) {
                  return e.minus(t);
                },
                "Fraction, Fraction": function (e, t) {
                  return e.sub(t);
                },
                "Unit, Unit": function (e, t) {
                  if (null === e.value)
                    throw new Error(
                      "Parameter x contains a unit with undefined value"
                    );
                  if (null === t.value)
                    throw new Error(
                      "Parameter y contains a unit with undefined value"
                    );
                  if (!e.equalBase(t)) throw new Error("Units do not match");
                  var n = e.clone();
                  return (
                    (n.value = this(n.value, t.value)), (n.fixPrefix = !1), n
                  );
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return su(e, t), c(e, t, this);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return su(e, t), u(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return su(e, t), s(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return su(e, t), f(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return l(e, a(t), i);
                },
                "DenseMatrix, any": function (e, t) {
                  return p(e, t, this);
                },
                "any, SparseMatrix": function (e, t) {
                  return l(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return p(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return p(n(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return p(n(t), e, this, !0).valueOf();
                },
              });
            }
          );
        function su(e, t) {
          var n = e.size(),
            r = t.size();
          if (n.length !== r.length) throw new pr(n.length, r.length);
        }
        var uu = Cr(
            "xgcd",
            ["typed", "config", "matrix", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.matrix,
                i = e.BigNumber;
              return t("xgcd", {
                "number, number": function (e, t) {
                  var i = to(e, t);
                  return "Array" === n.matrix ? i : r(i);
                },
                "BigNumber, BigNumber": function (e, t) {
                  var a,
                    o,
                    s,
                    u,
                    c = new i(0),
                    l = new i(1),
                    f = c,
                    p = l,
                    h = l,
                    d = c;
                  if (!e.isInt() || !t.isInt())
                    throw new Error(
                      "Parameters in function xgcd must be integer numbers"
                    );
                  for (; !t.isZero(); )
                    (o = e.div(t).floor()),
                      (s = e.mod(t)),
                      (a = f),
                      (f = p.minus(o.times(f))),
                      (p = a),
                      (a = h),
                      (h = d.minus(o.times(h))),
                      (d = a),
                      (e = t),
                      (t = s);
                  return (
                    (u = e.lt(c)
                      ? [e.neg(), p.neg(), d.neg()]
                      : [e, e.isZero() ? 0 : p, d]),
                    "Array" === n.matrix ? u : r(u)
                  );
                },
              });
            }
          ),
          cu = Cr("algorithm09", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i) {
              var a = e._values,
                o = e._index,
                s = e._ptr,
                u = e._size,
                c = e._datatype,
                l = r._values,
                f = r._index,
                p = r._ptr,
                h = r._size,
                d = r._datatype;
              if (u.length !== h.length) throw new pr(u.length, h.length);
              if (u[0] !== h[0] || u[1] !== h[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    u +
                    ") must match Matrix B (" +
                    h +
                    ")"
                );
              var m,
                g = u[0],
                y = u[1],
                v = n,
                b = 0,
                x = i;
              "string" == typeof c &&
                c === d &&
                ((m = c),
                (v = t.find(n, [m, m])),
                (b = t.convert(0, m)),
                (x = t.find(i, [m, m])));
              var w,
                N,
                E,
                M,
                S,
                _ = a && l ? [] : void 0,
                k = [],
                O = [],
                A = _ ? [] : void 0,
                C = [];
              for (N = 0; N < y; N++) {
                O[N] = k.length;
                var T = N + 1;
                if (A)
                  for (M = p[N], S = p[N + 1], E = M; E < S; E++)
                    (C[(w = f[E])] = T), (A[w] = l[E]);
                for (M = s[N], S = s[N + 1], E = M; E < S; E++)
                  if (((w = o[E]), A)) {
                    var I = C[w] === T ? A[w] : b,
                      P = x(a[E], I);
                    v(P, b) || (k.push(w), _.push(P));
                  } else k.push(w);
              }
              return (
                (O[y] = k.length),
                e.createSparseMatrix({
                  values: _,
                  index: k,
                  ptr: O,
                  size: [g, y],
                  datatype: m,
                })
              );
            };
          }),
          lu = "dotMultiply",
          fu = Cr(
            lu,
            ["typed", "matrix", "equalScalar", "multiplyScalar"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.multiplyScalar,
                a = Fs({ typed: t, equalScalar: r }),
                o = cu({ typed: t, equalScalar: r }),
                s = Vs({ typed: t, equalScalar: r }),
                u = Ls({ typed: t }),
                c = zs({ typed: t });
              return t(lu, {
                "any, any": i,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, i, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, i, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return a(e, t, i, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return u(e, t, i);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return s(e, t, i, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return c(e, t, i, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return s(t, e, i, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return c(t, e, i, !0);
                },
                "Array, any": function (e, t) {
                  return c(n(e), t, i, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return c(n(t), e, i, !0).valueOf();
                },
              });
            }
          );
        function pu(e, t) {
          if (
            (e.isFinite() && !e.isInteger()) ||
            (t.isFinite() && !t.isInteger())
          )
            throw new Error("Integers expected in function bitAnd");
          var n = e.constructor;
          if (e.isNaN() || t.isNaN()) return new n(NaN);
          if (e.isZero() || t.eq(-1) || e.eq(t)) return e;
          if (t.isZero() || e.eq(-1)) return t;
          if (!e.isFinite() || !t.isFinite()) {
            if (!e.isFinite() && !t.isFinite())
              return e.isNegative() === t.isNegative() ? e : new n(0);
            if (!e.isFinite())
              return t.isNegative() ? e : e.isNegative() ? new n(0) : t;
            if (!t.isFinite())
              return e.isNegative() ? t : t.isNegative() ? new n(0) : e;
          }
          return mu(e, t, function (e, t) {
            return e & t;
          });
        }
        function hu(e) {
          if (e.isFinite() && !e.isInteger())
            throw new Error("Integer expected in function bitNot");
          var t = e.constructor,
            n = t.precision;
          t.config({ precision: 1e9 });
          var r = e.plus(new t(1));
          return (r.s = -r.s || null), t.config({ precision: n }), r;
        }
        function du(e, t) {
          if (
            (e.isFinite() && !e.isInteger()) ||
            (t.isFinite() && !t.isInteger())
          )
            throw new Error("Integers expected in function bitOr");
          var n = e.constructor;
          if (e.isNaN() || t.isNaN()) return new n(NaN);
          var r = new n(-1);
          return e.isZero() || t.eq(r) || e.eq(t)
            ? t
            : t.isZero() || e.eq(r)
            ? e
            : e.isFinite() && t.isFinite()
            ? mu(e, t, function (e, t) {
                return e | t;
              })
            : (!e.isFinite() && !e.isNegative() && t.isNegative()) ||
              (e.isNegative() && !t.isNegative() && !t.isFinite())
            ? r
            : e.isNegative() && t.isNegative()
            ? e.isFinite()
              ? e
              : t
            : e.isFinite()
            ? t
            : e;
        }
        function mu(e, t, n) {
          var r,
            i,
            a,
            o,
            s,
            u = e.constructor,
            c = +(e.s < 0),
            l = +(t.s < 0);
          if (c) {
            r = gu(hu(e));
            for (var f = 0; f < r.length; ++f) r[f] ^= 1;
          } else r = gu(e);
          if (l) {
            i = gu(hu(t));
            for (var p = 0; p < i.length; ++p) i[p] ^= 1;
          } else i = gu(t);
          r.length <= i.length
            ? ((a = r), (o = i), (s = c))
            : ((a = i), (o = r), (s = l));
          var h = a.length,
            d = o.length,
            m = 1 ^ n(c, l),
            g = new u(1 ^ m),
            y = new u(1),
            v = new u(2),
            b = u.precision;
          for (u.config({ precision: 1e9 }); h > 0; )
            n(a[--h], o[--d]) === m && (g = g.plus(y)), (y = y.times(v));
          for (; d > 0; )
            n(s, o[--d]) === m && (g = g.plus(y)), (y = y.times(v));
          return u.config({ precision: b }), 0 === m && (g.s = -g.s), g;
        }
        function gu(e) {
          for (var t = e.d, n = t[0] + "", r = 1; r < t.length; ++r) {
            for (var i = t[r] + "", a = 7 - i.length; a--; ) i = "0" + i;
            n += i;
          }
          for (var o = n.length; "0" === n.charAt(o); ) o--;
          var s = e.e,
            u = n.slice(0, o + 1 || 1),
            c = u.length;
          if (s > 0)
            if (++s > c) for (s -= c; s--; ) u += "0";
            else s < c && (u = u.slice(0, s) + "." + u.slice(s));
          for (var l = [0], f = 0; f < u.length; ) {
            for (var p = l.length; p--; ) l[p] *= 10;
            l[0] += parseInt(u.charAt(f++));
            for (var h = 0; h < l.length; ++h)
              l[h] > 1 &&
                ((null !== l[h + 1] && void 0 !== l[h + 1]) || (l[h + 1] = 0),
                (l[h + 1] += l[h] >> 1),
                (l[h] &= 1));
          }
          return l.reverse();
        }
        function yu(e, t) {
          if (
            (e.isFinite() && !e.isInteger()) ||
            (t.isFinite() && !t.isInteger())
          )
            throw new Error("Integers expected in function bitXor");
          var n = e.constructor;
          if (e.isNaN() || t.isNaN()) return new n(NaN);
          if (e.isZero()) return t;
          if (t.isZero()) return e;
          if (e.eq(t)) return new n(0);
          var r = new n(-1);
          return e.eq(r)
            ? hu(t)
            : t.eq(r)
            ? hu(e)
            : e.isFinite() && t.isFinite()
            ? mu(e, t, function (e, t) {
                return e ^ t;
              })
            : e.isFinite() || t.isFinite()
            ? new n(e.isNegative() === t.isNegative() ? 1 / 0 : -1 / 0)
            : r;
        }
        function vu(e, t) {
          if (
            (e.isFinite() && !e.isInteger()) ||
            (t.isFinite() && !t.isInteger())
          )
            throw new Error("Integers expected in function leftShift");
          var n = e.constructor;
          return e.isNaN() || t.isNaN() || (t.isNegative() && !t.isZero())
            ? new n(NaN)
            : e.isZero() || t.isZero()
            ? e
            : e.isFinite() || t.isFinite()
            ? t.lt(55)
              ? e.times(Math.pow(2, t.toNumber()) + "")
              : e.times(new n(2).pow(t))
            : new n(NaN);
        }
        function bu(e, t) {
          if (
            (e.isFinite() && !e.isInteger()) ||
            (t.isFinite() && !t.isInteger())
          )
            throw new Error("Integers expected in function rightArithShift");
          var n = e.constructor;
          return e.isNaN() || t.isNaN() || (t.isNegative() && !t.isZero())
            ? new n(NaN)
            : e.isZero() || t.isZero()
            ? e
            : t.isFinite()
            ? t.lt(55)
              ? e.div(Math.pow(2, t.toNumber()) + "").floor()
              : e.div(new n(2).pow(t)).floor()
            : e.isNegative()
            ? new n(-1)
            : e.isFinite()
            ? new n(0)
            : new n(NaN);
        }
        var xu = Cr("bitAnd", ["typed", "matrix", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.equalScalar,
              i = Fs({ typed: t, equalScalar: r }),
              a = Us({ typed: t, equalScalar: r }),
              o = Vs({ typed: t, equalScalar: r }),
              s = Ls({ typed: t }),
              u = zs({ typed: t });
            return t("bitAnd", {
              "number, number": ao,
              "BigNumber, BigNumber": pu,
              "SparseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this, !1);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return i(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return i(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return s(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(n(e), n(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(n(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, n(t));
              },
              "SparseMatrix, any": function (e, t) {
                return o(e, t, this, !1);
              },
              "DenseMatrix, any": function (e, t) {
                return u(e, t, this, !1);
              },
              "any, SparseMatrix": function (e, t) {
                return o(t, e, this, !0);
              },
              "any, DenseMatrix": function (e, t) {
                return u(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return u(n(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return u(n(t), e, this, !0).valueOf();
              },
            });
          }),
          wu = Cr("bitNot", ["typed"], function (e) {
            return (0, e.typed)("bitNot", {
              number: oo,
              BigNumber: hu,
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Nu = Cr(
            "bitOr",
            ["typed", "matrix", "equalScalar", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.DenseMatrix,
                a = Ds({ typed: t }),
                o = js({ typed: t, equalScalar: r }),
                s = Rs({ typed: t, DenseMatrix: i }),
                u = Ls({ typed: t }),
                c = zs({ typed: t });
              return t("bitOr", {
                "number, number": so,
                "BigNumber, BigNumber": du,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return a(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return u(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return s(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return c(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return s(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return c(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return c(n(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return c(n(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          Eu = Cr("algorithm07", ["typed", "DenseMatrix"], function (e) {
            var t = e.typed,
              n = e.DenseMatrix;
            return function (e, i, a) {
              var o = e._size,
                s = e._datatype,
                u = i._size,
                c = i._datatype;
              if (o.length !== u.length) throw new pr(o.length, u.length);
              if (o[0] !== u[0] || o[1] !== u[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    o +
                    ") must match Matrix B (" +
                    u +
                    ")"
                );
              var l,
                f,
                p,
                h = o[0],
                d = o[1],
                m = 0,
                g = a;
              "string" == typeof s &&
                s === c &&
                ((l = s), (m = t.convert(0, l)), (g = t.find(a, [l, l])));
              var y = [];
              for (f = 0; f < h; f++) y[f] = [];
              var v = [],
                b = [],
                x = [],
                w = [];
              for (p = 0; p < d; p++) {
                var N = p + 1;
                for (r(e, p, x, v, N), r(i, p, w, b, N), f = 0; f < h; f++) {
                  var E = x[f] === N ? v[f] : m,
                    M = w[f] === N ? b[f] : m;
                  y[f][p] = g(E, M);
                }
              }
              return new n({ data: y, size: [h, d], datatype: l });
            };
            function r(e, t, n, r, i) {
              for (
                var a = e._values,
                  o = e._index,
                  s = e._ptr,
                  u = s[t],
                  c = s[t + 1];
                u < c;
                u++
              ) {
                var l = o[u];
                (n[l] = i), (r[l] = a[u]);
              }
            }
          }),
          Mu = Cr("bitXor", ["typed", "matrix", "DenseMatrix"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.DenseMatrix,
              i = Gs({ typed: t }),
              a = Eu({ typed: t, DenseMatrix: r }),
              o = Ys({ typed: t, DenseMatrix: r }),
              s = Ls({ typed: t }),
              u = zs({ typed: t });
            return t("bitXor", {
              "number, number": uo,
              "BigNumber, BigNumber": yu,
              "SparseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return i(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return i(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return s(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(n(e), n(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(n(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, n(t));
              },
              "SparseMatrix, any": function (e, t) {
                return o(e, t, this, !1);
              },
              "DenseMatrix, any": function (e, t) {
                return u(e, t, this, !1);
              },
              "any, SparseMatrix": function (e, t) {
                return o(t, e, this, !0);
              },
              "any, DenseMatrix": function (e, t) {
                return u(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return u(n(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return u(n(t), e, this, !0).valueOf();
              },
            });
          }),
          Su = Cr("arg", ["typed"], function (e) {
            return (0, e.typed)("arg", {
              number: function (e) {
                return Math.atan2(0, e);
              },
              BigNumber: function (e) {
                return e.constructor.atan2(0, e);
              },
              Complex: function (e) {
                return e.arg();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          _u = Cr("conj", ["typed"], function (e) {
            return (0, e.typed)("conj", {
              number: function (e) {
                return e;
              },
              BigNumber: function (e) {
                return e;
              },
              Complex: function (e) {
                return e.conjugate();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          ku = Cr("im", ["typed"], function (e) {
            return (0, e.typed)("im", {
              number: function (e) {
                return 0;
              },
              BigNumber: function (e) {
                return e.mul(0);
              },
              Complex: function (e) {
                return e.im;
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ou = Cr("re", ["typed"], function (e) {
            return (0, e.typed)("re", {
              number: function (e) {
                return e;
              },
              BigNumber: function (e) {
                return e;
              },
              Complex: function (e) {
                return e.re;
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Au = Cr("not", ["typed"], function (e) {
            return (0, e.typed)("not", {
              number: bo,
              Complex: function (e) {
                return 0 === e.re && 0 === e.im;
              },
              BigNumber: function (e) {
                return e.isZero() || e.isNaN();
              },
              Unit: function (e) {
                return null === e.value || this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Cu = Cr(
            "or",
            ["typed", "matrix", "equalScalar", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.DenseMatrix,
                a = Gs({ typed: t }),
                o = Js({ typed: t, equalScalar: r }),
                s = Ys({ typed: t, DenseMatrix: i }),
                u = Ls({ typed: t }),
                c = zs({ typed: t });
              return t("or", {
                "number, number": xo,
                "Complex, Complex": function (e, t) {
                  return 0 !== e.re || 0 !== e.im || 0 !== t.re || 0 !== t.im;
                },
                "BigNumber, BigNumber": function (e, t) {
                  return (
                    (!e.isZero() && !e.isNaN()) || (!t.isZero() && !t.isNaN())
                  );
                },
                "Unit, Unit": function (e, t) {
                  return this(e.value || 0, t.value || 0);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return a(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return u(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return s(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return c(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return s(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return c(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return c(n(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return c(n(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          Tu = Cr("xor", ["typed", "matrix", "DenseMatrix"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.DenseMatrix,
              i = Gs({ typed: t }),
              a = Eu({ typed: t, DenseMatrix: r }),
              o = Ys({ typed: t, DenseMatrix: r }),
              s = Ls({ typed: t }),
              u = zs({ typed: t });
            return t("xor", {
              "number, number": wo,
              "Complex, Complex": function (e, t) {
                return (0 !== e.re || 0 !== e.im) != (0 !== t.re || 0 !== t.im);
              },
              "BigNumber, BigNumber": function (e, t) {
                return (
                  (!e.isZero() && !e.isNaN()) != (!t.isZero() && !t.isNaN())
                );
              },
              "Unit, Unit": function (e, t) {
                return this(e.value || 0, t.value || 0);
              },
              "SparseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return i(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return i(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return s(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(n(e), n(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(n(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, n(t));
              },
              "SparseMatrix, any": function (e, t) {
                return o(e, t, this, !1);
              },
              "DenseMatrix, any": function (e, t) {
                return u(e, t, this, !1);
              },
              "any, SparseMatrix": function (e, t) {
                return o(t, e, this, !0);
              },
              "any, DenseMatrix": function (e, t) {
                return u(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return u(n(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return u(n(t), e, this, !0).valueOf();
              },
            });
          }),
          Iu = Cr("concat", ["typed", "matrix", "isInteger"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.isInteger;
            return t("concat", {
              "...Array | Matrix | number | BigNumber": function (e) {
                var t,
                  i,
                  a = e.length,
                  o = -1,
                  s = !1,
                  u = [];
                for (t = 0; t < a; t++) {
                  var c = e[t];
                  if ((Xt(c) && (s = !0), $t(c) || Ht(c))) {
                    if (t !== a - 1)
                      throw new Error(
                        "Dimension must be specified as last argument"
                      );
                    if (((i = o), (o = c.valueOf()), !r(o)))
                      throw new TypeError(
                        "Integer number expected for dimension"
                      );
                    if (o < 0 || (t > 0 && o > i)) throw new hr(o, i + 1);
                  } else {
                    var l = Tn(c).valueOf(),
                      f = dr(l);
                    if (
                      ((u[t] = l),
                      (i = o),
                      (o = f.length - 1),
                      t > 0 && o !== i)
                    )
                      throw new pr(i + 1, o + 1);
                  }
                }
                if (0 === u.length)
                  throw new SyntaxError("At least one matrix expected");
                for (var p = u.shift(); u.length; ) p = Pu(p, u.shift(), o, 0);
                return s ? n(p) : p;
              },
              "...string": function (e) {
                return e.join("");
              },
            });
          });
        function Pu(e, t, n, r) {
          if (r < n) {
            if (e.length !== t.length) throw new pr(e.length, t.length);
            for (var i = [], a = 0; a < e.length; a++)
              i[a] = Pu(e[a], t[a], n, r + 1);
            return i;
          }
          return e.concat(t);
        }
        var Bu = Cr("column", ["typed", "Index", "matrix", "range"], function (
            e
          ) {
            var t = e.typed,
              n = e.Index,
              r = e.matrix,
              i = e.range;
            return t("column", {
              "Matrix, number": a,
              "Array, number": function (e, t) {
                return a(r(Tn(e)), t).valueOf();
              },
            });
            function a(e, t) {
              if (2 !== e.size().length)
                throw new Error("Only two dimensional matrix is supported");
              gr(t, e.size()[1]);
              var r = i(0, e.size()[0]),
                a = new n(r, t);
              return e.subset(a);
            }
          }),
          Du = Cr(
            "cross",
            ["typed", "matrix", "subtract", "multiply"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.subtract,
                i = e.multiply;
              return t("cross", {
                "Matrix, Matrix": function (e, t) {
                  return n(a(e.toArray(), t.toArray()));
                },
                "Matrix, Array": function (e, t) {
                  return n(a(e.toArray(), t));
                },
                "Array, Matrix": function (e, t) {
                  return n(a(e, t.toArray()));
                },
                "Array, Array": a,
              });
              function a(e, t) {
                var n = Math.max(dr(e).length, dr(t).length);
                (e = br(e)), (t = br(t));
                var a = dr(e),
                  o = dr(t);
                if (
                  1 !== a.length ||
                  1 !== o.length ||
                  3 !== a[0] ||
                  3 !== o[0]
                )
                  throw new RangeError(
                    "Vectors with length 3 expected (Size A = [" +
                      a.join(", ") +
                      "], B = [" +
                      o.join(", ") +
                      "])"
                  );
                var s = [
                  r(i(e[1], t[2]), i(e[2], t[1])),
                  r(i(e[2], t[0]), i(e[0], t[2])),
                  r(i(e[0], t[1]), i(e[1], t[0])),
                ];
                return n > 1 ? [s] : s;
              }
            }
          ),
          ju = Cr(
            "diag",
            ["typed", "matrix", "DenseMatrix", "SparseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.DenseMatrix,
                i = e.SparseMatrix;
              return t("diag", {
                Array: function (e) {
                  return a(e, 0, dr(e), null);
                },
                "Array, number": function (e, t) {
                  return a(e, t, dr(e), null);
                },
                "Array, BigNumber": function (e, t) {
                  return a(e, t.toNumber(), dr(e), null);
                },
                "Array, string": function (e, t) {
                  return a(e, 0, dr(e), t);
                },
                "Array, number, string": function (e, t, n) {
                  return a(e, t, dr(e), n);
                },
                "Array, BigNumber, string": function (e, t, n) {
                  return a(e, t.toNumber(), dr(e), n);
                },
                Matrix: function (e) {
                  return a(e, 0, e.size(), e.storage());
                },
                "Matrix, number": function (e, t) {
                  return a(e, t, e.size(), e.storage());
                },
                "Matrix, BigNumber": function (e, t) {
                  return a(e, t.toNumber(), e.size(), e.storage());
                },
                "Matrix, string": function (e, t) {
                  return a(e, 0, e.size(), t);
                },
                "Matrix, number, string": function (e, t, n) {
                  return a(e, t, e.size(), n);
                },
                "Matrix, BigNumber, string": function (e, t, n) {
                  return a(e, t.toNumber(), e.size(), n);
                },
              });
              function a(e, t, a, o) {
                if (!Ln(t))
                  throw new TypeError(
                    "Second parameter in function diag must be an integer"
                  );
                var s = t > 0 ? t : 0,
                  u = t < 0 ? -t : 0;
                switch (a.length) {
                  case 1:
                    return (function (e, t, n, a, o, s) {
                      var u = [a + o, a + s];
                      if (n && "sparse" !== n && "dense" !== n)
                        throw new TypeError(
                          "Unknown matrix type ".concat(n, '"')
                        );
                      var c =
                        "sparse" === n
                          ? i.diagonal(u, e, t)
                          : r.diagonal(u, e, t);
                      return null !== n ? c : c.valueOf();
                    })(e, t, o, a[0], u, s);
                  case 2:
                    return (function (e, t, r, i, a, o) {
                      if (Xt(e)) {
                        var s = e.diagonal(t);
                        return null !== r
                          ? r !== s.storage()
                            ? n(s, r)
                            : s
                          : s.valueOf();
                      }
                      for (
                        var u = Math.min(i[0] - a, i[1] - o), c = [], l = 0;
                        l < u;
                        l++
                      )
                        c[l] = e[l + a][l + o];
                      return null !== r ? n(c) : c;
                    })(e, t, o, a, u, s);
                }
                throw new RangeError(
                  "Matrix for function diag must be 2 dimensional"
                );
              }
            }
          );
        function Ru(e) {
          return (Ru =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function Lu(e, t) {
          return function n() {
            "object" !== Ru(n.cache) && (n.cache = {});
            for (var r = [], i = 0; i < arguments.length; i++)
              r[i] = arguments[i];
            var a = t ? t(r) : JSON.stringify(r);
            return a in n.cache || (n.cache[a] = e.apply(e, r)), n.cache[a];
          };
        }
        function zu(e) {
          return Object.keys(e.signatures || {}).reduce(function (e, t) {
            var n = (t.match(/,/g) || []).length + 1;
            return Math.max(e, n);
          }, -1);
        }
        var qu = Cr("filter", ["typed"], function (e) {
          return (0, e.typed)("filter", {
            "Array, function": Fu,
            "Matrix, function": function (e, t) {
              return e.create(Fu(e.toArray(), t));
            },
            "Array, RegExp": Sr,
            "Matrix, RegExp": function (e, t) {
              return e.create(Sr(e.toArray(), t));
            },
          });
        });
        function Fu(e, t) {
          var n = zu(t);
          return Mr(e, function (e, r, i) {
            return 1 === n ? t(e) : 2 === n ? t(e, [r]) : t(e, [r], i);
          });
        }
        var Uu = "flatten",
          Vu = Cr(Uu, ["typed", "matrix"], function (e) {
            var t = e.typed,
              n = e.matrix;
            return t(Uu, {
              Array: function (e) {
                return wr(Tn(e));
              },
              Matrix: function (e) {
                var t = wr(Tn(e.toArray()));
                return n(t);
              },
            });
          }),
          $u = "forEach",
          Hu = Cr($u, ["typed"], function (e) {
            return (0, e.typed)($u, {
              "Array, function": Wu,
              "Matrix, function": function (e, t) {
                return e.forEach(t);
              },
            });
          });
        function Wu(e, t) {
          var n = zu(t);
          !(function r(i, a) {
            Array.isArray(i)
              ? Er(i, function (e, t) {
                  r(e, a.concat(t));
                })
              : 1 === n
              ? t(i)
              : 2 === n
              ? t(i, a)
              : t(i, a, e);
          })(e, []);
        }
        var Gu = "getMatrixDataType",
          Ju = Cr(Gu, ["typed"], function (e) {
            return (0, e.typed)(Gu, {
              Array: function (e) {
                return Ar(e, An);
              },
              Matrix: function (e) {
                return e.getDataType();
              },
            });
          }),
          Yu = "identity",
          Zu = Cr(
            Yu,
            [
              "typed",
              "config",
              "matrix",
              "BigNumber",
              "DenseMatrix",
              "SparseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.matrix,
                i = e.BigNumber,
                a = e.DenseMatrix,
                o = e.SparseMatrix;
              return t(Yu, {
                "": function () {
                  return "Matrix" === n.matrix ? r([]) : [];
                },
                string: function (e) {
                  return r(e);
                },
                "number | BigNumber": function (e) {
                  return u(e, e, "Matrix" === n.matrix ? "dense" : void 0);
                },
                "number | BigNumber, string": function (e, t) {
                  return u(e, e, t);
                },
                "number | BigNumber, number | BigNumber": function (e, t) {
                  return u(e, t, "Matrix" === n.matrix ? "dense" : void 0);
                },
                "number | BigNumber, number | BigNumber, string": function (
                  e,
                  t,
                  n
                ) {
                  return u(e, t, n);
                },
                Array: function (e) {
                  return s(e);
                },
                "Array, string": function (e, t) {
                  return s(e, t);
                },
                Matrix: function (e) {
                  return s(e.valueOf(), e.storage());
                },
                "Matrix, string": function (e, t) {
                  return s(e.valueOf(), t);
                },
              });
              function s(e, t) {
                switch (e.length) {
                  case 0:
                    return t ? r(t) : [];
                  case 1:
                    return u(e[0], e[0], t);
                  case 2:
                    return u(e[0], e[1], t);
                  default:
                    throw new Error("Vector containing two values expected");
                }
              }
              function u(e, t, n) {
                var r = Ht(e) || Ht(t) ? i : null;
                if (
                  (Ht(e) && (e = e.toNumber()),
                  Ht(t) && (t = t.toNumber()),
                  !Ln(e) || e < 1)
                )
                  throw new Error(
                    "Parameters in function identity must be positive integers"
                  );
                if (!Ln(t) || t < 1)
                  throw new Error(
                    "Parameters in function identity must be positive integers"
                  );
                var s = r ? new i(1) : 1,
                  u = r ? new r(0) : 0,
                  c = [e, t];
                if (n) {
                  if ("sparse" === n) return o.diagonal(c, s, 0, u);
                  if ("dense" === n) return a.diagonal(c, s, 0, u);
                  throw new TypeError('Unknown matrix type "'.concat(n, '"'));
                }
                for (var l = yr([], c, u), f = e < t ? e : t, p = 0; p < f; p++)
                  l[p][p] = s;
                return l;
              }
            }
          ),
          Xu = Cr("kron", ["typed", "matrix", "multiplyScalar"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.multiplyScalar;
            return t("kron", {
              "Matrix, Matrix": function (e, t) {
                return n(i(e.toArray(), t.toArray()));
              },
              "Matrix, Array": function (e, t) {
                return n(i(e.toArray(), t));
              },
              "Array, Matrix": function (e, t) {
                return n(i(e, t.toArray()));
              },
              "Array, Array": i,
            });
            function i(e, t) {
              if (
                (1 === dr(e).length && (e = [e]),
                1 === dr(t).length && (t = [t]),
                dr(e).length > 2 || dr(t).length > 2)
              )
                throw new RangeError(
                  "Vectors with dimensions greater then 2 are not supported expected (Size x = " +
                    JSON.stringify(e.length) +
                    ", y = " +
                    JSON.stringify(t.length) +
                    ")"
                );
              var n = [],
                i = [];
              return (
                e.map(function (e) {
                  return t.map(function (t) {
                    return (
                      (i = []),
                      n.push(i),
                      e.map(function (e) {
                        return t.map(function (t) {
                          return i.push(r(e, t));
                        });
                      })
                    );
                  });
                }) && n
              );
            }
          }),
          Ku = Cr("map", ["typed"], function (e) {
            return (0, e.typed)("map", {
              "Array, function": Qu,
              "Matrix, function": function (e, t) {
                return e.map(t);
              },
            });
          });
        function Qu(e, t) {
          var n = zu(t);
          return (function r(i, a) {
            return Array.isArray(i)
              ? i.map(function (e, t) {
                  return r(e, a.concat(t));
                })
              : 1 === n
              ? t(i)
              : 2 === n
              ? t(i, a)
              : t(i, a, e);
          })(e, []);
        }
        var ec = Cr(
            "diff",
            ["typed", "matrix", "subtract", "number"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.subtract,
                i = e.number;
              return t("diff", {
                "Array | Matrix": function (e) {
                  return Xt(e) ? n(o(e.toArray())) : o(e);
                },
                "Array | Matrix, number": function (e, t) {
                  if (!Ln(t))
                    throw new RangeError("Dimension must be a whole number");
                  return Xt(e) ? n(a(e.toArray(), t)) : a(e, t);
                },
                "Array | Matrix, BigNumber": function (e, t) {
                  return this(e, i(t));
                },
              });
              function a(e, t) {
                if ((Xt(e) && (e = e.toArray()), !Array.isArray(e)))
                  throw RangeError(
                    "Array/Matrix does not have that many dimensions"
                  );
                if (t > 0) {
                  var n = [];
                  return (
                    e.forEach(function (e) {
                      n.push(a(e, t - 1));
                    }),
                    n
                  );
                }
                if (0 === t) return o(e);
                throw RangeError("Cannot have negative dimension");
              }
              function o(e) {
                var t = [],
                  n = e.length;
                if (n < 2) return e;
                for (var r = 1; r < n; r++) t.push(s(e[r - 1], e[r]));
                return t;
              }
              function s(e, t) {
                Xt(e) && (e = e.toArray()), Xt(t) && (t = t.toArray());
                var n = Array.isArray(e),
                  i = Array.isArray(t);
                if (n && i)
                  return (function (e, t) {
                    if (e.length !== t.length)
                      throw RangeError(
                        "Not all sub-arrays have the same length"
                      );
                    for (var n = [], r = e.length, i = 0; i < r; i++)
                      n.push(s(e[i], t[i]));
                    return n;
                  })(e, t);
                if (!n && !i) return r(t, e);
                throw TypeError(
                  "Cannot calculate difference between 1 array and 1 non-array"
                );
              }
            }
          ),
          tc = Cr("ones", ["typed", "config", "matrix", "BigNumber"], function (
            e
          ) {
            var t = e.typed,
              n = e.config,
              r = e.matrix,
              i = e.BigNumber;
            return t("ones", {
              "": function () {
                return "Array" === n.matrix ? a([]) : a([], "default");
              },
              "...number | BigNumber | string": function (e) {
                if ("string" == typeof e[e.length - 1]) {
                  var t = e.pop();
                  return a(e, t);
                }
                return "Array" === n.matrix ? a(e) : a(e, "default");
              },
              Array: a,
              Matrix: function (e) {
                var t = e.storage();
                return a(e.valueOf(), t);
              },
              "Array | Matrix, string": function (e, t) {
                return a(e.valueOf(), t);
              },
            });
            function a(e, t) {
              var n = (function (e) {
                var t = !1;
                return (
                  e.forEach(function (e, n, r) {
                    Ht(e) && ((t = !0), (r[n] = e.toNumber()));
                  }),
                  t
                );
              })(e)
                ? new i(1)
                : 1;
              if (
                ((function (e) {
                  e.forEach(function (e) {
                    if ("number" != typeof e || !Ln(e) || e < 0)
                      throw new Error(
                        "Parameters in function ones must be positive integers"
                      );
                  });
                })(e),
                t)
              ) {
                var a = r(t);
                return e.length > 0 ? a.resize(e, n) : a;
              }
              var o = [];
              return e.length > 0 ? yr(o, e, n) : o;
            }
          });
        function nc() {
          throw new Error('No "bignumber" implementation available');
        }
        function rc() {
          throw new Error('No "fraction" implementation available');
        }
        function ic() {
          throw new Error('No "matrix" implementation available');
        }
        var ac = Cr(
            "range",
            [
              "typed",
              "config",
              "?matrix",
              "?bignumber",
              "smaller",
              "smallerEq",
              "larger",
              "largerEq",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.matrix,
                i = e.bignumber,
                a = e.smaller,
                o = e.smallerEq,
                s = e.larger,
                u = e.largerEq;
              return t("range", {
                string: l,
                "string, boolean": l,
                "number, number": function (e, t) {
                  return c(f(e, t, 1));
                },
                "number, number, number": function (e, t, n) {
                  return c(f(e, t, n));
                },
                "number, number, boolean": function (e, t, n) {
                  return c(n ? p(e, t, 1) : f(e, t, 1));
                },
                "number, number, number, boolean": function (e, t, n, r) {
                  return c(r ? p(e, t, n) : f(e, t, n));
                },
                "BigNumber, BigNumber": function (e, t) {
                  return c(h(e, t, new (0, e.constructor)(1)));
                },
                "BigNumber, BigNumber, BigNumber": function (e, t, n) {
                  return c(h(e, t, n));
                },
                "BigNumber, BigNumber, boolean": function (e, t, n) {
                  var r = e.constructor;
                  return c(n ? d(e, t, new r(1)) : h(e, t, new r(1)));
                },
                "BigNumber, BigNumber, BigNumber, boolean": function (
                  e,
                  t,
                  n,
                  r
                ) {
                  return c(r ? d(e, t, n) : h(e, t, n));
                },
              });
              function c(e) {
                return "Matrix" === n.matrix ? (r ? r(e) : ic()) : e;
              }
              function l(e, t) {
                var r = (function (e) {
                  var t = e.split(":").map(function (e) {
                    return Number(e);
                  });
                  if (
                    t.some(function (e) {
                      return isNaN(e);
                    })
                  )
                    return null;
                  switch (t.length) {
                    case 2:
                      return { start: t[0], end: t[1], step: 1 };
                    case 3:
                      return { start: t[0], end: t[2], step: t[1] };
                    default:
                      return null;
                  }
                })(e);
                if (!r)
                  throw new SyntaxError('String "' + e + '" is no valid range');
                return "BigNumber" === n.number
                  ? (void 0 === i && nc(),
                    c((t ? d : h)(i(r.start), i(r.end), i(r.step))))
                  : c((t ? p : f)(r.start, r.end, r.step));
              }
              function f(e, t, n) {
                var r = [],
                  i = e;
                if (n > 0) for (; a(i, t); ) r.push(i), (i += n);
                else if (n < 0) for (; s(i, t); ) r.push(i), (i += n);
                return r;
              }
              function p(e, t, n) {
                var r = [],
                  i = e;
                if (n > 0) for (; o(i, t); ) r.push(i), (i += n);
                else if (n < 0) for (; u(i, t); ) r.push(i), (i += n);
                return r;
              }
              function h(e, t, n) {
                var r = i(0),
                  o = [],
                  u = e;
                if (n.gt(r)) for (; a(u, t); ) o.push(u), (u = u.plus(n));
                else if (n.lt(r)) for (; s(u, t); ) o.push(u), (u = u.plus(n));
                return o;
              }
              function d(e, t, n) {
                var r = i(0),
                  a = [],
                  s = e;
                if (n.gt(r)) for (; o(s, t); ) a.push(s), (s = s.plus(n));
                else if (n.lt(r)) for (; u(s, t); ) a.push(s), (s = s.plus(n));
                return a;
              }
            }
          ),
          oc = "reshape",
          sc = Cr(oc, ["typed", "isInteger", "matrix"], function (e) {
            var t = e.typed,
              n = e.isInteger,
              r = e.matrix;
            return t(oc, {
              "Matrix, Array": function (e, t) {
                return e.reshape ? e.reshape(t) : r(vr(e.valueOf(), t));
              },
              "Array, Array": function (e, t) {
                return (
                  t.forEach(function (e) {
                    if (!n(e))
                      throw new TypeError("Invalid size for dimension: " + e);
                  }),
                  vr(e, t)
                );
              },
            });
          });
        function uc(e, t, n, r) {
          if (!(this instanceof uc))
            throw new SyntaxError(
              "Constructor must be called with the new operator"
            );
          (this.fn = e),
            (this.count = t),
            (this.min = n),
            (this.max = r),
            (this.message =
              "Wrong number of arguments in function " +
              e +
              " (" +
              t +
              " provided, " +
              n +
              (null != r ? "-" + r : "") +
              " expected)"),
            (this.stack = new Error().stack);
        }
        (uc.prototype = new Error()),
          (uc.prototype.constructor = Error),
          (uc.prototype.name = "ArgumentsError"),
          (uc.prototype.isArgumentsError = !0);
        var cc = Cr("resize", ["config", "matrix"], function (e) {
            var t = e.config,
              n = e.matrix;
            return function (e, i, a) {
              if (2 !== arguments.length && 3 !== arguments.length)
                throw new uc("resize", arguments.length, 2, 3);
              if (
                (Xt(i) && (i = i.valueOf()),
                Ht(i[0]) &&
                  (i = i.map(function (e) {
                    return Ht(e) ? e.toNumber() : e;
                  })),
                Xt(e))
              )
                return e.resize(i, a, !0);
              if ("string" == typeof e) return r(e, i, a);
              var o = !Array.isArray(e) && "Array" !== t.matrix;
              if (0 === i.length) {
                for (; Array.isArray(e); ) e = e[0];
                return Tn(e);
              }
              Array.isArray(e) || (e = [e]);
              var s = yr((e = Tn(e)), i, a);
              return o ? n(s) : s;
            };
            function r(e, t, n) {
              if (void 0 !== n) {
                if ("string" != typeof n || 1 !== n.length)
                  throw new TypeError(
                    "Single character expected as defaultValue"
                  );
              } else n = " ";
              if (1 !== t.length) throw new pr(t.length, 1);
              var r = t[0];
              if ("number" != typeof r || !Ln(r))
                throw new TypeError(
                  "Invalid size, must contain positive integers (size: " +
                    ur(t) +
                    ")"
                );
              if (e.length > r) return e.substring(0, r);
              if (e.length < r) {
                for (var i = e, a = 0, o = r - e.length; a < o; a++) i += n;
                return i;
              }
              return e;
            }
          }),
          lc = Cr("row", ["typed", "Index", "matrix", "range"], function (e) {
            var t = e.typed,
              n = e.Index,
              r = e.matrix,
              i = e.range;
            return t("row", {
              "Matrix, number": a,
              "Array, number": function (e, t) {
                return a(r(Tn(e)), t).valueOf();
              },
            });
            function a(e, t) {
              if (2 !== e.size().length)
                throw new Error("Only two dimensional matrix is supported");
              gr(t, e.size()[0]);
              var r = i(0, e.size()[1]),
                a = new n(t, r);
              return e.subset(a);
            }
          }),
          fc = Cr("size", ["typed", "config", "?matrix"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.matrix;
            return t("size", {
              Matrix: function (e) {
                return e.create(e.size());
              },
              Array: dr,
              string: function (e) {
                return "Array" === n.matrix ? [e.length] : r([e.length]);
              },
              "number | Complex | BigNumber | Unit | boolean | null": function (
                e
              ) {
                return "Array" === n.matrix ? [] : r ? r([]) : ic();
              },
            });
          }),
          pc = "squeeze",
          hc = Cr(pc, ["typed", "matrix"], function (e) {
            var t = e.typed,
              n = e.matrix;
            return t(pc, {
              Array: function (e) {
                return br(Tn(e));
              },
              Matrix: function (e) {
                var t = br(e.toArray());
                return Array.isArray(t) ? n(t) : t;
              },
              any: function (e) {
                return Tn(e);
              },
            });
          });
        function dc(e) {
          return (dc =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function mc(e, t) {
          if (bc(e) && yc(e, t)) return e[t];
          if ("function" == typeof e[t] && vc(e, t))
            throw new Error('Cannot access method "' + t + '" as a property');
          throw new Error('No access to property "' + t + '"');
        }
        function gc(e, t, n) {
          if (bc(e) && yc(e, t)) return (e[t] = n), n;
          throw new Error('No access to property "' + t + '"');
        }
        function yc(e, t) {
          return !(
            !e ||
            "object" !== dc(e) ||
            (!Bn(xc, t) && (t in Object.prototype || t in Function.prototype))
          );
        }
        function vc(e, t) {
          return !(
            null == e ||
            "function" != typeof e[t] ||
            (Bn(e, t) &&
              Object.getPrototypeOf &&
              t in Object.getPrototypeOf(e)) ||
            (!Bn(wc, t) && (t in Object.prototype || t in Function.prototype))
          );
        }
        function bc(e) {
          return "object" === dc(e) && e && e.constructor === Object;
        }
        var xc = { length: !0, name: !0 },
          wc = { toString: !0, valueOf: !0, toLocaleString: !0 },
          Nc = Cr("subset", ["typed", "matrix"], function (e) {
            var t = e.typed,
              n = e.matrix;
            return t("subset", {
              "Array, Index": function (e, t) {
                var r = n(e).subset(t);
                return t.isScalar() ? r : r.valueOf();
              },
              "Matrix, Index": function (e, t) {
                return e.subset(t);
              },
              "Object, Index": Sc,
              "string, Index": Ec,
              "Array, Index, any": function (e, t, r) {
                return n(Tn(e))
                  .subset(t, r, void 0)
                  .valueOf();
              },
              "Array, Index, any, any": function (e, t, r, i) {
                return n(Tn(e)).subset(t, r, i).valueOf();
              },
              "Matrix, Index, any": function (e, t, n) {
                return e.clone().subset(t, n);
              },
              "Matrix, Index, any, any": function (e, t, n, r) {
                return e.clone().subset(t, n, r);
              },
              "string, Index, string": Mc,
              "string, Index, string, string": Mc,
              "Object, Index, any": _c,
            });
          });
        function Ec(e, t) {
          if (!nn(t)) throw new TypeError("Index expected");
          if (1 !== t.size().length) throw new pr(t.size().length, 1);
          var n = e.length;
          gr(t.min()[0], n), gr(t.max()[0], n);
          var r = t.dimension(0),
            i = "";
          return (
            r.forEach(function (t) {
              i += e.charAt(t);
            }),
            i
          );
        }
        function Mc(e, t, n, r) {
          if (!t || !0 !== t.isIndex) throw new TypeError("Index expected");
          if (1 !== t.size().length) throw new pr(t.size().length, 1);
          if (void 0 !== r) {
            if ("string" != typeof r || 1 !== r.length)
              throw new TypeError("Single character expected as defaultValue");
          } else r = " ";
          var i = t.dimension(0);
          if (i.size()[0] !== n.length) throw new pr(i.size()[0], n.length);
          var a = e.length;
          gr(t.min()[0]), gr(t.max()[0]);
          for (var o = [], s = 0; s < a; s++) o[s] = e.charAt(s);
          if (
            (i.forEach(function (e, t) {
              o[e] = n.charAt(t[0]);
            }),
            o.length > a)
          )
            for (var u = a - 1, c = o.length; u < c; u++) o[u] || (o[u] = r);
          return o.join("");
        }
        function Sc(e, t) {
          if (1 !== t.size().length) throw new pr(t.size(), 1);
          var n = t.dimension(0);
          if ("string" != typeof n)
            throw new TypeError(
              "String expected as index to retrieve an object property"
            );
          return mc(e, n);
        }
        function _c(e, t, n) {
          if (1 !== t.size().length) throw new pr(t.size(), 1);
          var r = t.dimension(0);
          if ("string" != typeof r)
            throw new TypeError(
              "String expected as index to retrieve an object property"
            );
          var i = Tn(e);
          return gc(i, r, n), i;
        }
        var kc = Cr("transpose", ["typed", "matrix"], function (e) {
            var t = e.typed,
              n = e.matrix;
            return t("transpose", {
              Array: function (e) {
                return this(n(e)).valueOf();
              },
              Matrix: function (e) {
                var t,
                  n = e.size();
                switch (n.length) {
                  case 1:
                    t = e.clone();
                    break;
                  case 2:
                    var r = n[0],
                      i = n[1];
                    if (0 === i)
                      throw new RangeError(
                        "Cannot transpose a 2D matrix with no columns (size: " +
                          ur(n) +
                          ")"
                      );
                    switch (e.storage()) {
                      case "dense":
                        t = (function (e, t, n) {
                          for (var r, i = e._data, a = [], o = 0; o < n; o++) {
                            r = a[o] = [];
                            for (var s = 0; s < t; s++) r[s] = Tn(i[s][o]);
                          }
                          return e.createDenseMatrix({
                            data: a,
                            size: [n, t],
                            datatype: e._datatype,
                          });
                        })(e, r, i);
                        break;
                      case "sparse":
                        t = (function (e, t, n) {
                          for (
                            var r,
                              i,
                              a,
                              o = e._values,
                              s = e._index,
                              u = e._ptr,
                              c = o ? [] : void 0,
                              l = [],
                              f = [],
                              p = [],
                              h = 0;
                            h < t;
                            h++
                          )
                            p[h] = 0;
                          for (r = 0, i = s.length; r < i; r++) p[s[r]]++;
                          for (var d = 0, m = 0; m < t; m++)
                            f.push(d), (d += p[m]), (p[m] = f[m]);
                          for (f.push(d), a = 0; a < n; a++)
                            for (
                              var g = u[a], y = u[a + 1], v = g;
                              v < y;
                              v++
                            ) {
                              var b = p[s[v]]++;
                              (l[b] = a), o && (c[b] = Tn(o[v]));
                            }
                          return e.createSparseMatrix({
                            values: c,
                            index: l,
                            ptr: f,
                            size: [n, t],
                            datatype: e._datatype,
                          });
                        })(e, r, i);
                    }
                    break;
                  default:
                    throw new RangeError(
                      "Matrix must be a vector or two dimensional (size: " +
                        ur(this._size) +
                        ")"
                    );
                }
                return t;
              },
              any: function (e) {
                return Tn(e);
              },
            });
          }),
          Oc = "ctranspose",
          Ac = Cr(Oc, ["typed", "transpose", "conj"], function (e) {
            var t = e.typed,
              n = e.transpose,
              r = e.conj;
            return t(Oc, {
              any: function (e) {
                return r(n(e));
              },
            });
          }),
          Cc = Cr(
            "zeros",
            ["typed", "config", "matrix", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.matrix,
                i = e.BigNumber;
              return t("zeros", {
                "": function () {
                  return "Array" === n.matrix ? a([]) : a([], "default");
                },
                "...number | BigNumber | string": function (e) {
                  if ("string" == typeof e[e.length - 1]) {
                    var t = e.pop();
                    return a(e, t);
                  }
                  return "Array" === n.matrix ? a(e) : a(e, "default");
                },
                Array: a,
                Matrix: function (e) {
                  var t = e.storage();
                  return a(e.valueOf(), t);
                },
                "Array | Matrix, string": function (e, t) {
                  return a(e.valueOf(), t);
                },
              });
              function a(e, t) {
                var n = (function (e) {
                  var t = !1;
                  return (
                    e.forEach(function (e, n, r) {
                      Ht(e) && ((t = !0), (r[n] = e.toNumber()));
                    }),
                    t
                  );
                })(e)
                  ? new i(0)
                  : 0;
                if (
                  ((function (e) {
                    e.forEach(function (e) {
                      if ("number" != typeof e || !Ln(e) || e < 0)
                        throw new Error(
                          "Parameters in function zeros must be positive integers"
                        );
                    });
                  })(e),
                  t)
                ) {
                  var a = r(t);
                  return e.length > 0 ? a.resize(e, n) : a;
                }
                var o = [];
                return e.length > 0 ? yr(o, e, n) : o;
              }
            }
          ),
          Tc = Cr("erf", ["typed"], function (e) {
            return (0, e.typed)("name", {
              number: function (e) {
                var t = Math.abs(e);
                return t >= jc
                  ? zn(e)
                  : t <= Ic
                  ? zn(e) *
                    (function (e) {
                      var t,
                        n = e * e,
                        r = Bc[0][4] * n,
                        i = n;
                      for (t = 0; t < 3; t += 1)
                        (r = (r + Bc[0][t]) * n), (i = (i + Dc[0][t]) * n);
                      return (e * (r + Bc[0][3])) / (i + Dc[0][3]);
                    })(t)
                  : t <= 4
                  ? zn(e) *
                    (1 -
                      (function (e) {
                        var t,
                          n = Bc[1][8] * e,
                          r = e;
                        for (t = 0; t < 7; t += 1)
                          (n = (n + Bc[1][t]) * e), (r = (r + Dc[1][t]) * e);
                        var i = (n + Bc[1][7]) / (r + Dc[1][7]),
                          a = parseInt(16 * e) / 16,
                          o = (e - a) * (e + a);
                        return Math.exp(-a * a) * Math.exp(-o) * i;
                      })(t))
                  : zn(e) *
                    (1 -
                      (function (e) {
                        var t,
                          n = 1 / (e * e),
                          r = Bc[2][5] * n,
                          i = n;
                        for (t = 0; t < 4; t += 1)
                          (r = (r + Bc[2][t]) * n), (i = (i + Dc[2][t]) * n);
                        var a = (n * (r + Bc[2][4])) / (i + Dc[2][4]);
                        a = (Pc - a) / e;
                        var o = (e - (n = parseInt(16 * e) / 16)) * (e + n);
                        return Math.exp(-n * n) * Math.exp(-o) * a;
                      })(t));
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ic = 0.46875,
          Pc = 0.5641895835477563,
          Bc = [
            [
              3.1611237438705655,
              113.86415415105016,
              377.485237685302,
              3209.3775891384694,
              0.18577770618460315,
            ],
            [
              0.5641884969886701,
              8.883149794388377,
              66.11919063714163,
              298.6351381974001,
              881.952221241769,
              1712.0476126340707,
              2051.0783778260716,
              1230.3393547979972,
              2.1531153547440383e-8,
            ],
            [
              0.30532663496123236,
              0.36034489994980445,
              0.12578172611122926,
              0.016083785148742275,
              0.0006587491615298378,
              0.016315387137302097,
            ],
          ],
          Dc = [
            [
              23.601290952344122,
              244.02463793444417,
              1282.6165260773723,
              2844.236833439171,
            ],
            [
              15.744926110709835,
              117.6939508913125,
              537.1811018620099,
              1621.3895745666903,
              3290.7992357334597,
              4362.619090143247,
              3439.3676741437216,
              1230.3393548037495,
            ],
            [
              2.568520192289822,
              1.8729528499234604,
              0.5279051029514285,
              0.06051834131244132,
              0.0023352049762686918,
            ],
          ],
          jc = Math.pow(2, 53),
          Rc = Cr("mode", ["typed", "isNaN", "isNumeric"], function (e) {
            var t = e.typed,
              n = e.isNaN,
              r = e.isNumeric;
            return t("mode", {
              "Array | Matrix": i,
              "...": function (e) {
                return i(e);
              },
            });
            function i(e) {
              if (0 === (e = wr(e.valueOf())).length)
                throw new Error("Cannot calculate mode of an empty array");
              for (var t = {}, i = [], a = 0, o = 0; o < e.length; o++) {
                var s = e[o];
                if (r(s) && n(s))
                  throw new Error(
                    "Cannot calculate mode of an array containing NaN values"
                  );
                s in t || (t[s] = 0),
                  t[s]++,
                  t[s] === a ? i.push(s) : t[s] > a && ((a = t[s]), (i = [s]));
              }
              return i;
            }
          });
        function Lc(e, t, n) {
          var r;
          return -1 !== String(e).indexOf("Unexpected type")
            ? ((r =
                arguments.length > 2
                  ? " (type: " + An(n) + ", value: " + JSON.stringify(n) + ")"
                  : " (type: " + e.data.actual + ")"),
              new TypeError(
                "Cannot calculate " + t + ", unexpected type of argument" + r
              ))
            : -1 !== String(e).indexOf("complex numbers")
            ? ((r =
                arguments.length > 2
                  ? " (type: " + An(n) + ", value: " + JSON.stringify(n) + ")"
                  : ""),
              new TypeError(
                "Cannot calculate " +
                  t +
                  ", no ordering relation is defined for complex numbers" +
                  r
              ))
            : e;
        }
        var zc = Cr(
            "prod",
            ["typed", "config", "multiplyScalar", "numeric"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.multiplyScalar,
                i = e.numeric;
              return t("prod", {
                "Array | Matrix": a,
                "Array | Matrix, number | BigNumber": function (e, t) {
                  throw new Error("prod(A, dim) is not yet supported");
                },
                "...": function (e) {
                  return a(e);
                },
              });
              function a(e) {
                var t;
                if (
                  (ka(e, function (e) {
                    try {
                      t = void 0 === t ? e : r(t, e);
                    } catch (t) {
                      throw Lc(t, "prod", e);
                    }
                  }),
                  "string" == typeof t && (t = i(t, n.number)),
                  void 0 === t)
                )
                  throw new Error("Cannot calculate prod of an empty array");
                return t;
              }
            }
          ),
          qc = Cr("format", ["typed"], function (e) {
            return (0,
            e.typed)("format", { any: ur, "any, Object | function | number": ur });
          });
        function Fc(e) {
          var t = { 2: "0b", 8: "0o", 16: "0x" }[e];
          return function (n) {
            if (n > Math.pow(2, 31) - 1 || n < -Math.pow(2, 31))
              throw new Error("Value must be in range [-2^31, 2^31-1]");
            if (!Ln(n)) throw new Error("Value must be an integer");
            return (
              n < 0 && (n += Math.pow(2, 32)),
              "".concat(t).concat(n.toString(e))
            );
          };
        }
        var Uc = ["typed"];
        function Vc(e, t) {
          return Cr(e, Uc, function (n) {
            return (0, n.typed)(e, { number: Fc(t) });
          });
        }
        var $c = Vc("bin", 2),
          Hc = Vc("oct", 8),
          Wc = Vc("hex", 16),
          Gc = Cr("print", ["typed"], function (e) {
            return (0,
            e.typed)("print", { "string, Object | Array": Jc, "string, Object | Array, number | Object": Jc });
          });
        function Jc(e, t, n) {
          return e.replace(/\$([\w.]+)/g, function (e, r) {
            for (
              var i = r.split("."), a = t[i.shift()];
              i.length && void 0 !== a;

            ) {
              var o = i.shift();
              a = o ? a[o] : a + ".";
            }
            return void 0 !== a ? (Yt(a) ? a : ur(a, n)) : e;
          });
        }
        var Yc = Cr("to", ["typed", "matrix"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = Ls({ typed: t }),
              i = zs({ typed: t });
            return t("to", {
              "Unit, Unit | string": function (e, t) {
                return e.to(t);
              },
              "Matrix, Matrix": function (e, t) {
                return r(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(n(e), n(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(n(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, n(t));
              },
              "Matrix, any": function (e, t) {
                return i(e, t, this, !1);
              },
              "any, Matrix": function (e, t) {
                return i(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return i(n(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return i(n(t), e, this, !0).valueOf();
              },
            });
          }),
          Zc = "isPrime",
          Xc = Cr(Zc, ["typed"], function (e) {
            return (0, e.typed)(Zc, {
              number: function (e) {
                if (0 * e != 0) return !1;
                if (e <= 3) return e > 1;
                if (e % 2 == 0 || e % 3 == 0) return !1;
                for (var t = 5; t * t <= e; t += 6)
                  if (e % t == 0 || e % (t + 2) == 0) return !1;
                return !0;
              },
              BigNumber: function (e) {
                if (0 * e.toNumber() != 0) return !1;
                if (e.lte(3)) return e.gt(1);
                if (e.mod(2).eq(0) || e.mod(3).eq(0)) return !1;
                for (var t = 5; e.gte(t * t); t += 6)
                  if (e.mod(t).eq(0) || e.mod(t + 2).eq(0)) return !1;
                return !0;
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Kc = Cr("numeric", ["number", "?bignumber", "?fraction"], function (
            e
          ) {
            var t = e.number,
              n = e.bignumber,
              r = e.fraction,
              i = { string: !0, number: !0, BigNumber: !0, Fraction: !0 },
              a = {
                number: function (e) {
                  return t(e);
                },
                BigNumber: n
                  ? function (e) {
                      return n(e);
                    }
                  : nc,
                Fraction: r
                  ? function (e) {
                      return r(e);
                    }
                  : rc,
              };
            return function (e, t) {
              var n = An(e);
              if (!(n in i))
                throw new TypeError(
                  "Cannot convert " +
                    e +
                    ' of type "' +
                    n +
                    '"; valid input types are ' +
                    Object.keys(i).join(", ")
                );
              if (!(t in a))
                throw new TypeError(
                  "Cannot convert " +
                    e +
                    ' to type "' +
                    t +
                    '"; valid output types are ' +
                    Object.keys(a).join(", ")
                );
              return t === n ? e : a[t](e);
            };
          }),
          Qc = "divideScalar",
          el = Cr(Qc, ["typed", "numeric"], function (e) {
            var t = e.typed,
              n = e.numeric;
            return t(Qc, {
              "number, number": function (e, t) {
                return e / t;
              },
              "Complex, Complex": function (e, t) {
                return e.div(t);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.div(t);
              },
              "Fraction, Fraction": function (e, t) {
                return e.div(t);
              },
              "Unit, number | Fraction | BigNumber": function (e, t) {
                var r = e.clone(),
                  i = n(1, An(t));
                return (
                  (r.value = this(
                    null === r.value ? r._normalize(i) : r.value,
                    t
                  )),
                  r
                );
              },
              "number | Fraction | BigNumber, Unit": function (e, t) {
                var r = t.clone();
                r = r.pow(-1);
                var i = n(1, An(e));
                return (
                  (r.value = this(
                    e,
                    null === t.value ? t._normalize(i) : t.value
                  )),
                  r
                );
              },
              "Unit, Unit": function (e, t) {
                return e.divide(t);
              },
            });
          }),
          tl = Cr(
            "pow",
            [
              "typed",
              "config",
              "identity",
              "multiply",
              "matrix",
              "fraction",
              "number",
              "Complex",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.identity,
                i = e.multiply,
                a = e.matrix,
                o = e.number,
                s = e.fraction,
                u = e.Complex;
              return t("pow", {
                "number, number": c,
                "Complex, Complex": function (e, t) {
                  return e.pow(t);
                },
                "BigNumber, BigNumber": function (e, t) {
                  return t.isInteger() || e >= 0 || n.predictable
                    ? e.pow(t)
                    : new u(e.toNumber(), 0).pow(t.toNumber(), 0);
                },
                "Fraction, Fraction": function (e, t) {
                  if (1 !== t.d) {
                    if (n.predictable)
                      throw new Error(
                        "Function pow does not support non-integer exponents for fractions."
                      );
                    return c(e.valueOf(), t.valueOf());
                  }
                  return e.pow(t);
                },
                "Array, number": l,
                "Array, BigNumber": function (e, t) {
                  return l(e, t.toNumber());
                },
                "Matrix, number": f,
                "Matrix, BigNumber": function (e, t) {
                  return f(e, t.toNumber());
                },
                "Unit, number | BigNumber": function (e, t) {
                  return e.pow(t);
                },
              });
              function c(e, t) {
                if (n.predictable && !Ln(t) && e < 0)
                  try {
                    var r = s(t),
                      i = o(r);
                    if (
                      (t === i || Math.abs((t - i) / t) < 1e-14) &&
                      r.d % 2 == 1
                    )
                      return (r.n % 2 == 0 ? 1 : -1) * Math.pow(-e, t);
                  } catch (e) {}
                return n.predictable &&
                  ((e < -1 && t === 1 / 0) || (e > -1 && e < 0 && t === -1 / 0))
                  ? NaN
                  : Ln(t) || e >= 0 || n.predictable
                  ? no(e, t)
                  : (e * e < 1 && t === 1 / 0) || (e * e > 1 && t === -1 / 0)
                  ? 0
                  : new u(e, 0).pow(t, 0);
              }
              function l(e, t) {
                if (!Ln(t) || t < 0)
                  throw new TypeError(
                    "For A^b, b must be a positive integer (value is " + t + ")"
                  );
                var n = dr(e);
                if (2 !== n.length)
                  throw new Error(
                    "For A^b, A must be 2 dimensional (A has " +
                      n.length +
                      " dimensions)"
                  );
                if (n[0] !== n[1])
                  throw new Error(
                    "For A^b, A must be square (size is " +
                      n[0] +
                      "x" +
                      n[1] +
                      ")"
                  );
                for (var a = r(n[0]).valueOf(), o = e; t >= 1; )
                  1 == (1 & t) && (a = i(o, a)), (t >>= 1), (o = i(o, o));
                return a;
              }
              function f(e, t) {
                return a(l(e.valueOf(), t));
              }
            }
          );
        function nl(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function rl(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? nl(Object(n), !0).forEach(function (t) {
                  il(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : nl(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function il(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var al = "Number of decimals in function round must be an integer",
          ol = Cr(
            "round",
            [
              "typed",
              "matrix",
              "equalScalar",
              "zeros",
              "BigNumber",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.zeros,
                a = e.BigNumber,
                o = e.DenseMatrix,
                s = Vs({ typed: t, equalScalar: r }),
                u = Ys({ typed: t, DenseMatrix: o }),
                c = zs({ typed: t });
              return t(
                "round",
                rl(
                  rl({}, sl),
                  {},
                  {
                    Complex: function (e) {
                      return e.round();
                    },
                    "Complex, number": function (e, t) {
                      if (t % 1) throw new TypeError(al);
                      return e.round(t);
                    },
                    "Complex, BigNumber": function (e, t) {
                      if (!t.isInteger()) throw new TypeError(al);
                      var n = t.toNumber();
                      return e.round(n);
                    },
                    "number, BigNumber": function (e, t) {
                      if (!t.isInteger()) throw new TypeError(al);
                      return new a(e).toDecimalPlaces(t.toNumber());
                    },
                    BigNumber: function (e) {
                      return e.toDecimalPlaces(0);
                    },
                    "BigNumber, BigNumber": function (e, t) {
                      if (!t.isInteger()) throw new TypeError(al);
                      return e.toDecimalPlaces(t.toNumber());
                    },
                    Fraction: function (e) {
                      return e.round();
                    },
                    "Fraction, number": function (e, t) {
                      if (t % 1) throw new TypeError(al);
                      return e.round(t);
                    },
                    "Array | Matrix": function (e) {
                      return Oa(e, this);
                    },
                    "SparseMatrix, number | BigNumber": function (e, t) {
                      return s(e, t, this, !1);
                    },
                    "DenseMatrix, number | BigNumber": function (e, t) {
                      return c(e, t, this, !1);
                    },
                    "number | Complex | BigNumber, SparseMatrix": function (
                      e,
                      t
                    ) {
                      return r(e, 0)
                        ? i(t.size(), t.storage())
                        : u(t, e, this, !0);
                    },
                    "number | Complex | BigNumber, DenseMatrix": function (
                      e,
                      t
                    ) {
                      return r(e, 0)
                        ? i(t.size(), t.storage())
                        : c(t, e, this, !0);
                    },
                    "Array, number | BigNumber": function (e, t) {
                      return c(n(e), t, this, !1).valueOf();
                    },
                    "number | Complex | BigNumber, Array": function (e, t) {
                      return c(n(t), e, this, !0).valueOf();
                    },
                  }
                )
              );
            }
          ),
          sl = {
            number: ro,
            "number, number": function (e, t) {
              if (!Ln(t)) throw new TypeError(al);
              if (t < 0 || t > 15)
                throw new Error(
                  "Number of decimals in function round must be in te range of 0-15"
                );
              return ro(e, t);
            },
          },
          ul = Cr(
            "log",
            ["config", "typed", "divideScalar", "Complex"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.divideScalar,
                i = e.Complex;
              return t("log", {
                number: function (e) {
                  return e >= 0 || n.predictable ? Ja(e) : new i(e, 0).log();
                },
                Complex: function (e) {
                  return e.log();
                },
                BigNumber: function (e) {
                  return !e.isNegative() || n.predictable
                    ? e.ln()
                    : new i(e.toNumber(), 0).log();
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
                "any, any": function (e, t) {
                  return r(this(e), this(t));
                },
              });
            }
          ),
          cl = Cr(
            "log1p",
            ["typed", "config", "divideScalar", "log", "Complex"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.divideScalar,
                i = e.log,
                a = e.Complex;
              return t("log1p", {
                number: function (e) {
                  return e >= -1 || n.predictable ? Un(e) : o(new a(e, 0));
                },
                Complex: o,
                BigNumber: function (e) {
                  var t = e.plus(1);
                  return !t.isNegative() || n.predictable
                    ? t.ln()
                    : o(new a(e.toNumber(), 0));
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
                "any, any": function (e, t) {
                  return r(this(e), i(t));
                },
              });
              function o(e) {
                var t = e.re + 1;
                return new a(
                  Math.log(Math.sqrt(t * t + e.im * e.im)),
                  Math.atan2(e.im, t)
                );
              }
            }
          ),
          ll = "nthRoots",
          fl = Cr(ll, ["config", "typed", "divideScalar", "Complex"], function (
            e
          ) {
            var t = e.typed,
              n = (e.config, e.divideScalar, e.Complex),
              r = [
                function (e) {
                  return new n(e, 0);
                },
                function (e) {
                  return new n(0, e);
                },
                function (e) {
                  return new n(-e, 0);
                },
                function (e) {
                  return new n(0, -e);
                },
              ];
            function i(e, t) {
              if (t < 0) throw new Error("Root must be greater than zero");
              if (0 === t) throw new Error("Root must be non-zero");
              if (t % 1 != 0) throw new Error("Root must be an integer");
              if (0 === e || 0 === e.abs()) return [new n(0, 0)];
              var i,
                a = "number" == typeof e;
              (a || 0 === e.re || 0 === e.im) &&
                (i = a
                  ? 2 * +(e < 0)
                  : 0 === e.im
                  ? 2 * +(e.re < 0)
                  : 2 * +(e.im < 0) + 1);
              for (
                var o = e.arg(),
                  s = e.abs(),
                  u = [],
                  c = Math.pow(s, 1 / t),
                  l = 0;
                l < t;
                l++
              ) {
                var f = (i + 4 * l) / t;
                f !== Math.round(f)
                  ? u.push(new n({ r: c, phi: (o + 2 * Math.PI * l) / t }))
                  : u.push(r[f % 4](c));
              }
              return u;
            }
            return t(ll, {
              Complex: function (e) {
                return i(e, 2);
              },
              "Complex, number": i,
            });
          }),
          pl = Cr(
            "dotPow",
            ["typed", "equalScalar", "matrix", "pow", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.equalScalar,
                r = e.matrix,
                i = e.pow,
                a = e.DenseMatrix,
                o = Gs({ typed: t }),
                s = Eu({ typed: t, DenseMatrix: a }),
                u = Vs({ typed: t, equalScalar: n }),
                c = Ys({ typed: t, DenseMatrix: a }),
                l = Ls({ typed: t }),
                f = zs({ typed: t });
              return t("dotPow", {
                "any, any": i,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return s(e, t, i, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return o(t, e, i, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, i, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return l(e, t, i);
                },
                "Array, Array": function (e, t) {
                  return this(r(e), r(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(r(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, r(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return u(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return f(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return c(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return f(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return f(r(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return f(r(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          hl = "dotDivide",
          dl = Cr(
            hl,
            ["typed", "matrix", "equalScalar", "divideScalar", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.divideScalar,
                a = e.DenseMatrix,
                o = Fs({ typed: t, equalScalar: r }),
                s = Gs({ typed: t }),
                u = Eu({ typed: t, DenseMatrix: a }),
                c = Vs({ typed: t, equalScalar: r }),
                l = Ys({ typed: t, DenseMatrix: a }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t(hl, {
                "any, any": i,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return u(e, t, i, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return o(t, e, i, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return s(e, t, i, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return f(e, t, i);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return c(e, t, i, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return p(e, t, i, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return l(t, e, i, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return p(t, e, i, !0);
                },
                "Array, any": function (e, t) {
                  return p(n(e), t, i, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return p(n(t), e, i, !0).valueOf();
                },
              });
            }
          );
        function ml(e) {
          var t = e.DenseMatrix;
          return function (e, n, r) {
            var i = e.size();
            if (2 !== i.length)
              throw new RangeError(
                "Matrix must be two dimensional (size: " + ur(i) + ")"
              );
            var a = i[0];
            if (a !== i[1])
              throw new RangeError(
                "Matrix must be square (size: " + ur(i) + ")"
              );
            var o = [];
            if (Xt(n)) {
              var s = n.size(),
                u = n._data;
              if (1 === s.length) {
                if (s[0] !== a)
                  throw new RangeError(
                    "Dimension mismatch. Matrix columns must match vector length."
                  );
                for (var c = 0; c < a; c++) o[c] = [u[c]];
                return new t({ data: o, size: [a, 1], datatype: n._datatype });
              }
              if (2 === s.length) {
                if (s[0] !== a || 1 !== s[1])
                  throw new RangeError(
                    "Dimension mismatch. Matrix columns must match vector length."
                  );
                if (Qt(n)) {
                  if (r) {
                    o = [];
                    for (var l = 0; l < a; l++) o[l] = [u[l][0]];
                    return new t({
                      data: o,
                      size: [a, 1],
                      datatype: n._datatype,
                    });
                  }
                  return n;
                }
                if (en(n)) {
                  for (var f = 0; f < a; f++) o[f] = [0];
                  for (
                    var p = n._values,
                      h = n._index,
                      d = n._ptr,
                      m = d[1],
                      g = d[0];
                    g < m;
                    g++
                  )
                    o[h[g]][0] = p[g];
                  return new t({
                    data: o,
                    size: [a, 1],
                    datatype: n._datatype,
                  });
                }
              }
              throw new RangeError(
                "Dimension mismatch. The right side has to be either 1- or 2-dimensional vector."
              );
            }
            if (Zt(n)) {
              var y = dr(n);
              if (1 === y.length) {
                if (y[0] !== a)
                  throw new RangeError(
                    "Dimension mismatch. Matrix columns must match vector length."
                  );
                for (var v = 0; v < a; v++) o[v] = [n[v]];
                return new t({ data: o, size: [a, 1] });
              }
              if (2 === y.length) {
                if (y[0] !== a || 1 !== y[1])
                  throw new RangeError(
                    "Dimension mismatch. Matrix columns must match vector length."
                  );
                for (var b = 0; b < a; b++) o[b] = [n[b][0]];
                return new t({ data: o, size: [a, 1] });
              }
              throw new RangeError(
                "Dimension mismatch. The right side has to be either 1- or 2-dimensional vector."
              );
            }
          };
        }
        var gl = Cr(
            "lsolve",
            [
              "typed",
              "matrix",
              "divideScalar",
              "multiplyScalar",
              "subtract",
              "equalScalar",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.divideScalar,
                i = e.multiplyScalar,
                a = e.subtract,
                o = e.equalScalar,
                s = e.DenseMatrix,
                u = ml({ DenseMatrix: s });
              return t("lsolve", {
                "SparseMatrix, Array | Matrix": function (e, t) {
                  return (function (e, t) {
                    for (
                      var n = (t = u(e, t, !0))._data,
                        c = e._size[0],
                        l = e._size[1],
                        f = e._values,
                        p = e._index,
                        h = e._ptr,
                        d = [],
                        m = 0;
                      m < l;
                      m++
                    ) {
                      var g = n[m][0] || 0;
                      if (o(g, 0)) d[m] = [0];
                      else {
                        for (
                          var y = 0,
                            v = [],
                            b = [],
                            x = h[m],
                            w = h[m + 1],
                            N = x;
                          N < w;
                          N++
                        ) {
                          var E = p[N];
                          E === m
                            ? (y = f[N])
                            : E > m && (v.push(f[N]), b.push(E));
                        }
                        if (o(y, 0))
                          throw new Error(
                            "Linear system cannot be solved since matrix is singular"
                          );
                        for (var M = r(g, y), S = 0, _ = b.length; S < _; S++) {
                          var k = b[S];
                          n[k] = [a(n[k][0] || 0, i(M, v[S]))];
                        }
                        d[m] = [M];
                      }
                    }
                    return new s({ data: d, size: [c, 1] });
                  })(e, t);
                },
                "DenseMatrix, Array | Matrix": function (e, t) {
                  return c(e, t);
                },
                "Array, Array | Matrix": function (e, t) {
                  return c(n(e), t).valueOf();
                },
              });
              function c(e, t) {
                for (
                  var n = (t = u(e, t, !0))._data,
                    c = e._size[0],
                    l = e._size[1],
                    f = [],
                    p = e._data,
                    h = 0;
                  h < l;
                  h++
                ) {
                  var d = n[h][0] || 0,
                    m = void 0;
                  if (o(d, 0)) m = 0;
                  else {
                    var g = p[h][h];
                    if (o(g, 0))
                      throw new Error(
                        "Linear system cannot be solved since matrix is singular"
                      );
                    m = r(d, g);
                    for (var y = h + 1; y < c; y++)
                      n[y] = [a(n[y][0] || 0, i(m, p[y][h]))];
                  }
                  f[h] = [m];
                }
                return new s({ data: f, size: [c, 1] });
              }
            }
          ),
          yl = Cr(
            "usolve",
            [
              "typed",
              "matrix",
              "divideScalar",
              "multiplyScalar",
              "subtract",
              "equalScalar",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.divideScalar,
                i = e.multiplyScalar,
                a = e.subtract,
                o = e.equalScalar,
                s = e.DenseMatrix,
                u = ml({ DenseMatrix: s });
              return t("usolve", {
                "SparseMatrix, Array | Matrix": function (e, t) {
                  return (function (e, t) {
                    for (
                      var n = (t = u(e, t, !0))._data,
                        c = e._size[0],
                        l = e._size[1],
                        f = e._values,
                        p = e._index,
                        h = e._ptr,
                        d = [],
                        m = l - 1;
                      m >= 0;
                      m--
                    ) {
                      var g = n[m][0] || 0;
                      if (o(g, 0)) d[m] = [0];
                      else {
                        for (
                          var y = 0, v = [], b = [], x = h[m], w = h[m + 1] - 1;
                          w >= x;
                          w--
                        ) {
                          var N = p[w];
                          N === m
                            ? (y = f[w])
                            : N < m && (v.push(f[w]), b.push(N));
                        }
                        if (o(y, 0))
                          throw new Error(
                            "Linear system cannot be solved since matrix is singular"
                          );
                        for (var E = r(g, y), M = 0, S = b.length; M < S; M++) {
                          var _ = b[M];
                          n[_] = [a(n[_][0], i(E, v[M]))];
                        }
                        d[m] = [E];
                      }
                    }
                    return new s({ data: d, size: [c, 1] });
                  })(e, t);
                },
                "DenseMatrix, Array | Matrix": function (e, t) {
                  return c(e, t);
                },
                "Array, Array | Matrix": function (e, t) {
                  return c(n(e), t).valueOf();
                },
              });
              function c(e, t) {
                for (
                  var n = (t = u(e, t, !0))._data,
                    c = e._size[0],
                    l = e._size[1],
                    f = [],
                    p = e._data,
                    h = l - 1;
                  h >= 0;
                  h--
                ) {
                  var d = n[h][0] || 0,
                    m = void 0;
                  if (o(d, 0)) m = 0;
                  else {
                    var g = p[h][h];
                    if (o(g, 0))
                      throw new Error(
                        "Linear system cannot be solved since matrix is singular"
                      );
                    m = r(d, g);
                    for (var y = h - 1; y >= 0; y--)
                      n[y] = [a(n[y][0] || 0, i(m, p[y][h]))];
                  }
                  f[h] = [m];
                }
                return new s({ data: f, size: [c, 1] });
              }
            }
          );
        function vl(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return bl(e);
            })(e) ||
            (function (e) {
              if ("undefined" != typeof Symbol && Symbol.iterator in Object(e))
                return Array.from(e);
            })(e) ||
            (function (e, t) {
              if (e) {
                if ("string" == typeof e) return bl(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return (
                  "Object" === n && e.constructor && (n = e.constructor.name),
                  "Map" === n || "Set" === n
                    ? Array.from(e)
                    : "Arguments" === n ||
                      /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                    ? bl(e, t)
                    : void 0
                );
              }
            })(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
        function bl(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        var xl = "lsolveAll",
          wl = Cr(
            xl,
            [
              "typed",
              "matrix",
              "divideScalar",
              "multiplyScalar",
              "subtract",
              "equalScalar",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.divideScalar,
                i = e.multiplyScalar,
                a = e.subtract,
                o = e.equalScalar,
                s = e.DenseMatrix,
                u = ml({ DenseMatrix: s });
              return t(xl, {
                "SparseMatrix, Array | Matrix": function (e, t) {
                  return (function (e, t) {
                    for (
                      var n = [
                          u(e, t, !0)._data.map(function (e) {
                            return e[0];
                          }),
                        ],
                        c = e._size[0],
                        l = e._size[1],
                        f = e._values,
                        p = e._index,
                        h = e._ptr,
                        d = 0;
                      d < l;
                      d++
                    )
                      for (var m = n.length, g = 0; g < m; g++) {
                        for (
                          var y = n[g],
                            v = [],
                            b = [],
                            x = h[d],
                            w = h[d + 1],
                            N = 0,
                            E = x;
                          E < w;
                          E++
                        ) {
                          var M = p[E];
                          M === d
                            ? (N = f[E])
                            : M > d && (v.push(f[E]), b.push(M));
                        }
                        if (o(N, 0))
                          if (o(y[d], 0)) {
                            if (0 === g) {
                              var S = vl(y);
                              S[d] = 1;
                              for (var _ = 0, k = b.length; _ < k; _++) {
                                var O = b[_];
                                S[O] = a(S[O], v[_]);
                              }
                              n.push(S);
                            }
                          } else {
                            if (0 === g) return [];
                            n.splice(g, 1), (g -= 1), (m -= 1);
                          }
                        else {
                          y[d] = r(y[d], N);
                          for (var A = 0, C = b.length; A < C; A++) {
                            var T = b[A];
                            y[T] = a(y[T], i(y[d], v[A]));
                          }
                        }
                      }
                    return n.map(function (e) {
                      return new s({
                        data: e.map(function (e) {
                          return [e];
                        }),
                        size: [c, 1],
                      });
                    });
                  })(e, t);
                },
                "DenseMatrix, Array | Matrix": function (e, t) {
                  return c(e, t);
                },
                "Array, Array | Matrix": function (e, t) {
                  return c(n(e), t).map(function (e) {
                    return e.valueOf();
                  });
                },
              });
              function c(e, t) {
                for (
                  var n = [
                      u(e, t, !0)._data.map(function (e) {
                        return e[0];
                      }),
                    ],
                    c = e._data,
                    l = e._size[0],
                    f = e._size[1],
                    p = 0;
                  p < f;
                  p++
                )
                  for (var h = n.length, d = 0; d < h; d++) {
                    var m = n[d];
                    if (o(c[p][p], 0))
                      if (o(m[p], 0)) {
                        if (0 === d) {
                          var g = vl(m);
                          g[p] = 1;
                          for (var y = p + 1; y < f; y++)
                            g[y] = a(g[y], c[y][p]);
                          n.push(g);
                        }
                      } else {
                        if (0 === d) return [];
                        n.splice(d, 1), (d -= 1), (h -= 1);
                      }
                    else {
                      m[p] = r(m[p], c[p][p]);
                      for (var v = p + 1; v < f; v++)
                        m[v] = a(m[v], i(m[p], c[v][p]));
                    }
                  }
                return n.map(function (e) {
                  return new s({
                    data: e.map(function (e) {
                      return [e];
                    }),
                    size: [l, 1],
                  });
                });
              }
            }
          );
        function Nl(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return El(e);
            })(e) ||
            (function (e) {
              if ("undefined" != typeof Symbol && Symbol.iterator in Object(e))
                return Array.from(e);
            })(e) ||
            (function (e, t) {
              if (e) {
                if ("string" == typeof e) return El(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return (
                  "Object" === n && e.constructor && (n = e.constructor.name),
                  "Map" === n || "Set" === n
                    ? Array.from(e)
                    : "Arguments" === n ||
                      /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                    ? El(e, t)
                    : void 0
                );
              }
            })(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
        function El(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        var Ml = "usolveAll",
          Sl = Cr(
            Ml,
            [
              "typed",
              "matrix",
              "divideScalar",
              "multiplyScalar",
              "subtract",
              "equalScalar",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.divideScalar,
                i = e.multiplyScalar,
                a = e.subtract,
                o = e.equalScalar,
                s = e.DenseMatrix,
                u = ml({ DenseMatrix: s });
              return t(Ml, {
                "SparseMatrix, Array | Matrix": function (e, t) {
                  return (function (e, t) {
                    for (
                      var n = [
                          u(e, t, !0)._data.map(function (e) {
                            return e[0];
                          }),
                        ],
                        c = e._size[0],
                        l = e._size[1],
                        f = e._values,
                        p = e._index,
                        h = e._ptr,
                        d = l - 1;
                      d >= 0;
                      d--
                    )
                      for (var m = n.length, g = 0; g < m; g++) {
                        for (
                          var y = n[g],
                            v = [],
                            b = [],
                            x = h[d],
                            w = 0,
                            N = h[d + 1] - 1;
                          N >= x;
                          N--
                        ) {
                          var E = p[N];
                          E === d
                            ? (w = f[N])
                            : E < d && (v.push(f[N]), b.push(E));
                        }
                        if (o(w, 0))
                          if (o(y[d], 0)) {
                            if (0 === g) {
                              var M = Nl(y);
                              M[d] = 1;
                              for (var S = 0, _ = b.length; S < _; S++) {
                                var k = b[S];
                                M[k] = a(M[k], v[S]);
                              }
                              n.push(M);
                            }
                          } else {
                            if (0 === g) return [];
                            n.splice(g, 1), (g -= 1), (m -= 1);
                          }
                        else {
                          y[d] = r(y[d], w);
                          for (var O = 0, A = b.length; O < A; O++) {
                            var C = b[O];
                            y[C] = a(y[C], i(y[d], v[O]));
                          }
                        }
                      }
                    return n.map(function (e) {
                      return new s({
                        data: e.map(function (e) {
                          return [e];
                        }),
                        size: [c, 1],
                      });
                    });
                  })(e, t);
                },
                "DenseMatrix, Array | Matrix": function (e, t) {
                  return c(e, t);
                },
                "Array, Array | Matrix": function (e, t) {
                  return c(n(e), t).map(function (e) {
                    return e.valueOf();
                  });
                },
              });
              function c(e, t) {
                for (
                  var n = [
                      u(e, t, !0)._data.map(function (e) {
                        return e[0];
                      }),
                    ],
                    c = e._data,
                    l = e._size[0],
                    f = e._size[1] - 1;
                  f >= 0;
                  f--
                )
                  for (var p = n.length, h = 0; h < p; h++) {
                    var d = n[h];
                    if (o(c[f][f], 0))
                      if (o(d[f], 0)) {
                        if (0 === h) {
                          var m = Nl(d);
                          m[f] = 1;
                          for (var g = f - 1; g >= 0; g--)
                            m[g] = a(m[g], c[g][f]);
                          n.push(m);
                        }
                      } else {
                        if (0 === h) return [];
                        n.splice(h, 1), (h -= 1), (p -= 1);
                      }
                    else {
                      d[f] = r(d[f], c[f][f]);
                      for (var y = f - 1; y >= 0; y--)
                        d[y] = a(d[y], i(d[f], c[y][f]));
                    }
                  }
                return n.map(function (e) {
                  return new s({
                    data: e.map(function (e) {
                      return [e];
                    }),
                    size: [l, 1],
                  });
                });
              }
            }
          ),
          _l = Cr("algorithm08", ["typed", "equalScalar"], function (e) {
            var t = e.typed,
              n = e.equalScalar;
            return function (e, r, i) {
              var a = e._values,
                o = e._index,
                s = e._ptr,
                u = e._size,
                c = e._datatype,
                l = r._values,
                f = r._index,
                p = r._ptr,
                h = r._size,
                d = r._datatype;
              if (u.length !== h.length) throw new pr(u.length, h.length);
              if (u[0] !== h[0] || u[1] !== h[1])
                throw new RangeError(
                  "Dimension mismatch. Matrix A (" +
                    u +
                    ") must match Matrix B (" +
                    h +
                    ")"
                );
              if (!a || !l)
                throw new Error(
                  "Cannot perform operation on Pattern Sparse Matrices"
                );
              var m,
                g = u[0],
                y = u[1],
                v = n,
                b = 0,
                x = i;
              "string" == typeof c &&
                c === d &&
                ((m = c),
                (v = t.find(n, [m, m])),
                (b = t.convert(0, m)),
                (x = t.find(i, [m, m])));
              for (
                var w, N, E, M, S = [], _ = [], k = [], O = [], A = [], C = 0;
                C < y;
                C++
              ) {
                k[C] = _.length;
                var T = C + 1;
                for (N = s[C], E = s[C + 1], w = N; w < E; w++)
                  (A[(M = o[w])] = T), (O[M] = a[w]), _.push(M);
                for (N = p[C], E = p[C + 1], w = N; w < E; w++)
                  A[(M = f[w])] === T && (O[M] = x(O[M], l[w]));
                for (w = k[C]; w < _.length; ) {
                  var I = O[(M = _[w])];
                  v(I, b) ? _.splice(w, 1) : (S.push(I), w++);
                }
              }
              return (
                (k[y] = _.length),
                e.createSparseMatrix({
                  values: S,
                  index: _,
                  ptr: k,
                  size: [g, y],
                  datatype: m,
                })
              );
            };
          }),
          kl = "leftShift",
          Ol = Cr(
            kl,
            ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.zeros,
                a = e.DenseMatrix,
                o = Ds({ typed: t }),
                s = Fs({ typed: t, equalScalar: r }),
                u = _l({ typed: t, equalScalar: r }),
                c = Rs({ typed: t, DenseMatrix: a }),
                l = Vs({ typed: t, equalScalar: r }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t(kl, {
                "number, number": co,
                "BigNumber, BigNumber": vu,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return u(e, t, this, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return s(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return f(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, number | BigNumber": function (e, t) {
                  return r(t, 0) ? e.clone() : l(e, t, this, !1);
                },
                "DenseMatrix, number | BigNumber": function (e, t) {
                  return r(t, 0) ? e.clone() : p(e, t, this, !1);
                },
                "number | BigNumber, SparseMatrix": function (e, t) {
                  return r(e, 0) ? i(t.size(), t.storage()) : c(t, e, this, !0);
                },
                "number | BigNumber, DenseMatrix": function (e, t) {
                  return r(e, 0) ? i(t.size(), t.storage()) : p(t, e, this, !0);
                },
                "Array, number | BigNumber": function (e, t) {
                  return this(n(e), t).valueOf();
                },
                "number | BigNumber, Array": function (e, t) {
                  return this(e, n(t)).valueOf();
                },
              });
            }
          ),
          Al = "rightArithShift",
          Cl = Cr(
            Al,
            ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.zeros,
                a = e.DenseMatrix,
                o = Ds({ typed: t }),
                s = Fs({ typed: t, equalScalar: r }),
                u = _l({ typed: t, equalScalar: r }),
                c = Rs({ typed: t, DenseMatrix: a }),
                l = Vs({ typed: t, equalScalar: r }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t(Al, {
                "number, number": lo,
                "BigNumber, BigNumber": bu,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return u(e, t, this, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return s(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return f(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, number | BigNumber": function (e, t) {
                  return r(t, 0) ? e.clone() : l(e, t, this, !1);
                },
                "DenseMatrix, number | BigNumber": function (e, t) {
                  return r(t, 0) ? e.clone() : p(e, t, this, !1);
                },
                "number | BigNumber, SparseMatrix": function (e, t) {
                  return r(e, 0) ? i(t.size(), t.storage()) : c(t, e, this, !0);
                },
                "number | BigNumber, DenseMatrix": function (e, t) {
                  return r(e, 0) ? i(t.size(), t.storage()) : p(t, e, this, !0);
                },
                "Array, number | BigNumber": function (e, t) {
                  return this(n(e), t).valueOf();
                },
                "number | BigNumber, Array": function (e, t) {
                  return this(e, n(t)).valueOf();
                },
              });
            }
          ),
          Tl = "rightLogShift",
          Il = Cr(
            Tl,
            ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.zeros,
                a = e.DenseMatrix,
                o = Ds({ typed: t }),
                s = Fs({ typed: t, equalScalar: r }),
                u = _l({ typed: t, equalScalar: r }),
                c = Rs({ typed: t, DenseMatrix: a }),
                l = Vs({ typed: t, equalScalar: r }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t(Tl, {
                "number, number": fo,
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return u(e, t, this, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return s(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return f(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, number | BigNumber": function (e, t) {
                  return r(t, 0) ? e.clone() : l(e, t, this, !1);
                },
                "DenseMatrix, number | BigNumber": function (e, t) {
                  return r(t, 0) ? e.clone() : p(e, t, this, !1);
                },
                "number | BigNumber, SparseMatrix": function (e, t) {
                  return r(e, 0) ? i(t.size(), t.storage()) : c(t, e, this, !0);
                },
                "number | BigNumber, DenseMatrix": function (e, t) {
                  return r(e, 0) ? i(t.size(), t.storage()) : p(t, e, this, !0);
                },
                "Array, number | BigNumber": function (e, t) {
                  return this(n(e), t).valueOf();
                },
                "number | BigNumber, Array": function (e, t) {
                  return this(e, n(t)).valueOf();
                },
              });
            }
          ),
          Pl = Cr(
            "and",
            ["typed", "matrix", "equalScalar", "zeros", "not"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.zeros,
                a = e.not,
                o = Fs({ typed: t, equalScalar: r }),
                s = Us({ typed: t, equalScalar: r }),
                u = Vs({ typed: t, equalScalar: r }),
                c = Ls({ typed: t }),
                l = zs({ typed: t });
              return t("and", {
                "number, number": No,
                "Complex, Complex": function (e, t) {
                  return !(
                    (0 === e.re && 0 === e.im) ||
                    (0 === t.re && 0 === t.im)
                  );
                },
                "BigNumber, BigNumber": function (e, t) {
                  return !(e.isZero() || t.isZero() || e.isNaN() || t.isNaN());
                },
                "Unit, Unit": function (e, t) {
                  return this(e.value || 0, t.value || 0);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return s(e, t, this, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return o(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return c(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return a(t) ? i(e.size(), e.storage()) : u(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return a(t) ? i(e.size(), e.storage()) : l(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return a(e) ? i(e.size(), e.storage()) : u(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return a(e) ? i(e.size(), e.storage()) : l(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return this(n(e), t).valueOf();
                },
                "any, Array": function (e, t) {
                  return this(e, n(t)).valueOf();
                },
              });
            }
          ),
          Bl = "compare",
          Dl = Cr(
            Bl,
            [
              "typed",
              "config",
              "matrix",
              "equalScalar",
              "BigNumber",
              "Fraction",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.equalScalar,
                i = e.matrix,
                a = e.BigNumber,
                o = e.Fraction,
                s = e.DenseMatrix,
                u = Gs({ typed: t }),
                c = Js({ typed: t, equalScalar: r }),
                l = Ys({ typed: t, DenseMatrix: s }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t(Bl, {
                "boolean, boolean": function (e, t) {
                  return e === t ? 0 : e > t ? 1 : -1;
                },
                "number, number": function (e, t) {
                  return Kn(e, t, n.epsilon) ? 0 : e > t ? 1 : -1;
                },
                "BigNumber, BigNumber": function (e, t) {
                  return as(e, t, n.epsilon) ? new a(0) : new a(e.cmp(t));
                },
                "Fraction, Fraction": function (e, t) {
                  return new o(e.compare(t));
                },
                "Complex, Complex": function () {
                  throw new TypeError(
                    "No ordering relation is defined for complex numbers"
                  );
                },
                "Unit, Unit": function (e, t) {
                  if (!e.equalBase(t))
                    throw new Error("Cannot compare units with different base");
                  return this(e.value, t.value);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return c(e, t, this);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return u(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return u(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return f(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(i(e), i(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(i(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, i(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return l(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return p(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return l(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return p(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return p(i(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return p(i(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          jl = function e(t, n) {
            var r,
              i,
              a = /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,
              o = /(^[ ]*|[ ]*$)/g,
              s = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
              u = /^0x[0-9a-f]+$/i,
              c = /^0/,
              l = function (t) {
                return (e.insensitive && ("" + t).toLowerCase()) || "" + t;
              },
              f = l(t).replace(o, "") || "",
              p = l(n).replace(o, "") || "",
              h = f
                .replace(a, "\0$1\0")
                .replace(/\0$/, "")
                .replace(/^\0/, "")
                .split("\0"),
              d = p
                .replace(a, "\0$1\0")
                .replace(/\0$/, "")
                .replace(/^\0/, "")
                .split("\0"),
              m =
                parseInt(f.match(u), 16) ||
                (1 !== h.length && f.match(s) && Date.parse(f)),
              g =
                parseInt(p.match(u), 16) ||
                (m && p.match(s) && Date.parse(p)) ||
                null;
            if (g) {
              if (m < g) return -1;
              if (m > g) return 1;
            }
            for (var y = 0, v = Math.max(h.length, d.length); y < v; y++) {
              if (
                ((r =
                  (!(h[y] || "").match(c) && parseFloat(h[y])) || h[y] || 0),
                (i = (!(d[y] || "").match(c) && parseFloat(d[y])) || d[y] || 0),
                isNaN(r) !== isNaN(i))
              )
                return isNaN(r) ? 1 : -1;
              if ((typeof r != typeof i && ((r += ""), (i += "")), r < i))
                return -1;
              if (r > i) return 1;
            }
            return 0;
          },
          Rl = "compareNatural",
          Ll = Cr(Rl, ["typed", "compare"], function (e) {
            var t = e.typed,
              n = e.compare,
              r = n.signatures["boolean,boolean"];
            return t(Rl, {
              "any, any": function (e, t) {
                var a,
                  o = An(e),
                  s = An(t);
                if (
                  !(
                    ("number" !== o && "BigNumber" !== o && "Fraction" !== o) ||
                    ("number" !== s && "BigNumber" !== s && "Fraction" !== s)
                  )
                )
                  return "0" !== (a = n(e, t)).toString()
                    ? a > 0
                      ? 1
                      : -1
                    : jl(o, s);
                if (
                  "Array" === o ||
                  "Matrix" === o ||
                  "Array" === s ||
                  "Matrix" === s
                )
                  return 0 !==
                    (a = (function e(t, n, r) {
                      return en(n) && en(r)
                        ? i(t, n.toJSON().values, r.toJSON().values)
                        : en(n)
                        ? e(t, n.toArray(), r)
                        : en(r)
                        ? e(t, n, r.toArray())
                        : Qt(n)
                        ? e(t, n.toJSON().data, r)
                        : Qt(r)
                        ? e(t, n, r.toJSON().data)
                        : Array.isArray(n)
                        ? Array.isArray(r)
                          ? i(t, n, r)
                          : e(t, n, [r])
                        : e(t, [n], r);
                    })(this, e, t))
                    ? a
                    : jl(o, s);
                if (o !== s) return jl(o, s);
                if ("Complex" === o)
                  return (function (e, t) {
                    return e.re > t.re
                      ? 1
                      : e.re < t.re
                      ? -1
                      : e.im > t.im
                      ? 1
                      : e.im < t.im
                      ? -1
                      : 0;
                  })(e, t);
                if ("Unit" === o)
                  return e.equalBase(t)
                    ? this(e.value, t.value)
                    : i(this, e.formatUnits(), t.formatUnits());
                if ("boolean" === o) return r(e, t);
                if ("string" === o) return jl(e, t);
                if ("Object" === o)
                  return (function (e, t, n) {
                    var r = Object.keys(t),
                      a = Object.keys(n);
                    r.sort(jl), a.sort(jl);
                    var o = i(e, r, a);
                    if (0 !== o) return o;
                    for (var s = 0; s < r.length; s++) {
                      var u = e(t[r[s]], n[a[s]]);
                      if (0 !== u) return u;
                    }
                    return 0;
                  })(this, e, t);
                if ("null" === o) return 0;
                if ("undefined" === o) return 0;
                throw new TypeError('Unsupported type of value "' + o + '"');
              },
            });
            function i(e, t, n) {
              for (var r = 0, i = Math.min(t.length, n.length); r < i; r++) {
                var a = e(t[r], n[r]);
                if (0 !== a) return a;
              }
              return t.length > n.length ? 1 : t.length < n.length ? -1 : 0;
            }
          }),
          zl = "compareText",
          ql = Cr(zl, ["typed", "matrix"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = Ls({ typed: t }),
              i = zs({ typed: t });
            return t(zl, {
              "any, any": fr,
              "DenseMatrix, DenseMatrix": function (e, t) {
                return r(e, t, fr);
              },
              "Array, Array": function (e, t) {
                return this(n(e), n(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(n(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, n(t));
              },
              "DenseMatrix, any": function (e, t) {
                return i(e, t, fr, !1);
              },
              "any, DenseMatrix": function (e, t) {
                return i(t, e, fr, !0);
              },
              "Array, any": function (e, t) {
                return i(n(e), t, fr, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return i(n(t), e, fr, !0).valueOf();
              },
            });
          }),
          Fl = "equal",
          Ul = Cr(
            Fl,
            ["typed", "matrix", "equalScalar", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.DenseMatrix,
                a = Gs({ typed: t }),
                o = Eu({ typed: t, DenseMatrix: i }),
                s = Ys({ typed: t, DenseMatrix: i }),
                u = Ls({ typed: t }),
                c = zs({ typed: t });
              return t(Fl, {
                "any, any": function (e, t) {
                  return null === e
                    ? null === t
                    : null === t
                    ? null === e
                    : void 0 === e
                    ? void 0 === t
                    : void 0 === t
                    ? void 0 === e
                    : r(e, t);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, r);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, r, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return a(e, t, r, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return u(e, t, r);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return s(e, t, r, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return c(e, t, r, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return s(t, e, r, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return c(t, e, r, !0);
                },
                "Array, any": function (e, t) {
                  return c(n(e), t, r, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return c(n(t), e, r, !0).valueOf();
                },
              });
            }
          ),
          Vl =
            (Cr(Fl, ["typed", "equalScalar"], function (e) {
              var t = e.typed,
                n = e.equalScalar;
              return t(Fl, {
                "any, any": function (e, t) {
                  return null === e
                    ? null === t
                    : null === t
                    ? null === e
                    : void 0 === e
                    ? void 0 === t
                    : void 0 === t
                    ? void 0 === e
                    : n(e, t);
                },
              });
            }),
            "equalText"),
          $l = Cr(Vl, ["typed", "compareText", "isZero"], function (e) {
            var t = e.typed,
              n = e.compareText,
              r = e.isZero;
            return t(Vl, {
              "any, any": function (e, t) {
                return r(n(e, t));
              },
            });
          }),
          Hl = "smaller",
          Wl = Cr(Hl, ["typed", "config", "matrix", "DenseMatrix"], function (
            e
          ) {
            var t = e.typed,
              n = e.config,
              r = e.matrix,
              i = e.DenseMatrix,
              a = Gs({ typed: t }),
              o = Eu({ typed: t, DenseMatrix: i }),
              s = Ys({ typed: t, DenseMatrix: i }),
              u = Ls({ typed: t }),
              c = zs({ typed: t });
            return t(Hl, {
              "boolean, boolean": function (e, t) {
                return e < t;
              },
              "number, number": function (e, t) {
                return e < t && !Kn(e, t, n.epsilon);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.lt(t) && !as(e, t, n.epsilon);
              },
              "Fraction, Fraction": function (e, t) {
                return -1 === e.compare(t);
              },
              "Complex, Complex": function (e, t) {
                throw new TypeError(
                  "No ordering relation is defined for complex numbers"
                );
              },
              "Unit, Unit": function (e, t) {
                if (!e.equalBase(t))
                  throw new Error("Cannot compare units with different base");
                return this(e.value, t.value);
              },
              "SparseMatrix, SparseMatrix": function (e, t) {
                return o(e, t, this);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return a(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return u(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(r(e), r(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(r(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, r(t));
              },
              "SparseMatrix, any": function (e, t) {
                return s(e, t, this, !1);
              },
              "DenseMatrix, any": function (e, t) {
                return c(e, t, this, !1);
              },
              "any, SparseMatrix": function (e, t) {
                return s(t, e, this, !0);
              },
              "any, DenseMatrix": function (e, t) {
                return c(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return c(r(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return c(r(t), e, this, !0).valueOf();
              },
            });
          }),
          Gl = "smallerEq",
          Jl = Cr(Gl, ["typed", "config", "matrix", "DenseMatrix"], function (
            e
          ) {
            var t = e.typed,
              n = e.config,
              r = e.matrix,
              i = e.DenseMatrix,
              a = Gs({ typed: t }),
              o = Eu({ typed: t, DenseMatrix: i }),
              s = Ys({ typed: t, DenseMatrix: i }),
              u = Ls({ typed: t }),
              c = zs({ typed: t });
            return t(Gl, {
              "boolean, boolean": function (e, t) {
                return e <= t;
              },
              "number, number": function (e, t) {
                return e <= t || Kn(e, t, n.epsilon);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.lte(t) || as(e, t, n.epsilon);
              },
              "Fraction, Fraction": function (e, t) {
                return 1 !== e.compare(t);
              },
              "Complex, Complex": function () {
                throw new TypeError(
                  "No ordering relation is defined for complex numbers"
                );
              },
              "Unit, Unit": function (e, t) {
                if (!e.equalBase(t))
                  throw new Error("Cannot compare units with different base");
                return this(e.value, t.value);
              },
              "SparseMatrix, SparseMatrix": function (e, t) {
                return o(e, t, this);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return a(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return u(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(r(e), r(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(r(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, r(t));
              },
              "SparseMatrix, any": function (e, t) {
                return s(e, t, this, !1);
              },
              "DenseMatrix, any": function (e, t) {
                return c(e, t, this, !1);
              },
              "any, SparseMatrix": function (e, t) {
                return s(t, e, this, !0);
              },
              "any, DenseMatrix": function (e, t) {
                return c(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return c(r(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return c(r(t), e, this, !0).valueOf();
              },
            });
          }),
          Yl = Cr(
            "larger",
            ["typed", "config", "matrix", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.matrix,
                i = e.DenseMatrix,
                a = Gs({ typed: t }),
                o = Eu({ typed: t, DenseMatrix: i }),
                s = Ys({ typed: t, DenseMatrix: i }),
                u = Ls({ typed: t }),
                c = zs({ typed: t });
              return t("larger", {
                "boolean, boolean": function (e, t) {
                  return e > t;
                },
                "number, number": function (e, t) {
                  return e > t && !Kn(e, t, n.epsilon);
                },
                "BigNumber, BigNumber": function (e, t) {
                  return e.gt(t) && !as(e, t, n.epsilon);
                },
                "Fraction, Fraction": function (e, t) {
                  return 1 === e.compare(t);
                },
                "Complex, Complex": function () {
                  throw new TypeError(
                    "No ordering relation is defined for complex numbers"
                  );
                },
                "Unit, Unit": function (e, t) {
                  if (!e.equalBase(t))
                    throw new Error("Cannot compare units with different base");
                  return this(e.value, t.value);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, this);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return a(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return u(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(r(e), r(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(r(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, r(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return s(e, t, this, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return c(e, t, this, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return s(t, e, this, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return c(t, e, this, !0);
                },
                "Array, any": function (e, t) {
                  return c(r(e), t, this, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return c(r(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          Zl = "largerEq",
          Xl = Cr(Zl, ["typed", "config", "matrix", "DenseMatrix"], function (
            e
          ) {
            var t = e.typed,
              n = e.config,
              r = e.matrix,
              i = e.DenseMatrix,
              a = Gs({ typed: t }),
              o = Eu({ typed: t, DenseMatrix: i }),
              s = Ys({ typed: t, DenseMatrix: i }),
              u = Ls({ typed: t }),
              c = zs({ typed: t });
            return t(Zl, {
              "boolean, boolean": function (e, t) {
                return e >= t;
              },
              "number, number": function (e, t) {
                return e >= t || Kn(e, t, n.epsilon);
              },
              "BigNumber, BigNumber": function (e, t) {
                return e.gte(t) || as(e, t, n.epsilon);
              },
              "Fraction, Fraction": function (e, t) {
                return -1 !== e.compare(t);
              },
              "Complex, Complex": function () {
                throw new TypeError(
                  "No ordering relation is defined for complex numbers"
                );
              },
              "Unit, Unit": function (e, t) {
                if (!e.equalBase(t))
                  throw new Error("Cannot compare units with different base");
                return this(e.value, t.value);
              },
              "SparseMatrix, SparseMatrix": function (e, t) {
                return o(e, t, this);
              },
              "SparseMatrix, DenseMatrix": function (e, t) {
                return a(t, e, this, !0);
              },
              "DenseMatrix, SparseMatrix": function (e, t) {
                return a(e, t, this, !1);
              },
              "DenseMatrix, DenseMatrix": function (e, t) {
                return u(e, t, this);
              },
              "Array, Array": function (e, t) {
                return this(r(e), r(t)).valueOf();
              },
              "Array, Matrix": function (e, t) {
                return this(r(e), t);
              },
              "Matrix, Array": function (e, t) {
                return this(e, r(t));
              },
              "SparseMatrix, any": function (e, t) {
                return s(e, t, this, !1);
              },
              "DenseMatrix, any": function (e, t) {
                return c(e, t, this, !1);
              },
              "any, SparseMatrix": function (e, t) {
                return s(t, e, this, !0);
              },
              "any, DenseMatrix": function (e, t) {
                return c(t, e, this, !0);
              },
              "Array, any": function (e, t) {
                return c(r(e), t, this, !1).valueOf();
              },
              "any, Array": function (e, t) {
                return c(r(t), e, this, !0).valueOf();
              },
            });
          }),
          Kl = "deepEqual",
          Ql = Cr(Kl, ["typed", "equal"], function (e) {
            var t = e.typed,
              n = e.equal;
            return t(Kl, {
              "any, any": function (e, t) {
                return (function e(t, r) {
                  if (Array.isArray(t)) {
                    if (Array.isArray(r)) {
                      var i = t.length;
                      if (i !== r.length) return !1;
                      for (var a = 0; a < i; a++) if (!e(t[a], r[a])) return !1;
                      return !0;
                    }
                    return !1;
                  }
                  return !Array.isArray(r) && n(t, r);
                })(e.valueOf(), t.valueOf());
              },
            });
          }),
          ef = "unequal",
          tf = Cr(
            ef,
            ["typed", "config", "equalScalar", "matrix", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = (e.config, e.equalScalar),
                r = e.matrix,
                i = e.DenseMatrix,
                a = Gs({ typed: t }),
                o = Eu({ typed: t, DenseMatrix: i }),
                s = Ys({ typed: t, DenseMatrix: i }),
                u = Ls({ typed: t }),
                c = zs({ typed: t });
              return t("unequal", {
                "any, any": function (e, t) {
                  return null === e
                    ? null !== t
                    : null === t
                    ? null !== e
                    : void 0 === e
                    ? void 0 !== t
                    : void 0 === t
                    ? void 0 !== e
                    : l(e, t);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return o(e, t, l);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return a(t, e, l, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return a(e, t, l, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return u(e, t, l);
                },
                "Array, Array": function (e, t) {
                  return this(r(e), r(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(r(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, r(t));
                },
                "SparseMatrix, any": function (e, t) {
                  return s(e, t, l, !1);
                },
                "DenseMatrix, any": function (e, t) {
                  return c(e, t, l, !1);
                },
                "any, SparseMatrix": function (e, t) {
                  return s(t, e, l, !0);
                },
                "any, DenseMatrix": function (e, t) {
                  return c(t, e, l, !0);
                },
                "Array, any": function (e, t) {
                  return c(r(e), t, l, !1).valueOf();
                },
                "any, Array": function (e, t) {
                  return c(r(t), e, l, !0).valueOf();
                },
              });
              function l(e, t) {
                return !n(e, t);
              }
            }
          ),
          nf =
            (Cr(ef, ["typed", "equalScalar"], function (e) {
              var t = e.typed,
                n = e.equalScalar;
              return t(ef, {
                "any, any": function (e, t) {
                  return null === e
                    ? null !== t
                    : null === t
                    ? null !== e
                    : void 0 === e
                    ? void 0 !== t
                    : void 0 === t
                    ? void 0 !== e
                    : !n(e, t);
                },
              });
            }),
            "partitionSelect"),
          rf = Cr(nf, ["typed", "isNumeric", "isNaN", "compare"], function (e) {
            var t = e.typed,
              n = e.isNumeric,
              r = e.isNaN,
              i = e.compare,
              a = i,
              o = function (e, t) {
                return -i(e, t);
              };
            return t(nf, {
              "Array | Matrix, number": function (e, t) {
                return s(e, t, a);
              },
              "Array | Matrix, number, string": function (e, t, n) {
                if ("asc" === n) return s(e, t, a);
                if ("desc" === n) return s(e, t, o);
                throw new Error('Compare string must be "asc" or "desc"');
              },
              "Array | Matrix, number, function": s,
            });
            function s(e, t, n) {
              if (!Ln(t) || t < 0)
                throw new Error("k must be a non-negative integer");
              if (Xt(e)) {
                if (e.size().length > 1)
                  throw new Error("Only one dimensional matrices supported");
                return u(e.valueOf(), t, n);
              }
              if (Array.isArray(e)) return u(e, t, n);
            }
            function u(e, t, i) {
              if (t >= e.length) throw new Error("k out of bounds");
              for (var a = 0; a < e.length; a++)
                if (n(e[a]) && r(e[a])) return e[a];
              for (var o = 0, s = e.length - 1; o < s; ) {
                for (
                  var u = o,
                    c = s,
                    l = e[Math.floor(Math.random() * (s - o + 1)) + o];
                  u < c;

                )
                  if (i(e[u], l) >= 0) {
                    var f = e[c];
                    (e[c] = e[u]), (e[u] = f), --c;
                  } else ++u;
                i(e[u], l) > 0 && --u, t <= u ? (s = u) : (o = u + 1);
              }
              return e[t];
            }
          }),
          af = Cr(
            "sort",
            ["typed", "matrix", "compare", "compareNatural"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.compare,
                i = e.compareNatural,
                a = r,
                o = function (e, t) {
                  return -r(e, t);
                };
              return t("sort", {
                Array: function (e) {
                  return u(e), e.sort(a);
                },
                Matrix: function (e) {
                  return c(e), n(e.toArray().sort(a), e.storage());
                },
                "Array, function": function (e, t) {
                  return u(e), e.sort(t);
                },
                "Matrix, function": function (e, t) {
                  return c(e), n(e.toArray().sort(t), e.storage());
                },
                "Array, string": function (e, t) {
                  return u(e), e.sort(s(t));
                },
                "Matrix, string": function (e, t) {
                  return c(e), n(e.toArray().sort(s(t)), e.storage());
                },
              });
              function s(e) {
                if ("asc" === e) return a;
                if ("desc" === e) return o;
                if ("natural" === e) return i;
                throw new Error('String "asc", "desc", or "natural" expected');
              }
              function u(e) {
                if (1 !== dr(e).length)
                  throw new Error("One dimensional array expected");
              }
              function c(e) {
                if (1 !== e.size().length)
                  throw new Error("One dimensional matrix expected");
              }
            }
          ),
          of = Cr("max", ["typed", "config", "numeric", "larger"], function (
            e
          ) {
            var t = e.typed,
              n = e.config,
              r = e.numeric,
              i = e.larger;
            return t("max", {
              "Array | Matrix": o,
              "Array | Matrix, number | BigNumber": function (e, t) {
                return Aa(e, t.valueOf(), a);
              },
              "...": function (e) {
                if (_a(e))
                  throw new TypeError("Scalar values expected in function max");
                return o(e);
              },
            });
            function a(e, t) {
              try {
                return i(e, t) ? e : t;
              } catch (e) {
                throw Lc(e, "max", t);
              }
            }
            function o(e) {
              var t;
              if (
                (ka(e, function (e) {
                  try {
                    isNaN(e) && "number" == typeof e
                      ? (t = NaN)
                      : (void 0 === t || i(e, t)) && (t = e);
                  } catch (t) {
                    throw Lc(t, "max", e);
                  }
                }),
                void 0 === t)
              )
                throw new Error("Cannot calculate max of an empty array");
              return "string" == typeof t && (t = r(t, n.number)), t;
            }
          }),
          sf = Cr("min", ["typed", "config", "numeric", "smaller"], function (
            e
          ) {
            var t = e.typed,
              n = e.config,
              r = e.numeric,
              i = e.smaller;
            return t("min", {
              "Array | Matrix": o,
              "Array | Matrix, number | BigNumber": function (e, t) {
                return Aa(e, t.valueOf(), a);
              },
              "...": function (e) {
                if (_a(e))
                  throw new TypeError("Scalar values expected in function min");
                return o(e);
              },
            });
            function a(e, t) {
              try {
                return i(e, t) ? e : t;
              } catch (e) {
                throw Lc(e, "min", t);
              }
            }
            function o(e) {
              var t;
              if (
                (ka(e, function (e) {
                  try {
                    isNaN(e) && "number" == typeof e
                      ? (t = NaN)
                      : (void 0 === t || i(e, t)) && (t = e);
                  } catch (t) {
                    throw Lc(t, "min", e);
                  }
                }),
                void 0 === t)
              )
                throw new Error("Cannot calculate min of an empty array");
              return "string" == typeof t && (t = r(t, n.number)), t;
            }
          }),
          uf = Cr(
            "ImmutableDenseMatrix",
            ["smaller", "DenseMatrix"],
            function (e) {
              var t = e.smaller,
                n = e.DenseMatrix;
              function r(e, t) {
                if (!(this instanceof r))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (t && !Yt(t)) throw new Error("Invalid datatype: " + t);
                if (Xt(e) || Zt(e)) {
                  var i = new n(e, t);
                  (this._data = i._data),
                    (this._size = i._size),
                    (this._datatype = i._datatype),
                    (this._min = null),
                    (this._max = null);
                } else if (e && Zt(e.data) && Zt(e.size))
                  (this._data = e.data),
                    (this._size = e.size),
                    (this._datatype = e.datatype),
                    (this._min = void 0 !== e.min ? e.min : null),
                    (this._max = void 0 !== e.max ? e.max : null);
                else {
                  if (e)
                    throw new TypeError(
                      "Unsupported type of data (" + An(e) + ")"
                    );
                  (this._data = []),
                    (this._size = [0]),
                    (this._datatype = t),
                    (this._min = null),
                    (this._max = null);
                }
              }
              return (
                (r.prototype = new n()),
                (r.prototype.type = "ImmutableDenseMatrix"),
                (r.prototype.isImmutableDenseMatrix = !0),
                (r.prototype.subset = function (e) {
                  switch (arguments.length) {
                    case 1:
                      var t = n.prototype.subset.call(this, e);
                      return Xt(t)
                        ? new r({
                            data: t._data,
                            size: t._size,
                            datatype: t._datatype,
                          })
                        : t;
                    case 2:
                    case 3:
                      throw new Error(
                        "Cannot invoke set subset on an Immutable Matrix instance"
                      );
                    default:
                      throw new SyntaxError("Wrong number of arguments");
                  }
                }),
                (r.prototype.set = function () {
                  throw new Error(
                    "Cannot invoke set on an Immutable Matrix instance"
                  );
                }),
                (r.prototype.resize = function () {
                  throw new Error(
                    "Cannot invoke resize on an Immutable Matrix instance"
                  );
                }),
                (r.prototype.reshape = function () {
                  throw new Error(
                    "Cannot invoke reshape on an Immutable Matrix instance"
                  );
                }),
                (r.prototype.clone = function () {
                  return new r({
                    data: Tn(this._data),
                    size: Tn(this._size),
                    datatype: this._datatype,
                  });
                }),
                (r.prototype.toJSON = function () {
                  return {
                    mathjs: "ImmutableDenseMatrix",
                    data: this._data,
                    size: this._size,
                    datatype: this._datatype,
                  };
                }),
                (r.fromJSON = function (e) {
                  return new r(e);
                }),
                (r.prototype.swapRows = function () {
                  throw new Error(
                    "Cannot invoke swapRows on an Immutable Matrix instance"
                  );
                }),
                (r.prototype.min = function () {
                  if (null === this._min) {
                    var e = null;
                    this.forEach(function (n) {
                      (null === e || t(n, e)) && (e = n);
                    }),
                      (this._min = null !== e ? e : void 0);
                  }
                  return this._min;
                }),
                (r.prototype.max = function () {
                  if (null === this._max) {
                    var e = null;
                    this.forEach(function (n) {
                      (null === e || t(e, n)) && (e = n);
                    }),
                      (this._max = null !== e ? e : void 0);
                  }
                  return this._max;
                }),
                r
              );
            },
            { isClass: !0 }
          ),
          cf = Cr(
            "Index",
            ["ImmutableDenseMatrix"],
            function (e) {
              var t = e.ImmutableDenseMatrix;
              function n(e) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                (this._dimensions = []), (this._isScalar = !0);
                for (var t = 0, i = arguments.length; t < i; t++) {
                  var a = arguments[t];
                  if (tn(a)) this._dimensions.push(a), (this._isScalar = !1);
                  else if (Array.isArray(a) || Xt(a)) {
                    var o = r(a.valueOf());
                    this._dimensions.push(o);
                    var s = o.size();
                    (1 === s.length && 1 === s[0]) || (this._isScalar = !1);
                  } else if ("number" == typeof a)
                    this._dimensions.push(r([a]));
                  else {
                    if ("string" != typeof a)
                      throw new TypeError(
                        "Dimension must be an Array, Matrix, number, string, or Range"
                      );
                    this._dimensions.push(a);
                  }
                }
              }
              function r(e) {
                for (var n = 0, r = e.length; n < r; n++)
                  if ("number" != typeof e[n] || !Ln(e[n]))
                    throw new TypeError(
                      "Index parameters must be positive integer numbers"
                    );
                return new t(e);
              }
              return (
                (n.prototype.type = "Index"),
                (n.prototype.isIndex = !0),
                (n.prototype.clone = function () {
                  var e = new n();
                  return (
                    (e._dimensions = Tn(this._dimensions)),
                    (e._isScalar = this._isScalar),
                    e
                  );
                }),
                (n.create = function (e) {
                  var t = new n();
                  return n.apply(t, e), t;
                }),
                (n.prototype.size = function () {
                  for (
                    var e = [], t = 0, n = this._dimensions.length;
                    t < n;
                    t++
                  ) {
                    var r = this._dimensions[t];
                    e[t] = "string" == typeof r ? 1 : r.size()[0];
                  }
                  return e;
                }),
                (n.prototype.max = function () {
                  for (
                    var e = [], t = 0, n = this._dimensions.length;
                    t < n;
                    t++
                  ) {
                    var r = this._dimensions[t];
                    e[t] = "string" == typeof r ? r : r.max();
                  }
                  return e;
                }),
                (n.prototype.min = function () {
                  for (
                    var e = [], t = 0, n = this._dimensions.length;
                    t < n;
                    t++
                  ) {
                    var r = this._dimensions[t];
                    e[t] = "string" == typeof r ? r : r.min();
                  }
                  return e;
                }),
                (n.prototype.forEach = function (e) {
                  for (var t = 0, n = this._dimensions.length; t < n; t++)
                    e(this._dimensions[t], t, this);
                }),
                (n.prototype.dimension = function (e) {
                  return this._dimensions[e] || null;
                }),
                (n.prototype.isObjectProperty = function () {
                  return (
                    1 === this._dimensions.length &&
                    "string" == typeof this._dimensions[0]
                  );
                }),
                (n.prototype.getObjectProperty = function () {
                  return this.isObjectProperty() ? this._dimensions[0] : null;
                }),
                (n.prototype.isScalar = function () {
                  return this._isScalar;
                }),
                (n.prototype.toArray = function () {
                  for (
                    var e = [], t = 0, n = this._dimensions.length;
                    t < n;
                    t++
                  ) {
                    var r = this._dimensions[t];
                    e.push("string" == typeof r ? r : r.toArray());
                  }
                  return e;
                }),
                (n.prototype.valueOf = n.prototype.toArray),
                (n.prototype.toString = function () {
                  for (
                    var e = [], t = 0, n = this._dimensions.length;
                    t < n;
                    t++
                  ) {
                    var r = this._dimensions[t];
                    "string" == typeof r
                      ? e.push(JSON.stringify(r))
                      : e.push(r.toString());
                  }
                  return "[" + e.join(", ") + "]";
                }),
                (n.prototype.toJSON = function () {
                  return { mathjs: "Index", dimensions: this._dimensions };
                }),
                (n.fromJSON = function (e) {
                  return n.create(e.dimensions);
                }),
                n
              );
            },
            { isClass: !0 }
          ),
          lf = Cr(
            "FibonacciHeap",
            ["smaller", "larger"],
            function (e) {
              var t = e.smaller,
                n = e.larger,
                r = 1 / Math.log((1 + Math.sqrt(5)) / 2);
              function i() {
                if (!(this instanceof i))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                (this._minimum = null), (this._size = 0);
              }
              function a(e, t, n) {
                (t.left.right = t.right),
                  (t.right.left = t.left),
                  n.degree--,
                  n.child === t && (n.child = t.right),
                  0 === n.degree && (n.child = null),
                  (t.left = e),
                  (t.right = e.right),
                  (e.right = t),
                  (t.right.left = t),
                  (t.parent = null),
                  (t.mark = !1);
              }
              (i.prototype.type = "FibonacciHeap"),
                (i.prototype.isFibonacciHeap = !0),
                (i.prototype.insert = function (e, n) {
                  var r = { key: e, value: n, degree: 0 };
                  if (this._minimum) {
                    var i = this._minimum;
                    (r.left = i),
                      (r.right = i.right),
                      (i.right = r),
                      (r.right.left = r),
                      t(e, i.key) && (this._minimum = r);
                  } else (r.left = r), (r.right = r), (this._minimum = r);
                  return this._size++, r;
                }),
                (i.prototype.size = function () {
                  return this._size;
                }),
                (i.prototype.clear = function () {
                  (this._minimum = null), (this._size = 0);
                }),
                (i.prototype.isEmpty = function () {
                  return 0 === this._size;
                }),
                (i.prototype.extractMinimum = function () {
                  var e = this._minimum;
                  if (null === e) return e;
                  for (
                    var i = this._minimum, a = e.degree, s = e.child;
                    a > 0;

                  ) {
                    var u = s.right;
                    (s.left.right = s.right),
                      (s.right.left = s.left),
                      (s.left = i),
                      (s.right = i.right),
                      (i.right = s),
                      (s.right.left = s),
                      (s.parent = null),
                      (s = u),
                      a--;
                  }
                  return (
                    (e.left.right = e.right),
                    (e.right.left = e.left),
                    (i =
                      e === e.right
                        ? null
                        : (function (e, i) {
                            var a,
                              s = Math.floor(Math.log(i) * r) + 1,
                              u = new Array(s),
                              c = 0,
                              l = e;
                            if (l)
                              for (c++, l = l.right; l !== e; )
                                c++, (l = l.right);
                            for (; c > 0; ) {
                              for (
                                var f = l.degree, p = l.right;
                                (a = u[f]);

                              ) {
                                if (n(l.key, a.key)) {
                                  var h = a;
                                  (a = l), (l = h);
                                }
                                o(a, l), (u[f] = null), f++;
                              }
                              (u[f] = l), (l = p), c--;
                            }
                            e = null;
                            for (var d = 0; d < s; d++)
                              (a = u[d]) &&
                                (e
                                  ? ((a.left.right = a.right),
                                    (a.right.left = a.left),
                                    (a.left = e),
                                    (a.right = e.right),
                                    (e.right = a),
                                    (a.right.left = a),
                                    t(a.key, e.key) && (e = a))
                                  : (e = a));
                            return e;
                          })((i = e.right), this._size)),
                    this._size--,
                    (this._minimum = i),
                    e
                  );
                }),
                (i.prototype.remove = function (e) {
                  (this._minimum = (function (e, n, r) {
                    n.key = -1;
                    var i = n.parent;
                    return (
                      i &&
                        t(n.key, i.key) &&
                        (a(e, n, i),
                        (function e(t, n) {
                          var r = n.parent;
                          r && (n.mark ? (a(t, n, r), e(r)) : (n.mark = !0));
                        })(e, i)),
                      t(n.key, e.key) && (e = n),
                      e
                    );
                  })(this._minimum, e)),
                    this.extractMinimum();
                });
              var o = function (e, t) {
                (e.left.right = e.right),
                  (e.right.left = e.left),
                  (e.parent = t),
                  t.child
                    ? ((e.left = t.child),
                      (e.right = t.child.right),
                      (t.child.right = e),
                      (e.right.left = e))
                    : ((t.child = e), (e.right = e), (e.left = e)),
                  t.degree++,
                  (e.mark = !1);
              };
              return i;
            },
            { isClass: !0 }
          ),
          ff = Cr(
            "Spa",
            ["addScalar", "equalScalar", "FibonacciHeap"],
            function (e) {
              var t = e.addScalar,
                n = e.equalScalar,
                r = e.FibonacciHeap;
              function i() {
                if (!(this instanceof i))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                (this._values = []), (this._heap = new r());
              }
              return (
                (i.prototype.type = "Spa"),
                (i.prototype.isSpa = !0),
                (i.prototype.set = function (e, t) {
                  if (this._values[e]) this._values[e].value = t;
                  else {
                    var n = this._heap.insert(e, t);
                    this._values[e] = n;
                  }
                }),
                (i.prototype.get = function (e) {
                  var t = this._values[e];
                  return t ? t.value : 0;
                }),
                (i.prototype.accumulate = function (e, n) {
                  var r = this._values[e];
                  r
                    ? (r.value = t(r.value, n))
                    : ((r = this._heap.insert(e, n)), (this._values[e] = r));
                }),
                (i.prototype.forEach = function (e, t, r) {
                  var i = this._heap,
                    a = this._values,
                    o = [],
                    s = i.extractMinimum();
                  for (s && o.push(s); s && s.key <= t; )
                    s.key >= e && (n(s.value, 0) || r(s.key, s.value, this)),
                      (s = i.extractMinimum()) && o.push(s);
                  for (var u = 0; u < o.length; u++) {
                    var c = o[u];
                    a[(s = i.insert(c.key, c.value)).key] = s;
                  }
                }),
                (i.prototype.swap = function (e, t) {
                  var n = this._values[e],
                    r = this._values[t];
                  if (!n && r)
                    (n = this._heap.insert(e, r.value)),
                      this._heap.remove(r),
                      (this._values[e] = n),
                      (this._values[t] = void 0);
                  else if (n && !r)
                    (r = this._heap.insert(t, n.value)),
                      this._heap.remove(n),
                      (this._values[t] = r),
                      (this._values[e] = void 0);
                  else if (n && r) {
                    var i = n.value;
                    (n.value = r.value), (r.value = i);
                  }
                }),
                i
              );
            },
            { isClass: !0 }
          ),
          pf = Lu(function (e) {
            return new e(1).exp();
          }, gf),
          hf = Lu(function (e) {
            return new e(1).plus(new e(5).sqrt()).div(2);
          }, gf),
          df = Lu(function (e) {
            return e.acos(-1);
          }, gf),
          mf = Lu(function (e) {
            return df(e).times(2);
          }, gf);
        function gf(e) {
          return e[0].precision;
        }
        function yf(e) {
          return (yf =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function vf() {
          return (vf =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        function bf(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function xf(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? bf(Object(n), !0).forEach(function (t) {
                  wf(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : bf(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function wf(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var Nf = Cr(
            "Unit",
            [
              "?on",
              "config",
              "addScalar",
              "subtract",
              "multiplyScalar",
              "divideScalar",
              "pow",
              "abs",
              "fix",
              "round",
              "equal",
              "isNumeric",
              "format",
              "number",
              "Complex",
              "BigNumber",
              "Fraction",
            ],
            function (e) {
              var t,
                n,
                r,
                i = e.on,
                a = e.config,
                o = e.addScalar,
                s = e.subtract,
                u = e.multiplyScalar,
                c = e.divideScalar,
                l = e.pow,
                f = e.abs,
                p = e.fix,
                h = e.round,
                d = e.equal,
                m = e.isNumeric,
                g = e.format,
                y = e.number,
                v = e.Complex,
                b = e.BigNumber,
                x = e.Fraction,
                w = y;
              function N(e, t) {
                if (!(this instanceof N))
                  throw new Error(
                    "Constructor must be called with the new operator"
                  );
                if (null != e && !m(e) && !Wt(e))
                  throw new TypeError(
                    "First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined"
                  );
                if (void 0 !== t && ("string" != typeof t || "" === t))
                  throw new TypeError(
                    "Second parameter in Unit constructor must be a string"
                  );
                if (void 0 !== t) {
                  var n = N.parse(t);
                  (this.units = n.units), (this.dimensions = n.dimensions);
                } else {
                  (this.units = [{ unit: j, prefix: I.NONE, power: 0 }]),
                    (this.dimensions = []);
                  for (var r = 0; r < P.length; r++) this.dimensions[r] = 0;
                }
                (this.value = null != e ? this._normalize(e) : null),
                  (this.fixPrefix = !1),
                  (this.skipAutomaticSimplification = !0);
              }
              function E() {
                for (; " " === r || "\t" === r; ) S();
              }
              function M(e) {
                return e >= "0" && e <= "9";
              }
              function S() {
                n++, (r = t.charAt(n));
              }
              function _(e) {
                (n = e), (r = t.charAt(n));
              }
              function k() {
                var e = "",
                  t = n;
                if (
                  ("+" === r ? S() : "-" === r && ((e += r), S()),
                  !(function (e) {
                    return (e >= "0" && e <= "9") || "." === e;
                  })(r))
                )
                  return _(t), null;
                if ("." === r) {
                  if (((e += r), S(), !M(r))) return _(t), null;
                } else {
                  for (; M(r); ) (e += r), S();
                  "." === r && ((e += r), S());
                }
                for (; M(r); ) (e += r), S();
                if ("E" === r || "e" === r) {
                  var i = "",
                    a = n;
                  if (
                    ((i += r),
                    S(),
                    ("+" !== r && "-" !== r) || ((i += r), S()),
                    !M(r))
                  )
                    return _(a), e;
                  for (e += i; M(r); ) (e += r), S();
                }
                return e;
              }
              function O() {
                for (
                  var e = "", i = t.charCodeAt(n);
                  (i >= 48 && i <= 57) ||
                  (i >= 65 && i <= 90) ||
                  (i >= 97 && i <= 122);

                )
                  (e += r), S(), (i = t.charCodeAt(n));
                return (
                  ((((i = e.charCodeAt(0)) >= 65 && i <= 90) ||
                    (i >= 97 && i <= 122)) &&
                    e) ||
                  null
                );
              }
              function A(e) {
                return r === e ? (S(), e) : null;
              }
              function C(e) {
                if (Bn(R, e)) {
                  var t = R[e];
                  return { unit: t, prefix: t.prefixes[""] };
                }
                for (var n in R)
                  if (Bn(R, n) && sr(e, n)) {
                    var r = R[n],
                      i = e.length - n.length,
                      a = e.substring(0, i),
                      o = Bn(r.prefixes, a) ? r.prefixes[a] : void 0;
                    if (void 0 !== o) return { unit: r, prefix: o };
                  }
                return null;
              }
              function T(e) {
                return e.equalBase(B.NONE) && null !== e.value && !a.predictable
                  ? e.value
                  : e;
              }
              (N.prototype.type = "Unit"),
                (N.prototype.isUnit = !0),
                (N.parse = function (e, i) {
                  if (
                    ((i = i || {}),
                    (n = -1),
                    (r = ""),
                    "string" != typeof (t = e))
                  )
                    throw new TypeError(
                      "Invalid argument in Unit.parse, string expected"
                    );
                  var o = new N();
                  o.units = [];
                  var s = 1,
                    u = !1;
                  S(), E();
                  var c = k(),
                    l = null;
                  if (c) {
                    if ("BigNumber" === a.number) l = new b(c);
                    else if ("Fraction" === a.number)
                      try {
                        l = new x(c);
                      } catch (e) {
                        l = parseFloat(c);
                      }
                    else l = parseFloat(c);
                    E(),
                      A("*")
                        ? ((s = 1), (u = !0))
                        : A("/") && ((s = -1), (u = !0));
                  }
                  for (var f = [], p = 1; ; ) {
                    for (E(); "(" === r; )
                      f.push(s), (p *= s), (s = 1), S(), E();
                    var h;
                    if (!r) break;
                    var d = r;
                    if (null === (h = O()))
                      throw new SyntaxError(
                        'Unexpected "' +
                          d +
                          '" in "' +
                          t +
                          '" at index ' +
                          n.toString()
                      );
                    var m = C(h);
                    if (null === m)
                      throw new SyntaxError('Unit "' + h + '" not found.');
                    var g = s * p;
                    if ((E(), A("^"))) {
                      E();
                      var y = k();
                      if (null === y)
                        throw new SyntaxError(
                          'In "' +
                            e +
                            '", "^" must be followed by a floating-point number'
                        );
                      g *= y;
                    }
                    o.units.push({ unit: m.unit, prefix: m.prefix, power: g });
                    for (var v = 0; v < P.length; v++)
                      o.dimensions[v] += (m.unit.dimensions[v] || 0) * g;
                    for (E(); ")" === r; ) {
                      if (0 === f.length)
                        throw new SyntaxError(
                          'Unmatched ")" in "' +
                            t +
                            '" at index ' +
                            n.toString()
                        );
                      (p /= f.pop()), S(), E();
                    }
                    if (
                      ((u = !1),
                      A("*")
                        ? ((s = 1), (u = !0))
                        : A("/")
                        ? ((s = -1), (u = !0))
                        : (s = 1),
                      m.unit.base)
                    ) {
                      var w = m.unit.base.key;
                      q.auto[w] = { unit: m.unit, prefix: m.prefix };
                    }
                  }
                  if ((E(), r))
                    throw new SyntaxError('Could not parse: "' + e + '"');
                  if (u)
                    throw new SyntaxError('Trailing characters: "' + e + '"');
                  if (0 !== f.length)
                    throw new SyntaxError('Unmatched "(" in "' + t + '"');
                  if (0 === o.units.length && !i.allowNoUnits)
                    throw new SyntaxError('"' + e + '" contains no units');
                  return (o.value = void 0 !== l ? o._normalize(l) : null), o;
                }),
                (N.prototype.clone = function () {
                  var e = new N();
                  (e.fixPrefix = this.fixPrefix),
                    (e.skipAutomaticSimplification = this.skipAutomaticSimplification),
                    (e.value = Tn(this.value)),
                    (e.dimensions = this.dimensions.slice(0)),
                    (e.units = []);
                  for (var t = 0; t < this.units.length; t++)
                    for (var n in ((e.units[t] = {}), this.units[t]))
                      Bn(this.units[t], n) &&
                        (e.units[t][n] = this.units[t][n]);
                  return e;
                }),
                (N.prototype._isDerived = function () {
                  return (
                    0 !== this.units.length &&
                    (this.units.length > 1 ||
                      Math.abs(this.units[0].power - 1) > 1e-15)
                  );
                }),
                (N.prototype._normalize = function (e) {
                  var t, n, r, i, a;
                  if (null == e || 0 === this.units.length) return e;
                  if (this._isDerived()) {
                    var s = e;
                    a = N._getNumberConverter(An(e));
                    for (var c = 0; c < this.units.length; c++)
                      (t = a(this.units[c].unit.value)),
                        (i = a(this.units[c].prefix.value)),
                        (r = a(this.units[c].power)),
                        (s = u(s, l(u(t, i), r)));
                    return s;
                  }
                  return (
                    (t = (a = N._getNumberConverter(An(e)))(
                      this.units[0].unit.value
                    )),
                    (n = a(this.units[0].unit.offset)),
                    (i = a(this.units[0].prefix.value)),
                    u(o(e, n), u(t, i))
                  );
                }),
                (N.prototype._denormalize = function (e, t) {
                  var n, r, i, a, o;
                  if (null == e || 0 === this.units.length) return e;
                  if (this._isDerived()) {
                    var f = e;
                    o = N._getNumberConverter(An(e));
                    for (var p = 0; p < this.units.length; p++)
                      (n = o(this.units[p].unit.value)),
                        (a = o(this.units[p].prefix.value)),
                        (i = o(this.units[p].power)),
                        (f = c(f, l(u(n, a), i)));
                    return f;
                  }
                  return (
                    (n = (o = N._getNumberConverter(An(e)))(
                      this.units[0].unit.value
                    )),
                    (a = o(this.units[0].prefix.value)),
                    (r = o(this.units[0].unit.offset)),
                    s(c(c(e, n), null == t ? a : t), r)
                  );
                }),
                (N.isValuelessUnit = function (e) {
                  return null !== C(e);
                }),
                (N.prototype.hasBase = function (e) {
                  if (("string" == typeof e && (e = B[e]), !e)) return !1;
                  for (var t = 0; t < P.length; t++)
                    if (
                      Math.abs(
                        (this.dimensions[t] || 0) - (e.dimensions[t] || 0)
                      ) > 1e-12
                    )
                      return !1;
                  return !0;
                }),
                (N.prototype.equalBase = function (e) {
                  for (var t = 0; t < P.length; t++)
                    if (
                      Math.abs(
                        (this.dimensions[t] || 0) - (e.dimensions[t] || 0)
                      ) > 1e-12
                    )
                      return !1;
                  return !0;
                }),
                (N.prototype.equals = function (e) {
                  return this.equalBase(e) && d(this.value, e.value);
                }),
                (N.prototype.multiply = function (e) {
                  for (var t = this.clone(), n = 0; n < P.length; n++)
                    t.dimensions[n] =
                      (this.dimensions[n] || 0) + (e.dimensions[n] || 0);
                  for (var r = 0; r < e.units.length; r++) {
                    var i = xf({}, e.units[r]);
                    t.units.push(i);
                  }
                  if (null !== this.value || null !== e.value) {
                    var a =
                        null === this.value ? this._normalize(1) : this.value,
                      o = null === e.value ? e._normalize(1) : e.value;
                    t.value = u(a, o);
                  } else t.value = null;
                  return (t.skipAutomaticSimplification = !1), T(t);
                }),
                (N.prototype.divide = function (e) {
                  for (var t = this.clone(), n = 0; n < P.length; n++)
                    t.dimensions[n] =
                      (this.dimensions[n] || 0) - (e.dimensions[n] || 0);
                  for (var r = 0; r < e.units.length; r++) {
                    var i = xf(
                      xf({}, e.units[r]),
                      {},
                      { power: -e.units[r].power }
                    );
                    t.units.push(i);
                  }
                  if (null !== this.value || null !== e.value) {
                    var a =
                        null === this.value ? this._normalize(1) : this.value,
                      o = null === e.value ? e._normalize(1) : e.value;
                    t.value = c(a, o);
                  } else t.value = null;
                  return (t.skipAutomaticSimplification = !1), T(t);
                }),
                (N.prototype.pow = function (e) {
                  for (var t = this.clone(), n = 0; n < P.length; n++)
                    t.dimensions[n] = (this.dimensions[n] || 0) * e;
                  for (var r = 0; r < t.units.length; r++)
                    t.units[r].power *= e;
                  return (
                    null !== t.value
                      ? (t.value = l(t.value, e))
                      : (t.value = null),
                    (t.skipAutomaticSimplification = !1),
                    T(t)
                  );
                }),
                (N.prototype.abs = function () {
                  var e = this.clone();
                  for (var t in ((e.value =
                    null !== e.value ? f(e.value) : null),
                  e.units))
                    ("VA" !== e.units[t].unit.name &&
                      "VAR" !== e.units[t].unit.name) ||
                      (e.units[t].unit = R.W);
                  return e;
                }),
                (N.prototype.to = function (e) {
                  var t,
                    n = null === this.value ? this._normalize(1) : this.value;
                  if ("string" == typeof e) {
                    if (((t = N.parse(e)), !this.equalBase(t)))
                      throw new Error(
                        "Units do not match ('"
                          .concat(t.toString(), "' != '")
                          .concat(this.toString(), "')")
                      );
                    if (null !== t.value)
                      throw new Error("Cannot convert to a unit with a value");
                    return (
                      (t.value = Tn(n)),
                      (t.fixPrefix = !0),
                      (t.skipAutomaticSimplification = !0),
                      t
                    );
                  }
                  if (Jt(e)) {
                    if (!this.equalBase(e))
                      throw new Error(
                        "Units do not match ('"
                          .concat(e.toString(), "' != '")
                          .concat(this.toString(), "')")
                      );
                    if (null !== e.value)
                      throw new Error("Cannot convert to a unit with a value");
                    return (
                      ((t = e.clone()).value = Tn(n)),
                      (t.fixPrefix = !0),
                      (t.skipAutomaticSimplification = !0),
                      t
                    );
                  }
                  throw new Error("String or Unit expected as parameter");
                }),
                (N.prototype.toNumber = function (e) {
                  return w(this.toNumeric(e));
                }),
                (N.prototype.toNumeric = function (e) {
                  var t;
                  return (t = e ? this.to(e) : this.clone())._isDerived() ||
                    0 === t.units.length
                    ? t._denormalize(t.value)
                    : t._denormalize(t.value, t.units[0].prefix.value);
                }),
                (N.prototype.toString = function () {
                  return this.format();
                }),
                (N.prototype.toJSON = function () {
                  return {
                    mathjs: "Unit",
                    value: this._denormalize(this.value),
                    unit: this.formatUnits(),
                    fixPrefix: this.fixPrefix,
                  };
                }),
                (N.fromJSON = function (e) {
                  var t = new N(e.value, e.unit);
                  return (t.fixPrefix = e.fixPrefix || !1), t;
                }),
                (N.prototype.valueOf = N.prototype.toString),
                (N.prototype.simplify = function () {
                  var e,
                    t,
                    n = this.clone(),
                    r = [];
                  for (var i in F)
                    if (Bn(F, i) && n.hasBase(B[i])) {
                      e = i;
                      break;
                    }
                  if ("NONE" === e) n.units = [];
                  else if ((e && Bn(F, e) && (t = F[e]), t))
                    n.units = [{ unit: t.unit, prefix: t.prefix, power: 1 }];
                  else {
                    for (var a = !1, o = 0; o < P.length; o++) {
                      var s = P[o];
                      Math.abs(n.dimensions[o] || 0) > 1e-12 &&
                        (Bn(F, s)
                          ? r.push({
                              unit: F[s].unit,
                              prefix: F[s].prefix,
                              power: n.dimensions[o] || 0,
                            })
                          : (a = !0));
                    }
                    r.length < n.units.length && !a && (n.units = r);
                  }
                  return n;
                }),
                (N.prototype.toSI = function () {
                  for (var e = this.clone(), t = [], n = 0; n < P.length; n++) {
                    var r = P[n];
                    if (Math.abs(e.dimensions[n] || 0) > 1e-12) {
                      if (!Bn(q.si, r))
                        throw new Error(
                          "Cannot express custom unit " + r + " in SI units"
                        );
                      t.push({
                        unit: q.si[r].unit,
                        prefix: q.si[r].prefix,
                        power: e.dimensions[n] || 0,
                      });
                    }
                  }
                  return (
                    (e.units = t),
                    (e.fixPrefix = !0),
                    (e.skipAutomaticSimplification = !0),
                    e
                  );
                }),
                (N.prototype.formatUnits = function () {
                  for (
                    var e = "", t = "", n = 0, r = 0, i = 0;
                    i < this.units.length;
                    i++
                  )
                    this.units[i].power > 0
                      ? (n++,
                        (e +=
                          " " +
                          this.units[i].prefix.name +
                          this.units[i].unit.name),
                        Math.abs(this.units[i].power - 1) > 1e-15 &&
                          (e += "^" + this.units[i].power))
                      : this.units[i].power < 0 && r++;
                  if (r > 0)
                    for (var a = 0; a < this.units.length; a++)
                      this.units[a].power < 0 &&
                        (n > 0
                          ? ((t +=
                              " " +
                              this.units[a].prefix.name +
                              this.units[a].unit.name),
                            Math.abs(this.units[a].power + 1) > 1e-15 &&
                              (t += "^" + -this.units[a].power))
                          : ((t +=
                              " " +
                              this.units[a].prefix.name +
                              this.units[a].unit.name),
                            (t += "^" + this.units[a].power)));
                  (e = e.substr(1)),
                    (t = t.substr(1)),
                    n > 1 && r > 0 && (e = "(" + e + ")"),
                    r > 1 && n > 0 && (t = "(" + t + ")");
                  var o = e;
                  return n > 0 && r > 0 && (o += " / "), o + t;
                }),
                (N.prototype.format = function (e) {
                  var t =
                      this.skipAutomaticSimplification || null === this.value
                        ? this.clone()
                        : this.simplify(),
                    n = !1;
                  for (var r in (void 0 !== t.value &&
                    null !== t.value &&
                    Wt(t.value) &&
                    (n = Math.abs(t.value.re) < 1e-14),
                  t.units))
                    Bn(t.units, r) &&
                      t.units[r].unit &&
                      ("VA" === t.units[r].unit.name && n
                        ? (t.units[r].unit = R.VAR)
                        : "VAR" !== t.units[r].unit.name ||
                          n ||
                          (t.units[r].unit = R.VA));
                  1 !== t.units.length ||
                    t.fixPrefix ||
                    (Math.abs(t.units[0].power - Math.round(t.units[0].power)) <
                      1e-14 &&
                      (t.units[0].prefix = t._bestPrefix()));
                  var i = t._denormalize(t.value),
                    a = null !== t.value ? g(i, e || {}) : "",
                    o = t.formatUnits();
                  return (
                    t.value && Wt(t.value) && (a = "(" + a + ")"),
                    o.length > 0 && a.length > 0 && (a += " "),
                    a + o
                  );
                }),
                (N.prototype._bestPrefix = function () {
                  if (1 !== this.units.length)
                    throw new Error(
                      "Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!"
                    );
                  if (
                    Math.abs(
                      this.units[0].power - Math.round(this.units[0].power)
                    ) >= 1e-14
                  )
                    throw new Error(
                      "Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!"
                    );
                  var e = null !== this.value ? f(this.value) : 0,
                    t = f(this.units[0].unit.value),
                    n = this.units[0].prefix;
                  if (0 === e) return n;
                  var r = this.units[0].power,
                    i =
                      Math.log(e / Math.pow(n.value * t, r)) / Math.LN10 - 1.2;
                  if (i > -2.200001 && i < 1.800001) return n;
                  i = Math.abs(i);
                  var a = this.units[0].unit.prefixes;
                  for (var o in a)
                    if (Bn(a, o)) {
                      var s = a[o];
                      if (s.scientific) {
                        var u = Math.abs(
                          Math.log(e / Math.pow(s.value * t, r)) / Math.LN10 -
                            1.2
                        );
                        (u < i || (u === i && s.name.length < n.name.length)) &&
                          ((n = s), (i = u));
                      }
                    }
                  return n;
                }),
                (N.prototype.splitUnit = function (e) {
                  for (
                    var t = this.clone(), n = [], r = 0;
                    r < e.length && ((t = t.to(e[r])), r !== e.length - 1);
                    r++
                  ) {
                    var i = t.toNumeric(),
                      a = h(i),
                      u = new N(
                        d(a, i) ? a : p(t.toNumeric()),
                        e[r].toString()
                      );
                    n.push(u), (t = s(t, u));
                  }
                  for (var c = 0, l = 0; l < n.length; l++)
                    c = o(c, n[l].value);
                  return d(c, this.value) && (t.value = 0), n.push(t), n;
                });
              var I = {
                NONE: { "": { name: "", value: 1, scientific: !0 } },
                SHORT: {
                  "": { name: "", value: 1, scientific: !0 },
                  da: { name: "da", value: 10, scientific: !1 },
                  h: { name: "h", value: 100, scientific: !1 },
                  k: { name: "k", value: 1e3, scientific: !0 },
                  M: { name: "M", value: 1e6, scientific: !0 },
                  G: { name: "G", value: 1e9, scientific: !0 },
                  T: { name: "T", value: 1e12, scientific: !0 },
                  P: { name: "P", value: 1e15, scientific: !0 },
                  E: { name: "E", value: 1e18, scientific: !0 },
                  Z: { name: "Z", value: 1e21, scientific: !0 },
                  Y: { name: "Y", value: 1e24, scientific: !0 },
                  d: { name: "d", value: 0.1, scientific: !1 },
                  c: { name: "c", value: 0.01, scientific: !1 },
                  m: { name: "m", value: 0.001, scientific: !0 },
                  u: { name: "u", value: 1e-6, scientific: !0 },
                  n: { name: "n", value: 1e-9, scientific: !0 },
                  p: { name: "p", value: 1e-12, scientific: !0 },
                  f: { name: "f", value: 1e-15, scientific: !0 },
                  a: { name: "a", value: 1e-18, scientific: !0 },
                  z: { name: "z", value: 1e-21, scientific: !0 },
                  y: { name: "y", value: 1e-24, scientific: !0 },
                },
                LONG: {
                  "": { name: "", value: 1, scientific: !0 },
                  deca: { name: "deca", value: 10, scientific: !1 },
                  hecto: { name: "hecto", value: 100, scientific: !1 },
                  kilo: { name: "kilo", value: 1e3, scientific: !0 },
                  mega: { name: "mega", value: 1e6, scientific: !0 },
                  giga: { name: "giga", value: 1e9, scientific: !0 },
                  tera: { name: "tera", value: 1e12, scientific: !0 },
                  peta: { name: "peta", value: 1e15, scientific: !0 },
                  exa: { name: "exa", value: 1e18, scientific: !0 },
                  zetta: { name: "zetta", value: 1e21, scientific: !0 },
                  yotta: { name: "yotta", value: 1e24, scientific: !0 },
                  deci: { name: "deci", value: 0.1, scientific: !1 },
                  centi: { name: "centi", value: 0.01, scientific: !1 },
                  milli: { name: "milli", value: 0.001, scientific: !0 },
                  micro: { name: "micro", value: 1e-6, scientific: !0 },
                  nano: { name: "nano", value: 1e-9, scientific: !0 },
                  pico: { name: "pico", value: 1e-12, scientific: !0 },
                  femto: { name: "femto", value: 1e-15, scientific: !0 },
                  atto: { name: "atto", value: 1e-18, scientific: !0 },
                  zepto: { name: "zepto", value: 1e-21, scientific: !0 },
                  yocto: { name: "yocto", value: 1e-24, scientific: !0 },
                },
                SQUARED: {
                  "": { name: "", value: 1, scientific: !0 },
                  da: { name: "da", value: 100, scientific: !1 },
                  h: { name: "h", value: 1e4, scientific: !1 },
                  k: { name: "k", value: 1e6, scientific: !0 },
                  M: { name: "M", value: 1e12, scientific: !0 },
                  G: { name: "G", value: 1e18, scientific: !0 },
                  T: { name: "T", value: 1e24, scientific: !0 },
                  P: { name: "P", value: 1e30, scientific: !0 },
                  E: { name: "E", value: 1e36, scientific: !0 },
                  Z: { name: "Z", value: 1e42, scientific: !0 },
                  Y: { name: "Y", value: 1e48, scientific: !0 },
                  d: { name: "d", value: 0.01, scientific: !1 },
                  c: { name: "c", value: 1e-4, scientific: !1 },
                  m: { name: "m", value: 1e-6, scientific: !0 },
                  u: { name: "u", value: 1e-12, scientific: !0 },
                  n: { name: "n", value: 1e-18, scientific: !0 },
                  p: { name: "p", value: 1e-24, scientific: !0 },
                  f: { name: "f", value: 1e-30, scientific: !0 },
                  a: { name: "a", value: 1e-36, scientific: !0 },
                  z: { name: "z", value: 1e-42, scientific: !0 },
                  y: { name: "y", value: 1e-48, scientific: !0 },
                },
                CUBIC: {
                  "": { name: "", value: 1, scientific: !0 },
                  da: { name: "da", value: 1e3, scientific: !1 },
                  h: { name: "h", value: 1e6, scientific: !1 },
                  k: { name: "k", value: 1e9, scientific: !0 },
                  M: { name: "M", value: 1e18, scientific: !0 },
                  G: { name: "G", value: 1e27, scientific: !0 },
                  T: { name: "T", value: 1e36, scientific: !0 },
                  P: { name: "P", value: 1e45, scientific: !0 },
                  E: { name: "E", value: 1e54, scientific: !0 },
                  Z: { name: "Z", value: 1e63, scientific: !0 },
                  Y: { name: "Y", value: 1e72, scientific: !0 },
                  d: { name: "d", value: 0.001, scientific: !1 },
                  c: { name: "c", value: 1e-6, scientific: !1 },
                  m: { name: "m", value: 1e-9, scientific: !0 },
                  u: { name: "u", value: 1e-18, scientific: !0 },
                  n: { name: "n", value: 1e-27, scientific: !0 },
                  p: { name: "p", value: 1e-36, scientific: !0 },
                  f: { name: "f", value: 1e-45, scientific: !0 },
                  a: { name: "a", value: 1e-54, scientific: !0 },
                  z: { name: "z", value: 1e-63, scientific: !0 },
                  y: { name: "y", value: 1e-72, scientific: !0 },
                },
                BINARY_SHORT_SI: {
                  "": { name: "", value: 1, scientific: !0 },
                  k: { name: "k", value: 1e3, scientific: !0 },
                  M: { name: "M", value: 1e6, scientific: !0 },
                  G: { name: "G", value: 1e9, scientific: !0 },
                  T: { name: "T", value: 1e12, scientific: !0 },
                  P: { name: "P", value: 1e15, scientific: !0 },
                  E: { name: "E", value: 1e18, scientific: !0 },
                  Z: { name: "Z", value: 1e21, scientific: !0 },
                  Y: { name: "Y", value: 1e24, scientific: !0 },
                },
                BINARY_SHORT_IEC: {
                  "": { name: "", value: 1, scientific: !0 },
                  Ki: { name: "Ki", value: 1024, scientific: !0 },
                  Mi: { name: "Mi", value: Math.pow(1024, 2), scientific: !0 },
                  Gi: { name: "Gi", value: Math.pow(1024, 3), scientific: !0 },
                  Ti: { name: "Ti", value: Math.pow(1024, 4), scientific: !0 },
                  Pi: { name: "Pi", value: Math.pow(1024, 5), scientific: !0 },
                  Ei: { name: "Ei", value: Math.pow(1024, 6), scientific: !0 },
                  Zi: { name: "Zi", value: Math.pow(1024, 7), scientific: !0 },
                  Yi: { name: "Yi", value: Math.pow(1024, 8), scientific: !0 },
                },
                BINARY_LONG_SI: {
                  "": { name: "", value: 1, scientific: !0 },
                  kilo: { name: "kilo", value: 1e3, scientific: !0 },
                  mega: { name: "mega", value: 1e6, scientific: !0 },
                  giga: { name: "giga", value: 1e9, scientific: !0 },
                  tera: { name: "tera", value: 1e12, scientific: !0 },
                  peta: { name: "peta", value: 1e15, scientific: !0 },
                  exa: { name: "exa", value: 1e18, scientific: !0 },
                  zetta: { name: "zetta", value: 1e21, scientific: !0 },
                  yotta: { name: "yotta", value: 1e24, scientific: !0 },
                },
                BINARY_LONG_IEC: {
                  "": { name: "", value: 1, scientific: !0 },
                  kibi: { name: "kibi", value: 1024, scientific: !0 },
                  mebi: {
                    name: "mebi",
                    value: Math.pow(1024, 2),
                    scientific: !0,
                  },
                  gibi: {
                    name: "gibi",
                    value: Math.pow(1024, 3),
                    scientific: !0,
                  },
                  tebi: {
                    name: "tebi",
                    value: Math.pow(1024, 4),
                    scientific: !0,
                  },
                  pebi: {
                    name: "pebi",
                    value: Math.pow(1024, 5),
                    scientific: !0,
                  },
                  exi: {
                    name: "exi",
                    value: Math.pow(1024, 6),
                    scientific: !0,
                  },
                  zebi: {
                    name: "zebi",
                    value: Math.pow(1024, 7),
                    scientific: !0,
                  },
                  yobi: {
                    name: "yobi",
                    value: Math.pow(1024, 8),
                    scientific: !0,
                  },
                },
                BTU: {
                  "": { name: "", value: 1, scientific: !0 },
                  MM: { name: "MM", value: 1e6, scientific: !0 },
                },
              };
              (I.SHORTLONG = vf({}, I.SHORT, I.LONG)),
                (I.BINARY_SHORT = vf(
                  {},
                  I.BINARY_SHORT_SI,
                  I.BINARY_SHORT_IEC
                )),
                (I.BINARY_LONG = vf({}, I.BINARY_LONG_SI, I.BINARY_LONG_IEC));
              var P = [
                  "MASS",
                  "LENGTH",
                  "TIME",
                  "CURRENT",
                  "TEMPERATURE",
                  "LUMINOUS_INTENSITY",
                  "AMOUNT_OF_SUBSTANCE",
                  "ANGLE",
                  "BIT",
                ],
                B = {
                  NONE: { dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0] },
                  MASS: { dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0] },
                  LENGTH: { dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0] },
                  TIME: { dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0] },
                  CURRENT: { dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0] },
                  TEMPERATURE: { dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0] },
                  LUMINOUS_INTENSITY: {
                    dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0],
                  },
                  AMOUNT_OF_SUBSTANCE: {
                    dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0],
                  },
                  FORCE: { dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0] },
                  SURFACE: { dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0] },
                  VOLUME: { dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0] },
                  ENERGY: { dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0] },
                  POWER: { dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0] },
                  PRESSURE: { dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0] },
                  ELECTRIC_CHARGE: { dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0] },
                  ELECTRIC_CAPACITANCE: {
                    dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0],
                  },
                  ELECTRIC_POTENTIAL: {
                    dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0],
                  },
                  ELECTRIC_RESISTANCE: {
                    dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0],
                  },
                  ELECTRIC_INDUCTANCE: {
                    dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0],
                  },
                  ELECTRIC_CONDUCTANCE: {
                    dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0],
                  },
                  MAGNETIC_FLUX: { dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0] },
                  MAGNETIC_FLUX_DENSITY: {
                    dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0],
                  },
                  FREQUENCY: { dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0] },
                  ANGLE: { dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0] },
                  BIT: { dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1] },
                };
              for (var D in B) Bn(B, D) && (B[D].key = D);
              var j = {
                  name: "",
                  base: {},
                  value: 1,
                  offset: 0,
                  dimensions: P.map(function (e) {
                    return 0;
                  }),
                },
                R = {
                  meter: {
                    name: "meter",
                    base: B.LENGTH,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  inch: {
                    name: "inch",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.0254,
                    offset: 0,
                  },
                  foot: {
                    name: "foot",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.3048,
                    offset: 0,
                  },
                  yard: {
                    name: "yard",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.9144,
                    offset: 0,
                  },
                  mile: {
                    name: "mile",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 1609.344,
                    offset: 0,
                  },
                  link: {
                    name: "link",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.201168,
                    offset: 0,
                  },
                  rod: {
                    name: "rod",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 5.0292,
                    offset: 0,
                  },
                  chain: {
                    name: "chain",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 20.1168,
                    offset: 0,
                  },
                  angstrom: {
                    name: "angstrom",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 1e-10,
                    offset: 0,
                  },
                  m: {
                    name: "m",
                    base: B.LENGTH,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  in: {
                    name: "in",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.0254,
                    offset: 0,
                  },
                  ft: {
                    name: "ft",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.3048,
                    offset: 0,
                  },
                  yd: {
                    name: "yd",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.9144,
                    offset: 0,
                  },
                  mi: {
                    name: "mi",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 1609.344,
                    offset: 0,
                  },
                  li: {
                    name: "li",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 0.201168,
                    offset: 0,
                  },
                  rd: {
                    name: "rd",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 5.02921,
                    offset: 0,
                  },
                  ch: {
                    name: "ch",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 20.1168,
                    offset: 0,
                  },
                  mil: {
                    name: "mil",
                    base: B.LENGTH,
                    prefixes: I.NONE,
                    value: 254e-7,
                    offset: 0,
                  },
                  m2: {
                    name: "m2",
                    base: B.SURFACE,
                    prefixes: I.SQUARED,
                    value: 1,
                    offset: 0,
                  },
                  sqin: {
                    name: "sqin",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 64516e-8,
                    offset: 0,
                  },
                  sqft: {
                    name: "sqft",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 0.09290304,
                    offset: 0,
                  },
                  sqyd: {
                    name: "sqyd",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 0.83612736,
                    offset: 0,
                  },
                  sqmi: {
                    name: "sqmi",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 2589988.110336,
                    offset: 0,
                  },
                  sqrd: {
                    name: "sqrd",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 25.29295,
                    offset: 0,
                  },
                  sqch: {
                    name: "sqch",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 404.6873,
                    offset: 0,
                  },
                  sqmil: {
                    name: "sqmil",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 6.4516e-10,
                    offset: 0,
                  },
                  acre: {
                    name: "acre",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 4046.86,
                    offset: 0,
                  },
                  hectare: {
                    name: "hectare",
                    base: B.SURFACE,
                    prefixes: I.NONE,
                    value: 1e4,
                    offset: 0,
                  },
                  m3: {
                    name: "m3",
                    base: B.VOLUME,
                    prefixes: I.CUBIC,
                    value: 1,
                    offset: 0,
                  },
                  L: {
                    name: "L",
                    base: B.VOLUME,
                    prefixes: I.SHORT,
                    value: 0.001,
                    offset: 0,
                  },
                  l: {
                    name: "l",
                    base: B.VOLUME,
                    prefixes: I.SHORT,
                    value: 0.001,
                    offset: 0,
                  },
                  litre: {
                    name: "litre",
                    base: B.VOLUME,
                    prefixes: I.LONG,
                    value: 0.001,
                    offset: 0,
                  },
                  cuin: {
                    name: "cuin",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 16387064e-12,
                    offset: 0,
                  },
                  cuft: {
                    name: "cuft",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.028316846592,
                    offset: 0,
                  },
                  cuyd: {
                    name: "cuyd",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.764554857984,
                    offset: 0,
                  },
                  teaspoon: {
                    name: "teaspoon",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 5e-6,
                    offset: 0,
                  },
                  tablespoon: {
                    name: "tablespoon",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 15e-6,
                    offset: 0,
                  },
                  drop: {
                    name: "drop",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 5e-8,
                    offset: 0,
                  },
                  gtt: {
                    name: "gtt",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 5e-8,
                    offset: 0,
                  },
                  minim: {
                    name: "minim",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 6.161152e-8,
                    offset: 0,
                  },
                  fluiddram: {
                    name: "fluiddram",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 36966911e-13,
                    offset: 0,
                  },
                  fluidounce: {
                    name: "fluidounce",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 2957353e-11,
                    offset: 0,
                  },
                  gill: {
                    name: "gill",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0001182941,
                    offset: 0,
                  },
                  cc: {
                    name: "cc",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 1e-6,
                    offset: 0,
                  },
                  cup: {
                    name: "cup",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0002365882,
                    offset: 0,
                  },
                  pint: {
                    name: "pint",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0004731765,
                    offset: 0,
                  },
                  quart: {
                    name: "quart",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0009463529,
                    offset: 0,
                  },
                  gallon: {
                    name: "gallon",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.003785412,
                    offset: 0,
                  },
                  beerbarrel: {
                    name: "beerbarrel",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.1173478,
                    offset: 0,
                  },
                  oilbarrel: {
                    name: "oilbarrel",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.1589873,
                    offset: 0,
                  },
                  hogshead: {
                    name: "hogshead",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.238481,
                    offset: 0,
                  },
                  fldr: {
                    name: "fldr",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 36966911e-13,
                    offset: 0,
                  },
                  floz: {
                    name: "floz",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 2957353e-11,
                    offset: 0,
                  },
                  gi: {
                    name: "gi",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0001182941,
                    offset: 0,
                  },
                  cp: {
                    name: "cp",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0002365882,
                    offset: 0,
                  },
                  pt: {
                    name: "pt",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0004731765,
                    offset: 0,
                  },
                  qt: {
                    name: "qt",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.0009463529,
                    offset: 0,
                  },
                  gal: {
                    name: "gal",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.003785412,
                    offset: 0,
                  },
                  bbl: {
                    name: "bbl",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.1173478,
                    offset: 0,
                  },
                  obl: {
                    name: "obl",
                    base: B.VOLUME,
                    prefixes: I.NONE,
                    value: 0.1589873,
                    offset: 0,
                  },
                  g: {
                    name: "g",
                    base: B.MASS,
                    prefixes: I.SHORT,
                    value: 0.001,
                    offset: 0,
                  },
                  gram: {
                    name: "gram",
                    base: B.MASS,
                    prefixes: I.LONG,
                    value: 0.001,
                    offset: 0,
                  },
                  ton: {
                    name: "ton",
                    base: B.MASS,
                    prefixes: I.SHORT,
                    value: 907.18474,
                    offset: 0,
                  },
                  t: {
                    name: "t",
                    base: B.MASS,
                    prefixes: I.SHORT,
                    value: 1e3,
                    offset: 0,
                  },
                  tonne: {
                    name: "tonne",
                    base: B.MASS,
                    prefixes: I.LONG,
                    value: 1e3,
                    offset: 0,
                  },
                  grain: {
                    name: "grain",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 6479891e-11,
                    offset: 0,
                  },
                  dram: {
                    name: "dram",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.0017718451953125,
                    offset: 0,
                  },
                  ounce: {
                    name: "ounce",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.028349523125,
                    offset: 0,
                  },
                  poundmass: {
                    name: "poundmass",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.45359237,
                    offset: 0,
                  },
                  hundredweight: {
                    name: "hundredweight",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 45.359237,
                    offset: 0,
                  },
                  stick: {
                    name: "stick",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.115,
                    offset: 0,
                  },
                  stone: {
                    name: "stone",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 6.35029318,
                    offset: 0,
                  },
                  gr: {
                    name: "gr",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 6479891e-11,
                    offset: 0,
                  },
                  dr: {
                    name: "dr",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.0017718451953125,
                    offset: 0,
                  },
                  oz: {
                    name: "oz",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.028349523125,
                    offset: 0,
                  },
                  lbm: {
                    name: "lbm",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 0.45359237,
                    offset: 0,
                  },
                  cwt: {
                    name: "cwt",
                    base: B.MASS,
                    prefixes: I.NONE,
                    value: 45.359237,
                    offset: 0,
                  },
                  s: {
                    name: "s",
                    base: B.TIME,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  min: {
                    name: "min",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 60,
                    offset: 0,
                  },
                  h: {
                    name: "h",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 3600,
                    offset: 0,
                  },
                  second: {
                    name: "second",
                    base: B.TIME,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  sec: {
                    name: "sec",
                    base: B.TIME,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  minute: {
                    name: "minute",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 60,
                    offset: 0,
                  },
                  hour: {
                    name: "hour",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 3600,
                    offset: 0,
                  },
                  day: {
                    name: "day",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 86400,
                    offset: 0,
                  },
                  week: {
                    name: "week",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 604800,
                    offset: 0,
                  },
                  month: {
                    name: "month",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 2629800,
                    offset: 0,
                  },
                  year: {
                    name: "year",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 31557600,
                    offset: 0,
                  },
                  decade: {
                    name: "decade",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 315576e3,
                    offset: 0,
                  },
                  century: {
                    name: "century",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 315576e4,
                    offset: 0,
                  },
                  millennium: {
                    name: "millennium",
                    base: B.TIME,
                    prefixes: I.NONE,
                    value: 315576e5,
                    offset: 0,
                  },
                  hertz: {
                    name: "Hertz",
                    base: B.FREQUENCY,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                    reciprocal: !0,
                  },
                  Hz: {
                    name: "Hz",
                    base: B.FREQUENCY,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                    reciprocal: !0,
                  },
                  rad: {
                    name: "rad",
                    base: B.ANGLE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  radian: {
                    name: "radian",
                    base: B.ANGLE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  deg: {
                    name: "deg",
                    base: B.ANGLE,
                    prefixes: I.SHORT,
                    value: null,
                    offset: 0,
                  },
                  degree: {
                    name: "degree",
                    base: B.ANGLE,
                    prefixes: I.LONG,
                    value: null,
                    offset: 0,
                  },
                  grad: {
                    name: "grad",
                    base: B.ANGLE,
                    prefixes: I.SHORT,
                    value: null,
                    offset: 0,
                  },
                  gradian: {
                    name: "gradian",
                    base: B.ANGLE,
                    prefixes: I.LONG,
                    value: null,
                    offset: 0,
                  },
                  cycle: {
                    name: "cycle",
                    base: B.ANGLE,
                    prefixes: I.NONE,
                    value: null,
                    offset: 0,
                  },
                  arcsec: {
                    name: "arcsec",
                    base: B.ANGLE,
                    prefixes: I.NONE,
                    value: null,
                    offset: 0,
                  },
                  arcmin: {
                    name: "arcmin",
                    base: B.ANGLE,
                    prefixes: I.NONE,
                    value: null,
                    offset: 0,
                  },
                  A: {
                    name: "A",
                    base: B.CURRENT,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  ampere: {
                    name: "ampere",
                    base: B.CURRENT,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  K: {
                    name: "K",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1,
                    offset: 0,
                  },
                  degC: {
                    name: "degC",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1,
                    offset: 273.15,
                  },
                  degF: {
                    name: "degF",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1 / 1.8,
                    offset: 459.67,
                  },
                  degR: {
                    name: "degR",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1 / 1.8,
                    offset: 0,
                  },
                  kelvin: {
                    name: "kelvin",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1,
                    offset: 0,
                  },
                  celsius: {
                    name: "celsius",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1,
                    offset: 273.15,
                  },
                  fahrenheit: {
                    name: "fahrenheit",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1 / 1.8,
                    offset: 459.67,
                  },
                  rankine: {
                    name: "rankine",
                    base: B.TEMPERATURE,
                    prefixes: I.NONE,
                    value: 1 / 1.8,
                    offset: 0,
                  },
                  mol: {
                    name: "mol",
                    base: B.AMOUNT_OF_SUBSTANCE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  mole: {
                    name: "mole",
                    base: B.AMOUNT_OF_SUBSTANCE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  cd: {
                    name: "cd",
                    base: B.LUMINOUS_INTENSITY,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  candela: {
                    name: "candela",
                    base: B.LUMINOUS_INTENSITY,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  N: {
                    name: "N",
                    base: B.FORCE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  newton: {
                    name: "newton",
                    base: B.FORCE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  dyn: {
                    name: "dyn",
                    base: B.FORCE,
                    prefixes: I.SHORT,
                    value: 1e-5,
                    offset: 0,
                  },
                  dyne: {
                    name: "dyne",
                    base: B.FORCE,
                    prefixes: I.LONG,
                    value: 1e-5,
                    offset: 0,
                  },
                  lbf: {
                    name: "lbf",
                    base: B.FORCE,
                    prefixes: I.NONE,
                    value: 4.4482216152605,
                    offset: 0,
                  },
                  poundforce: {
                    name: "poundforce",
                    base: B.FORCE,
                    prefixes: I.NONE,
                    value: 4.4482216152605,
                    offset: 0,
                  },
                  kip: {
                    name: "kip",
                    base: B.FORCE,
                    prefixes: I.LONG,
                    value: 4448.2216,
                    offset: 0,
                  },
                  J: {
                    name: "J",
                    base: B.ENERGY,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  joule: {
                    name: "joule",
                    base: B.ENERGY,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  erg: {
                    name: "erg",
                    base: B.ENERGY,
                    prefixes: I.NONE,
                    value: 1e-7,
                    offset: 0,
                  },
                  Wh: {
                    name: "Wh",
                    base: B.ENERGY,
                    prefixes: I.SHORT,
                    value: 3600,
                    offset: 0,
                  },
                  BTU: {
                    name: "BTU",
                    base: B.ENERGY,
                    prefixes: I.BTU,
                    value: 1055.05585262,
                    offset: 0,
                  },
                  eV: {
                    name: "eV",
                    base: B.ENERGY,
                    prefixes: I.SHORT,
                    value: 1602176565e-28,
                    offset: 0,
                  },
                  electronvolt: {
                    name: "electronvolt",
                    base: B.ENERGY,
                    prefixes: I.LONG,
                    value: 1602176565e-28,
                    offset: 0,
                  },
                  W: {
                    name: "W",
                    base: B.POWER,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  watt: {
                    name: "watt",
                    base: B.POWER,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  hp: {
                    name: "hp",
                    base: B.POWER,
                    prefixes: I.NONE,
                    value: 745.6998715386,
                    offset: 0,
                  },
                  VAR: {
                    name: "VAR",
                    base: B.POWER,
                    prefixes: I.SHORT,
                    value: v.I,
                    offset: 0,
                  },
                  VA: {
                    name: "VA",
                    base: B.POWER,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  Pa: {
                    name: "Pa",
                    base: B.PRESSURE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  psi: {
                    name: "psi",
                    base: B.PRESSURE,
                    prefixes: I.NONE,
                    value: 6894.75729276459,
                    offset: 0,
                  },
                  atm: {
                    name: "atm",
                    base: B.PRESSURE,
                    prefixes: I.NONE,
                    value: 101325,
                    offset: 0,
                  },
                  bar: {
                    name: "bar",
                    base: B.PRESSURE,
                    prefixes: I.SHORTLONG,
                    value: 1e5,
                    offset: 0,
                  },
                  torr: {
                    name: "torr",
                    base: B.PRESSURE,
                    prefixes: I.NONE,
                    value: 133.322,
                    offset: 0,
                  },
                  mmHg: {
                    name: "mmHg",
                    base: B.PRESSURE,
                    prefixes: I.NONE,
                    value: 133.322,
                    offset: 0,
                  },
                  mmH2O: {
                    name: "mmH2O",
                    base: B.PRESSURE,
                    prefixes: I.NONE,
                    value: 9.80665,
                    offset: 0,
                  },
                  cmH2O: {
                    name: "cmH2O",
                    base: B.PRESSURE,
                    prefixes: I.NONE,
                    value: 98.0665,
                    offset: 0,
                  },
                  coulomb: {
                    name: "coulomb",
                    base: B.ELECTRIC_CHARGE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  C: {
                    name: "C",
                    base: B.ELECTRIC_CHARGE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  farad: {
                    name: "farad",
                    base: B.ELECTRIC_CAPACITANCE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  F: {
                    name: "F",
                    base: B.ELECTRIC_CAPACITANCE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  volt: {
                    name: "volt",
                    base: B.ELECTRIC_POTENTIAL,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  V: {
                    name: "V",
                    base: B.ELECTRIC_POTENTIAL,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  ohm: {
                    name: "ohm",
                    base: B.ELECTRIC_RESISTANCE,
                    prefixes: I.SHORTLONG,
                    value: 1,
                    offset: 0,
                  },
                  henry: {
                    name: "henry",
                    base: B.ELECTRIC_INDUCTANCE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  H: {
                    name: "H",
                    base: B.ELECTRIC_INDUCTANCE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  siemens: {
                    name: "siemens",
                    base: B.ELECTRIC_CONDUCTANCE,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  S: {
                    name: "S",
                    base: B.ELECTRIC_CONDUCTANCE,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  weber: {
                    name: "weber",
                    base: B.MAGNETIC_FLUX,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  Wb: {
                    name: "Wb",
                    base: B.MAGNETIC_FLUX,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  tesla: {
                    name: "tesla",
                    base: B.MAGNETIC_FLUX_DENSITY,
                    prefixes: I.LONG,
                    value: 1,
                    offset: 0,
                  },
                  T: {
                    name: "T",
                    base: B.MAGNETIC_FLUX_DENSITY,
                    prefixes: I.SHORT,
                    value: 1,
                    offset: 0,
                  },
                  b: {
                    name: "b",
                    base: B.BIT,
                    prefixes: I.BINARY_SHORT,
                    value: 1,
                    offset: 0,
                  },
                  bits: {
                    name: "bits",
                    base: B.BIT,
                    prefixes: I.BINARY_LONG,
                    value: 1,
                    offset: 0,
                  },
                  B: {
                    name: "B",
                    base: B.BIT,
                    prefixes: I.BINARY_SHORT,
                    value: 8,
                    offset: 0,
                  },
                  bytes: {
                    name: "bytes",
                    base: B.BIT,
                    prefixes: I.BINARY_LONG,
                    value: 8,
                    offset: 0,
                  },
                },
                L = {
                  meters: "meter",
                  inches: "inch",
                  feet: "foot",
                  yards: "yard",
                  miles: "mile",
                  links: "link",
                  rods: "rod",
                  chains: "chain",
                  angstroms: "angstrom",
                  lt: "l",
                  litres: "litre",
                  liter: "litre",
                  liters: "litre",
                  teaspoons: "teaspoon",
                  tablespoons: "tablespoon",
                  minims: "minim",
                  fluiddrams: "fluiddram",
                  fluidounces: "fluidounce",
                  gills: "gill",
                  cups: "cup",
                  pints: "pint",
                  quarts: "quart",
                  gallons: "gallon",
                  beerbarrels: "beerbarrel",
                  oilbarrels: "oilbarrel",
                  hogsheads: "hogshead",
                  gtts: "gtt",
                  grams: "gram",
                  tons: "ton",
                  tonnes: "tonne",
                  grains: "grain",
                  drams: "dram",
                  ounces: "ounce",
                  poundmasses: "poundmass",
                  hundredweights: "hundredweight",
                  sticks: "stick",
                  lb: "lbm",
                  lbs: "lbm",
                  kips: "kip",
                  acres: "acre",
                  hectares: "hectare",
                  sqfeet: "sqft",
                  sqyard: "sqyd",
                  sqmile: "sqmi",
                  sqmiles: "sqmi",
                  mmhg: "mmHg",
                  mmh2o: "mmH2O",
                  cmh2o: "cmH2O",
                  seconds: "second",
                  secs: "second",
                  minutes: "minute",
                  mins: "minute",
                  hours: "hour",
                  hr: "hour",
                  hrs: "hour",
                  days: "day",
                  weeks: "week",
                  months: "month",
                  years: "year",
                  decades: "decade",
                  centuries: "century",
                  millennia: "millennium",
                  hertz: "hertz",
                  radians: "radian",
                  degrees: "degree",
                  gradians: "gradian",
                  cycles: "cycle",
                  arcsecond: "arcsec",
                  arcseconds: "arcsec",
                  arcminute: "arcmin",
                  arcminutes: "arcmin",
                  BTUs: "BTU",
                  watts: "watt",
                  joules: "joule",
                  amperes: "ampere",
                  coulombs: "coulomb",
                  volts: "volt",
                  ohms: "ohm",
                  farads: "farad",
                  webers: "weber",
                  teslas: "tesla",
                  electronvolts: "electronvolt",
                  moles: "mole",
                  bit: "bits",
                  byte: "bytes",
                };
              function z(e) {
                if ("BigNumber" === e.number) {
                  var t = df(b);
                  (R.rad.value = new b(1)),
                    (R.deg.value = t.div(180)),
                    (R.grad.value = t.div(200)),
                    (R.cycle.value = t.times(2)),
                    (R.arcsec.value = t.div(648e3)),
                    (R.arcmin.value = t.div(10800));
                } else
                  (R.rad.value = 1),
                    (R.deg.value = Math.PI / 180),
                    (R.grad.value = Math.PI / 200),
                    (R.cycle.value = 2 * Math.PI),
                    (R.arcsec.value = Math.PI / 648e3),
                    (R.arcmin.value = Math.PI / 10800);
                (R.radian.value = R.rad.value),
                  (R.degree.value = R.deg.value),
                  (R.gradian.value = R.grad.value);
              }
              z(a),
                i &&
                  i("config", function (e, t) {
                    e.number !== t.number && z(e);
                  });
              var q = {
                si: {
                  NONE: { unit: j, prefix: I.NONE[""] },
                  LENGTH: { unit: R.m, prefix: I.SHORT[""] },
                  MASS: { unit: R.g, prefix: I.SHORT.k },
                  TIME: { unit: R.s, prefix: I.SHORT[""] },
                  CURRENT: { unit: R.A, prefix: I.SHORT[""] },
                  TEMPERATURE: { unit: R.K, prefix: I.SHORT[""] },
                  LUMINOUS_INTENSITY: { unit: R.cd, prefix: I.SHORT[""] },
                  AMOUNT_OF_SUBSTANCE: { unit: R.mol, prefix: I.SHORT[""] },
                  ANGLE: { unit: R.rad, prefix: I.SHORT[""] },
                  BIT: { unit: R.bits, prefix: I.SHORT[""] },
                  FORCE: { unit: R.N, prefix: I.SHORT[""] },
                  ENERGY: { unit: R.J, prefix: I.SHORT[""] },
                  POWER: { unit: R.W, prefix: I.SHORT[""] },
                  PRESSURE: { unit: R.Pa, prefix: I.SHORT[""] },
                  ELECTRIC_CHARGE: { unit: R.C, prefix: I.SHORT[""] },
                  ELECTRIC_CAPACITANCE: { unit: R.F, prefix: I.SHORT[""] },
                  ELECTRIC_POTENTIAL: { unit: R.V, prefix: I.SHORT[""] },
                  ELECTRIC_RESISTANCE: { unit: R.ohm, prefix: I.SHORT[""] },
                  ELECTRIC_INDUCTANCE: { unit: R.H, prefix: I.SHORT[""] },
                  ELECTRIC_CONDUCTANCE: { unit: R.S, prefix: I.SHORT[""] },
                  MAGNETIC_FLUX: { unit: R.Wb, prefix: I.SHORT[""] },
                  MAGNETIC_FLUX_DENSITY: { unit: R.T, prefix: I.SHORT[""] },
                  FREQUENCY: { unit: R.Hz, prefix: I.SHORT[""] },
                },
              };
              (q.cgs = JSON.parse(JSON.stringify(q.si))),
                (q.cgs.LENGTH = { unit: R.m, prefix: I.SHORT.c }),
                (q.cgs.MASS = { unit: R.g, prefix: I.SHORT[""] }),
                (q.cgs.FORCE = { unit: R.dyn, prefix: I.SHORT[""] }),
                (q.cgs.ENERGY = { unit: R.erg, prefix: I.NONE[""] }),
                (q.us = JSON.parse(JSON.stringify(q.si))),
                (q.us.LENGTH = { unit: R.ft, prefix: I.NONE[""] }),
                (q.us.MASS = { unit: R.lbm, prefix: I.NONE[""] }),
                (q.us.TEMPERATURE = { unit: R.degF, prefix: I.NONE[""] }),
                (q.us.FORCE = { unit: R.lbf, prefix: I.NONE[""] }),
                (q.us.ENERGY = { unit: R.BTU, prefix: I.BTU[""] }),
                (q.us.POWER = { unit: R.hp, prefix: I.NONE[""] }),
                (q.us.PRESSURE = { unit: R.psi, prefix: I.NONE[""] }),
                (q.auto = JSON.parse(JSON.stringify(q.si)));
              var F = q.auto;
              for (var U in ((N.setUnitSystem = function (e) {
                if (!Bn(q, e))
                  throw new Error(
                    "Unit system " +
                      e +
                      " does not exist. Choices are: " +
                      Object.keys(q).join(", ")
                  );
                F = q[e];
              }),
              (N.getUnitSystem = function () {
                for (var e in q) if (Bn(q, e) && q[e] === F) return e;
              }),
              (N.typeConverters = {
                BigNumber: function (e) {
                  return new b(e + "");
                },
                Fraction: function (e) {
                  return new x(e);
                },
                Complex: function (e) {
                  return e;
                },
                number: function (e) {
                  return e;
                },
              }),
              (N._getNumberConverter = function (e) {
                if (!N.typeConverters[e])
                  throw new TypeError('Unsupported type "' + e + '"');
                return N.typeConverters[e];
              }),
              R))
                if (Bn(R, U)) {
                  var V = R[U];
                  V.dimensions = V.base.dimensions;
                }
              for (var $ in L)
                if (Bn(L, $)) {
                  var H = R[L[$]],
                    W = {};
                  for (var G in H) Bn(H, G) && (W[G] = H[G]);
                  (W.name = $), (R[$] = W);
                }
              return (
                (N.createUnit = function (e, t) {
                  if ("object" !== yf(e))
                    throw new TypeError(
                      "createUnit expects first parameter to be of type 'Object'"
                    );
                  if (t && t.override)
                    for (var n in e)
                      if ((Bn(e, n) && N.deleteUnit(n), e[n].aliases))
                        for (var r = 0; r < e[n].aliases.length; r++)
                          N.deleteUnit(e[n].aliases[r]);
                  var i;
                  for (var a in e)
                    Bn(e, a) && (i = N.createUnitSingle(a, e[a]));
                  return i;
                }),
                (N.createUnitSingle = function (e, t, n) {
                  if ((null == t && (t = {}), "string" != typeof e))
                    throw new TypeError(
                      "createUnitSingle expects first parameter to be of type 'string'"
                    );
                  if (Bn(R, e))
                    throw new Error(
                      'Cannot create unit "' +
                        e +
                        '": a unit with that name already exists'
                    );
                  !(function (e) {
                    for (var t = 0; t < e.length; t++) {
                      var n = e.charAt(t),
                        r = function (e) {
                          return /^[a-zA-Z]$/.test(e);
                        };
                      if (0 === t && !r(n))
                        throw new Error(
                          'Invalid unit name (must begin with alpha character): "' +
                            e +
                            '"'
                        );
                      if (
                        t > 0 &&
                        !r(n) &&
                        !(function (e) {
                          return e >= "0" && e <= "9";
                        })(n)
                      )
                        throw new Error(
                          'Invalid unit name (only alphanumeric characters are allowed): "' +
                            e +
                            '"'
                        );
                    }
                  })(e);
                  var r,
                    i,
                    a,
                    o = null,
                    s = [],
                    u = 0;
                  if (t && "Unit" === t.type) o = t.clone();
                  else if ("string" == typeof t) "" !== t && (r = t);
                  else {
                    if ("object" !== yf(t))
                      throw new TypeError(
                        'Cannot create unit "' +
                          e +
                          '" from "' +
                          t.toString() +
                          '": expecting "string" or "Unit" or "Object"'
                      );
                    (r = t.definition),
                      (i = t.prefixes),
                      (u = t.offset),
                      (a = t.baseName),
                      t.aliases && (s = t.aliases.valueOf());
                  }
                  if (s)
                    for (var c = 0; c < s.length; c++)
                      if (Bn(R, s[c]))
                        throw new Error(
                          'Cannot create alias "' +
                            s[c] +
                            '": a unit with that name already exists'
                        );
                  if (r && "string" == typeof r && !o)
                    try {
                      o = N.parse(r, { allowNoUnits: !0 });
                    } catch (t) {
                      throw (
                        ((t.message =
                          'Could not create unit "' +
                          e +
                          '" from "' +
                          r +
                          '": ' +
                          t.message),
                        t)
                      );
                    }
                  else r && "Unit" === r.type && (o = r.clone());
                  (s = s || []),
                    (u = u || 0),
                    (i = (i && i.toUpperCase && I[i.toUpperCase()]) || I.NONE);
                  var l = {};
                  if (o) {
                    l = {
                      name: e,
                      value: o.value,
                      dimensions: o.dimensions.slice(0),
                      prefixes: i,
                      offset: u,
                    };
                    var f = !1;
                    for (var p in B)
                      if (Bn(B, p)) {
                        for (var h = !0, d = 0; d < P.length; d++)
                          if (
                            Math.abs(
                              (l.dimensions[d] || 0) - (B[p].dimensions[d] || 0)
                            ) > 1e-12
                          ) {
                            h = !1;
                            break;
                          }
                        if (h) {
                          (f = !0), (l.base = B[p]);
                          break;
                        }
                      }
                    if (!f) {
                      a = a || e + "_STUFF";
                      var m = { dimensions: o.dimensions.slice(0) };
                      (m.key = a),
                        (B[a] = m),
                        (F[a] = { unit: l, prefix: I.NONE[""] }),
                        (l.base = B[a]);
                    }
                  } else {
                    if (((a = a || e + "_STUFF"), P.indexOf(a) >= 0))
                      throw new Error(
                        'Cannot create new base unit "' +
                          e +
                          '": a base unit with that name already exists (and cannot be overridden)'
                      );
                    for (var g in (P.push(a), B))
                      Bn(B, g) && (B[g].dimensions[P.length - 1] = 0);
                    for (var y = { dimensions: [] }, v = 0; v < P.length; v++)
                      y.dimensions[v] = 0;
                    (y.dimensions[P.length - 1] = 1),
                      (y.key = a),
                      (B[a] = y),
                      (l = {
                        name: e,
                        value: 1,
                        dimensions: B[a].dimensions.slice(0),
                        prefixes: i,
                        offset: u,
                        base: B[a],
                      }),
                      (F[a] = { unit: l, prefix: I.NONE[""] });
                  }
                  N.UNITS[e] = l;
                  for (var b = 0; b < s.length; b++) {
                    var x = s[b],
                      w = {};
                    for (var E in l) Bn(l, E) && (w[E] = l[E]);
                    (w.name = x), (N.UNITS[x] = w);
                  }
                  return new N(null, e);
                }),
                (N.deleteUnit = function (e) {
                  delete N.UNITS[e];
                }),
                (N.PREFIXES = I),
                (N.BASE_DIMENSIONS = P),
                (N.BASE_UNITS = B),
                (N.UNIT_SYSTEMS = q),
                (N.UNITS = R),
                N
              );
            },
            { isClass: !0 }
          ),
          Ef = Cr("unit", ["typed", "Unit"], function (e) {
            var t = e.typed,
              n = e.Unit;
            return t("unit", {
              Unit: function (e) {
                return e.clone();
              },
              string: function (e) {
                return n.isValuelessUnit(e)
                  ? new n(null, e)
                  : n.parse(e, { allowNoUnits: !0 });
              },
              "number | BigNumber | Fraction | Complex, string": function (
                e,
                t
              ) {
                return new n(e, t);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Mf = Cr("sparse", ["typed", "SparseMatrix"], function (e) {
            var t = e.typed,
              n = e.SparseMatrix;
            return t("sparse", {
              "": function () {
                return new n([]);
              },
              string: function (e) {
                return new n([], e);
              },
              "Array | Matrix": function (e) {
                return new n(e);
              },
              "Array | Matrix, string": function (e, t) {
                return new n(e, t);
              },
            });
          }),
          Sf = "createUnit",
          _f = Cr(Sf, ["typed", "Unit"], function (e) {
            var t = e.typed,
              n = e.Unit;
            return t(Sf, {
              "Object, Object": function (e, t) {
                return n.createUnit(e, t);
              },
              Object: function (e) {
                return n.createUnit(e, {});
              },
              "string, Unit | string | Object, Object": function (e, t, r) {
                var i = {};
                return (i[e] = t), n.createUnit(i, r);
              },
              "string, Unit | string | Object": function (e, t) {
                var r = {};
                return (r[e] = t), n.createUnit(r, {});
              },
              string: function (e) {
                var t = {};
                return (t[e] = {}), n.createUnit(t, {});
              },
            });
          }),
          kf = Cr("acos", ["typed", "config", "Complex"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.Complex;
            return t("acos", {
              number: function (e) {
                return (e >= -1 && e <= 1) || n.predictable
                  ? Math.acos(e)
                  : new r(e, 0).acos();
              },
              Complex: function (e) {
                return e.acos();
              },
              BigNumber: function (e) {
                return e.acos();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Of = Cr("acosh", ["typed", "config", "Complex"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.Complex;
            return t("acosh", {
              number: function (e) {
                return e >= 1 || n.predictable
                  ? ko(e)
                  : e <= -1
                  ? new r(Math.log(Math.sqrt(e * e - 1) - e), Math.PI)
                  : new r(e, 0).acosh();
              },
              Complex: function (e) {
                return e.acosh();
              },
              BigNumber: function (e) {
                return e.acosh();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Af = Cr("acot", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("acot", {
              number: Oo,
              Complex: function (e) {
                return e.acot();
              },
              BigNumber: function (e) {
                return new n(1).div(e).atan();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Cf = Cr(
            "acoth",
            ["typed", "config", "Complex", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.Complex,
                i = e.BigNumber;
              return t("acoth", {
                number: function (e) {
                  return e >= 1 || e <= -1 || n.predictable
                    ? Ao(e)
                    : new r(e, 0).acoth();
                },
                Complex: function (e) {
                  return e.acoth();
                },
                BigNumber: function (e) {
                  return new i(1).div(e).atanh();
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
              });
            }
          ),
          Tf = Cr(
            "acsc",
            ["typed", "config", "Complex", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.Complex,
                i = e.BigNumber;
              return t("acsc", {
                number: function (e) {
                  return e <= -1 || e >= 1 || n.predictable
                    ? Co(e)
                    : new r(e, 0).acsc();
                },
                Complex: function (e) {
                  return e.acsc();
                },
                BigNumber: function (e) {
                  return new i(1).div(e).asin();
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
              });
            }
          ),
          If = Cr("acsch", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("acsch", {
              number: To,
              Complex: function (e) {
                return e.acsch();
              },
              BigNumber: function (e) {
                return new n(1).div(e).asinh();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Pf = Cr(
            "asec",
            ["typed", "config", "Complex", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.Complex,
                i = e.BigNumber;
              return t("asec", {
                number: function (e) {
                  return e <= -1 || e >= 1 || n.predictable
                    ? Io(e)
                    : new r(e, 0).asec();
                },
                Complex: function (e) {
                  return e.asec();
                },
                BigNumber: function (e) {
                  return new i(1).div(e).acos();
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
              });
            }
          ),
          Bf = Cr(
            "asech",
            ["typed", "config", "Complex", "BigNumber"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.Complex,
                i = e.BigNumber;
              return t("asech", {
                number: function (e) {
                  if ((e <= 1 && e >= -1) || n.predictable) {
                    var t = 1 / e;
                    if (t > 0 || n.predictable) return Po(e);
                    var i = Math.sqrt(t * t - 1);
                    return new r(Math.log(i - t), Math.PI);
                  }
                  return new r(e, 0).asech();
                },
                Complex: function (e) {
                  return e.asech();
                },
                BigNumber: function (e) {
                  return new i(1).div(e).acosh();
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
              });
            }
          ),
          Df = Cr("asin", ["typed", "config", "Complex"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.Complex;
            return t("asin", {
              number: function (e) {
                return (e >= -1 && e <= 1) || n.predictable
                  ? Math.asin(e)
                  : new r(e, 0).asin();
              },
              Complex: function (e) {
                return e.asin();
              },
              BigNumber: function (e) {
                return e.asin();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          jf = Cr("asinh", ["typed"], function (e) {
            return (0, e.typed)("asinh", {
              number: Bo,
              Complex: function (e) {
                return e.asinh();
              },
              BigNumber: function (e) {
                return e.asinh();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Rf = Cr("atan", ["typed"], function (e) {
            return (0, e.typed)("atan", {
              number: function (e) {
                return Math.atan(e);
              },
              Complex: function (e) {
                return e.atan();
              },
              BigNumber: function (e) {
                return e.atan();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Lf = Cr(
            "atan2",
            ["typed", "matrix", "equalScalar", "BigNumber", "DenseMatrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.equalScalar,
                i = e.BigNumber,
                a = e.DenseMatrix,
                o = Fs({ typed: t, equalScalar: r }),
                s = Gs({ typed: t }),
                u = cu({ typed: t, equalScalar: r }),
                c = Vs({ typed: t, equalScalar: r }),
                l = Ys({ typed: t, DenseMatrix: a }),
                f = Ls({ typed: t }),
                p = zs({ typed: t });
              return t("atan2", {
                "number, number": Math.atan2,
                "BigNumber, BigNumber": function (e, t) {
                  return i.atan2(e, t);
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  return u(e, t, this, !1);
                },
                "SparseMatrix, DenseMatrix": function (e, t) {
                  return o(t, e, this, !0);
                },
                "DenseMatrix, SparseMatrix": function (e, t) {
                  return s(e, t, this, !1);
                },
                "DenseMatrix, DenseMatrix": function (e, t) {
                  return f(e, t, this);
                },
                "Array, Array": function (e, t) {
                  return this(n(e), n(t)).valueOf();
                },
                "Array, Matrix": function (e, t) {
                  return this(n(e), t);
                },
                "Matrix, Array": function (e, t) {
                  return this(e, n(t));
                },
                "SparseMatrix, number | BigNumber": function (e, t) {
                  return c(e, t, this, !1);
                },
                "DenseMatrix, number | BigNumber": function (e, t) {
                  return p(e, t, this, !1);
                },
                "number | BigNumber, SparseMatrix": function (e, t) {
                  return l(t, e, this, !0);
                },
                "number | BigNumber, DenseMatrix": function (e, t) {
                  return p(t, e, this, !0);
                },
                "Array, number | BigNumber": function (e, t) {
                  return p(n(e), t, this, !1).valueOf();
                },
                "number | BigNumber, Array": function (e, t) {
                  return p(n(t), e, this, !0).valueOf();
                },
              });
            }
          ),
          zf = Cr("atanh", ["typed", "config", "Complex"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.Complex;
            return t("atanh", {
              number: function (e) {
                return (e <= 1 && e >= -1) || n.predictable
                  ? Do(e)
                  : new r(e, 0).atanh();
              },
              Complex: function (e) {
                return e.atanh();
              },
              BigNumber: function (e) {
                return e.atanh();
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          qf = Cr("cos", ["typed"], function (e) {
            return (0, e.typed)("cos", {
              number: Math.cos,
              Complex: function (e) {
                return e.cos();
              },
              BigNumber: function (e) {
                return e.cos();
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function cos is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Ff = Cr("cosh", ["typed"], function (e) {
            return (0, e.typed)("cosh", {
              number: nr,
              Complex: function (e) {
                return e.cosh();
              },
              BigNumber: function (e) {
                return e.cosh();
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function cosh is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Uf = Cr("cot", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("cot", {
              number: jo,
              Complex: function (e) {
                return e.cot();
              },
              BigNumber: function (e) {
                return new n(1).div(e.tan());
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function cot is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Vf = Cr("coth", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("coth", {
              number: Ro,
              Complex: function (e) {
                return e.coth();
              },
              BigNumber: function (e) {
                return new n(1).div(e.tanh());
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function coth is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          $f = Cr("csc", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("csc", {
              number: Lo,
              Complex: function (e) {
                return e.csc();
              },
              BigNumber: function (e) {
                return new n(1).div(e.sin());
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function csc is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Hf = Cr("csch", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("csch", {
              number: zo,
              Complex: function (e) {
                return e.csch();
              },
              BigNumber: function (e) {
                return new n(1).div(e.sinh());
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function csch is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Wf = Cr("sec", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("sec", {
              number: qo,
              Complex: function (e) {
                return e.sec();
              },
              BigNumber: function (e) {
                return new n(1).div(e.cos());
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function sec is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Gf = Cr("sech", ["typed", "BigNumber"], function (e) {
            var t = e.typed,
              n = e.BigNumber;
            return t("sech", {
              number: Fo,
              Complex: function (e) {
                return e.sech();
              },
              BigNumber: function (e) {
                return new n(1).div(e.cosh());
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function sech is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Jf = Cr("sin", ["typed"], function (e) {
            return (0, e.typed)("sin", {
              number: Math.sin,
              Complex: function (e) {
                return e.sin();
              },
              BigNumber: function (e) {
                return e.sin();
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function sin is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Yf = Cr("sinh", ["typed"], function (e) {
            return (0, e.typed)("sinh", {
              number: Uo,
              Complex: function (e) {
                return e.sinh();
              },
              BigNumber: function (e) {
                return e.sinh();
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function sinh is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Zf = Cr("tan", ["typed"], function (e) {
            return (0, e.typed)("tan", {
              number: Math.tan,
              Complex: function (e) {
                return e.tan();
              },
              BigNumber: function (e) {
                return e.tan();
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function tan is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Xf = Cr("tanh", ["typed"], function (e) {
            return (0, e.typed)("tanh", {
              number: ir,
              Complex: function (e) {
                return e.tanh();
              },
              BigNumber: function (e) {
                return e.tanh();
              },
              Unit: function (e) {
                if (!e.hasBase(e.constructor.BASE_UNITS.ANGLE))
                  throw new TypeError("Unit in function tanh is no angle");
                return this(e.value);
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          Kf = "setCartesian",
          Qf = Cr(
            Kf,
            [
              "typed",
              "size",
              "subset",
              "compareNatural",
              "Index",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index,
                o = e.DenseMatrix;
              return t(Kf, {
                "Array | Matrix, Array | Matrix": function (e, t) {
                  var s = [];
                  if (0 !== r(n(e), new a(0)) && 0 !== r(n(t), new a(0))) {
                    var u = wr(Array.isArray(e) ? e : e.toArray()).sort(i),
                      c = wr(Array.isArray(t) ? t : t.toArray()).sort(i);
                    s = [];
                    for (var l = 0; l < u.length; l++)
                      for (var f = 0; f < c.length; f++) s.push([u[l], c[f]]);
                  }
                  return Array.isArray(e) && Array.isArray(t) ? s : new o(s);
                },
              });
            }
          ),
          ep = "setDifference",
          tp = Cr(
            ep,
            [
              "typed",
              "size",
              "subset",
              "compareNatural",
              "Index",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index,
                o = e.DenseMatrix;
              return t(ep, {
                "Array | Matrix, Array | Matrix": function (e, t) {
                  var s;
                  if (0 === r(n(e), new a(0))) s = [];
                  else {
                    if (0 === r(n(t), new a(0))) return wr(e.toArray());
                    var u,
                      c = kr(wr(Array.isArray(e) ? e : e.toArray()).sort(i)),
                      l = kr(wr(Array.isArray(t) ? t : t.toArray()).sort(i));
                    s = [];
                    for (var f = 0; f < c.length; f++) {
                      u = !1;
                      for (var p = 0; p < l.length; p++)
                        if (
                          0 === i(c[f].value, l[p].value) &&
                          c[f].identifier === l[p].identifier
                        ) {
                          u = !0;
                          break;
                        }
                      u || s.push(c[f]);
                    }
                  }
                  return Array.isArray(e) && Array.isArray(t)
                    ? Or(s)
                    : new o(Or(s));
                },
              });
            }
          ),
          np = "setDistinct",
          rp = Cr(
            np,
            [
              "typed",
              "size",
              "subset",
              "compareNatural",
              "Index",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index,
                o = e.DenseMatrix;
              return t(np, {
                "Array | Matrix": function (e) {
                  var t;
                  if (0 === r(n(e), new a(0))) t = [];
                  else {
                    var s = wr(Array.isArray(e) ? e : e.toArray()).sort(i);
                    (t = []).push(s[0]);
                    for (var u = 1; u < s.length; u++)
                      0 !== i(s[u], s[u - 1]) && t.push(s[u]);
                  }
                  return Array.isArray(e) ? t : new o(t);
                },
              });
            }
          ),
          ip = "setIntersect",
          ap = Cr(
            ip,
            [
              "typed",
              "size",
              "subset",
              "compareNatural",
              "Index",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index,
                o = e.DenseMatrix;
              return t(ip, {
                "Array | Matrix, Array | Matrix": function (e, t) {
                  var s;
                  if (0 === r(n(e), new a(0)) || 0 === r(n(t), new a(0)))
                    s = [];
                  else {
                    var u = kr(wr(Array.isArray(e) ? e : e.toArray()).sort(i)),
                      c = kr(wr(Array.isArray(t) ? t : t.toArray()).sort(i));
                    s = [];
                    for (var l = 0; l < u.length; l++)
                      for (var f = 0; f < c.length; f++)
                        if (
                          0 === i(u[l].value, c[f].value) &&
                          u[l].identifier === c[f].identifier
                        ) {
                          s.push(u[l]);
                          break;
                        }
                  }
                  return Array.isArray(e) && Array.isArray(t)
                    ? Or(s)
                    : new o(Or(s));
                },
              });
            }
          ),
          op = "setIsSubset",
          sp = Cr(
            op,
            ["typed", "size", "subset", "compareNatural", "Index"],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index;
              return t(op, {
                "Array | Matrix, Array | Matrix": function (e, t) {
                  if (0 === r(n(e), new a(0))) return !0;
                  if (0 === r(n(t), new a(0))) return !1;
                  for (
                    var o,
                      s = kr(wr(Array.isArray(e) ? e : e.toArray()).sort(i)),
                      u = kr(wr(Array.isArray(t) ? t : t.toArray()).sort(i)),
                      c = 0;
                    c < s.length;
                    c++
                  ) {
                    o = !1;
                    for (var l = 0; l < u.length; l++)
                      if (
                        0 === i(s[c].value, u[l].value) &&
                        s[c].identifier === u[l].identifier
                      ) {
                        o = !0;
                        break;
                      }
                    if (!1 === o) return !1;
                  }
                  return !0;
                },
              });
            }
          ),
          up = "setMultiplicity",
          cp = Cr(
            up,
            ["typed", "size", "subset", "compareNatural", "Index"],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index;
              return t(up, {
                "number | BigNumber | Fraction | Complex, Array | Matrix": function (
                  e,
                  t
                ) {
                  if (0 === r(n(t), new a(0))) return 0;
                  for (
                    var o = wr(Array.isArray(t) ? t : t.toArray()),
                      s = 0,
                      u = 0;
                    u < o.length;
                    u++
                  )
                    0 === i(o[u], e) && s++;
                  return s;
                },
              });
            }
          ),
          lp = "setPowerset",
          fp = Cr(
            lp,
            ["typed", "size", "subset", "compareNatural", "Index"],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.subset,
                i = e.compareNatural,
                a = e.Index;
              return t(lp, {
                "Array | Matrix": function (e) {
                  if (0 === r(n(e), new a(0))) return [];
                  for (
                    var t = wr(Array.isArray(e) ? e : e.toArray()).sort(i),
                      s = [],
                      u = 0;
                    u.toString(2).length <= t.length;

                  )
                    s.push(o(t, u.toString(2).split("").reverse())), u++;
                  return (function (e) {
                    for (var t = [], n = e.length - 1; n > 0; n--)
                      for (var r = 0; r < n; r++)
                        e[r].length > e[r + 1].length &&
                          ((t = e[r]), (e[r] = e[r + 1]), (e[r + 1] = t));
                    return e;
                  })(s);
                },
              });
              function o(e, t) {
                for (var n = [], r = 0; r < t.length; r++)
                  "1" === t[r] && n.push(e[r]);
                return n;
              }
            }
          ),
          pp = "setSize",
          hp = Cr(pp, ["typed", "compareNatural"], function (e) {
            var t = e.typed,
              n = e.compareNatural;
            return t(pp, {
              "Array | Matrix": function (e) {
                return Array.isArray(e) ? wr(e).length : wr(e.toArray()).length;
              },
              "Array | Matrix, boolean": function (e, t) {
                if (!1 === t || 0 === e.length)
                  return Array.isArray(e)
                    ? wr(e).length
                    : wr(e.toArray()).length;
                for (
                  var r = wr(Array.isArray(e) ? e : e.toArray()).sort(n),
                    i = 1,
                    a = 1;
                  a < r.length;
                  a++
                )
                  0 !== n(r[a], r[a - 1]) && i++;
                return i;
              },
            });
          }),
          dp = "setSymDifference",
          mp = Cr(
            dp,
            ["typed", "size", "concat", "subset", "setDifference", "Index"],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.concat,
                i = e.subset,
                a = e.setDifference,
                o = e.Index;
              return t(dp, {
                "Array | Matrix, Array | Matrix": function (e, t) {
                  if (0 === i(n(e), new o(0))) return wr(t);
                  if (0 === i(n(t), new o(0))) return wr(e);
                  var s = wr(e),
                    u = wr(t);
                  return r(a(s, u), a(u, s));
                },
              });
            }
          ),
          gp = "setUnion",
          yp = Cr(
            gp,
            [
              "typed",
              "size",
              "concat",
              "subset",
              "setIntersect",
              "setSymDifference",
              "Index",
            ],
            function (e) {
              var t = e.typed,
                n = e.size,
                r = e.concat,
                i = e.subset,
                a = e.setIntersect,
                o = e.setSymDifference,
                s = e.Index;
              return t(gp, {
                "Array | Matrix, Array | Matrix": function (e, t) {
                  if (0 === i(n(e), new s(0))) return wr(t);
                  if (0 === i(n(t), new s(0))) return wr(e);
                  var u = wr(e),
                    c = wr(t);
                  return r(o(u, c), a(u, c));
                },
              });
            }
          ),
          vp = Cr(
            "add",
            [
              "typed",
              "matrix",
              "addScalar",
              "equalScalar",
              "DenseMatrix",
              "SparseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.addScalar,
                i = e.equalScalar,
                a = e.DenseMatrix,
                o = (e.SparseMatrix, Ds({ typed: t })),
                s = js({ typed: t, equalScalar: i }),
                u = Rs({ typed: t, DenseMatrix: a }),
                c = Ls({ typed: t }),
                l = zs({ typed: t });
              return t(
                "add",
                In(
                  {
                    "DenseMatrix, DenseMatrix": function (e, t) {
                      return c(e, t, r);
                    },
                    "DenseMatrix, SparseMatrix": function (e, t) {
                      return o(e, t, r, !1);
                    },
                    "SparseMatrix, DenseMatrix": function (e, t) {
                      return o(t, e, r, !0);
                    },
                    "SparseMatrix, SparseMatrix": function (e, t) {
                      return s(e, t, r);
                    },
                    "Array, Array": function (e, t) {
                      return this(n(e), n(t)).valueOf();
                    },
                    "Array, Matrix": function (e, t) {
                      return this(n(e), t);
                    },
                    "Matrix, Array": function (e, t) {
                      return this(e, n(t));
                    },
                    "DenseMatrix, any": function (e, t) {
                      return l(e, t, r, !1);
                    },
                    "SparseMatrix, any": function (e, t) {
                      return u(e, t, r, !1);
                    },
                    "any, DenseMatrix": function (e, t) {
                      return l(t, e, r, !0);
                    },
                    "any, SparseMatrix": function (e, t) {
                      return u(t, e, r, !0);
                    },
                    "Array, any": function (e, t) {
                      return l(n(e), t, r, !1).valueOf();
                    },
                    "any, Array": function (e, t) {
                      return l(n(t), e, r, !0).valueOf();
                    },
                    "any, any": r,
                    "any, any, ...any": function (e, t, n) {
                      for (var r = this(e, t), i = 0; i < n.length; i++)
                        r = this(r, n[i]);
                      return r;
                    },
                  },
                  r.signatures
                )
              );
            }
          ),
          bp = Cr(
            "hypot",
            [
              "typed",
              "abs",
              "addScalar",
              "divideScalar",
              "multiplyScalar",
              "sqrt",
              "smaller",
              "isPositive",
            ],
            function (e) {
              var t = e.typed,
                n = e.abs,
                r = e.addScalar,
                i = e.divideScalar,
                a = e.multiplyScalar,
                o = e.sqrt,
                s = e.smaller,
                u = e.isPositive;
              return t("hypot", {
                "... number | BigNumber": function (e) {
                  for (var t = 0, c = 0, l = 0; l < e.length; l++) {
                    var f = n(e[l]);
                    s(c, f)
                      ? ((t = a(t, a(i(c, f), i(c, f)))),
                        (t = r(t, 1)),
                        (c = f))
                      : (t = r(t, u(f) ? a(i(f, c), i(f, c)) : f));
                  }
                  return a(c, o(t));
                },
                Array: function (e) {
                  return this.apply(this, wr(e));
                },
                Matrix: function (e) {
                  return this.apply(this, wr(e.toArray()));
                },
              });
            }
          ),
          xp = Cr(
            "norm",
            [
              "typed",
              "abs",
              "add",
              "pow",
              "conj",
              "sqrt",
              "multiply",
              "equalScalar",
              "larger",
              "smaller",
              "matrix",
              "ctranspose",
              "eigs",
            ],
            function (e) {
              var t = e.typed,
                n = e.abs,
                r = e.add,
                i = e.pow,
                a = e.conj,
                o = e.sqrt,
                s = e.multiply,
                u = e.equalScalar,
                c = e.larger,
                l = e.smaller,
                f = e.matrix,
                p = e.ctranspose,
                h = e.eigs;
              return t("norm", {
                number: Math.abs,
                Complex: function (e) {
                  return e.abs();
                },
                BigNumber: function (e) {
                  return e.abs();
                },
                boolean: function (e) {
                  return Math.abs(e);
                },
                Array: function (e) {
                  return g(f(e), 2);
                },
                Matrix: function (e) {
                  return g(e, 2);
                },
                "number | Complex | BigNumber | boolean, number | BigNumber | string": function (
                  e
                ) {
                  return this(e);
                },
                "Array, number | BigNumber | string": function (e, t) {
                  return g(f(e), t);
                },
                "Matrix, number | BigNumber | string": function (e, t) {
                  return g(e, t);
                },
              });
              function d(e, t) {
                if (t === Number.POSITIVE_INFINITY || "inf" === t)
                  return (function (e) {
                    var t = 0;
                    return (
                      e.forEach(function (e) {
                        var r = n(e);
                        c(r, t) && (t = r);
                      }, !0),
                      t
                    );
                  })(e);
                if (t === Number.NEGATIVE_INFINITY || "-inf" === t)
                  return (function (e) {
                    var t;
                    return (
                      e.forEach(function (e) {
                        var r = n(e);
                        (t && !l(r, t)) || (t = r);
                      }, !0),
                      t || 0
                    );
                  })(e);
                if ("fro" === t) return g(e, 2);
                if ("number" == typeof t && !isNaN(t)) {
                  if (!u(t, 0)) {
                    var a = 0;
                    return (
                      e.forEach(function (e) {
                        a = r(i(n(e), t), a);
                      }, !0),
                      i(a, 1 / t)
                    );
                  }
                  return Number.POSITIVE_INFINITY;
                }
                throw new Error("Unsupported parameter value");
              }
              function m(e, t) {
                if (1 === t)
                  return (function (e) {
                    var t = [],
                      i = 0;
                    return (
                      e.forEach(function (e, a) {
                        var o = a[1],
                          s = r(t[o] || 0, n(e));
                        c(s, i) && (i = s), (t[o] = s);
                      }, !0),
                      i
                    );
                  })(e);
                if (t === Number.POSITIVE_INFINITY || "inf" === t)
                  return (function (e) {
                    var t = [],
                      i = 0;
                    return (
                      e.forEach(function (e, a) {
                        var o = a[0],
                          s = r(t[o] || 0, n(e));
                        c(s, i) && (i = s), (t[o] = s);
                      }, !0),
                      i
                    );
                  })(e);
                if ("fro" === t)
                  return (function (e) {
                    var t = 0;
                    return (
                      e.forEach(function (e, n) {
                        t = r(t, s(e, a(e)));
                      }),
                      n(o(t))
                    );
                  })(e);
                if (2 === t)
                  return (function (e) {
                    var t = e.size();
                    if (t[0] !== t[1])
                      throw new RangeError("Invalid matrix dimensions");
                    var r = p(e),
                      i = s(r, e),
                      a = h(i).values,
                      u = a.get([a.size()[0] - 1]);
                    return n(o(u));
                  })(e);
                throw new Error("Unsupported parameter value " + t);
              }
              function g(e, t) {
                var n = e.size();
                if (1 === n.length) return d(e, t);
                if (2 === n.length) {
                  if (n[0] && n[1]) return m(e, t);
                  throw new RangeError("Invalid matrix dimensions");
                }
              }
            }
          ),
          wp = Cr(
            "dot",
            ["typed", "addScalar", "multiplyScalar", "conj", "size"],
            function (e) {
              var t = e.typed,
                n = e.addScalar,
                r = e.multiplyScalar,
                i = e.conj,
                a = e.size;
              return t("dot", {
                "Array | DenseMatrix, Array | DenseMatrix": function (e, a) {
                  var u = o(e, a),
                    c = Xt(e) ? e._data : e,
                    l = Xt(e) ? e._datatype : void 0,
                    f = Xt(a) ? a._data : a,
                    p = Xt(a) ? a._datatype : void 0,
                    h = 2 === s(e).length,
                    d = 2 === s(a).length,
                    m = n,
                    g = r;
                  if (l && p && l === p && "string" == typeof l) {
                    var y = l;
                    (m = t.find(n, [y, y])), (g = t.find(r, [y, y]));
                  }
                  if (!h && !d) {
                    for (var v = g(i(c[0]), f[0]), b = 1; b < u; b++)
                      v = m(v, g(i(c[b]), f[b]));
                    return v;
                  }
                  if (!h && d) {
                    for (var x = g(i(c[0]), f[0][0]), w = 1; w < u; w++)
                      x = m(x, g(i(c[w]), f[w][0]));
                    return x;
                  }
                  if (h && !d) {
                    for (var N = g(i(c[0][0]), f[0]), E = 1; E < u; E++)
                      N = m(N, g(i(c[E][0]), f[E]));
                    return N;
                  }
                  if (h && d) {
                    for (var M = g(i(c[0][0]), f[0][0]), S = 1; S < u; S++)
                      M = m(M, g(i(c[S][0]), f[S][0]));
                    return M;
                  }
                },
                "SparseMatrix, SparseMatrix": function (e, t) {
                  o(e, t);
                  for (
                    var i = e._index,
                      a = e._values,
                      s = t._index,
                      u = t._values,
                      c = 0,
                      l = n,
                      f = r,
                      p = 0,
                      h = 0;
                    p < i.length && h < s.length;

                  ) {
                    var d = i[p],
                      m = s[h];
                    d < m
                      ? p++
                      : d > m
                      ? h++
                      : d === m && ((c = l(c, f(a[p], u[h]))), p++, h++);
                  }
                  return c;
                },
              });
              function o(e, t) {
                var n,
                  r,
                  i = s(e),
                  a = s(t);
                if (1 === i.length) n = i[0];
                else {
                  if (2 !== i.length || 1 !== i[1])
                    throw new RangeError(
                      "Expected a column vector, instead got a matrix of size (" +
                        i.join(", ") +
                        ")"
                    );
                  n = i[0];
                }
                if (1 === a.length) r = a[0];
                else {
                  if (2 !== a.length || 1 !== a[1])
                    throw new RangeError(
                      "Expected a column vector, instead got a matrix of size (" +
                        a.join(", ") +
                        ")"
                    );
                  r = a[0];
                }
                if (n !== r)
                  throw new RangeError(
                    "Vectors must have equal length (" + n + " != " + r + ")"
                  );
                if (0 === n)
                  throw new RangeError(
                    "Cannot calculate the dot product of empty vectors"
                  );
                return n;
              }
              function s(e) {
                return Xt(e) ? e.size() : a(e);
              }
            }
          ),
          Np = Cr("trace", ["typed", "matrix", "add"], function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.add;
            return t("trace", {
              Array: function (e) {
                return i(n(e));
              },
              SparseMatrix: function (e) {
                var t = e._values,
                  n = e._index,
                  i = e._ptr,
                  a = e._size,
                  o = a[0],
                  s = a[1];
                if (o === s) {
                  var u = 0;
                  if (t.length > 0)
                    for (var c = 0; c < s; c++)
                      for (var l = i[c], f = i[c + 1], p = l; p < f; p++) {
                        var h = n[p];
                        if (h === c) {
                          u = r(u, t[p]);
                          break;
                        }
                        if (h > c) break;
                      }
                  return u;
                }
                throw new RangeError(
                  "Matrix must be square (size: " + ur(a) + ")"
                );
              },
              DenseMatrix: i,
              any: Tn,
            });
            function i(e) {
              var t = e._size,
                n = e._data;
              switch (t.length) {
                case 1:
                  if (1 === t[0]) return Tn(n[0]);
                  throw new RangeError(
                    "Matrix must be square (size: " + ur(t) + ")"
                  );
                case 2:
                  var i = t[0];
                  if (i === t[1]) {
                    for (var a = 0, o = 0; o < i; o++) a = r(a, n[o][o]);
                    return a;
                  }
                  throw new RangeError(
                    "Matrix must be square (size: " + ur(t) + ")"
                  );
                default:
                  throw new RangeError(
                    "Matrix must be two dimensional (size: " + ur(t) + ")"
                  );
              }
            }
          }),
          Ep = Cr("index", ["typed", "Index"], function (e) {
            var t = e.typed,
              n = e.Index;
            return t("index", {
              "...number | string | BigNumber | Range | Array | Matrix": function (
                e
              ) {
                var t = e.map(function (e) {
                    return Ht(e)
                      ? e.toNumber()
                      : Array.isArray(e) || Xt(e)
                      ? e.map(function (e) {
                          return Ht(e) ? e.toNumber() : e;
                        })
                      : e;
                  }),
                  r = new n();
                return n.apply(r, t), r;
              },
            });
          }),
          Mp = { end: !0 };
        function Sp(e) {
          return (Sp =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        var _p = Cr(
          "Node",
          ["mathWithTransform"],
          function (e) {
            var t = e.mathWithTransform;
            function n() {
              if (!(this instanceof n))
                throw new SyntaxError(
                  "Constructor must be called with the new operator"
                );
            }
            return (
              (n.prototype.evaluate = function (e) {
                return this.compile().evaluate(e);
              }),
              (n.prototype.type = "Node"),
              (n.prototype.isNode = !0),
              (n.prototype.comment = ""),
              (n.prototype.compile = function () {
                var e = this._compile(t, {}),
                  n = {};
                return {
                  evaluate: function (t) {
                    var r = t || {};
                    return (
                      (function (e) {
                        for (var t in e)
                          if (Bn(e, t) && t in Mp)
                            throw new Error(
                              'Scope contains an illegal symbol, "' +
                                t +
                                '" is a reserved keyword'
                            );
                      })(r),
                      e(r, n, null)
                    );
                  },
                };
              }),
              (n.prototype._compile = function (e, t) {
                throw new Error(
                  "Method _compile should be implemented by type " + this.type
                );
              }),
              (n.prototype.forEach = function (e) {
                throw new Error("Cannot run forEach on a Node interface");
              }),
              (n.prototype.map = function (e) {
                throw new Error("Cannot run map on a Node interface");
              }),
              (n.prototype._ifNode = function (e) {
                if (!Nn(e))
                  throw new TypeError("Callback function must return a Node");
                return e;
              }),
              (n.prototype.traverse = function (e) {
                e(this, null, null),
                  (function e(t, n) {
                    t.forEach(function (t, r, i) {
                      n(t, r, i), e(t, n);
                    });
                  })(this, e);
              }),
              (n.prototype.transform = function (e) {
                return (function t(n, r, i) {
                  var a = e(n, r, i);
                  return a !== n ? a : n.map(t);
                })(this, null, null);
              }),
              (n.prototype.filter = function (e) {
                var t = [];
                return (
                  this.traverse(function (n, r, i) {
                    e(n, r, i) && t.push(n);
                  }),
                  t
                );
              }),
              (n.prototype.clone = function () {
                throw new Error("Cannot clone a Node interface");
              }),
              (n.prototype.cloneDeep = function () {
                return this.map(function (e) {
                  return e.cloneDeep();
                });
              }),
              (n.prototype.equals = function (e) {
                return !!e && Pn(this, e);
              }),
              (n.prototype.toString = function (e) {
                var t;
                if (e && "object" === Sp(e))
                  switch (Sp(e.handler)) {
                    case "object":
                    case "undefined":
                      break;
                    case "function":
                      t = e.handler(this, e);
                      break;
                    default:
                      throw new TypeError(
                        "Object or function expected as callback"
                      );
                  }
                return void 0 !== t ? t : this._toString(e);
              }),
              (n.prototype.toJSON = function () {
                throw new Error(
                  "Cannot serialize object: toJSON not implemented by " +
                    this.type
                );
              }),
              (n.prototype.toHTML = function (e) {
                var t;
                if (e && "object" === Sp(e))
                  switch (Sp(e.handler)) {
                    case "object":
                    case "undefined":
                      break;
                    case "function":
                      t = e.handler(this, e);
                      break;
                    default:
                      throw new TypeError(
                        "Object or function expected as callback"
                      );
                  }
                return void 0 !== t ? t : this.toHTML(e);
              }),
              (n.prototype._toString = function () {
                throw new Error("_toString not implemented for " + this.type);
              }),
              (n.prototype.toTex = function (e) {
                var t;
                if (e && "object" === Sp(e))
                  switch (Sp(e.handler)) {
                    case "object":
                    case "undefined":
                      break;
                    case "function":
                      t = e.handler(this, e);
                      break;
                    default:
                      throw new TypeError(
                        "Object or function expected as callback"
                      );
                  }
                return void 0 !== t ? t : this._toTex(e);
              }),
              (n.prototype._toTex = function (e) {
                throw new Error("_toTex not implemented for " + this.type);
              }),
              (n.prototype.getIdentifier = function () {
                return this.type;
              }),
              (n.prototype.getContent = function () {
                return this;
              }),
              n
            );
          },
          { isClass: !0, isNode: !0 }
        );
        function kp(e) {
          return e && e.isIndexError
            ? new hr(
                e.index + 1,
                e.min + 1,
                void 0 !== e.max ? e.max + 1 : void 0
              )
            : e;
        }
        function Op(e) {
          return (Op =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function Ap(e) {
          var t = e.subset;
          return function (e, n) {
            try {
              if (Array.isArray(e)) return t(e, n);
              if (e && "function" == typeof e.subset) return e.subset(n);
              if ("string" == typeof e) return t(e, n);
              if ("object" === Op(e)) {
                if (!n.isObjectProperty())
                  throw new TypeError(
                    "Cannot apply a numeric index as object property"
                  );
                return mc(e, n.getObjectProperty());
              }
              throw new TypeError(
                "Cannot apply index: unsupported type of object"
              );
            } catch (e) {
              throw kp(e);
            }
          };
        }
        var Cp = Cr(
            "AccessorNode",
            ["subset", "Node"],
            function (e) {
              var t = e.subset,
                n = e.Node,
                r = Ap({ subset: t });
              function i(e, t) {
                if (!(this instanceof i))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!Nn(e))
                  throw new TypeError('Node expected for parameter "object"');
                if (!wn(t))
                  throw new TypeError(
                    'IndexNode expected for parameter "index"'
                  );
                (this.object = e || null),
                  (this.index = t),
                  Object.defineProperty(this, "name", {
                    get: function () {
                      return this.index
                        ? this.index.isObjectProperty()
                          ? this.index.getObjectProperty()
                          : ""
                        : this.object.name || "";
                    }.bind(this),
                    set: function () {
                      throw new Error(
                        "Cannot assign a new name, name is read-only"
                      );
                    },
                  });
              }
              function a(e) {
                return !(
                  hn(e) ||
                  dn(e) ||
                  vn(e) ||
                  xn(e) ||
                  En(e) ||
                  Sn(e) ||
                  kn(e)
                );
              }
              return (
                (i.prototype = new n()),
                (i.prototype.type = "AccessorNode"),
                (i.prototype.isAccessorNode = !0),
                (i.prototype._compile = function (e, t) {
                  var n = this.object._compile(e, t),
                    i = this.index._compile(e, t);
                  if (this.index.isObjectProperty()) {
                    var a = this.index.getObjectProperty();
                    return function (e, t, r) {
                      return mc(n(e, t, r), a);
                    };
                  }
                  return function (e, t, a) {
                    var o = n(e, t, a),
                      s = i(e, t, o);
                    return r(o, s);
                  };
                }),
                (i.prototype.forEach = function (e) {
                  e(this.object, "object", this), e(this.index, "index", this);
                }),
                (i.prototype.map = function (e) {
                  return new i(
                    this._ifNode(e(this.object, "object", this)),
                    this._ifNode(e(this.index, "index", this))
                  );
                }),
                (i.prototype.clone = function () {
                  return new i(this.object, this.index);
                }),
                (i.prototype._toString = function (e) {
                  var t = this.object.toString(e);
                  return (
                    a(this.object) && (t = "(" + t + ")"),
                    t + this.index.toString(e)
                  );
                }),
                (i.prototype.toHTML = function (e) {
                  var t = this.object.toHTML(e);
                  return (
                    a(this.object) &&
                      (t =
                        '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        t +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                    t + this.index.toHTML(e)
                  );
                }),
                (i.prototype._toTex = function (e) {
                  var t = this.object.toTex(e);
                  return (
                    a(this.object) && (t = "\\left(' + object + '\\right)"),
                    t + this.index.toTex(e)
                  );
                }),
                (i.prototype.toJSON = function () {
                  return {
                    mathjs: "AccessorNode",
                    object: this.object,
                    index: this.index,
                  };
                }),
                (i.fromJSON = function (e) {
                  return new i(e.object, e.index);
                }),
                i
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          Tp = Cr(
            "ArrayNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (
                  ((this.items = e || []),
                  !Array.isArray(this.items) || !this.items.every(Nn))
                )
                  throw new TypeError("Array containing Nodes expected");
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "ArrayNode"),
                (n.prototype.isArrayNode = !0),
                (n.prototype._compile = function (e, t) {
                  var n = Nr(this.items, function (n) {
                    return n._compile(e, t);
                  });
                  if ("Array" !== e.config.matrix) {
                    var r = e.matrix;
                    return function (e, t, i) {
                      return r(
                        Nr(n, function (n) {
                          return n(e, t, i);
                        })
                      );
                    };
                  }
                  return function (e, t, r) {
                    return Nr(n, function (n) {
                      return n(e, t, r);
                    });
                  };
                }),
                (n.prototype.forEach = function (e) {
                  for (var t = 0; t < this.items.length; t++)
                    e(this.items[t], "items[" + t + "]", this);
                }),
                (n.prototype.map = function (e) {
                  for (var t = [], r = 0; r < this.items.length; r++)
                    t[r] = this._ifNode(
                      e(this.items[r], "items[" + r + "]", this)
                    );
                  return new n(t);
                }),
                (n.prototype.clone = function () {
                  return new n(this.items.slice(0));
                }),
                (n.prototype._toString = function (e) {
                  return (
                    "[" +
                    this.items
                      .map(function (t) {
                        return t.toString(e);
                      })
                      .join(", ") +
                    "]"
                  );
                }),
                (n.prototype.toJSON = function () {
                  return { mathjs: "ArrayNode", items: this.items };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.items);
                }),
                (n.prototype.toHTML = function (e) {
                  return (
                    '<span class="math-parenthesis math-square-parenthesis">[</span>' +
                    this.items
                      .map(function (t) {
                        return t.toHTML(e);
                      })
                      .join('<span class="math-separator">,</span>') +
                    '<span class="math-parenthesis math-square-parenthesis">]</span>'
                  );
                }),
                (n.prototype._toTex = function (e) {
                  var t = "\\begin{bmatrix}";
                  return (
                    this.items.forEach(function (n) {
                      n.items
                        ? (t += n.items
                            .map(function (t) {
                              return t.toTex(e);
                            })
                            .join("&"))
                        : (t += n.toTex(e)),
                        (t += "\\\\");
                    }),
                    (t += "\\end{bmatrix}")
                  );
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          );
        function Ip(e) {
          return (Ip =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        var Pp = [
          { AssignmentNode: {}, FunctionAssignmentNode: {} },
          {
            ConditionalNode: {
              latexLeftParens: !1,
              latexRightParens: !1,
              latexParens: !1,
            },
          },
          { "OperatorNode:or": { associativity: "left", associativeWith: [] } },
          {
            "OperatorNode:xor": { associativity: "left", associativeWith: [] },
          },
          {
            "OperatorNode:and": { associativity: "left", associativeWith: [] },
          },
          {
            "OperatorNode:bitOr": {
              associativity: "left",
              associativeWith: [],
            },
          },
          {
            "OperatorNode:bitXor": {
              associativity: "left",
              associativeWith: [],
            },
          },
          {
            "OperatorNode:bitAnd": {
              associativity: "left",
              associativeWith: [],
            },
          },
          {
            "OperatorNode:equal": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:unequal": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:smaller": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:larger": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:smallerEq": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:largerEq": {
              associativity: "left",
              associativeWith: [],
            },
            RelationalNode: { associativity: "left", associativeWith: [] },
          },
          {
            "OperatorNode:leftShift": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:rightArithShift": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:rightLogShift": {
              associativity: "left",
              associativeWith: [],
            },
          },
          { "OperatorNode:to": { associativity: "left", associativeWith: [] } },
          { RangeNode: {} },
          {
            "OperatorNode:add": {
              associativity: "left",
              associativeWith: ["OperatorNode:add", "OperatorNode:subtract"],
            },
            "OperatorNode:subtract": {
              associativity: "left",
              associativeWith: [],
            },
          },
          {
            "OperatorNode:multiply": {
              associativity: "left",
              associativeWith: [
                "OperatorNode:multiply",
                "OperatorNode:divide",
                "Operator:dotMultiply",
                "Operator:dotDivide",
              ],
            },
            "OperatorNode:divide": {
              associativity: "left",
              associativeWith: [],
              latexLeftParens: !1,
              latexRightParens: !1,
              latexParens: !1,
            },
            "OperatorNode:dotMultiply": {
              associativity: "left",
              associativeWith: [
                "OperatorNode:multiply",
                "OperatorNode:divide",
                "OperatorNode:dotMultiply",
                "OperatorNode:doDivide",
              ],
            },
            "OperatorNode:dotDivide": {
              associativity: "left",
              associativeWith: [],
            },
            "OperatorNode:mod": { associativity: "left", associativeWith: [] },
          },
          {
            "OperatorNode:unaryPlus": { associativity: "right" },
            "OperatorNode:unaryMinus": { associativity: "right" },
            "OperatorNode:bitNot": { associativity: "right" },
            "OperatorNode:not": { associativity: "right" },
          },
          {
            "OperatorNode:pow": {
              associativity: "right",
              associativeWith: [],
              latexRightParens: !1,
            },
            "OperatorNode:dotPow": {
              associativity: "right",
              associativeWith: [],
            },
          },
          { "OperatorNode:factorial": { associativity: "left" } },
          { "OperatorNode:transpose": { associativity: "left" } },
        ];
        function Bp(e, t) {
          var n = e;
          "keep" !== t && (n = e.getContent());
          for (var r = n.getIdentifier(), i = 0; i < Pp.length; i++)
            if (r in Pp[i]) return i;
          return null;
        }
        function Dp(e, t) {
          var n = e;
          "keep" !== t && (n = e.getContent());
          var r = n.getIdentifier(),
            i = Bp(n, t);
          if (null === i) return null;
          var a = Pp[i][r];
          if (Bn(a, "associativity")) {
            if ("left" === a.associativity) return "left";
            if ("right" === a.associativity) return "right";
            throw Error(
              "'" +
                r +
                "' has the invalid associativity '" +
                a.associativity +
                "'."
            );
          }
          return null;
        }
        function jp(e, t, n) {
          var r = "keep" !== n ? e.getContent() : e,
            i = "keep" !== n ? e.getContent() : t,
            a = r.getIdentifier(),
            o = i.getIdentifier(),
            s = Bp(r, n);
          if (null === s) return null;
          var u = Pp[s][a];
          if (Bn(u, "associativeWith") && u.associativeWith instanceof Array) {
            for (var c = 0; c < u.associativeWith.length; c++)
              if (u.associativeWith[c] === o) return !0;
            return !1;
          }
          return null;
        }
        var Rp = Cr(
            "AssignmentNode",
            ["subset", "?matrix", "Node"],
            function (e) {
              var t = e.subset,
                n = e.matrix,
                r = e.Node,
                i = Ap({ subset: t }),
                a = (function (e) {
                  var t = e.subset,
                    n = e.matrix;
                  return function (e, r, i) {
                    try {
                      if (Array.isArray(e)) return n(e).subset(r, i).valueOf();
                      if (e && "function" == typeof e.subset)
                        return e.subset(r, i);
                      if ("string" == typeof e) return t(e, r, i);
                      if ("object" === Ip(e)) {
                        if (!r.isObjectProperty())
                          throw TypeError(
                            "Cannot apply a numeric index as object property"
                          );
                        return gc(e, r.getObjectProperty(), i), e;
                      }
                      throw new TypeError(
                        "Cannot apply index: unsupported type of object"
                      );
                    } catch (e) {
                      throw kp(e);
                    }
                  };
                })({ subset: t, matrix: n });
              function o(e, t, n) {
                if (!(this instanceof o))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (
                  ((this.object = e),
                  (this.index = n ? t : null),
                  (this.value = n || t),
                  !kn(e) && !hn(e))
                )
                  throw new TypeError(
                    'SymbolNode or AccessorNode expected as "object"'
                  );
                if (kn(e) && "end" === e.name)
                  throw new Error('Cannot assign to symbol "end"');
                if (this.index && !wn(this.index))
                  throw new TypeError('IndexNode expected as "index"');
                if (!Nn(this.value))
                  throw new TypeError('Node expected as "value"');
                Object.defineProperty(this, "name", {
                  get: function () {
                    return this.index
                      ? this.index.isObjectProperty()
                        ? this.index.getObjectProperty()
                        : ""
                      : this.object.name || "";
                  }.bind(this),
                  set: function () {
                    throw new Error(
                      "Cannot assign a new name, name is read-only"
                    );
                  },
                });
              }
              function s(e, t) {
                t || (t = "keep");
                var n = Bp(e, t),
                  r = Bp(e.value, t);
                return "all" === t || (null !== r && r <= n);
              }
              return (
                (o.prototype = new r()),
                (o.prototype.type = "AssignmentNode"),
                (o.prototype.isAssignmentNode = !0),
                (o.prototype._compile = function (e, t) {
                  var n = this.object._compile(e, t),
                    r = this.index ? this.index._compile(e, t) : null,
                    o = this.value._compile(e, t),
                    s = this.object.name;
                  if (this.index) {
                    if (this.index.isObjectProperty()) {
                      var u = this.index.getObjectProperty();
                      return function (e, t, r) {
                        var i = n(e, t, r),
                          a = o(e, t, r);
                        return gc(i, u, a);
                      };
                    }
                    if (kn(this.object))
                      return function (e, t, i) {
                        var u = n(e, t, i),
                          c = o(e, t, i),
                          l = r(e, t, u);
                        return gc(e, s, a(u, l, c)), c;
                      };
                    var c = this.object.object._compile(e, t);
                    if (this.object.index.isObjectProperty()) {
                      var l = this.object.index.getObjectProperty();
                      return function (e, t, n) {
                        var i = c(e, t, n),
                          s = mc(i, l),
                          u = r(e, t, s),
                          f = o(e, t, n);
                        return gc(i, l, a(s, u, f)), f;
                      };
                    }
                    var f = this.object.index._compile(e, t);
                    return function (e, t, n) {
                      var s = c(e, t, n),
                        u = f(e, t, s),
                        l = i(s, u),
                        p = r(e, t, l),
                        h = o(e, t, n);
                      return a(s, u, a(l, p, h)), h;
                    };
                  }
                  if (!kn(this.object))
                    throw new TypeError("SymbolNode expected as object");
                  return function (e, t, n) {
                    return gc(e, s, o(e, t, n));
                  };
                }),
                (o.prototype.forEach = function (e) {
                  e(this.object, "object", this),
                    this.index && e(this.index, "index", this),
                    e(this.value, "value", this);
                }),
                (o.prototype.map = function (e) {
                  return new o(
                    this._ifNode(e(this.object, "object", this)),
                    this.index
                      ? this._ifNode(e(this.index, "index", this))
                      : null,
                    this._ifNode(e(this.value, "value", this))
                  );
                }),
                (o.prototype.clone = function () {
                  return new o(this.object, this.index, this.value);
                }),
                (o.prototype._toString = function (e) {
                  var t = this.object.toString(e),
                    n = this.index ? this.index.toString(e) : "",
                    r = this.value.toString(e);
                  return (
                    s(this, e && e.parenthesis) && (r = "(" + r + ")"),
                    t + n + " = " + r
                  );
                }),
                (o.prototype.toJSON = function () {
                  return {
                    mathjs: "AssignmentNode",
                    object: this.object,
                    index: this.index,
                    value: this.value,
                  };
                }),
                (o.fromJSON = function (e) {
                  return new o(e.object, e.index, e.value);
                }),
                (o.prototype.toHTML = function (e) {
                  var t = this.object.toHTML(e),
                    n = this.index ? this.index.toHTML(e) : "",
                    r = this.value.toHTML(e);
                  return (
                    s(this, e && e.parenthesis) &&
                      (r =
                        '<span class="math-paranthesis math-round-parenthesis">(</span>' +
                        r +
                        '<span class="math-paranthesis math-round-parenthesis">)</span>'),
                    t +
                      n +
                      '<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' +
                      r
                  );
                }),
                (o.prototype._toTex = function (e) {
                  var t = this.object.toTex(e),
                    n = this.index ? this.index.toTex(e) : "",
                    r = this.value.toTex(e);
                  return (
                    s(this, e && e.parenthesis) &&
                      (r = "\\left(".concat(r, "\\right)")),
                    t + n + ":=" + r
                  );
                }),
                o
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          Lp = Cr(
            "BlockNode",
            ["ResultSet", "Node"],
            function (e) {
              var t = e.ResultSet,
                n = e.Node;
              function r(e) {
                if (!(this instanceof r))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!Array.isArray(e)) throw new Error("Array expected");
                this.blocks = e.map(function (e) {
                  var t = e && e.node,
                    n = !e || void 0 === e.visible || e.visible;
                  if (!Nn(t))
                    throw new TypeError('Property "node" must be a Node');
                  if ("boolean" != typeof n)
                    throw new TypeError('Property "visible" must be a boolean');
                  return { node: t, visible: n };
                });
              }
              return (
                (r.prototype = new n()),
                (r.prototype.type = "BlockNode"),
                (r.prototype.isBlockNode = !0),
                (r.prototype._compile = function (e, n) {
                  var r = Nr(this.blocks, function (t) {
                    return {
                      evaluate: t.node._compile(e, n),
                      visible: t.visible,
                    };
                  });
                  return function (e, n, i) {
                    var a = [];
                    return (
                      Er(r, function (t) {
                        var r = t.evaluate(e, n, i);
                        t.visible && a.push(r);
                      }),
                      new t(a)
                    );
                  };
                }),
                (r.prototype.forEach = function (e) {
                  for (var t = 0; t < this.blocks.length; t++)
                    e(this.blocks[t].node, "blocks[" + t + "].node", this);
                }),
                (r.prototype.map = function (e) {
                  for (var t = [], n = 0; n < this.blocks.length; n++) {
                    var i = this.blocks[n],
                      a = this._ifNode(
                        e(i.node, "blocks[" + n + "].node", this)
                      );
                    t[n] = { node: a, visible: i.visible };
                  }
                  return new r(t);
                }),
                (r.prototype.clone = function () {
                  return new r(
                    this.blocks.map(function (e) {
                      return { node: e.node, visible: e.visible };
                    })
                  );
                }),
                (r.prototype._toString = function (e) {
                  return this.blocks
                    .map(function (t) {
                      return t.node.toString(e) + (t.visible ? "" : ";");
                    })
                    .join("\n");
                }),
                (r.prototype.toJSON = function () {
                  return { mathjs: "BlockNode", blocks: this.blocks };
                }),
                (r.fromJSON = function (e) {
                  return new r(e.blocks);
                }),
                (r.prototype.toHTML = function (e) {
                  return this.blocks
                    .map(function (t) {
                      return (
                        t.node.toHTML(e) +
                        (t.visible
                          ? ""
                          : '<span class="math-separator">;</span>')
                      );
                    })
                    .join('<span class="math-separator"><br /></span>');
                }),
                (r.prototype._toTex = function (e) {
                  return this.blocks
                    .map(function (t) {
                      return t.node.toTex(e) + (t.visible ? "" : ";");
                    })
                    .join("\\;\\;\n");
                }),
                r
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          zp = Cr(
            "ConditionalNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e, t, r) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!Nn(e))
                  throw new TypeError("Parameter condition must be a Node");
                if (!Nn(t))
                  throw new TypeError("Parameter trueExpr must be a Node");
                if (!Nn(r))
                  throw new TypeError("Parameter falseExpr must be a Node");
                (this.condition = e), (this.trueExpr = t), (this.falseExpr = r);
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "ConditionalNode"),
                (n.prototype.isConditionalNode = !0),
                (n.prototype._compile = function (e, t) {
                  var n = this.condition._compile(e, t),
                    r = this.trueExpr._compile(e, t),
                    i = this.falseExpr._compile(e, t);
                  return function (e, t, a) {
                    return (function (e) {
                      if (
                        "number" == typeof e ||
                        "boolean" == typeof e ||
                        "string" == typeof e
                      )
                        return !!e;
                      if (e) {
                        if (Ht(e)) return !e.isZero();
                        if (Wt(e)) return !(!e.re && !e.im);
                        if (Jt(e)) return !!e.value;
                      }
                      if (null == e) return !1;
                      throw new TypeError(
                        'Unsupported type of condition "' + An(e) + '"'
                      );
                    })(n(e, t, a))
                      ? r(e, t, a)
                      : i(e, t, a);
                  };
                }),
                (n.prototype.forEach = function (e) {
                  e(this.condition, "condition", this),
                    e(this.trueExpr, "trueExpr", this),
                    e(this.falseExpr, "falseExpr", this);
                }),
                (n.prototype.map = function (e) {
                  return new n(
                    this._ifNode(e(this.condition, "condition", this)),
                    this._ifNode(e(this.trueExpr, "trueExpr", this)),
                    this._ifNode(e(this.falseExpr, "falseExpr", this))
                  );
                }),
                (n.prototype.clone = function () {
                  return new n(this.condition, this.trueExpr, this.falseExpr);
                }),
                (n.prototype._toString = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = Bp(this, t),
                    r = this.condition.toString(e),
                    i = Bp(this.condition, t);
                  ("all" === t ||
                    "OperatorNode" === this.condition.type ||
                    (null !== i && i <= n)) &&
                    (r = "(" + r + ")");
                  var a = this.trueExpr.toString(e),
                    o = Bp(this.trueExpr, t);
                  ("all" === t ||
                    "OperatorNode" === this.trueExpr.type ||
                    (null !== o && o <= n)) &&
                    (a = "(" + a + ")");
                  var s = this.falseExpr.toString(e),
                    u = Bp(this.falseExpr, t);
                  return (
                    ("all" === t ||
                      "OperatorNode" === this.falseExpr.type ||
                      (null !== u && u <= n)) &&
                      (s = "(" + s + ")"),
                    r + " ? " + a + " : " + s
                  );
                }),
                (n.prototype.toJSON = function () {
                  return {
                    mathjs: "ConditionalNode",
                    condition: this.condition,
                    trueExpr: this.trueExpr,
                    falseExpr: this.falseExpr,
                  };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.condition, e.trueExpr, e.falseExpr);
                }),
                (n.prototype.toHTML = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = Bp(this, t),
                    r = this.condition.toHTML(e),
                    i = Bp(this.condition, t);
                  ("all" === t ||
                    "OperatorNode" === this.condition.type ||
                    (null !== i && i <= n)) &&
                    (r =
                      '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                      r +
                      '<span class="math-parenthesis math-round-parenthesis">)</span>');
                  var a = this.trueExpr.toHTML(e),
                    o = Bp(this.trueExpr, t);
                  ("all" === t ||
                    "OperatorNode" === this.trueExpr.type ||
                    (null !== o && o <= n)) &&
                    (a =
                      '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                      a +
                      '<span class="math-parenthesis math-round-parenthesis">)</span>');
                  var s = this.falseExpr.toHTML(e),
                    u = Bp(this.falseExpr, t);
                  return (
                    ("all" === t ||
                      "OperatorNode" === this.falseExpr.type ||
                      (null !== u && u <= n)) &&
                      (s =
                        '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        s +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                    r +
                      '<span class="math-operator math-conditional-operator">?</span>' +
                      a +
                      '<span class="math-operator math-conditional-operator">:</span>' +
                      s
                  );
                }),
                (n.prototype._toTex = function (e) {
                  return (
                    "\\begin{cases} {" +
                    this.trueExpr.toTex(e) +
                    "}, &\\quad{\\text{if }\\;" +
                    this.condition.toTex(e) +
                    "}\\\\{" +
                    this.falseExpr.toTex(e) +
                    "}, &\\quad{\\text{otherwise}}\\end{cases}"
                  );
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          qp =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            },
          Fp = {
            "{": "\\{",
            "}": "\\}",
            "\\": "\\textbackslash{}",
            "#": "\\#",
            $: "\\$",
            "%": "\\%",
            "&": "\\&",
            "^": "\\textasciicircum{}",
            _: "\\_",
            "~": "\\textasciitilde{}",
          },
          Up = {
            "–": "\\--",
            "—": "\\---",
            " ": "~",
            "\t": "\\qquad{}",
            "\r\n": "\\newline{}",
            "\n": "\\newline{}",
          },
          Vp = function (e, t) {
            return qp({}, e, t);
          },
          $p = {
            Alpha: "A",
            alpha: "\\alpha",
            Beta: "B",
            beta: "\\beta",
            Gamma: "\\Gamma",
            gamma: "\\gamma",
            Delta: "\\Delta",
            delta: "\\delta",
            Epsilon: "E",
            epsilon: "\\epsilon",
            varepsilon: "\\varepsilon",
            Zeta: "Z",
            zeta: "\\zeta",
            Eta: "H",
            eta: "\\eta",
            Theta: "\\Theta",
            theta: "\\theta",
            vartheta: "\\vartheta",
            Iota: "I",
            iota: "\\iota",
            Kappa: "K",
            kappa: "\\kappa",
            varkappa: "\\varkappa",
            Lambda: "\\Lambda",
            lambda: "\\lambda",
            Mu: "M",
            mu: "\\mu",
            Nu: "N",
            nu: "\\nu",
            Xi: "\\Xi",
            xi: "\\xi",
            Omicron: "O",
            omicron: "o",
            Pi: "\\Pi",
            pi: "\\pi",
            varpi: "\\varpi",
            Rho: "P",
            rho: "\\rho",
            varrho: "\\varrho",
            Sigma: "\\Sigma",
            sigma: "\\sigma",
            varsigma: "\\varsigma",
            Tau: "T",
            tau: "\\tau",
            Upsilon: "\\Upsilon",
            upsilon: "\\upsilon",
            Phi: "\\Phi",
            phi: "\\phi",
            varphi: "\\varphi",
            Chi: "X",
            chi: "\\chi",
            Psi: "\\Psi",
            psi: "\\psi",
            Omega: "\\Omega",
            omega: "\\omega",
            true: "\\mathrm{True}",
            false: "\\mathrm{False}",
            i: "i",
            inf: "\\infty",
            Inf: "\\infty",
            infinity: "\\infty",
            Infinity: "\\infty",
            oo: "\\infty",
            lim: "\\lim",
            undefined: "\\mathbf{?}",
          },
          Hp = {
            transpose: "^\\top",
            ctranspose: "^H",
            factorial: "!",
            pow: "^",
            dotPow: ".^\\wedge",
            unaryPlus: "+",
            unaryMinus: "-",
            bitNot: "\\~",
            not: "\\neg",
            multiply: "\\cdot",
            divide: "\\frac",
            dotMultiply: ".\\cdot",
            dotDivide: ".:",
            mod: "\\mod",
            add: "+",
            subtract: "-",
            to: "\\rightarrow",
            leftShift: "<<",
            rightArithShift: ">>",
            rightLogShift: ">>>",
            equal: "=",
            unequal: "\\neq",
            smaller: "<",
            larger: ">",
            smallerEq: "\\leq",
            largerEq: "\\geq",
            bitAnd: "\\&",
            bitXor: "\\underline{|}",
            bitOr: "|",
            and: "\\wedge",
            xor: "\\veebar",
            or: "\\vee",
          },
          Wp = {
            abs: { 1: "\\left|${args[0]}\\right|" },
            add: {
              2: "\\left(${args[0]}".concat(Hp.add, "${args[1]}\\right)"),
            },
            cbrt: { 1: "\\sqrt[3]{${args[0]}}" },
            ceil: { 1: "\\left\\lceil${args[0]}\\right\\rceil" },
            cube: { 1: "\\left(${args[0]}\\right)^3" },
            divide: { 2: "\\frac{${args[0]}}{${args[1]}}" },
            dotDivide: {
              2: "\\left(${args[0]}".concat(Hp.dotDivide, "${args[1]}\\right)"),
            },
            dotMultiply: {
              2: "\\left(${args[0]}".concat(
                Hp.dotMultiply,
                "${args[1]}\\right)"
              ),
            },
            dotPow: {
              2: "\\left(${args[0]}".concat(Hp.dotPow, "${args[1]}\\right)"),
            },
            exp: { 1: "\\exp\\left(${args[0]}\\right)" },
            expm1: "\\left(e".concat(Hp.pow, "{${args[0]}}-1\\right)"),
            fix: { 1: "\\mathrm{${name}}\\left(${args[0]}\\right)" },
            floor: { 1: "\\left\\lfloor${args[0]}\\right\\rfloor" },
            gcd: "\\gcd\\left(${args}\\right)",
            hypot: "\\hypot\\left(${args}\\right)",
            log: {
              1: "\\ln\\left(${args[0]}\\right)",
              2: "\\log_{${args[1]}}\\left(${args[0]}\\right)",
            },
            log10: { 1: "\\log_{10}\\left(${args[0]}\\right)" },
            log1p: {
              1: "\\ln\\left(${args[0]}+1\\right)",
              2: "\\log_{${args[1]}}\\left(${args[0]}+1\\right)",
            },
            log2: "\\log_{2}\\left(${args[0]}\\right)",
            mod: {
              2: "\\left(${args[0]}".concat(Hp.mod, "${args[1]}\\right)"),
            },
            multiply: {
              2: "\\left(${args[0]}".concat(Hp.multiply, "${args[1]}\\right)"),
            },
            norm: { 1: "\\left\\|${args[0]}\\right\\|", 2: void 0 },
            nthRoot: { 2: "\\sqrt[${args[1]}]{${args[0]}}" },
            nthRoots: { 2: "\\{y : $y^{args[1]} = {${args[0]}}\\}" },
            pow: {
              2: "\\left(${args[0]}\\right)".concat(Hp.pow, "{${args[1]}}"),
            },
            round: { 1: "\\left\\lfloor${args[0]}\\right\\rceil", 2: void 0 },
            sign: { 1: "\\mathrm{${name}}\\left(${args[0]}\\right)" },
            sqrt: { 1: "\\sqrt{${args[0]}}" },
            square: { 1: "\\left(${args[0]}\\right)^2" },
            subtract: {
              2: "\\left(${args[0]}".concat(Hp.subtract, "${args[1]}\\right)"),
            },
            unaryMinus: {
              1: "".concat(Hp.unaryMinus, "\\left(${args[0]}\\right)"),
            },
            unaryPlus: {
              1: "".concat(Hp.unaryPlus, "\\left(${args[0]}\\right)"),
            },
            bitAnd: {
              2: "\\left(${args[0]}".concat(Hp.bitAnd, "${args[1]}\\right)"),
            },
            bitNot: { 1: Hp.bitNot + "\\left(${args[0]}\\right)" },
            bitOr: {
              2: "\\left(${args[0]}".concat(Hp.bitOr, "${args[1]}\\right)"),
            },
            bitXor: {
              2: "\\left(${args[0]}".concat(Hp.bitXor, "${args[1]}\\right)"),
            },
            leftShift: {
              2: "\\left(${args[0]}".concat(Hp.leftShift, "${args[1]}\\right)"),
            },
            rightArithShift: {
              2: "\\left(${args[0]}".concat(
                Hp.rightArithShift,
                "${args[1]}\\right)"
              ),
            },
            rightLogShift: {
              2: "\\left(${args[0]}".concat(
                Hp.rightLogShift,
                "${args[1]}\\right)"
              ),
            },
            bellNumbers: { 1: "\\mathrm{B}_{${args[0]}}" },
            catalan: { 1: "\\mathrm{C}_{${args[0]}}" },
            stirlingS2: { 2: "\\mathrm{S}\\left(${args}\\right)" },
            arg: { 1: "\\arg\\left(${args[0]}\\right)" },
            conj: { 1: "\\left(${args[0]}\\right)^*" },
            im: { 1: "\\Im\\left\\lbrace${args[0]}\\right\\rbrace" },
            re: { 1: "\\Re\\left\\lbrace${args[0]}\\right\\rbrace" },
            and: {
              2: "\\left(${args[0]}".concat(Hp.and, "${args[1]}\\right)"),
            },
            not: { 1: Hp.not + "\\left(${args[0]}\\right)" },
            or: { 2: "\\left(${args[0]}".concat(Hp.or, "${args[1]}\\right)") },
            xor: {
              2: "\\left(${args[0]}".concat(Hp.xor, "${args[1]}\\right)"),
            },
            cross: {
              2: "\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)",
            },
            ctranspose: {
              1: "\\left(${args[0]}\\right)".concat(Hp.ctranspose),
            },
            det: { 1: "\\det\\left(${args[0]}\\right)" },
            dot: { 2: "\\left(${args[0]}\\cdot${args[1]}\\right)" },
            expm: { 1: "\\exp\\left(${args[0]}\\right)" },
            inv: { 1: "\\left(${args[0]}\\right)^{-1}" },
            sqrtm: { 1: "{${args[0]}}".concat(Hp.pow, "{\\frac{1}{2}}") },
            trace: { 1: "\\mathrm{tr}\\left(${args[0]}\\right)" },
            transpose: { 1: "\\left(${args[0]}\\right)".concat(Hp.transpose) },
            combinations: { 2: "\\binom{${args[0]}}{${args[1]}}" },
            combinationsWithRep: {
              2: "\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)",
            },
            factorial: { 1: "\\left(${args[0]}\\right)".concat(Hp.factorial) },
            gamma: { 1: "\\Gamma\\left(${args[0]}\\right)" },
            equal: {
              2: "\\left(${args[0]}".concat(Hp.equal, "${args[1]}\\right)"),
            },
            larger: {
              2: "\\left(${args[0]}".concat(Hp.larger, "${args[1]}\\right)"),
            },
            largerEq: {
              2: "\\left(${args[0]}".concat(Hp.largerEq, "${args[1]}\\right)"),
            },
            smaller: {
              2: "\\left(${args[0]}".concat(Hp.smaller, "${args[1]}\\right)"),
            },
            smallerEq: {
              2: "\\left(${args[0]}".concat(Hp.smallerEq, "${args[1]}\\right)"),
            },
            unequal: {
              2: "\\left(${args[0]}".concat(Hp.unequal, "${args[1]}\\right)"),
            },
            erf: { 1: "erf\\left(${args[0]}\\right)" },
            max: "\\max\\left(${args}\\right)",
            min: "\\min\\left(${args}\\right)",
            variance: "\\mathrm{Var}\\left(${args}\\right)",
            acos: { 1: "\\cos^{-1}\\left(${args[0]}\\right)" },
            acosh: { 1: "\\cosh^{-1}\\left(${args[0]}\\right)" },
            acot: { 1: "\\cot^{-1}\\left(${args[0]}\\right)" },
            acoth: { 1: "\\coth^{-1}\\left(${args[0]}\\right)" },
            acsc: { 1: "\\csc^{-1}\\left(${args[0]}\\right)" },
            acsch: { 1: "\\mathrm{csch}^{-1}\\left(${args[0]}\\right)" },
            asec: { 1: "\\sec^{-1}\\left(${args[0]}\\right)" },
            asech: { 1: "\\mathrm{sech}^{-1}\\left(${args[0]}\\right)" },
            asin: { 1: "\\sin^{-1}\\left(${args[0]}\\right)" },
            asinh: { 1: "\\sinh^{-1}\\left(${args[0]}\\right)" },
            atan: { 1: "\\tan^{-1}\\left(${args[0]}\\right)" },
            atan2: { 2: "\\mathrm{atan2}\\left(${args}\\right)" },
            atanh: { 1: "\\tanh^{-1}\\left(${args[0]}\\right)" },
            cos: { 1: "\\cos\\left(${args[0]}\\right)" },
            cosh: { 1: "\\cosh\\left(${args[0]}\\right)" },
            cot: { 1: "\\cot\\left(${args[0]}\\right)" },
            coth: { 1: "\\coth\\left(${args[0]}\\right)" },
            csc: { 1: "\\csc\\left(${args[0]}\\right)" },
            csch: { 1: "\\mathrm{csch}\\left(${args[0]}\\right)" },
            sec: { 1: "\\sec\\left(${args[0]}\\right)" },
            sech: { 1: "\\mathrm{sech}\\left(${args[0]}\\right)" },
            sin: { 1: "\\sin\\left(${args[0]}\\right)" },
            sinh: { 1: "\\sinh\\left(${args[0]}\\right)" },
            tan: { 1: "\\tan\\left(${args[0]}\\right)" },
            tanh: { 1: "\\tanh\\left(${args[0]}\\right)" },
            to: { 2: "\\left(${args[0]}".concat(Hp.to, "${args[1]}\\right)") },
            numeric: function (e, t) {
              return e.args[0].toTex();
            },
            number: {
              0: "0",
              1: "\\left(${args[0]}\\right)",
              2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)",
            },
            string: {
              0: '\\mathtt{""}',
              1: "\\mathrm{string}\\left(${args[0]}\\right)",
            },
            bignumber: { 0: "0", 1: "\\left(${args[0]}\\right)" },
            complex: {
              0: "0",
              1: "\\left(${args[0]}\\right)",
              2: "\\left(\\left(${args[0]}\\right)+".concat(
                $p.i,
                "\\cdot\\left(${args[1]}\\right)\\right)"
              ),
            },
            matrix: {
              0: "\\begin{bmatrix}\\end{bmatrix}",
              1: "\\left(${args[0]}\\right)",
              2: "\\left(${args[0]}\\right)",
            },
            sparse: {
              0: "\\begin{bsparse}\\end{bsparse}",
              1: "\\left(${args[0]}\\right)",
            },
            unit: {
              1: "\\left(${args[0]}\\right)",
              2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)",
            },
          },
          Gp = { deg: "^\\circ" };
        function Jp(e) {
          return (function (e) {
            for (
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                n = t.preserveFormatting,
                r = void 0 !== n && n,
                i = t.escapeMapFn,
                a = void 0 === i ? Vp : i,
                o = String(e),
                s = "",
                u = a(qp({}, Fp), r ? qp({}, Up) : {}),
                c = Object.keys(u),
                l = function () {
                  var e = !1;
                  c.forEach(function (t, n) {
                    e ||
                      (o.length >= t.length &&
                        o.slice(0, t.length) === t &&
                        ((s += u[c[n]]),
                        (o = o.slice(t.length, o.length)),
                        (e = !0)));
                  }),
                    e || ((s += o.slice(0, 1)), (o = o.slice(1, o.length)));
                };
              o;

            )
              l();
            return s;
          })(e, { preserveFormatting: !0 });
        }
        function Yp(e, t) {
          return (t = void 0 !== t && t)
            ? Bn(Gp, e)
              ? Gp[e]
              : "\\mathrm{" + Jp(e) + "}"
            : Bn($p, e)
            ? $p[e]
            : Jp(e);
        }
        var Zp = Cr(
            "ConstantNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                this.value = e;
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "ConstantNode"),
                (n.prototype.isConstantNode = !0),
                (n.prototype._compile = function (e, t) {
                  var n = this.value;
                  return function () {
                    return n;
                  };
                }),
                (n.prototype.forEach = function (e) {}),
                (n.prototype.map = function (e) {
                  return this.clone();
                }),
                (n.prototype.clone = function () {
                  return new n(this.value);
                }),
                (n.prototype._toString = function (e) {
                  return ur(this.value, e);
                }),
                (n.prototype.toHTML = function (e) {
                  var t = this._toString(e);
                  switch (An(this.value)) {
                    case "number":
                    case "BigNumber":
                    case "Fraction":
                      return '<span class="math-number">' + t + "</span>";
                    case "string":
                      return '<span class="math-string">' + t + "</span>";
                    case "boolean":
                      return '<span class="math-boolean">' + t + "</span>";
                    case "null":
                      return '<span class="math-null-symbol">' + t + "</span>";
                    case "undefined":
                      return '<span class="math-undefined">' + t + "</span>";
                    default:
                      return '<span class="math-symbol">' + t + "</span>";
                  }
                }),
                (n.prototype.toJSON = function () {
                  return { mathjs: "ConstantNode", value: this.value };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.value);
                }),
                (n.prototype._toTex = function (e) {
                  var t = this._toString(e);
                  switch (An(this.value)) {
                    case "string":
                      return "\\mathtt{" + Jp(t) + "}";
                    case "number":
                    case "BigNumber":
                      if (!isFinite(this.value))
                        return this.value.valueOf() < 0
                          ? "-\\infty"
                          : "\\infty";
                      var n = t.toLowerCase().indexOf("e");
                      return -1 !== n
                        ? t.substring(0, n) +
                            "\\cdot10^{" +
                            t.substring(n + 1) +
                            "}"
                        : t;
                    case "Fraction":
                      return this.value.toLatex();
                    default:
                      return t;
                  }
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          Xp = Cr(
            "FunctionAssignmentNode",
            ["typed", "Node"],
            function (e) {
              var t = e.typed,
                n = e.Node;
              function r(e, t, n) {
                if (!(this instanceof r))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if ("string" != typeof e)
                  throw new TypeError('String expected for parameter "name"');
                if (!Array.isArray(t))
                  throw new TypeError(
                    'Array containing strings or objects expected for parameter "params"'
                  );
                if (!Nn(n))
                  throw new TypeError('Node expected for parameter "expr"');
                if (e in Mp)
                  throw new Error(
                    'Illegal function name, "' + e + '" is a reserved keyword'
                  );
                (this.name = e),
                  (this.params = t.map(function (e) {
                    return (e && e.name) || e;
                  })),
                  (this.types = t.map(function (e) {
                    return (e && e.type) || "any";
                  })),
                  (this.expr = n);
              }
              function i(e, t) {
                var n = Bp(e, t),
                  r = Bp(e.expr, t);
                return "all" === t || (null !== r && r <= n);
              }
              return (
                (r.prototype = new n()),
                (r.prototype.type = "FunctionAssignmentNode"),
                (r.prototype.isFunctionAssignmentNode = !0),
                (r.prototype._compile = function (e, n) {
                  var r = Object.create(n);
                  Er(this.params, function (e) {
                    r[e] = !0;
                  });
                  var i = this.expr._compile(e, r),
                    a = this.name,
                    o = this.params,
                    s = _r(this.types, ","),
                    u = a + "(" + _r(this.params, ", ") + ")";
                  return function (e, n, r) {
                    var c = {};
                    c[s] = function () {
                      for (var t = Object.create(n), a = 0; a < o.length; a++)
                        t[o[a]] = arguments[a];
                      return i(e, t, r);
                    };
                    var l = t(a, c);
                    return (l.syntax = u), gc(e, a, l), l;
                  };
                }),
                (r.prototype.forEach = function (e) {
                  e(this.expr, "expr", this);
                }),
                (r.prototype.map = function (e) {
                  var t = this._ifNode(e(this.expr, "expr", this));
                  return new r(this.name, this.params.slice(0), t);
                }),
                (r.prototype.clone = function () {
                  return new r(this.name, this.params.slice(0), this.expr);
                }),
                (r.prototype._toString = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = this.expr.toString(e);
                  return (
                    i(this, t) && (n = "(" + n + ")"),
                    this.name + "(" + this.params.join(", ") + ") = " + n
                  );
                }),
                (r.prototype.toJSON = function () {
                  var e = this.types;
                  return {
                    mathjs: "FunctionAssignmentNode",
                    name: this.name,
                    params: this.params.map(function (t, n) {
                      return { name: t, type: e[n] };
                    }),
                    expr: this.expr,
                  };
                }),
                (r.fromJSON = function (e) {
                  return new r(e.name, e.params, e.expr);
                }),
                (r.prototype.toHTML = function (e) {
                  for (
                    var t = e && e.parenthesis ? e.parenthesis : "keep",
                      n = [],
                      r = 0;
                    r < this.params.length;
                    r++
                  )
                    n.push(
                      '<span class="math-symbol math-parameter">' +
                        lr(this.params[r]) +
                        "</span>"
                    );
                  var a = this.expr.toHTML(e);
                  return (
                    i(this, t) &&
                      (a =
                        '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        a +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                    '<span class="math-function">' +
                      lr(this.name) +
                      '</span><span class="math-parenthesis math-round-parenthesis">(</span>' +
                      n.join('<span class="math-separator">,</span>') +
                      '<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' +
                      a
                  );
                }),
                (r.prototype._toTex = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = this.expr.toTex(e);
                  return (
                    i(this, t) && (n = "\\left(".concat(n, "\\right)")),
                    "\\mathrm{" +
                      this.name +
                      "}\\left(" +
                      this.params.map(Yp).join(",") +
                      "\\right):=" +
                      n
                  );
                }),
                r
              );
            },
            { isClass: !0, isNode: !0 }
          );
        function Kp(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        var Qp = Cr(
          "IndexNode",
          ["Range", "Node", "size"],
          function (e) {
            var t = e.Range,
              n = e.Node,
              r = e.size;
            function i(e, t) {
              if (!(this instanceof i))
                throw new SyntaxError(
                  "Constructor must be called with the new operator"
                );
              if (
                ((this.dimensions = e),
                (this.dotNotation = t || !1),
                !Array.isArray(e) || !e.every(Nn))
              )
                throw new TypeError(
                  'Array containing Nodes expected for parameter "dimensions"'
                );
              if (this.dotNotation && !this.isObjectProperty())
                throw new Error(
                  "dotNotation only applicable for object properties"
                );
            }
            function a(e, n, r) {
              return new t(
                Ht(e) ? e.toNumber() : e,
                Ht(n) ? n.toNumber() : n,
                Ht(r) ? r.toNumber() : r
              );
            }
            return (
              (i.prototype = new n()),
              (i.prototype.type = "IndexNode"),
              (i.prototype.isIndexNode = !0),
              (i.prototype._compile = function (e, t) {
                var n = Nr(this.dimensions, function (n, i) {
                    if (_n(n)) {
                      if (n.needsEnd()) {
                        var o = Object.create(t);
                        o.end = !0;
                        var s = n.start._compile(e, o),
                          u = n.end._compile(e, o),
                          c = n.step
                            ? n.step._compile(e, o)
                            : function () {
                                return 1;
                              };
                        return function (e, t, n) {
                          var o = r(n).valueOf(),
                            l = Object.create(t);
                          return (
                            (l.end = o[i]),
                            a(s(e, l, n), u(e, l, n), c(e, l, n))
                          );
                        };
                      }
                      var l = n.start._compile(e, t),
                        f = n.end._compile(e, t),
                        p = n.step
                          ? n.step._compile(e, t)
                          : function () {
                              return 1;
                            };
                      return function (e, t, n) {
                        return a(l(e, t, n), f(e, t, n), p(e, t, n));
                      };
                    }
                    if (kn(n) && "end" === n.name) {
                      var h = Object.create(t);
                      h.end = !0;
                      var d = n._compile(e, h);
                      return function (e, t, n) {
                        var a = r(n).valueOf(),
                          o = Object.create(t);
                        return (o.end = a[i]), d(e, o, n);
                      };
                    }
                    var m = n._compile(e, t);
                    return function (e, t, n) {
                      return m(e, t, n);
                    };
                  }),
                  i = mc(e, "index");
                return function (e, t, r) {
                  var a = Nr(n, function (n) {
                    return n(e, t, r);
                  });
                  return i.apply(
                    void 0,
                    (function (e) {
                      return (
                        (function (e) {
                          if (Array.isArray(e)) return Kp(e);
                        })(e) ||
                        (function (e) {
                          if (
                            "undefined" != typeof Symbol &&
                            Symbol.iterator in Object(e)
                          )
                            return Array.from(e);
                        })(e) ||
                        (function (e, t) {
                          if (e) {
                            if ("string" == typeof e) return Kp(e, t);
                            var n = Object.prototype.toString
                              .call(e)
                              .slice(8, -1);
                            return (
                              "Object" === n &&
                                e.constructor &&
                                (n = e.constructor.name),
                              "Map" === n || "Set" === n
                                ? Array.from(e)
                                : "Arguments" === n ||
                                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                    n
                                  )
                                ? Kp(e, t)
                                : void 0
                            );
                          }
                        })(e) ||
                        (function () {
                          throw new TypeError(
                            "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
                          );
                        })()
                      );
                    })(a)
                  );
                };
              }),
              (i.prototype.forEach = function (e) {
                for (var t = 0; t < this.dimensions.length; t++)
                  e(this.dimensions[t], "dimensions[" + t + "]", this);
              }),
              (i.prototype.map = function (e) {
                for (var t = [], n = 0; n < this.dimensions.length; n++)
                  t[n] = this._ifNode(
                    e(this.dimensions[n], "dimensions[" + n + "]", this)
                  );
                return new i(t, this.dotNotation);
              }),
              (i.prototype.clone = function () {
                return new i(this.dimensions.slice(0), this.dotNotation);
              }),
              (i.prototype.isObjectProperty = function () {
                return (
                  1 === this.dimensions.length &&
                  vn(this.dimensions[0]) &&
                  "string" == typeof this.dimensions[0].value
                );
              }),
              (i.prototype.getObjectProperty = function () {
                return this.isObjectProperty()
                  ? this.dimensions[0].value
                  : null;
              }),
              (i.prototype._toString = function (e) {
                return this.dotNotation
                  ? "." + this.getObjectProperty()
                  : "[" + this.dimensions.join(", ") + "]";
              }),
              (i.prototype.toJSON = function () {
                return {
                  mathjs: "IndexNode",
                  dimensions: this.dimensions,
                  dotNotation: this.dotNotation,
                };
              }),
              (i.fromJSON = function (e) {
                return new i(e.dimensions, e.dotNotation);
              }),
              (i.prototype.toHTML = function (e) {
                for (var t = [], n = 0; n < this.dimensions.length; n++)
                  t[n] = this.dimensions[n].toHTML();
                return this.dotNotation
                  ? '<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">' +
                      lr(this.getObjectProperty()) +
                      "</span>"
                  : '<span class="math-parenthesis math-square-parenthesis">[</span>' +
                      t.join('<span class="math-separator">,</span>') +
                      '<span class="math-parenthesis math-square-parenthesis">]</span>';
              }),
              (i.prototype._toTex = function (e) {
                var t = this.dimensions.map(function (t) {
                  return t.toTex(e);
                });
                return this.dotNotation
                  ? "." + this.getObjectProperty()
                  : "_{" + t.join(",") + "}";
              }),
              i
            );
          },
          { isClass: !0, isNode: !0 }
        );
        function eh(e) {
          return (eh =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        var th = Cr(
            "ObjectNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (
                  ((this.properties = e || {}),
                  e &&
                    ("object" !== eh(e) ||
                      !Object.keys(e).every(function (t) {
                        return Nn(e[t]);
                      })))
                )
                  throw new TypeError("Object containing Nodes expected");
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "ObjectNode"),
                (n.prototype.isObjectNode = !0),
                (n.prototype._compile = function (e, t) {
                  var n = {};
                  for (var r in this.properties)
                    if (Bn(this.properties, r)) {
                      var i = cr(r),
                        a = JSON.parse(i);
                      if (!yc(this.properties, a))
                        throw new Error('No access to property "' + a + '"');
                      n[a] = this.properties[r]._compile(e, t);
                    }
                  return function (e, t, r) {
                    var i = {};
                    for (var a in n) Bn(n, a) && (i[a] = n[a](e, t, r));
                    return i;
                  };
                }),
                (n.prototype.forEach = function (e) {
                  for (var t in this.properties)
                    Bn(this.properties, t) &&
                      e(this.properties[t], "properties[" + cr(t) + "]", this);
                }),
                (n.prototype.map = function (e) {
                  var t = {};
                  for (var r in this.properties)
                    Bn(this.properties, r) &&
                      (t[r] = this._ifNode(
                        e(this.properties[r], "properties[" + cr(r) + "]", this)
                      ));
                  return new n(t);
                }),
                (n.prototype.clone = function () {
                  var e = {};
                  for (var t in this.properties)
                    Bn(this.properties, t) && (e[t] = this.properties[t]);
                  return new n(e);
                }),
                (n.prototype._toString = function (e) {
                  var t = [];
                  for (var n in this.properties)
                    Bn(this.properties, n) &&
                      t.push(cr(n) + ": " + this.properties[n].toString(e));
                  return "{" + t.join(", ") + "}";
                }),
                (n.prototype.toJSON = function () {
                  return { mathjs: "ObjectNode", properties: this.properties };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.properties);
                }),
                (n.prototype.toHTML = function (e) {
                  var t = [];
                  for (var n in this.properties)
                    Bn(this.properties, n) &&
                      t.push(
                        '<span class="math-symbol math-property">' +
                          lr(n) +
                          '</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>' +
                          this.properties[n].toHTML(e)
                      );
                  return (
                    '<span class="math-parenthesis math-curly-parenthesis">{</span>' +
                    t.join('<span class="math-separator">,</span>') +
                    '<span class="math-parenthesis math-curly-parenthesis">}</span>'
                  );
                }),
                (n.prototype._toTex = function (e) {
                  var t = [];
                  for (var n in this.properties)
                    Bn(this.properties, n) &&
                      t.push(
                        "\\mathbf{" +
                          n +
                          ":} & " +
                          this.properties[n].toTex(e) +
                          "\\\\"
                      );
                  return "\\left\\{\\begin{array}{ll}".concat(
                    t.join("\n"),
                    "\\end{array}\\right\\}"
                  );
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          nh = Cr(
            "OperatorNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e, t, r, i) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if ("string" != typeof e)
                  throw new TypeError('string expected for parameter "op"');
                if ("string" != typeof t)
                  throw new TypeError('string expected for parameter "fn"');
                if (!Array.isArray(r) || !r.every(Nn))
                  throw new TypeError(
                    'Array containing Nodes expected for parameter "args"'
                  );
                (this.implicit = !0 === i),
                  (this.op = e),
                  (this.fn = t),
                  (this.args = r || []);
              }
              function r(e, t, n, r, i) {
                var a,
                  o = Bp(e, t),
                  s = Dp(e, t);
                if (
                  "all" === t ||
                  (r.length > 2 &&
                    "OperatorNode:add" !== e.getIdentifier() &&
                    "OperatorNode:multiply" !== e.getIdentifier())
                )
                  return r.map(function (e) {
                    switch (e.getContent().type) {
                      case "ArrayNode":
                      case "ConstantNode":
                      case "SymbolNode":
                      case "ParenthesisNode":
                        return !1;
                      default:
                        return !0;
                    }
                  });
                switch (r.length) {
                  case 0:
                    a = [];
                    break;
                  case 1:
                    var u = Bp(r[0], t);
                    if (i && null !== u) {
                      var c, l;
                      if (
                        ("keep" === t
                          ? ((c = r[0].getIdentifier()),
                            (l = e.getIdentifier()))
                          : ((c = r[0].getContent().getIdentifier()),
                            (l = e.getContent().getIdentifier())),
                        !1 === Pp[o][l].latexLeftParens)
                      ) {
                        a = [!1];
                        break;
                      }
                      if (!1 === Pp[u][c].latexParens) {
                        a = [!1];
                        break;
                      }
                    }
                    if (null === u) {
                      a = [!1];
                      break;
                    }
                    if (u <= o) {
                      a = [!0];
                      break;
                    }
                    a = [!1];
                    break;
                  case 2:
                    var f,
                      p,
                      h = Bp(r[0], t),
                      d = jp(e, r[0], t);
                    f =
                      null !== h && ((h === o && "right" === s && !d) || h < o);
                    var m,
                      g,
                      y,
                      v = Bp(r[1], t),
                      b = jp(e, r[1], t);
                    (p =
                      null !== v && ((v === o && "left" === s && !b) || v < o)),
                      i &&
                        ("keep" === t
                          ? ((m = e.getIdentifier()),
                            (g = e.args[0].getIdentifier()),
                            (y = e.args[1].getIdentifier()))
                          : ((m = e.getContent().getIdentifier()),
                            (g = e.args[0].getContent().getIdentifier()),
                            (y = e.args[1].getContent().getIdentifier())),
                        null !== h &&
                          (!1 === Pp[o][m].latexLeftParens && (f = !1),
                          !1 === Pp[h][g].latexParens && (f = !1)),
                        null !== v &&
                          (!1 === Pp[o][m].latexRightParens && (p = !1),
                          !1 === Pp[v][y].latexParens && (p = !1))),
                      (a = [f, p]);
                    break;
                  default:
                    ("OperatorNode:add" !== e.getIdentifier() &&
                      "OperatorNode:multiply" !== e.getIdentifier()) ||
                      (a = r.map(function (n) {
                        var r = Bp(n, t),
                          i = jp(e, n, t),
                          a = Dp(n, t);
                        return (
                          null !== r && ((o === r && s === a && !i) || r < o)
                        );
                      }));
                }
                return (
                  r.length >= 2 &&
                    "OperatorNode:multiply" === e.getIdentifier() &&
                    e.implicit &&
                    "auto" === t &&
                    "hide" === n &&
                    (a = r.map(function (e, t) {
                      var n = "ParenthesisNode" === e.getIdentifier();
                      return !(!a[t] && !n);
                    })),
                  a
                );
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "OperatorNode"),
                (n.prototype.isOperatorNode = !0),
                (n.prototype._compile = function (e, t) {
                  if ("string" != typeof this.fn || !vc(e, this.fn))
                    throw e[this.fn]
                      ? new Error('No access to function "' + this.fn + '"')
                      : new Error(
                          "Function " +
                            this.fn +
                            ' missing in provided namespace "math"'
                        );
                  var n = mc(e, this.fn),
                    r = Nr(this.args, function (n) {
                      return n._compile(e, t);
                    });
                  if (1 === r.length) {
                    var i = r[0];
                    return function (e, t, r) {
                      return n(i(e, t, r));
                    };
                  }
                  if (2 === r.length) {
                    var a = r[0],
                      o = r[1];
                    return function (e, t, r) {
                      return n(a(e, t, r), o(e, t, r));
                    };
                  }
                  return function (e, t, i) {
                    return n.apply(
                      null,
                      Nr(r, function (n) {
                        return n(e, t, i);
                      })
                    );
                  };
                }),
                (n.prototype.forEach = function (e) {
                  for (var t = 0; t < this.args.length; t++)
                    e(this.args[t], "args[" + t + "]", this);
                }),
                (n.prototype.map = function (e) {
                  for (var t = [], r = 0; r < this.args.length; r++)
                    t[r] = this._ifNode(
                      e(this.args[r], "args[" + r + "]", this)
                    );
                  return new n(this.op, this.fn, t, this.implicit);
                }),
                (n.prototype.clone = function () {
                  return new n(
                    this.op,
                    this.fn,
                    this.args.slice(0),
                    this.implicit
                  );
                }),
                (n.prototype.isUnary = function () {
                  return 1 === this.args.length;
                }),
                (n.prototype.isBinary = function () {
                  return 2 === this.args.length;
                }),
                (n.prototype._toString = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = e && e.implicit ? e.implicit : "hide",
                    i = this.args,
                    a = r(this, t, n, i, !1);
                  if (1 === i.length) {
                    var o = Dp(this, t),
                      s = i[0].toString(e);
                    a[0] && (s = "(" + s + ")");
                    var u = /[a-zA-Z]+/.test(this.op);
                    return "right" === o
                      ? this.op + (u ? " " : "") + s
                      : "left" === o
                      ? s + (u ? " " : "") + this.op
                      : s + this.op;
                  }
                  if (2 === i.length) {
                    var c = i[0].toString(e),
                      l = i[1].toString(e);
                    return (
                      a[0] && (c = "(" + c + ")"),
                      a[1] && (l = "(" + l + ")"),
                      this.implicit &&
                      "OperatorNode:multiply" === this.getIdentifier() &&
                      "hide" === n
                        ? c + " " + l
                        : c + " " + this.op + " " + l
                    );
                  }
                  if (
                    i.length > 2 &&
                    ("OperatorNode:add" === this.getIdentifier() ||
                      "OperatorNode:multiply" === this.getIdentifier())
                  ) {
                    var f = i.map(function (t, n) {
                      return (
                        (t = t.toString(e)), a[n] && (t = "(" + t + ")"), t
                      );
                    });
                    return this.implicit &&
                      "OperatorNode:multiply" === this.getIdentifier() &&
                      "hide" === n
                      ? f.join(" ")
                      : f.join(" " + this.op + " ");
                  }
                  return this.fn + "(" + this.args.join(", ") + ")";
                }),
                (n.prototype.toJSON = function () {
                  return {
                    mathjs: "OperatorNode",
                    op: this.op,
                    fn: this.fn,
                    args: this.args,
                    implicit: this.implicit,
                  };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.op, e.fn, e.args, e.implicit);
                }),
                (n.prototype.toHTML = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = e && e.implicit ? e.implicit : "hide",
                    i = this.args,
                    a = r(this, t, n, i, !1);
                  if (1 === i.length) {
                    var o = Dp(this, t),
                      s = i[0].toHTML(e);
                    return (
                      a[0] &&
                        (s =
                          '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                          s +
                          '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                      "right" === o
                        ? '<span class="math-operator math-unary-operator math-lefthand-unary-operator">' +
                          lr(this.op) +
                          "</span>" +
                          s
                        : s +
                          '<span class="math-operator math-unary-operator math-righthand-unary-operator">' +
                          lr(this.op) +
                          "</span>"
                    );
                  }
                  if (2 === i.length) {
                    var u = i[0].toHTML(e),
                      c = i[1].toHTML(e);
                    return (
                      a[0] &&
                        (u =
                          '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                          u +
                          '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                      a[1] &&
                        (c =
                          '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                          c +
                          '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                      this.implicit &&
                      "OperatorNode:multiply" === this.getIdentifier() &&
                      "hide" === n
                        ? u +
                          '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>' +
                          c
                        : u +
                          '<span class="math-operator math-binary-operator math-explicit-binary-operator">' +
                          lr(this.op) +
                          "</span>" +
                          c
                    );
                  }
                  var l = i.map(function (t, n) {
                    return (
                      (t = t.toHTML(e)),
                      a[n] &&
                        (t =
                          '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                          t +
                          '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                      t
                    );
                  });
                  return i.length > 2 &&
                    ("OperatorNode:add" === this.getIdentifier() ||
                      "OperatorNode:multiply" === this.getIdentifier())
                    ? this.implicit &&
                      "OperatorNode:multiply" === this.getIdentifier() &&
                      "hide" === n
                      ? l.join(
                          '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'
                        )
                      : l.join(
                          '<span class="math-operator math-binary-operator math-explicit-binary-operator">' +
                            lr(this.op) +
                            "</span>"
                        )
                    : '<span class="math-function">' +
                        lr(this.fn) +
                        '</span><span class="math-paranthesis math-round-parenthesis">(</span>' +
                        l.join('<span class="math-separator">,</span>') +
                        '<span class="math-paranthesis math-round-parenthesis">)</span>';
                }),
                (n.prototype._toTex = function (e) {
                  var t = e && e.parenthesis ? e.parenthesis : "keep",
                    n = e && e.implicit ? e.implicit : "hide",
                    i = this.args,
                    a = r(this, t, n, i, !0),
                    o = Hp[this.fn];
                  if (((o = void 0 === o ? this.op : o), 1 === i.length)) {
                    var s = Dp(this, t),
                      u = i[0].toTex(e);
                    return (
                      a[0] && (u = "\\left(".concat(u, "\\right)")),
                      "right" === s ? o + u : u + o
                    );
                  }
                  if (2 === i.length) {
                    var c = i[0],
                      l = c.toTex(e);
                    a[0] && (l = "\\left(".concat(l, "\\right)"));
                    var f,
                      p = i[1].toTex(e);
                    switch (
                      (a[1] && (p = "\\left(".concat(p, "\\right)")),
                      (f =
                        "keep" === t
                          ? c.getIdentifier()
                          : c.getContent().getIdentifier()),
                      this.getIdentifier())
                    ) {
                      case "OperatorNode:divide":
                        return o + "{" + l + "}{" + p + "}";
                      case "OperatorNode:pow":
                        switch (((l = "{" + l + "}"), (p = "{" + p + "}"), f)) {
                          case "ConditionalNode":
                          case "OperatorNode:divide":
                            l = "\\left(".concat(l, "\\right)");
                        }
                        break;
                      case "OperatorNode:multiply":
                        if (this.implicit && "hide" === n) return l + "~" + p;
                    }
                    return l + o + p;
                  }
                  if (
                    i.length > 2 &&
                    ("OperatorNode:add" === this.getIdentifier() ||
                      "OperatorNode:multiply" === this.getIdentifier())
                  ) {
                    var h = i.map(function (t, n) {
                      return (
                        (t = t.toTex(e)),
                        a[n] && (t = "\\left(".concat(t, "\\right)")),
                        t
                      );
                    });
                    return "OperatorNode:multiply" === this.getIdentifier() &&
                      this.implicit
                      ? h.join("~")
                      : h.join(o);
                  }
                  return (
                    "\\mathrm{" +
                    this.fn +
                    "}\\left(" +
                    i
                      .map(function (t) {
                        return t.toTex(e);
                      })
                      .join(",") +
                    "\\right)"
                  );
                }),
                (n.prototype.getIdentifier = function () {
                  return this.type + ":" + this.fn;
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          rh = Cr(
            "ParenthesisNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!Nn(e))
                  throw new TypeError('Node expected for parameter "content"');
                this.content = e;
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "ParenthesisNode"),
                (n.prototype.isParenthesisNode = !0),
                (n.prototype._compile = function (e, t) {
                  return this.content._compile(e, t);
                }),
                (n.prototype.getContent = function () {
                  return this.content.getContent();
                }),
                (n.prototype.forEach = function (e) {
                  e(this.content, "content", this);
                }),
                (n.prototype.map = function (e) {
                  return new n(e(this.content, "content", this));
                }),
                (n.prototype.clone = function () {
                  return new n(this.content);
                }),
                (n.prototype._toString = function (e) {
                  return !e ||
                    (e && !e.parenthesis) ||
                    (e && "keep" === e.parenthesis)
                    ? "(" + this.content.toString(e) + ")"
                    : this.content.toString(e);
                }),
                (n.prototype.toJSON = function () {
                  return { mathjs: "ParenthesisNode", content: this.content };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.content);
                }),
                (n.prototype.toHTML = function (e) {
                  return !e ||
                    (e && !e.parenthesis) ||
                    (e && "keep" === e.parenthesis)
                    ? '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        this.content.toHTML(e) +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'
                    : this.content.toHTML(e);
                }),
                (n.prototype._toTex = function (e) {
                  return !e ||
                    (e && !e.parenthesis) ||
                    (e && "keep" === e.parenthesis)
                    ? "\\left(".concat(this.content.toTex(e), "\\right)")
                    : this.content.toTex(e);
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          ih = Cr(
            "RangeNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e, t, r) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!Nn(e)) throw new TypeError("Node expected");
                if (!Nn(t)) throw new TypeError("Node expected");
                if (r && !Nn(r)) throw new TypeError("Node expected");
                if (arguments.length > 3) throw new Error("Too many arguments");
                (this.start = e), (this.end = t), (this.step = r || null);
              }
              function r(e, t) {
                var n = Bp(e, t),
                  r = {},
                  i = Bp(e.start, t);
                if (
                  ((r.start = (null !== i && i <= n) || "all" === t), e.step)
                ) {
                  var a = Bp(e.step, t);
                  r.step = (null !== a && a <= n) || "all" === t;
                }
                var o = Bp(e.end, t);
                return (r.end = (null !== o && o <= n) || "all" === t), r;
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "RangeNode"),
                (n.prototype.isRangeNode = !0),
                (n.prototype.needsEnd = function () {
                  return (
                    this.filter(function (e) {
                      return kn(e) && "end" === e.name;
                    }).length > 0
                  );
                }),
                (n.prototype._compile = function (e, t) {
                  var n = e.range,
                    r = this.start._compile(e, t),
                    i = this.end._compile(e, t);
                  if (this.step) {
                    var a = this.step._compile(e, t);
                    return function (e, t, o) {
                      return n(r(e, t, o), i(e, t, o), a(e, t, o));
                    };
                  }
                  return function (e, t, a) {
                    return n(r(e, t, a), i(e, t, a));
                  };
                }),
                (n.prototype.forEach = function (e) {
                  e(this.start, "start", this),
                    e(this.end, "end", this),
                    this.step && e(this.step, "step", this);
                }),
                (n.prototype.map = function (e) {
                  return new n(
                    this._ifNode(e(this.start, "start", this)),
                    this._ifNode(e(this.end, "end", this)),
                    this.step && this._ifNode(e(this.step, "step", this))
                  );
                }),
                (n.prototype.clone = function () {
                  return new n(this.start, this.end, this.step && this.step);
                }),
                (n.prototype._toString = function (e) {
                  var t,
                    n = r(this, e && e.parenthesis ? e.parenthesis : "keep"),
                    i = this.start.toString(e);
                  if ((n.start && (i = "(" + i + ")"), (t = i), this.step)) {
                    var a = this.step.toString(e);
                    n.step && (a = "(" + a + ")"), (t += ":" + a);
                  }
                  var o = this.end.toString(e);
                  return n.end && (o = "(" + o + ")"), t + ":" + o;
                }),
                (n.prototype.toJSON = function () {
                  return {
                    mathjs: "RangeNode",
                    start: this.start,
                    end: this.end,
                    step: this.step,
                  };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.start, e.end, e.step);
                }),
                (n.prototype.toHTML = function (e) {
                  var t,
                    n = r(this, e && e.parenthesis ? e.parenthesis : "keep"),
                    i = this.start.toHTML(e);
                  if (
                    (n.start &&
                      (i =
                        '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        i +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                    (t = i),
                    this.step)
                  ) {
                    var a = this.step.toHTML(e);
                    n.step &&
                      (a =
                        '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        a +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                      (t +=
                        '<span class="math-operator math-range-operator">:</span>' +
                        a);
                  }
                  var o = this.end.toHTML(e);
                  return (
                    n.end &&
                      (o =
                        '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                        o +
                        '<span class="math-parenthesis math-round-parenthesis">)</span>'),
                    t +
                      '<span class="math-operator math-range-operator">:</span>' +
                      o
                  );
                }),
                (n.prototype._toTex = function (e) {
                  var t = r(this, e && e.parenthesis ? e.parenthesis : "keep"),
                    n = this.start.toTex(e);
                  if (
                    (t.start && (n = "\\left(".concat(n, "\\right)")),
                    this.step)
                  ) {
                    var i = this.step.toTex(e);
                    t.step && (i = "\\left(".concat(i, "\\right)")),
                      (n += ":" + i);
                  }
                  var a = this.end.toTex(e);
                  return (
                    t.end && (a = "\\left(".concat(a, "\\right)")), n + ":" + a
                  );
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          ah = Cr(
            "RelationalNode",
            ["Node"],
            function (e) {
              var t = e.Node;
              function n(e, t) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!Array.isArray(e))
                  throw new TypeError(
                    "Parameter conditionals must be an array"
                  );
                if (!Array.isArray(t))
                  throw new TypeError("Parameter params must be an array");
                if (e.length !== t.length - 1)
                  throw new TypeError(
                    "Parameter params must contain exactly one more element than parameter conditionals"
                  );
                (this.conditionals = e), (this.params = t);
              }
              return (
                (n.prototype = new t()),
                (n.prototype.type = "RelationalNode"),
                (n.prototype.isRelationalNode = !0),
                (n.prototype._compile = function (e, t) {
                  var n = this,
                    r = this.params.map(function (n) {
                      return n._compile(e, t);
                    });
                  return function (t, i, a) {
                    for (
                      var o, s = r[0](t, i, a), u = 0;
                      u < n.conditionals.length;
                      u++
                    )
                      if (
                        ((o = s),
                        (s = r[u + 1](t, i, a)),
                        !mc(e, n.conditionals[u])(o, s))
                      )
                        return !1;
                    return !0;
                  };
                }),
                (n.prototype.forEach = function (e) {
                  var t = this;
                  this.params.forEach(function (n, r) {
                    return e(n, "params[" + r + "]", t);
                  }, this);
                }),
                (n.prototype.map = function (e) {
                  var t = this;
                  return new n(
                    this.conditionals.slice(),
                    this.params.map(function (n, r) {
                      return t._ifNode(e(n, "params[" + r + "]", t));
                    }, this)
                  );
                }),
                (n.prototype.clone = function () {
                  return new n(this.conditionals, this.params);
                }),
                (n.prototype._toString = function (e) {
                  for (
                    var t = e && e.parenthesis ? e.parenthesis : "keep",
                      n = Bp(this, t),
                      r = this.params.map(function (r, i) {
                        var a = Bp(r, t);
                        return "all" === t || (null !== a && a <= n)
                          ? "(" + r.toString(e) + ")"
                          : r.toString(e);
                      }),
                      i = {
                        equal: "==",
                        unequal: "!=",
                        smaller: "<",
                        larger: ">",
                        smallerEq: "<=",
                        largerEq: ">=",
                      },
                      a = r[0],
                      o = 0;
                    o < this.conditionals.length;
                    o++
                  )
                    a += " " + i[this.conditionals[o]] + " " + r[o + 1];
                  return a;
                }),
                (n.prototype.toJSON = function () {
                  return {
                    mathjs: "RelationalNode",
                    conditionals: this.conditionals,
                    params: this.params,
                  };
                }),
                (n.fromJSON = function (e) {
                  return new n(e.conditionals, e.params);
                }),
                (n.prototype.toHTML = function (e) {
                  for (
                    var t = e && e.parenthesis ? e.parenthesis : "keep",
                      n = Bp(this, t),
                      r = this.params.map(function (r, i) {
                        var a = Bp(r, t);
                        return "all" === t || (null !== a && a <= n)
                          ? '<span class="math-parenthesis math-round-parenthesis">(</span>' +
                              r.toHTML(e) +
                              '<span class="math-parenthesis math-round-parenthesis">)</span>'
                          : r.toHTML(e);
                      }),
                      i = {
                        equal: "==",
                        unequal: "!=",
                        smaller: "<",
                        larger: ">",
                        smallerEq: "<=",
                        largerEq: ">=",
                      },
                      a = r[0],
                      o = 0;
                    o < this.conditionals.length;
                    o++
                  )
                    a +=
                      '<span class="math-operator math-binary-operator math-explicit-binary-operator">' +
                      lr(i[this.conditionals[o]]) +
                      "</span>" +
                      r[o + 1];
                  return a;
                }),
                (n.prototype._toTex = function (e) {
                  for (
                    var t = e && e.parenthesis ? e.parenthesis : "keep",
                      n = Bp(this, t),
                      r = this.params.map(function (r, i) {
                        var a = Bp(r, t);
                        return "all" === t || (null !== a && a <= n)
                          ? "\\left(" + r.toTex(e) + "\right)"
                          : r.toTex(e);
                      }),
                      i = r[0],
                      a = 0;
                    a < this.conditionals.length;
                    a++
                  )
                    i += Hp[this.conditionals[a]] + r[a + 1];
                  return i;
                }),
                n
              );
            },
            { isClass: !0, isNode: !0 }
          ),
          oh = Cr(
            "SymbolNode",
            ["math", "?Unit", "Node"],
            function (e) {
              var t = e.math,
                n = e.Unit,
                r = e.Node;
              function i(e) {
                return !!n && n.isValuelessUnit(e);
              }
              function a(e) {
                if (!(this instanceof a))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if ("string" != typeof e)
                  throw new TypeError('String expected for parameter "name"');
                this.name = e;
              }
              return (
                (a.prototype = new r()),
                (a.prototype.type = "SymbolNode"),
                (a.prototype.isSymbolNode = !0),
                (a.prototype._compile = function (e, t) {
                  var r = this.name;
                  if (!0 === t[r])
                    return function (e, t, n) {
                      return t[r];
                    };
                  if (r in e)
                    return function (t, n, i) {
                      return mc(r in t ? t : e, r);
                    };
                  var a = i(r);
                  return function (e, t, i) {
                    return r in e
                      ? mc(e, r)
                      : a
                      ? new n(null, r)
                      : (function (e) {
                          throw new Error("Undefined symbol " + e);
                        })(r);
                  };
                }),
                (a.prototype.forEach = function (e) {}),
                (a.prototype.map = function (e) {
                  return this.clone();
                }),
                (a.prototype.clone = function () {
                  return new a(this.name);
                }),
                (a.prototype._toString = function (e) {
                  return this.name;
                }),
                (a.prototype.toHTML = function (e) {
                  var t = lr(this.name);
                  return "true" === t || "false" === t
                    ? '<span class="math-symbol math-boolean">' + t + "</span>"
                    : "i" === t
                    ? '<span class="math-symbol math-imaginary-symbol">' +
                      t +
                      "</span>"
                    : "Infinity" === t
                    ? '<span class="math-symbol math-infinity-symbol">' +
                      t +
                      "</span>"
                    : "NaN" === t
                    ? '<span class="math-symbol math-nan-symbol">' +
                      t +
                      "</span>"
                    : "null" === t
                    ? '<span class="math-symbol math-null-symbol">' +
                      t +
                      "</span>"
                    : "undefined" === t
                    ? '<span class="math-symbol math-undefined-symbol">' +
                      t +
                      "</span>"
                    : '<span class="math-symbol">' + t + "</span>";
                }),
                (a.prototype.toJSON = function () {
                  return { mathjs: "SymbolNode", name: this.name };
                }),
                (a.fromJSON = function (e) {
                  return new a(e.name);
                }),
                (a.prototype._toTex = function (e) {
                  var n = !1;
                  void 0 === t[this.name] && i(this.name) && (n = !0);
                  var r = Yp(this.name, n);
                  return "\\" === r[0] ? r : " " + r;
                }),
                a
              );
            },
            { isClass: !0, isNode: !0 }
          );
        function sh(e) {
          return (sh =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        function uh() {
          return (uh =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        var ch = Cr(
          "FunctionNode",
          ["math", "Node", "SymbolNode"],
          function (e) {
            var t = e.math,
              n = e.Node,
              r = e.SymbolNode;
            function i(e, t) {
              if (!(this instanceof i))
                throw new SyntaxError(
                  "Constructor must be called with the new operator"
                );
              if (("string" == typeof e && (e = new r(e)), !Nn(e)))
                throw new TypeError('Node expected as parameter "fn"');
              if (!Array.isArray(t) || !t.every(Nn))
                throw new TypeError(
                  'Array containing Nodes expected for parameter "args"'
                );
              (this.fn = e),
                (this.args = t || []),
                Object.defineProperty(this, "name", {
                  get: function () {
                    return this.fn.name || "";
                  }.bind(this),
                  set: function () {
                    throw new Error(
                      "Cannot assign a new name, name is read-only"
                    );
                  },
                });
            }
            (i.prototype = new n()),
              (i.prototype.type = "FunctionNode"),
              (i.prototype.isFunctionNode = !0),
              (i.prototype._compile = function (e, t) {
                if (!(this instanceof i))
                  throw new TypeError("No valid FunctionNode");
                var n = Nr(this.args, function (n) {
                  return n._compile(e, t);
                });
                if (kn(this.fn)) {
                  var r = this.fn.name,
                    a = r in e ? mc(e, r) : void 0;
                  if ("function" == typeof a && !0 === a.rawArgs) {
                    var o = this.args;
                    return function (t, n, i) {
                      return (r in t ? mc(t, r) : a)(o, e, uh({}, t, n));
                    };
                  }
                  if (1 === n.length) {
                    var s = n[0];
                    return function (e, t, n) {
                      return (r in e ? mc(e, r) : a)(s(e, t, n));
                    };
                  }
                  if (2 === n.length) {
                    var u = n[0],
                      c = n[1];
                    return function (e, t, n) {
                      return (r in e ? mc(e, r) : a)(u(e, t, n), c(e, t, n));
                    };
                  }
                  return function (e, t, i) {
                    return (r in e ? mc(e, r) : a).apply(
                      null,
                      Nr(n, function (n) {
                        return n(e, t, i);
                      })
                    );
                  };
                }
                if (
                  hn(this.fn) &&
                  wn(this.fn.index) &&
                  this.fn.index.isObjectProperty()
                ) {
                  var l = this.fn.object._compile(e, t),
                    f = this.fn.index.getObjectProperty(),
                    p = this.args;
                  return function (t, r, i) {
                    var a = l(t, r, i);
                    return (
                      (function (e, t) {
                        if (!vc(e, t))
                          throw new Error('No access to method "' + t + '"');
                      })(a, f),
                      a[f] && a[f].rawArgs
                        ? a[f](p, e, uh({}, t, r))
                        : a[f].apply(
                            a,
                            Nr(n, function (e) {
                              return e(t, r, i);
                            })
                          )
                    );
                  };
                }
                var h = this.fn._compile(e, t),
                  d = this.args;
                return function (t, r, i) {
                  var a = h(t, r, i);
                  return a && a.rawArgs
                    ? a(d, e, uh({}, t, r))
                    : a.apply(
                        a,
                        Nr(n, function (e) {
                          return e(t, r, i);
                        })
                      );
                };
              }),
              (i.prototype.forEach = function (e) {
                e(this.fn, "fn", this);
                for (var t = 0; t < this.args.length; t++)
                  e(this.args[t], "args[" + t + "]", this);
              }),
              (i.prototype.map = function (e) {
                for (
                  var t = this._ifNode(e(this.fn, "fn", this)), n = [], r = 0;
                  r < this.args.length;
                  r++
                )
                  n[r] = this._ifNode(e(this.args[r], "args[" + r + "]", this));
                return new i(t, n);
              }),
              (i.prototype.clone = function () {
                return new i(this.fn, this.args.slice(0));
              });
            var a = i.prototype.toString;
            function o(e, t, n) {
              for (
                var r,
                  i = "",
                  a = new RegExp(
                    "\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)",
                    "ig"
                  ),
                  o = 0;
                null !== (r = a.exec(e));

              )
                if (
                  ((i += e.substring(o, r.index)), (o = r.index), "$$" === r[0])
                )
                  (i += "$"), o++;
                else {
                  o += r[0].length;
                  var s = t[r[1]];
                  if (!s)
                    throw new ReferenceError(
                      "Template: Property " + r[1] + " does not exist."
                    );
                  if (void 0 === r[2])
                    switch (sh(s)) {
                      case "string":
                        i += s;
                        break;
                      case "object":
                        if (Nn(s)) i += s.toTex(n);
                        else {
                          if (!Array.isArray(s))
                            throw new TypeError(
                              "Template: " +
                                r[1] +
                                " has to be a Node, String or array of Nodes"
                            );
                          i += s
                            .map(function (e, t) {
                              if (Nn(e)) return e.toTex(n);
                              throw new TypeError(
                                "Template: " +
                                  r[1] +
                                  "[" +
                                  t +
                                  "] is not a Node."
                              );
                            })
                            .join(",");
                        }
                        break;
                      default:
                        throw new TypeError(
                          "Template: " +
                            r[1] +
                            " has to be a Node, String or array of Nodes"
                        );
                    }
                  else {
                    if (!Nn(s[r[2]] && s[r[2]]))
                      throw new TypeError(
                        "Template: " + r[1] + "[" + r[2] + "] is not a Node."
                      );
                    i += s[r[2]].toTex(n);
                  }
                }
              return i + e.slice(o);
            }
            (i.prototype.toString = function (e) {
              var t,
                n = this.fn.toString(e);
              return (
                e &&
                  "object" === sh(e.handler) &&
                  Bn(e.handler, n) &&
                  (t = e.handler[n](this, e)),
                void 0 !== t ? t : a.call(this, e)
              );
            }),
              (i.prototype._toString = function (e) {
                var t = this.args.map(function (t) {
                  return t.toString(e);
                });
                return (
                  (bn(this.fn)
                    ? "(" + this.fn.toString(e) + ")"
                    : this.fn.toString(e)) +
                  "(" +
                  t.join(", ") +
                  ")"
                );
              }),
              (i.prototype.toJSON = function () {
                return { mathjs: "FunctionNode", fn: this.fn, args: this.args };
              }),
              (i.fromJSON = function (e) {
                return new i(e.fn, e.args);
              }),
              (i.prototype.toHTML = function (e) {
                var t = this.args.map(function (t) {
                  return t.toHTML(e);
                });
                return (
                  '<span class="math-function">' +
                  lr(this.fn) +
                  '</span><span class="math-paranthesis math-round-parenthesis">(</span>' +
                  t.join('<span class="math-separator">,</span>') +
                  '<span class="math-paranthesis math-round-parenthesis">)</span>'
                );
              });
            var s = i.prototype.toTex;
            return (
              (i.prototype.toTex = function (e) {
                var t;
                return (
                  e &&
                    "object" === sh(e.handler) &&
                    Bn(e.handler, this.name) &&
                    (t = e.handler[this.name](this, e)),
                  void 0 !== t ? t : s.call(this, e)
                );
              }),
              (i.prototype._toTex = function (e) {
                var n,
                  r,
                  i = this.args.map(function (t) {
                    return t.toTex(e);
                  });
                switch (
                  (Wp[this.name] && (n = Wp[this.name]),
                  !t[this.name] ||
                    ("function" != typeof t[this.name].toTex &&
                      "object" !== sh(t[this.name].toTex) &&
                      "string" != typeof t[this.name].toTex) ||
                    (n = t[this.name].toTex),
                  sh(n))
                ) {
                  case "function":
                    r = n(this, e);
                    break;
                  case "string":
                    r = o(n, this, e);
                    break;
                  case "object":
                    switch (sh(n[i.length])) {
                      case "function":
                        r = n[i.length](this, e);
                        break;
                      case "string":
                        r = o(n[i.length], this, e);
                    }
                }
                return void 0 !== r
                  ? r
                  : o("\\mathrm{${name}}\\left(${args}\\right)", this, e);
              }),
              (i.prototype.getIdentifier = function () {
                return this.type + ":" + this.name;
              }),
              i
            );
          },
          { isClass: !0, isNode: !0 }
        );
        function lh() {
          return (lh =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        var fh = Cr(
            "parse",
            [
              "typed",
              "numeric",
              "config",
              "AccessorNode",
              "ArrayNode",
              "AssignmentNode",
              "BlockNode",
              "ConditionalNode",
              "ConstantNode",
              "FunctionAssignmentNode",
              "FunctionNode",
              "IndexNode",
              "ObjectNode",
              "OperatorNode",
              "ParenthesisNode",
              "RangeNode",
              "RelationalNode",
              "SymbolNode",
            ],
            function (e) {
              var t = e.typed,
                n = e.numeric,
                r = e.config,
                i = e.AccessorNode,
                a = e.ArrayNode,
                o = e.AssignmentNode,
                s = e.BlockNode,
                u = e.ConditionalNode,
                c = e.ConstantNode,
                l = e.FunctionAssignmentNode,
                f = e.FunctionNode,
                p = e.IndexNode,
                h = e.ObjectNode,
                d = e.OperatorNode,
                m = e.ParenthesisNode,
                g = e.RangeNode,
                y = e.RelationalNode,
                v = e.SymbolNode,
                b = t("parse", {
                  string: function (e) {
                    return B(e, {});
                  },
                  "Array | Matrix": function (e) {
                    return x(e, {});
                  },
                  "string, Object": function (e, t) {
                    return B(e, void 0 !== t.nodes ? t.nodes : {});
                  },
                  "Array | Matrix, Object": x,
                });
              function x(e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  n = void 0 !== t.nodes ? t.nodes : {};
                return Oa(e, function (e) {
                  if ("string" != typeof e)
                    throw new TypeError("String expected");
                  return B(e, n);
                });
              }
              var w = {
                  ",": !0,
                  "(": !0,
                  ")": !0,
                  "[": !0,
                  "]": !0,
                  "{": !0,
                  "}": !0,
                  '"': !0,
                  "'": !0,
                  ";": !0,
                  "+": !0,
                  "-": !0,
                  "*": !0,
                  ".*": !0,
                  "/": !0,
                  "./": !0,
                  "%": !0,
                  "^": !0,
                  ".^": !0,
                  "~": !0,
                  "!": !0,
                  "&": !0,
                  "|": !0,
                  "^|": !0,
                  "=": !0,
                  ":": !0,
                  "?": !0,
                  "==": !0,
                  "!=": !0,
                  "<": !0,
                  ">": !0,
                  "<=": !0,
                  ">=": !0,
                  "<<": !0,
                  ">>": !0,
                  ">>>": !0,
                },
                N = {
                  mod: !0,
                  to: !0,
                  in: !0,
                  and: !0,
                  xor: !0,
                  or: !0,
                  not: !0,
                },
                E = { true: !0, false: !1, null: null, undefined: void 0 },
                M = ["NaN", "Infinity"];
              function S(e, t) {
                return e.expression.substr(e.index, t);
              }
              function _(e) {
                return S(e, 1);
              }
              function k(e) {
                e.index++;
              }
              function O(e) {
                return e.expression.charAt(e.index - 1);
              }
              function A(e) {
                return e.expression.charAt(e.index + 1);
              }
              function C(e) {
                for (
                  e.tokenType = 0, e.token = "", e.comment = "";
                  b.isWhitespace(_(e), e.nestingLevel);

                )
                  k(e);
                if ("#" === _(e))
                  for (; "\n" !== _(e) && "" !== _(e); )
                    (e.comment += _(e)), k(e);
                if ("" !== _(e)) {
                  if ("\n" === _(e) && !e.nestingLevel)
                    return (e.tokenType = 1), (e.token = _(e)), void k(e);
                  var t = _(e),
                    n = S(e, 2),
                    r = S(e, 3);
                  if (3 === r.length && w[r])
                    return (
                      (e.tokenType = 1), (e.token = r), k(e), k(e), void k(e)
                    );
                  if (2 === n.length && w[n])
                    return (e.tokenType = 1), (e.token = n), k(e), void k(e);
                  if (w[t]) return (e.tokenType = 1), (e.token = t), void k(e);
                  if (b.isDigitDot(t)) {
                    e.tokenType = 2;
                    var i = S(e, 2);
                    if ("0b" === i || "0o" === i || "0x" === i) {
                      for (
                        e.token += _(e), k(e), e.token += _(e), k(e);
                        b.isHexDigit(_(e));

                      )
                        (e.token += _(e)), k(e);
                      return;
                    }
                    if ("." === _(e))
                      (e.token += _(e)),
                        k(e),
                        b.isDigit(_(e)) || (e.tokenType = 1);
                    else {
                      for (; b.isDigit(_(e)); ) (e.token += _(e)), k(e);
                      b.isDecimalMark(_(e), A(e)) && ((e.token += _(e)), k(e));
                    }
                    for (; b.isDigit(_(e)); ) (e.token += _(e)), k(e);
                    if ("E" === _(e) || "e" === _(e))
                      if (b.isDigit(A(e)) || "-" === A(e) || "+" === A(e)) {
                        if (
                          ((e.token += _(e)),
                          k(e),
                          ("+" !== _(e) && "-" !== _(e)) ||
                            ((e.token += _(e)), k(e)),
                          !b.isDigit(_(e)))
                        )
                          throw te(e, 'Digit expected, got "' + _(e) + '"');
                        for (; b.isDigit(_(e)); ) (e.token += _(e)), k(e);
                        if (b.isDecimalMark(_(e), A(e)))
                          throw te(e, 'Digit expected, got "' + _(e) + '"');
                      } else if ("." === A(e))
                        throw (
                          (k(e), te(e, 'Digit expected, got "' + _(e) + '"'))
                        );
                  } else {
                    if (!b.isAlpha(_(e), O(e), A(e))) {
                      for (e.tokenType = 4; "" !== _(e); )
                        (e.token += _(e)), k(e);
                      throw te(e, 'Syntax error in part "' + e.token + '"');
                    }
                    for (; b.isAlpha(_(e), O(e), A(e)) || b.isDigit(_(e)); )
                      (e.token += _(e)), k(e);
                    Bn(N, e.token) ? (e.tokenType = 1) : (e.tokenType = 3);
                  }
                } else e.tokenType = 1;
              }
              function T(e) {
                do {
                  C(e);
                } while ("\n" === e.token);
              }
              function I(e) {
                e.nestingLevel++;
              }
              function P(e) {
                e.nestingLevel--;
              }
              function B(e, t) {
                var n = {
                  extraNodes: {},
                  expression: "",
                  comment: "",
                  index: 0,
                  token: "",
                  tokenType: 0,
                  nestingLevel: 0,
                  conditionalLevel: null,
                };
                lh(n, { expression: e, extraNodes: t }), C(n);
                var r = (function (e) {
                  var t,
                    n,
                    r = [];
                  for (
                    "" !== e.token &&
                    "\n" !== e.token &&
                    ";" !== e.token &&
                    ((t = D(e)).comment = e.comment);
                    "\n" === e.token || ";" === e.token;

                  )
                    0 === r.length &&
                      t &&
                      ((n = ";" !== e.token), r.push({ node: t, visible: n })),
                      C(e),
                      "\n" !== e.token &&
                        ";" !== e.token &&
                        "" !== e.token &&
                        (((t = D(e)).comment = e.comment),
                        (n = ";" !== e.token),
                        r.push({ node: t, visible: n }));
                  return r.length > 0
                    ? new s(r)
                    : (t || ((t = new c(void 0)).comment = e.comment), t);
                })(n);
                if ("" !== n.token)
                  throw 1 === n.tokenType
                    ? ne(n, "Unexpected operator " + n.token)
                    : te(n, 'Unexpected part "' + n.token + '"');
                return r;
              }
              function D(e) {
                var t,
                  n,
                  r,
                  i,
                  a = (function (e) {
                    for (
                      var t = (function (e) {
                        for (var t = j(e); "or" === e.token; )
                          T(e), (t = new d("or", "or", [t, j(e)]));
                        return t;
                      })(e);
                      "?" === e.token;

                    ) {
                      var n = e.conditionalLevel;
                      (e.conditionalLevel = e.nestingLevel), T(e);
                      var r = t,
                        i = D(e);
                      if (":" !== e.token)
                        throw te(
                          e,
                          "False part of conditional expression expected"
                        );
                      (e.conditionalLevel = null), T(e);
                      var a = D(e);
                      (t = new u(r, i, a)), (e.conditionalLevel = n);
                    }
                    return t;
                  })(e);
                if ("=" === e.token) {
                  if (kn(a))
                    return (t = a.name), T(e), (r = D(e)), new o(new v(t), r);
                  if (hn(a))
                    return T(e), (r = D(e)), new o(a.object, a.index, r);
                  if (
                    xn(a) &&
                    kn(a.fn) &&
                    ((i = !0),
                    (n = []),
                    (t = a.name),
                    a.args.forEach(function (e, t) {
                      kn(e) ? (n[t] = e.name) : (i = !1);
                    }),
                    i)
                  )
                    return T(e), (r = D(e)), new l(t, n, r);
                  throw te(
                    e,
                    "Invalid left hand side of assignment operator ="
                  );
                }
                return a;
              }
              function j(e) {
                for (var t = R(e); "xor" === e.token; )
                  T(e), (t = new d("xor", "xor", [t, R(e)]));
                return t;
              }
              function R(e) {
                for (var t = L(e); "and" === e.token; )
                  T(e), (t = new d("and", "and", [t, L(e)]));
                return t;
              }
              function L(e) {
                for (var t = z(e); "|" === e.token; )
                  T(e), (t = new d("|", "bitOr", [t, z(e)]));
                return t;
              }
              function z(e) {
                for (var t = q(e); "^|" === e.token; )
                  T(e), (t = new d("^|", "bitXor", [t, q(e)]));
                return t;
              }
              function q(e) {
                for (var t = F(e); "&" === e.token; )
                  T(e), (t = new d("&", "bitAnd", [t, F(e)]));
                return t;
              }
              function F(e) {
                for (
                  var t = [U(e)],
                    n = [],
                    r = {
                      "==": "equal",
                      "!=": "unequal",
                      "<": "smaller",
                      ">": "larger",
                      "<=": "smallerEq",
                      ">=": "largerEq",
                    };
                  Bn(r, e.token);

                ) {
                  var i = { name: e.token, fn: r[e.token] };
                  n.push(i), T(e), t.push(U(e));
                }
                return 1 === t.length
                  ? t[0]
                  : 2 === t.length
                  ? new d(n[0].name, n[0].fn, t)
                  : new y(
                      n.map(function (e) {
                        return e.fn;
                      }),
                      t
                    );
              }
              function U(e) {
                var t, n, r, i;
                t = V(e);
                for (
                  var a = {
                    "<<": "leftShift",
                    ">>": "rightArithShift",
                    ">>>": "rightLogShift",
                  };
                  Bn(a, e.token);

                )
                  (r = a[(n = e.token)]),
                    T(e),
                    (i = [t, V(e)]),
                    (t = new d(n, r, i));
                return t;
              }
              function V(e) {
                var t, n, r, i;
                t = $(e);
                for (var a = { to: "to", in: "to" }; Bn(a, e.token); )
                  (r = a[(n = e.token)]),
                    T(e),
                    "in" === n && "" === e.token
                      ? (t = new d("*", "multiply", [t, new v("in")], !0))
                      : ((i = [t, $(e)]), (t = new d(n, r, i)));
                return t;
              }
              function $(e) {
                var t,
                  n = [];
                if (
                  ((t = ":" === e.token ? new c(1) : H(e)),
                  ":" === e.token && e.conditionalLevel !== e.nestingLevel)
                ) {
                  for (n.push(t); ":" === e.token && n.length < 3; )
                    T(e),
                      ")" === e.token ||
                      "]" === e.token ||
                      "," === e.token ||
                      "" === e.token
                        ? n.push(new v("end"))
                        : n.push(H(e));
                  t =
                    3 === n.length
                      ? new g(n[0], n[2], n[1])
                      : new g(n[0], n[1]);
                }
                return t;
              }
              function H(e) {
                var t, n, r, i;
                t = W(e);
                for (var a = { "+": "add", "-": "subtract" }; Bn(a, e.token); )
                  (r = a[(n = e.token)]),
                    T(e),
                    (i = [t, W(e)]),
                    (t = new d(n, r, i));
                return t;
              }
              function W(e) {
                var t, n, r, i;
                n = t = G(e);
                for (
                  var a = {
                    "*": "multiply",
                    ".*": "dotMultiply",
                    "/": "divide",
                    "./": "dotDivide",
                    "%": "mod",
                    mod: "mod",
                  };
                  Bn(a, e.token);

                )
                  (i = a[(r = e.token)]),
                    T(e),
                    (n = G(e)),
                    (t = new d(r, i, [t, n]));
                return t;
              }
              function G(e) {
                var t, n;
                for (
                  n = t = J(e);
                  3 === e.tokenType ||
                  ("in" === e.token && vn(t)) ||
                  !(2 !== e.tokenType || vn(n) || (Mn(n) && "!" !== n.op)) ||
                  "(" === e.token;

                )
                  (n = J(e)), (t = new d("*", "multiply", [t, n], !0));
                return t;
              }
              function J(e) {
                for (var t = Y(e), n = t, r = []; "/" === e.token && vn(n); ) {
                  if ((r.push(lh({}, e)), T(e), 2 !== e.tokenType)) {
                    lh(e, r.pop());
                    break;
                  }
                  if (
                    (r.push(lh({}, e)),
                    T(e),
                    3 !== e.tokenType && "(" !== e.token)
                  ) {
                    r.pop(), lh(e, r.pop());
                    break;
                  }
                  lh(e, r.pop()),
                    r.pop(),
                    (n = Y(e)),
                    (t = new d("/", "divide", [t, n]));
                }
                return t;
              }
              function Y(e) {
                var t,
                  i,
                  o,
                  s = {
                    "-": "unaryMinus",
                    "+": "unaryPlus",
                    "~": "bitNot",
                    not: "not",
                  };
                return Bn(s, e.token)
                  ? ((o = s[e.token]),
                    (t = e.token),
                    T(e),
                    (i = [Y(e)]),
                    new d(t, o, i))
                  : (function (e) {
                      var t, i, o, s;
                      return (
                        (t = (function (e) {
                          var t, i, o;
                          t = (function (e) {
                            var t = [];
                            if (
                              3 === e.tokenType &&
                              Bn(e.extraNodes, e.token)
                            ) {
                              var i = e.extraNodes[e.token];
                              if ((C(e), "(" === e.token)) {
                                if (((t = []), I(e), C(e), ")" !== e.token))
                                  for (t.push(D(e)); "," === e.token; )
                                    C(e), t.push(D(e));
                                if (")" !== e.token)
                                  throw te(e, "Parenthesis ) expected");
                                P(e), C(e);
                              }
                              return new i(t);
                            }
                            return (function (e) {
                              var t;
                              return 3 === e.tokenType ||
                                (1 === e.tokenType && e.token in N)
                                ? ((t = e.token),
                                  C(e),
                                  Z(
                                    e,
                                    Bn(E, t)
                                      ? new c(E[t])
                                      : -1 !== M.indexOf(t)
                                      ? new c(n(t, "number"))
                                      : new v(t)
                                  ))
                                : (function (e) {
                                    var t;
                                    return '"' === e.token
                                      ? ((t = X(e)), Z(e, new c(t)))
                                      : (function (e) {
                                          var t;
                                          return "'" === e.token
                                            ? ((t = K(e)), Z(e, new c(t)))
                                            : (function (e) {
                                                var t, i, o, s;
                                                if ("[" === e.token) {
                                                  if (
                                                    (I(e),
                                                    C(e),
                                                    "]" !== e.token)
                                                  ) {
                                                    var u = Q(e);
                                                    if (";" === e.token) {
                                                      for (
                                                        o = 1, i = [u];
                                                        ";" === e.token;

                                                      )
                                                        C(e),
                                                          (i[o] = Q(e)),
                                                          o++;
                                                      if ("]" !== e.token)
                                                        throw te(
                                                          e,
                                                          "End of matrix ] expected"
                                                        );
                                                      P(e),
                                                        C(e),
                                                        (s = i[0].items.length);
                                                      for (
                                                        var l = 1;
                                                        l < o;
                                                        l++
                                                      )
                                                        if (
                                                          i[l].items.length !==
                                                          s
                                                        )
                                                          throw ne(
                                                            e,
                                                            "Column dimensions mismatch (" +
                                                              i[l].items
                                                                .length +
                                                              " !== " +
                                                              s +
                                                              ")"
                                                          );
                                                      t = new a(i);
                                                    } else {
                                                      if ("]" !== e.token)
                                                        throw te(
                                                          e,
                                                          "End of matrix ] expected"
                                                        );
                                                      P(e), C(e), (t = u);
                                                    }
                                                  } else
                                                    P(e), C(e), (t = new a([]));
                                                  return Z(e, t);
                                                }
                                                return (function (e) {
                                                  if ("{" === e.token) {
                                                    var t;
                                                    I(e);
                                                    var i = {};
                                                    do {
                                                      if (
                                                        (C(e), "}" !== e.token)
                                                      ) {
                                                        if ('"' === e.token)
                                                          t = X(e);
                                                        else if (
                                                          "'" === e.token
                                                        )
                                                          t = K(e);
                                                        else {
                                                          if (
                                                            !(
                                                              3 ===
                                                                e.tokenType ||
                                                              (1 ===
                                                                e.tokenType &&
                                                                e.token in N)
                                                            )
                                                          )
                                                            throw te(
                                                              e,
                                                              "Symbol or string expected as object key"
                                                            );
                                                          (t = e.token), C(e);
                                                        }
                                                        if (":" !== e.token)
                                                          throw te(
                                                            e,
                                                            "Colon : expected after object key"
                                                          );
                                                        C(e), (i[t] = D(e));
                                                      }
                                                    } while ("," === e.token);
                                                    if ("}" !== e.token)
                                                      throw te(
                                                        e,
                                                        "Comma , or bracket } expected after object value"
                                                      );
                                                    P(e), C(e);
                                                    var a = new h(i);
                                                    return Z(e, a);
                                                  }
                                                  return (function (e) {
                                                    var t;
                                                    return 2 === e.tokenType
                                                      ? ((t = e.token),
                                                        C(e),
                                                        new c(n(t, r.number)))
                                                      : (function (e) {
                                                          var t;
                                                          if ("(" === e.token) {
                                                            if (
                                                              (I(e),
                                                              C(e),
                                                              (t = D(e)),
                                                              ")" !== e.token)
                                                            )
                                                              throw te(
                                                                e,
                                                                "Parenthesis ) expected"
                                                              );
                                                            return (
                                                              P(e),
                                                              C(e),
                                                              Z(
                                                                e,
                                                                (t = new m(t))
                                                              )
                                                            );
                                                          }
                                                          return (function (e) {
                                                            throw "" === e.token
                                                              ? te(
                                                                  e,
                                                                  "Unexpected end of expression"
                                                                )
                                                              : te(
                                                                  e,
                                                                  "Value expected"
                                                                );
                                                          })(e);
                                                        })(e);
                                                  })(e);
                                                })(e);
                                              })(e);
                                        })(e);
                                  })(e);
                            })(e);
                          })(e);
                          for (
                            var s = { "!": "factorial", "'": "ctranspose" };
                            Bn(s, e.token);

                          )
                            (o = s[(i = e.token)]),
                              C(e),
                              (t = Z(e, (t = new d(i, o, [t]))));
                          return t;
                        })(e)),
                        ("^" === e.token || ".^" === e.token) &&
                          ((o = "^" === (i = e.token) ? "pow" : "dotPow"),
                          T(e),
                          (s = [t, Y(e)]),
                          (t = new d(i, o, s))),
                        t
                      );
                    })(e);
              }
              function Z(e, t, n) {
                for (
                  var r;
                  !(
                    ("(" !== e.token && "[" !== e.token && "." !== e.token) ||
                    (n && -1 === n.indexOf(e.token))
                  );

                )
                  if (((r = []), "(" === e.token)) {
                    if (!kn(t) && !hn(t)) return t;
                    if ((I(e), C(e), ")" !== e.token))
                      for (r.push(D(e)); "," === e.token; ) C(e), r.push(D(e));
                    if (")" !== e.token) throw te(e, "Parenthesis ) expected");
                    P(e), C(e), (t = new f(t, r));
                  } else if ("[" === e.token) {
                    if ((I(e), C(e), "]" !== e.token))
                      for (r.push(D(e)); "," === e.token; ) C(e), r.push(D(e));
                    if ("]" !== e.token) throw te(e, "Parenthesis ] expected");
                    P(e), C(e), (t = new i(t, new p(r)));
                  } else {
                    if ((C(e), 3 !== e.tokenType))
                      throw te(e, "Property name expected after dot");
                    r.push(new c(e.token)), C(e), (t = new i(t, new p(r, !0)));
                  }
                return t;
              }
              function X(e) {
                for (var t = ""; "" !== _(e) && '"' !== _(e); )
                  "\\" === _(e) && ((t += _(e)), k(e)), (t += _(e)), k(e);
                if ((C(e), '"' !== e.token))
                  throw te(e, 'End of string " expected');
                return C(e), JSON.parse('"' + t + '"');
              }
              function K(e) {
                for (var t = ""; "" !== _(e) && "'" !== _(e); )
                  "\\" === _(e) && ((t += _(e)), k(e)), (t += _(e)), k(e);
                if ((C(e), "'" !== e.token))
                  throw te(e, "End of string ' expected");
                return C(e), JSON.parse('"' + t + '"');
              }
              function Q(e) {
                for (var t = [D(e)], n = 1; "," === e.token; )
                  C(e), (t[n] = D(e)), n++;
                return new a(t);
              }
              function ee(e) {
                return e.index - e.token.length + 1;
              }
              function te(e, t) {
                var n = ee(e),
                  r = new SyntaxError(t + " (char " + n + ")");
                return (r.char = n), r;
              }
              function ne(e, t) {
                var n = ee(e),
                  r = new SyntaxError(t + " (char " + n + ")");
                return (r.char = n), r;
              }
              return (
                (b.isAlpha = function (e, t, n) {
                  return (
                    b.isValidLatinOrGreek(e) ||
                    b.isValidMathSymbol(e, n) ||
                    b.isValidMathSymbol(t, e)
                  );
                }),
                (b.isValidLatinOrGreek = function (e) {
                  return /^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(
                    e
                  );
                }),
                (b.isValidMathSymbol = function (e, t) {
                  return (
                    /^[\uD835]$/.test(e) &&
                    /^[\uDC00-\uDFFF]$/.test(t) &&
                    /^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(
                      t
                    )
                  );
                }),
                (b.isWhitespace = function (e, t) {
                  return " " === e || "\t" === e || ("\n" === e && t > 0);
                }),
                (b.isDecimalMark = function (e, t) {
                  return "." === e && "/" !== t && "*" !== t && "^" !== t;
                }),
                (b.isDigitDot = function (e) {
                  return (e >= "0" && e <= "9") || "." === e;
                }),
                (b.isDigit = function (e) {
                  return e >= "0" && e <= "9";
                }),
                (b.isHexDigit = function (e) {
                  return (
                    (e >= "0" && e <= "9") ||
                    (e >= "a" && e <= "f") ||
                    (e >= "A" && e <= "F")
                  );
                }),
                b
              );
            }
          ),
          ph = "compile",
          hh = Cr(ph, ["typed", "parse"], function (e) {
            var t = e.typed,
              n = e.parse;
            return t(ph, {
              string: function (e) {
                return n(e).compile();
              },
              "Array | Matrix": function (e) {
                return Oa(e, function (e) {
                  return n(e).compile();
                });
              },
            });
          }),
          dh = "evaluate",
          mh = Cr(dh, ["typed", "parse"], function (e) {
            var t = e.typed,
              n = e.parse;
            return t(dh, {
              string: function (e) {
                return n(e).compile().evaluate({});
              },
              "string, Object": function (e, t) {
                return n(e).compile().evaluate(t);
              },
              "Array | Matrix": function (e) {
                var t = {};
                return Oa(e, function (e) {
                  return n(e).compile().evaluate(t);
                });
              },
              "Array | Matrix, Object": function (e, t) {
                return Oa(e, function (e) {
                  return n(e).compile().evaluate(t);
                });
              },
            });
          }),
          gh = Cr(
            "Parser",
            ["parse"],
            function (e) {
              var t = e.parse;
              function n() {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                this.scope = {};
              }
              return (
                (n.prototype.type = "Parser"),
                (n.prototype.isParser = !0),
                (n.prototype.evaluate = function (e) {
                  return t(e).compile().evaluate(this.scope);
                }),
                (n.prototype.get = function (e) {
                  return e in this.scope ? mc(this.scope, e) : void 0;
                }),
                (n.prototype.getAll = function () {
                  return In({}, this.scope);
                }),
                (n.prototype.set = function (e, t) {
                  return gc(this.scope, e, t);
                }),
                (n.prototype.remove = function (e) {
                  delete this.scope[e];
                }),
                (n.prototype.clear = function () {
                  for (var e in this.scope)
                    Bn(this.scope, e) && delete this.scope[e];
                }),
                n
              );
            },
            { isClass: !0 }
          ),
          yh = Cr("parser", ["typed", "Parser"], function (e) {
            var t = e.typed,
              n = e.Parser;
            return t("parser", {
              "": function () {
                return new n();
              },
            });
          }),
          vh = Cr(
            "lup",
            [
              "typed",
              "matrix",
              "abs",
              "addScalar",
              "divideScalar",
              "multiplyScalar",
              "subtract",
              "larger",
              "equalScalar",
              "unaryMinus",
              "DenseMatrix",
              "SparseMatrix",
              "Spa",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.abs,
                i = e.addScalar,
                a = e.divideScalar,
                o = e.multiplyScalar,
                s = e.subtract,
                u = e.larger,
                c = e.equalScalar,
                l = e.unaryMinus,
                f = e.DenseMatrix,
                p = e.SparseMatrix,
                h = e.Spa;
              return t("lup", {
                DenseMatrix: function (e) {
                  return d(e);
                },
                SparseMatrix: function (e) {
                  return (function (e) {
                    var t,
                      n,
                      i,
                      s = e._size[0],
                      f = e._size[1],
                      d = Math.min(s, f),
                      m = e._values,
                      g = e._index,
                      y = e._ptr,
                      v = [],
                      b = [],
                      x = [],
                      w = [s, d],
                      N = [],
                      E = [],
                      M = [],
                      S = [d, f],
                      _ = [],
                      k = [];
                    for (t = 0; t < s; t++) (_[t] = t), (k[t] = t);
                    var O = function () {
                      var e = new h();
                      n < s && (x.push(v.length), v.push(1), b.push(n)),
                        M.push(N.length);
                      var f = y[n],
                        d = y[n + 1];
                      for (i = f; i < d; i++) (t = g[i]), e.set(_[t], m[i]);
                      n > 0 &&
                        e.forEach(0, n - 1, function (t, n) {
                          p._forEachRow(t, v, b, x, function (r, i) {
                            r > t && e.accumulate(r, l(o(i, n)));
                          });
                        });
                      var O,
                        A,
                        C,
                        T,
                        I = n,
                        P = e.get(n),
                        B = r(P);
                      e.forEach(n + 1, s - 1, function (e, t) {
                        var n = r(t);
                        u(n, B) && ((I = e), (B = n), (P = t));
                      }),
                        n !== I &&
                          (p._swapRows(n, I, w[1], v, b, x),
                          p._swapRows(n, I, S[1], N, E, M),
                          e.swap(n, I),
                          (A = I),
                          (C = k[(O = n)]),
                          (T = k[A]),
                          (_[C] = A),
                          (_[T] = O),
                          (k[O] = T),
                          (k[A] = C)),
                        e.forEach(0, s - 1, function (e, t) {
                          e <= n
                            ? (N.push(t), E.push(e))
                            : ((t = a(t, P)),
                              c(t, 0) || (v.push(t), b.push(e)));
                        });
                    };
                    for (n = 0; n < f; n++) O();
                    return (
                      M.push(N.length),
                      x.push(v.length),
                      {
                        L: new p({ values: v, index: b, ptr: x, size: w }),
                        U: new p({ values: N, index: E, ptr: M, size: S }),
                        p: _,
                        toString: function () {
                          return (
                            "L: " +
                            this.L.toString() +
                            "\nU: " +
                            this.U.toString() +
                            "\nP: " +
                            this.p
                          );
                        },
                      }
                    );
                  })(e);
                },
                Array: function (e) {
                  var t = d(n(e));
                  return { L: t.L.valueOf(), U: t.U.valueOf(), p: t.p };
                },
              });
              function d(e) {
                var t,
                  n,
                  l,
                  p = e._size[0],
                  h = e._size[1],
                  d = Math.min(p, h),
                  m = Tn(e._data),
                  g = [],
                  y = [p, d],
                  v = [],
                  b = [d, h],
                  x = [];
                for (t = 0; t < p; t++) x[t] = t;
                for (n = 0; n < h; n++) {
                  if (n > 0)
                    for (t = 0; t < p; t++) {
                      var w = Math.min(t, n),
                        N = 0;
                      for (l = 0; l < w; l++) N = i(N, o(m[t][l], m[l][n]));
                      m[t][n] = s(m[t][n], N);
                    }
                  var E = n,
                    M = 0,
                    S = 0;
                  for (t = n; t < p; t++) {
                    var _ = m[t][n],
                      k = r(_);
                    u(k, M) && ((E = t), (M = k), (S = _));
                  }
                  if (
                    (n !== E &&
                      ((x[n] = [x[E], (x[E] = x[n])][0]), f._swapRows(n, E, m)),
                    n < p)
                  )
                    for (t = n + 1; t < p; t++) {
                      var O = m[t][n];
                      c(O, 0) || (m[t][n] = a(m[t][n], S));
                    }
                }
                for (n = 0; n < h; n++)
                  for (t = 0; t < p; t++)
                    0 === n && (t < h && (v[t] = []), (g[t] = [])),
                      t < n
                        ? (t < h && (v[t][n] = m[t][n]), n < p && (g[t][n] = 0))
                        : t !== n
                        ? (t < h && (v[t][n] = 0), n < p && (g[t][n] = m[t][n]))
                        : (t < h && (v[t][n] = m[t][n]),
                          n < p && (g[t][n] = 1));
                var A = new f({ data: g, size: y }),
                  C = new f({ data: v, size: b }),
                  T = [];
                for (t = 0, d = x.length; t < d; t++) T[x[t]] = t;
                return {
                  L: A,
                  U: C,
                  p: T,
                  toString: function () {
                    return (
                      "L: " +
                      this.L.toString() +
                      "\nU: " +
                      this.U.toString() +
                      "\nP: " +
                      this.p
                    );
                  },
                };
              }
            }
          );
        function bh() {
          return (bh =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        var xh = Cr(
          "qr",
          [
            "typed",
            "matrix",
            "zeros",
            "identity",
            "isZero",
            "equal",
            "sign",
            "sqrt",
            "conj",
            "unaryMinus",
            "addScalar",
            "divideScalar",
            "multiplyScalar",
            "subtract",
            "complex",
          ],
          function (e) {
            var t = e.typed,
              n = e.matrix,
              r = e.zeros,
              i = e.identity,
              a = e.isZero,
              o = e.equal,
              s = e.sign,
              u = e.sqrt,
              c = e.conj,
              l = e.unaryMinus,
              f = e.addScalar,
              p = e.divideScalar,
              h = e.multiplyScalar,
              d = e.subtract,
              m = e.complex;
            return bh(
              t("qr", {
                DenseMatrix: function (e) {
                  return y(e);
                },
                SparseMatrix: function (e) {
                  return (function (e) {
                    throw new Error(
                      "qr not implemented for sparse matrices yet"
                    );
                  })();
                },
                Array: function (e) {
                  var t = y(n(e));
                  return { Q: t.Q.valueOf(), R: t.R.valueOf() };
                },
              }),
              { _denseQRimpl: g }
            );
            function g(e) {
              var t,
                n,
                m,
                g = e._size[0],
                y = e._size[1],
                v = i([g], "dense"),
                b = v._data,
                x = e.clone(),
                w = x._data,
                N = r([g], "");
              for (m = 0; m < Math.min(y, g); ++m) {
                var E = w[m][m],
                  M = l(o(E, 0) ? 1 : s(E)),
                  S = c(M),
                  _ = 0;
                for (t = m; t < g; t++) _ = f(_, h(w[t][m], c(w[t][m])));
                var k = h(M, u(_));
                if (!a(k)) {
                  var O = d(E, k);
                  for (N[m] = 1, t = m + 1; t < g; t++) N[t] = p(w[t][m], O);
                  var A = l(c(p(O, k))),
                    C = void 0;
                  for (n = m; n < y; n++) {
                    for (C = 0, t = m; t < g; t++)
                      C = f(C, h(c(N[t]), w[t][n]));
                    for (C = h(C, A), t = m; t < g; t++)
                      w[t][n] = h(d(w[t][n], h(N[t], C)), S);
                  }
                  for (t = 0; t < g; t++) {
                    for (C = 0, n = m; n < g; n++) C = f(C, h(b[t][n], N[n]));
                    for (C = h(C, A), n = m; n < g; ++n)
                      b[t][n] = p(d(b[t][n], h(C, c(N[n]))), S);
                  }
                }
              }
              return {
                Q: v,
                R: x,
                toString: function () {
                  return (
                    "Q: " + this.Q.toString() + "\nR: " + this.R.toString()
                  );
                },
              };
            }
            function y(e) {
              var t = g(e),
                n = t.R._data;
              if (e._data.length > 0)
                for (
                  var r = "Complex" === n[0][0].type ? m(0) : 0, i = 0;
                  i < n.length;
                  ++i
                )
                  for (var a = 0; a < i && a < (n[0] || []).length; ++a)
                    n[i][a] = r;
              return t;
            }
          }
        );
        function wh(e, t, n, r, i, a, o) {
          var s = 0;
          for (n[o] = e; s >= 0; ) {
            var u = n[o + s],
              c = n[r + u];
            -1 === c
              ? (s--, (a[t++] = u))
              : ((n[r + u] = n[i + c]), (n[o + ++s] = c));
          }
          return t;
        }
        function Nh(e) {
          return -e - 2;
        }
        var Eh = Cr("csAmd", ["add", "multiply", "transpose"], function (e) {
          var t = e.add,
            n = e.multiply,
            r = e.transpose;
          return function (e, o) {
            if (!o || e <= 0 || e > 3) return null;
            var s = o._size,
              u = s[0],
              c = s[1],
              l = 0,
              f = Math.max(16, 10 * Math.sqrt(c)),
              p = (function (e, i, a, o, s) {
                var u = r(i);
                if (1 === e && o === a) return t(i, u);
                if (2 === e) {
                  for (var c = u._index, l = u._ptr, f = 0, p = 0; p < a; p++) {
                    var h = l[p];
                    if (((l[p] = f), !(l[p + 1] - h > s)))
                      for (var d = l[p + 1]; h < d; h++) c[f++] = c[h];
                  }
                  return (l[a] = f), (i = r(u)), n(u, i);
                }
                return n(u, i);
              })(e, o, u, c, (f = Math.min(c - 2, f)));
            !(function (e, t, n) {
              for (
                var r = e._values,
                  i = e._index,
                  a = e._ptr,
                  o = e._size[1],
                  s = 0,
                  u = 0;
                u < o;
                u++
              ) {
                var c = a[u];
                for (a[u] = s; c < a[u + 1]; c++)
                  t(i[c], u, r ? r[c] : 1, null) &&
                    ((i[s] = i[c]), r && (r[s] = r[c]), s++);
              }
              (a[o] = s),
                i.splice(s, i.length - s),
                r && r.splice(s, r.length - s);
            })(p, a);
            for (
              var h,
                d,
                m,
                g,
                y,
                v,
                b,
                x,
                w,
                N,
                E,
                M,
                S,
                _,
                k,
                O,
                A = p._index,
                C = p._ptr,
                T = C[c],
                I = [],
                P = [],
                B = c + 1,
                D = 2 * (c + 1),
                j = 3 * (c + 1),
                R = 4 * (c + 1),
                L = 5 * (c + 1),
                z = 6 * (c + 1),
                q = 7 * (c + 1),
                F = I,
                U = (function (e, t, n, r, a, o, s, u, c, l, f, p) {
                  for (var h = 0; h < e; h++) n[0 + h] = t[h + 1] - t[h];
                  n[0 + e] = 0;
                  for (var d = 0; d <= e; d++)
                    (n[a + d] = -1),
                      (o[d] = -1),
                      (n[s + d] = -1),
                      (n[u + d] = -1),
                      (n[c + d] = 1),
                      (n[l + d] = 1),
                      (n[f + d] = 0),
                      (n[p + d] = n[0 + d]);
                  var m = i(0, 0, n, l, e);
                  return (n[f + e] = -2), (t[e] = -1), (n[l + e] = 0), m;
                })(c, C, P, 0, j, F, D, q, B, z, R, L),
                V = (function (e, t, n, r, i, a, o, s, u, c, l) {
                  for (var f = 0, p = 0; p < e; p++) {
                    var h = n[r + p];
                    if (0 === h)
                      (n[i + p] = -2), f++, (t[p] = -1), (n[a + p] = 0);
                    else if (h > o)
                      (n[s + p] = 0),
                        (n[i + p] = -1),
                        f++,
                        (t[p] = Nh(e)),
                        n[s + e]++;
                    else {
                      var d = n[u + h];
                      -1 !== d && (c[d] = p),
                        (n[l + p] = n[u + h]),
                        (n[u + h] = p);
                    }
                  }
                  return f;
                })(c, C, P, L, R, z, f, B, j, F, D),
                $ = 0;
              V < c;

            ) {
              for (m = -1; $ < c && -1 === (m = P[j + $]); $++);
              -1 !== P[D + m] && (F[P[D + m]] = -1), (P[j + $] = P[D + m]);
              var H = P[R + m],
                W = P[B + m];
              V += W;
              var G = 0;
              P[B + m] = -W;
              var J = C[m],
                Y = 0 === H ? J : T,
                Z = Y;
              for (g = 1; g <= H + 1; g++) {
                for (
                  g > H
                    ? ((v = m), (b = J), (x = P[0 + m] - H))
                    : ((b = C[(v = A[J++])]), (x = P[0 + v])),
                    y = 1;
                  y <= x;
                  y++
                )
                  (w = P[B + (h = A[b++])]) <= 0 ||
                    ((G += w),
                    (P[B + h] = -w),
                    (A[Z++] = h),
                    -1 !== P[D + h] && (F[P[D + h]] = F[h]),
                    -1 !== F[h]
                      ? (P[D + F[h]] = P[D + h])
                      : (P[j + P[L + h]] = P[D + h]));
                v !== m && ((C[v] = Nh(m)), (P[z + v] = 0));
              }
              for (
                0 !== H && (T = Z),
                  P[L + m] = G,
                  C[m] = Y,
                  P[0 + m] = Z - Y,
                  P[R + m] = -2,
                  U = i(U, l, P, z, c),
                  N = Y;
                N < Z;
                N++
              )
                if (!((E = P[R + (h = A[N])]) <= 0)) {
                  var X = U - (w = -P[B + h]);
                  for (J = C[h], M = C[h] + E - 1; J <= M; J++)
                    P[z + (v = A[J])] >= U
                      ? (P[z + v] -= w)
                      : 0 !== P[z + v] && (P[z + v] = P[L + v] + X);
                }
              for (N = Y; N < Z; N++) {
                for (
                  S = (M = C[(h = A[N])]) + P[R + h] - 1,
                    _ = M,
                    k = 0,
                    O = 0,
                    J = M;
                  J <= S;
                  J++
                )
                  if (0 !== P[z + (v = A[J])]) {
                    var K = P[z + v] - U;
                    K > 0
                      ? ((O += K), (A[_++] = v), (k += v))
                      : ((C[v] = Nh(m)), (P[z + v] = 0));
                  }
                P[R + h] = _ - M + 1;
                var Q = _,
                  ee = M + P[0 + h];
                for (J = S + 1; J < ee; J++) {
                  var te = P[B + (d = A[J])];
                  te <= 0 || ((O += te), (A[_++] = d), (k += d));
                }
                0 === O
                  ? ((C[h] = Nh(m)),
                    (G -= w = -P[B + h]),
                    (W += w),
                    (V += w),
                    (P[B + h] = 0),
                    (P[R + h] = -1))
                  : ((P[L + h] = Math.min(P[L + h], O)),
                    (A[_] = A[Q]),
                    (A[Q] = A[M]),
                    (A[M] = m),
                    (P[0 + h] = _ - M + 1),
                    (k = (k < 0 ? -k : k) % c),
                    (P[D + h] = P[q + k]),
                    (P[q + k] = h),
                    (F[h] = k));
              }
              for (
                P[L + m] = G,
                  U = i(U + (l = Math.max(l, G)), l, P, z, c),
                  N = Y;
                N < Z;
                N++
              )
                if (!(P[B + (h = A[N])] >= 0))
                  for (
                    h = P[q + (k = F[h])], P[q + k] = -1;
                    -1 !== h && -1 !== P[D + h];
                    h = P[D + h], U++
                  ) {
                    for (
                      x = P[0 + h], E = P[R + h], J = C[h] + 1;
                      J <= C[h] + x - 1;
                      J++
                    )
                      P[z + A[J]] = U;
                    var ne = h;
                    for (d = P[D + h]; -1 !== d; ) {
                      var re = P[0 + d] === x && P[R + d] === E;
                      for (J = C[d] + 1; re && J <= C[d] + x - 1; J++)
                        P[z + A[J]] !== U && (re = 0);
                      re
                        ? ((C[d] = Nh(h)),
                          (P[B + h] += P[B + d]),
                          (P[B + d] = 0),
                          (P[R + d] = -1),
                          (d = P[D + d]),
                          (P[D + ne] = d))
                        : ((ne = d), (d = P[D + d]));
                    }
                  }
              for (J = Y, N = Y; N < Z; N++)
                (w = -P[B + (h = A[N])]) <= 0 ||
                  ((P[B + h] = w),
                  (O = P[L + h] + G - w),
                  -1 !== P[j + (O = Math.min(O, c - V - w))] &&
                    (F[P[j + O]] = h),
                  (P[D + h] = P[j + O]),
                  (F[h] = -1),
                  (P[j + O] = h),
                  ($ = Math.min($, O)),
                  (P[L + h] = O),
                  (A[J++] = h));
              (P[B + m] = W),
                0 == (P[0 + m] = J - Y) && ((C[m] = -1), (P[z + m] = 0)),
                0 !== H && (T = J);
            }
            for (h = 0; h < c; h++) C[h] = Nh(C[h]);
            for (d = 0; d <= c; d++) P[j + d] = -1;
            for (d = c; d >= 0; d--)
              P[B + d] > 0 || ((P[D + d] = P[j + C[d]]), (P[j + C[d]] = d));
            for (v = c; v >= 0; v--)
              P[B + v] <= 0 ||
                (-1 !== C[v] && ((P[D + v] = P[j + C[v]]), (P[j + C[v]] = v)));
            for (m = 0, h = 0; h <= c; h++)
              -1 === C[h] && (m = wh(h, m, P, j, D, I, z));
            return I.splice(I.length - 1, 1), I;
          };
          function i(e, t, n, r, i) {
            if (e < 2 || e + t < 0) {
              for (var a = 0; a < i; a++) 0 !== n[r + a] && (n[r + a] = 1);
              e = 2;
            }
            return e;
          }
          function a(e, t) {
            return e !== t;
          }
        });
        function Mh(e, t, n, r, i, a, o) {
          var s,
            u,
            c,
            l = 0;
          if (e <= t || n[r + t] <= n[i + e]) return -1;
          n[i + e] = n[r + t];
          var f = n[a + e];
          if (((n[a + e] = t), -1 === f)) (l = 1), (c = e);
          else {
            for (l = 2, c = f; c !== n[o + c]; c = n[o + c]);
            for (s = f; s !== c; s = u) (u = n[o + s]), (n[o + s] = c);
          }
          return { jleaf: l, q: c };
        }
        var Sh = Cr("csCounts", ["transpose"], function (e) {
            var t = e.transpose;
            return function (e, n, r, i) {
              if (!e || !n || !r) return null;
              var a,
                o,
                s,
                u,
                c,
                l,
                f,
                p = e._size,
                h = p[0],
                d = p[1],
                m = 4 * d + (i ? d + h + 1 : 0),
                g = [],
                y = d,
                v = 2 * d,
                b = 3 * d,
                x = 4 * d,
                w = 5 * d + 1;
              for (s = 0; s < m; s++) g[s] = -1;
              var N = [],
                E = t(e),
                M = E._index,
                S = E._ptr;
              for (s = 0; s < d; s++)
                for (
                  N[(o = r[s])] = -1 === g[b + o] ? 1 : 0;
                  -1 !== o && -1 === g[b + o];
                  o = n[o]
                )
                  g[b + o] = s;
              if (i) {
                for (s = 0; s < d; s++) g[r[s]] = s;
                for (a = 0; a < h; a++) {
                  for (s = d, l = S[a], f = S[a + 1], c = l; c < f; c++)
                    s = Math.min(s, g[M[c]]);
                  (g[w + a] = g[x + s]), (g[x + s] = a);
                }
              }
              for (a = 0; a < d; a++) g[0 + a] = a;
              for (s = 0; s < d; s++) {
                for (
                  -1 !== n[(o = r[s])] && N[n[o]]--, u = i ? g[x + s] : o;
                  -1 !== u;
                  u = i ? g[w + u] : -1
                )
                  for (c = S[u]; c < S[u + 1]; c++) {
                    var _ = Mh((a = M[c]), o, g, b, y, v, 0);
                    _.jleaf >= 1 && N[o]++, 2 === _.jleaf && N[_.q]--;
                  }
                -1 !== n[o] && (g[0 + o] = n[o]);
              }
              for (o = 0; o < d; o++) -1 !== n[o] && (N[n[o]] += N[o]);
              return N;
            };
          }),
          _h = Cr("csSqr", ["add", "multiply", "transpose"], function (e) {
            var t = e.add,
              n = e.multiply,
              r = e.transpose,
              i = Eh({ add: t, multiply: n, transpose: r }),
              a = Sh({ transpose: r });
            return function (e, t, n) {
              var r,
                o = t._ptr,
                s = t._size[1],
                u = {};
              if (((u.q = i(e, t)), e && !u.q)) return null;
              if (n) {
                var c = e
                  ? (function (e, t, n, r) {
                      for (
                        var i = e._values,
                          a = e._index,
                          o = e._ptr,
                          s = e._size,
                          u = e._datatype,
                          c = s[0],
                          l = s[1],
                          f = null,
                          p = [],
                          h = [],
                          d = 0,
                          m = 0;
                        m < l;
                        m++
                      ) {
                        h[m] = d;
                        for (
                          var g = n ? n[m] : m, y = o[g], v = o[g + 1], b = y;
                          b < v;
                          b++
                        ) {
                          var x = a[b];
                          (p[d] = x), f && (f[d] = i[b]), d++;
                        }
                      }
                      return (
                        (h[l] = d),
                        e.createSparseMatrix({
                          values: f,
                          index: p,
                          ptr: h,
                          size: [c, l],
                          datatype: u,
                        })
                      );
                    })(t, 0, u.q)
                  : t;
                u.parent = (function (e, t) {
                  if (!e) return null;
                  var n,
                    r,
                    i = e._index,
                    a = e._ptr,
                    o = e._size,
                    s = o[0],
                    u = o[1],
                    c = [],
                    l = [],
                    f = u;
                  for (n = 0; n < s; n++) l[f + n] = -1;
                  for (var p = 0; p < u; p++) {
                    (c[p] = -1), (l[0 + p] = -1);
                    for (var h = a[p], d = a[p + 1], m = h; m < d; m++) {
                      var g = i[m];
                      for (n = l[f + g]; -1 !== n && n < p; n = r)
                        (r = l[0 + n]), (l[0 + n] = p), -1 === r && (c[n] = p);
                      l[f + g] = p;
                    }
                  }
                  return c;
                })(c);
                var l = (function (e, t) {
                  if (!e) return null;
                  var n,
                    r = 0,
                    i = [],
                    a = [],
                    o = t,
                    s = 2 * t;
                  for (n = 0; n < t; n++) a[0 + n] = -1;
                  for (n = t - 1; n >= 0; n--)
                    -1 !== e[n] &&
                      ((a[o + n] = a[0 + e[n]]), (a[0 + e[n]] = n));
                  for (n = 0; n < t; n++)
                    -1 === e[n] && (r = wh(n, r, a, 0, o, i, s));
                  return i;
                })(u.parent, s);
                if (
                  ((u.cp = a(c, u.parent, l, 1)),
                  c &&
                    u.parent &&
                    u.cp &&
                    (function (e, t) {
                      var n = e._ptr,
                        r = e._index,
                        i = e._size,
                        a = i[0],
                        o = i[1];
                      (t.pinv = []), (t.leftmost = []);
                      var s,
                        u,
                        c,
                        l,
                        f,
                        p = t.parent,
                        h = t.pinv,
                        d = t.leftmost,
                        m = [],
                        g = a,
                        y = a + o,
                        v = a + 2 * o;
                      for (u = 0; u < o; u++)
                        (m[g + u] = -1), (m[y + u] = -1), (m[v + u] = 0);
                      for (s = 0; s < a; s++) d[s] = -1;
                      for (u = o - 1; u >= 0; u--)
                        for (l = n[u], f = n[u + 1], c = l; c < f; c++)
                          d[r[c]] = u;
                      for (s = a - 1; s >= 0; s--)
                        (h[s] = -1),
                          -1 !== (u = d[s]) &&
                            (0 == m[v + u]++ && (m[y + u] = s),
                            (m[0 + s] = m[g + u]),
                            (m[g + u] = s));
                      for (t.lnz = 0, t.m2 = a, u = 0; u < o; u++)
                        if (
                          ((s = m[g + u]),
                          t.lnz++,
                          s < 0 && (s = t.m2++),
                          (h[s] = u),
                          !(--v[u] <= 0))
                        ) {
                          t.lnz += m[v + u];
                          var b = p[u];
                          -1 !== b &&
                            (0 === m[v + b] && (m[y + b] = m[y + u]),
                            (m[0 + m[y + u]] = m[g + b]),
                            (m[g + b] = m[0 + s]),
                            (m[v + b] += m[v + u]));
                        }
                      for (s = 0; s < a; s++) h[s] < 0 && (h[s] = u++);
                      return !0;
                    })(c, u))
                )
                  for (u.unz = 0, r = 0; r < s; r++) u.unz += u.cp[r];
              } else (u.unz = 4 * o[s] + s), (u.lnz = u.unz);
              return u;
            };
          });
        function kh(e, t) {
          return e[t] < 0;
        }
        function Oh(e, t) {
          e[t] = Nh(e[t]);
        }
        function Ah(e) {
          return e < 0 ? Nh(e) : e;
        }
        function Ch(e, t, n, r, i) {
          var a,
            o,
            s,
            u = t._index,
            c = t._ptr,
            l = t._size[1],
            f = 0;
          for (r[0] = e; f >= 0; ) {
            e = r[f];
            var p = i ? i[e] : e;
            kh(c, e) || (Oh(c, e), (r[l + f] = p < 0 ? 0 : Ah(c[p])));
            var h = 1;
            for (o = r[l + f], s = p < 0 ? 0 : Ah(c[p + 1]); o < s; o++)
              if (!kh(c, (a = u[o]))) {
                (r[l + f] = o), (r[++f] = a), (h = 0);
                break;
              }
            h && (f--, (r[--n] = e));
          }
          return n;
        }
        var Th = Cr(
            "csSpsolve",
            ["divideScalar", "multiply", "subtract"],
            function (e) {
              var t = e.divideScalar,
                n = e.multiply,
                r = e.subtract;
              return function (e, i, a, o, s, u, c) {
                var l,
                  f,
                  p,
                  h,
                  d = e._values,
                  m = e._index,
                  g = e._ptr,
                  y = e._size[1],
                  v = i._values,
                  b = i._index,
                  x = i._ptr,
                  w = (function (e, t, n, r, i) {
                    var a,
                      o,
                      s,
                      u = e._ptr,
                      c = e._size,
                      l = t._index,
                      f = t._ptr,
                      p = c[1],
                      h = p;
                    for (o = f[n], s = f[n + 1], a = o; a < s; a++) {
                      var d = l[a];
                      kh(u, d) || (h = Ch(d, e, h, r, i));
                    }
                    for (a = h; a < p; a++) Oh(u, r[a]);
                    return h;
                  })(e, i, a, o, u);
                for (l = w; l < y; l++) s[o[l]] = 0;
                for (f = x[a], p = x[a + 1], l = f; l < p; l++) s[b[l]] = v[l];
                for (var N = w; N < y; N++) {
                  var E = o[N],
                    M = u ? u[E] : E;
                  if (!(M < 0))
                    for (
                      f = g[M],
                        p = g[M + 1],
                        s[E] = t(s[E], d[c ? f : p - 1]),
                        l = c ? f + 1 : f,
                        h = c ? p : p - 1;
                      l < h;
                      l++
                    ) {
                      var S = m[l];
                      s[S] = r(s[S], n(d[l], s[E]));
                    }
                }
                return w;
              };
            }
          ),
          Ih = Cr(
            "csLu",
            [
              "abs",
              "divideScalar",
              "multiply",
              "subtract",
              "larger",
              "largerEq",
              "SparseMatrix",
            ],
            function (e) {
              var t = e.abs,
                n = e.divideScalar,
                r = e.multiply,
                i = e.subtract,
                a = e.larger,
                o = e.largerEq,
                s = e.SparseMatrix,
                u = Th({ divideScalar: n, multiply: r, subtract: i });
              return function (e, i, c) {
                if (!e) return null;
                var l,
                  f = e._size[1],
                  p = 100,
                  h = 100;
                i && ((l = i.q), (p = i.lnz || p), (h = i.unz || h));
                var d,
                  m,
                  g = [],
                  y = [],
                  v = [],
                  b = new s({ values: g, index: y, ptr: v, size: [f, f] }),
                  x = [],
                  w = [],
                  N = [],
                  E = new s({ values: x, index: w, ptr: N, size: [f, f] }),
                  M = [],
                  S = [],
                  _ = [];
                for (d = 0; d < f; d++) (S[d] = 0), (M[d] = -1), (v[d + 1] = 0);
                (p = 0), (h = 0);
                for (var k = 0; k < f; k++) {
                  (v[k] = p), (N[k] = h);
                  var O = l ? l[k] : k,
                    A = u(b, e, O, _, S, M, 1),
                    C = -1,
                    T = -1;
                  for (m = A; m < f; m++)
                    if (M[(d = _[m])] < 0) {
                      var I = t(S[d]);
                      a(I, T) && ((T = I), (C = d));
                    } else (w[h] = M[d]), (x[h++] = S[d]);
                  if (-1 === C || T <= 0) return null;
                  M[O] < 0 && o(t(S[O]), r(T, c)) && (C = O);
                  var P = S[C];
                  for (
                    w[h] = k, x[h++] = P, M[C] = k, y[p] = C, g[p++] = 1, m = A;
                    m < f;
                    m++
                  )
                    M[(d = _[m])] < 0 && ((y[p] = d), (g[p++] = n(S[d], P))),
                      (S[d] = 0);
                }
                for (v[f] = p, N[f] = h, m = 0; m < p; m++) y[m] = M[y[m]];
                return (
                  g.splice(p, g.length - p),
                  y.splice(p, y.length - p),
                  x.splice(h, x.length - h),
                  w.splice(h, w.length - h),
                  { L: b, U: E, pinv: M }
                );
              };
            }
          ),
          Ph = Cr(
            "slu",
            [
              "typed",
              "abs",
              "add",
              "multiply",
              "transpose",
              "divideScalar",
              "subtract",
              "larger",
              "largerEq",
              "SparseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.abs,
                r = e.add,
                i = e.multiply,
                a = e.transpose,
                o = e.divideScalar,
                s = e.subtract,
                u = e.larger,
                c = e.largerEq,
                l = e.SparseMatrix,
                f = _h({ add: r, multiply: i, transpose: a }),
                p = Ih({
                  abs: n,
                  divideScalar: o,
                  multiply: i,
                  subtract: s,
                  larger: u,
                  largerEq: c,
                  SparseMatrix: l,
                });
              return t("slu", {
                "SparseMatrix, number, number": function (e, t, n) {
                  if (!Ln(t) || t < 0 || t > 3)
                    throw new Error(
                      "Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]"
                    );
                  if (n < 0 || n > 1)
                    throw new Error(
                      "Partial pivoting threshold must be a number from 0 to 1"
                    );
                  var r = f(t, e, !1),
                    i = p(e, r, n);
                  return {
                    L: i.L,
                    U: i.U,
                    p: i.pinv,
                    q: r.q,
                    toString: function () {
                      return (
                        "L: " +
                        this.L.toString() +
                        "\nU: " +
                        this.U.toString() +
                        "\np: " +
                        this.p.toString() +
                        (this.q ? "\nq: " + this.q.toString() : "") +
                        "\n"
                      );
                    },
                  };
                },
              });
            }
          );
        function Bh(e, t) {
          var n,
            r = t.length,
            i = [];
          if (e) for (n = 0; n < r; n++) i[e[n]] = t[n];
          else for (n = 0; n < r; n++) i[n] = t[n];
          return i;
        }
        var Dh = "lusolve",
          jh = Cr(
            Dh,
            [
              "typed",
              "matrix",
              "lup",
              "slu",
              "usolve",
              "lsolve",
              "DenseMatrix",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.lup,
                i = e.slu,
                a = e.usolve,
                o = e.lsolve,
                s = ml({ DenseMatrix: e.DenseMatrix });
              return t(Dh, {
                "Array, Array | Matrix": function (e, t) {
                  e = n(e);
                  var i = r(e);
                  return c(i.L, i.U, i.p, null, t).valueOf();
                },
                "DenseMatrix, Array | Matrix": function (e, t) {
                  var n = r(e);
                  return c(n.L, n.U, n.p, null, t);
                },
                "SparseMatrix, Array | Matrix": function (e, t) {
                  var n = r(e);
                  return c(n.L, n.U, n.p, null, t);
                },
                "SparseMatrix, Array | Matrix, number, number": function (
                  e,
                  t,
                  n,
                  r
                ) {
                  var a = i(e, n, r);
                  return c(a.L, a.U, a.p, a.q, t);
                },
                "Object, Array | Matrix": function (e, t) {
                  return c(e.L, e.U, e.p, e.q, t);
                },
              });
              function u(e) {
                if (Xt(e)) return e;
                if (Zt(e)) return n(e);
                throw new TypeError("Invalid Matrix LU decomposition");
              }
              function c(e, t, n, r, i) {
                (e = u(e)),
                  (t = u(t)),
                  n && ((i = s(e, i, !0))._data = Bh(n, i._data));
                var c = o(e, i),
                  l = a(t, c);
                return r && (l._data = Bh(r, l._data)), l;
              }
            }
          ),
          Rh = Cr(
            "Help",
            ["parse"],
            function (e) {
              var t = e.parse;
              function n(e) {
                if (!(this instanceof n))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                if (!e) throw new Error('Argument "doc" missing');
                this.doc = e;
              }
              return (
                (n.prototype.type = "Help"),
                (n.prototype.isHelp = !0),
                (n.prototype.toString = function () {
                  var e = this.doc || {},
                    n = "\n";
                  if (
                    (e.name && (n += "Name: " + e.name + "\n\n"),
                    e.category && (n += "Category: " + e.category + "\n\n"),
                    e.description &&
                      (n += "Description:\n    " + e.description + "\n\n"),
                    e.syntax &&
                      (n += "Syntax:\n    " + e.syntax.join("\n    ") + "\n\n"),
                    e.examples)
                  ) {
                    n += "Examples:\n";
                    for (var r = {}, i = 0; i < e.examples.length; i++) {
                      var a = e.examples[i];
                      n += "    " + a + "\n";
                      var o = void 0;
                      try {
                        o = t(a).compile().evaluate(r);
                      } catch (e) {
                        o = e;
                      }
                      void 0 === o ||
                        on(o) ||
                        (n += "        " + ur(o, { precision: 14 }) + "\n");
                    }
                    n += "\n";
                  }
                  return (
                    e.seealso &&
                      e.seealso.length &&
                      (n += "See also: " + e.seealso.join(", ") + "\n"),
                    n
                  );
                }),
                (n.prototype.toJSON = function () {
                  var e = Tn(this.doc);
                  return (e.mathjs = "Help"), e;
                }),
                (n.fromJSON = function (e) {
                  var t = {};
                  return (
                    Object.keys(e)
                      .filter(function (e) {
                        return "mathjs" !== e;
                      })
                      .forEach(function (n) {
                        t[n] = e[n];
                      }),
                    new n(t)
                  );
                }),
                (n.prototype.valueOf = n.prototype.toString),
                n
              );
            },
            { isClass: !0 }
          ),
          Lh = Cr(
            "Chain",
            ["?on", "math"],
            function (e) {
              var t = e.on,
                n = e.math;
              function r(e) {
                if (!(this instanceof r))
                  throw new SyntaxError(
                    "Constructor must be called with the new operator"
                  );
                On(e) ? (this.value = e.value) : (this.value = e);
              }
              function i(e, t) {
                !(function (e, t, n) {
                  var r,
                    i = !0;
                  Object.defineProperty(e, t, {
                    get: function () {
                      return i && ((r = n()), (i = !1)), r;
                    },
                    set: function (e) {
                      (r = e), (i = !1);
                    },
                    configurable: !0,
                    enumerable: !0,
                  });
                })(r.prototype, e, function () {
                  var e = t();
                  if ("function" == typeof e) return a(e);
                });
              }
              function a(e) {
                return function () {
                  for (var t = [this.value], n = 0; n < arguments.length; n++)
                    t[n + 1] = arguments[n];
                  return new r(e.apply(e, t));
                };
              }
              (r.prototype.type = "Chain"),
                (r.prototype.isChain = !0),
                (r.prototype.done = function () {
                  return this.value;
                }),
                (r.prototype.valueOf = function () {
                  return this.value;
                }),
                (r.prototype.toString = function () {
                  return ur(this.value);
                }),
                (r.prototype.toJSON = function () {
                  return { mathjs: "Chain", value: this.value };
                }),
                (r.fromJSON = function (e) {
                  return new r(e.value);
                }),
                (r.createProxy = function (e, t) {
                  if ("string" == typeof e)
                    !(function (e, t) {
                      "function" == typeof t && (r.prototype[e] = a(t));
                    })(e, t);
                  else {
                    var n = function (t) {
                      Bn(e, t) &&
                        void 0 === o[t] &&
                        i(t, function () {
                          return e[t];
                        });
                    };
                    for (var s in e) n(s);
                  }
                });
              var o = {
                expression: !0,
                docs: !0,
                type: !0,
                classes: !0,
                json: !0,
                error: !0,
                isChain: !0,
              };
              return (
                r.createProxy(n),
                t &&
                  t("import", function (e, t, n) {
                    n || i(e, t);
                  }),
                r
              );
            },
            { isClass: !0 }
          ),
          zh = {
            name: "pi",
            category: "Constants",
            syntax: ["pi"],
            description:
              "The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",
            examples: ["pi", "sin(pi/2)"],
            seealso: ["tau"],
          },
          qh = {
            name: "e",
            category: "Constants",
            syntax: ["e"],
            description:
              "Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",
            examples: ["e", "e ^ 2", "exp(2)", "log(e)"],
            seealso: ["exp"],
          },
          Fh = {
            bignumber: {
              name: "bignumber",
              category: "Construction",
              syntax: ["bignumber(x)"],
              description: "Create a big number from a number or string.",
              examples: [
                "0.1 + 0.2",
                "bignumber(0.1) + bignumber(0.2)",
                'bignumber("7.2")',
                'bignumber("7.2e500")',
                "bignumber([0.1, 0.2, 0.3])",
              ],
              seealso: [
                "boolean",
                "complex",
                "fraction",
                "index",
                "matrix",
                "string",
                "unit",
              ],
            },
            boolean: {
              name: "boolean",
              category: "Construction",
              syntax: ["x", "boolean(x)"],
              description: "Convert a string or number into a boolean.",
              examples: [
                "boolean(0)",
                "boolean(1)",
                "boolean(3)",
                'boolean("true")',
                'boolean("false")',
                "boolean([1, 0, 1, 1])",
              ],
              seealso: [
                "bignumber",
                "complex",
                "index",
                "matrix",
                "number",
                "string",
                "unit",
              ],
            },
            complex: {
              name: "complex",
              category: "Construction",
              syntax: ["complex()", "complex(re, im)", "complex(string)"],
              description: "Create a complex number.",
              examples: ["complex()", "complex(2, 3)", 'complex("7 - 2i")'],
              seealso: [
                "bignumber",
                "boolean",
                "index",
                "matrix",
                "number",
                "string",
                "unit",
              ],
            },
            createUnit: {
              name: "createUnit",
              category: "Construction",
              syntax: [
                "createUnit(definitions)",
                "createUnit(name, definition)",
              ],
              description:
                "Create a user-defined unit and register it with the Unit type.",
              examples: [
                'createUnit("foo")',
                'createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})',
                'createUnit("mph", "1 mile/hour")',
              ],
              seealso: ["unit", "splitUnit"],
            },
            fraction: {
              name: "fraction",
              category: "Construction",
              syntax: ["fraction(num)", "fraction(num,den)"],
              description:
                "Create a fraction from a number or from a numerator and denominator.",
              examples: ["fraction(0.125)", "fraction(1, 3) + fraction(2, 5)"],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "index",
                "matrix",
                "string",
                "unit",
              ],
            },
            index: {
              name: "index",
              category: "Construction",
              syntax: [
                "[start]",
                "[start:end]",
                "[start:step:end]",
                "[start1, start 2, ...]",
                "[start1:end1, start2:end2, ...]",
                "[start1:step1:end1, start2:step2:end2, ...]",
              ],
              description:
                "Create an index to get or replace a subset of a matrix",
              examples: [
                "[]",
                "[1, 2, 3]",
                "A = [1, 2, 3; 4, 5, 6]",
                "A[1, :]",
                "A[1, 2] = 50",
                "A[0:2, 0:2] = ones(2, 2)",
              ],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "matrix,",
                "number",
                "range",
                "string",
                "unit",
              ],
            },
            matrix: {
              name: "matrix",
              category: "Construction",
              syntax: [
                "[]",
                "[a1, b1, ...; a2, b2, ...]",
                "matrix()",
                'matrix("dense")',
                "matrix([...])",
              ],
              description: "Create a matrix.",
              examples: [
                "[]",
                "[1, 2, 3]",
                "[1, 2, 3; 4, 5, 6]",
                "matrix()",
                "matrix([3, 4])",
                'matrix([3, 4; 5, 6], "sparse")',
                'matrix([3, 4; 5, 6], "sparse", "number")',
              ],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "index",
                "number",
                "string",
                "unit",
                "sparse",
              ],
            },
            number: {
              name: "number",
              category: "Construction",
              syntax: ["x", "number(x)", "number(unit, valuelessUnit)"],
              description:
                "Create a number or convert a string or boolean into a number.",
              examples: [
                "2",
                "2e3",
                "4.05",
                "number(2)",
                'number("7.2")',
                "number(true)",
                "number([true, false, true, true])",
                'number(unit("52cm"), "m")',
              ],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "fraction",
                "index",
                "matrix",
                "string",
                "unit",
              ],
            },
            sparse: {
              name: "sparse",
              category: "Construction",
              syntax: [
                "sparse()",
                "sparse([a1, b1, ...; a1, b2, ...])",
                'sparse([a1, b1, ...; a1, b2, ...], "number")',
              ],
              description: "Create a sparse matrix.",
              examples: [
                "sparse()",
                "sparse([3, 4; 5, 6])",
                'sparse([3, 0; 5, 0], "number")',
              ],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "index",
                "number",
                "string",
                "unit",
                "matrix",
              ],
            },
            splitUnit: {
              name: "splitUnit",
              category: "Construction",
              syntax: ["splitUnit(unit: Unit, parts: Unit[])"],
              description:
                "Split a unit in an array of units whose sum is equal to the original unit.",
              examples: ['splitUnit(1 m, ["feet", "inch"])'],
              seealso: ["unit", "createUnit"],
            },
            string: {
              name: "string",
              category: "Construction",
              syntax: ['"text"', "string(x)"],
              description: "Create a string or convert a value to a string",
              examples: ['"Hello World!"', "string(4.2)", "string(3 + 2i)"],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "index",
                "matrix",
                "number",
                "unit",
              ],
            },
            unit: {
              name: "unit",
              category: "Construction",
              syntax: ["value unit", "unit(value, unit)", "unit(string)"],
              description: "Create a unit.",
              examples: [
                "5.5 mm",
                "3 inch",
                'unit(7.1, "kilogram")',
                'unit("23 deg")',
              ],
              seealso: [
                "bignumber",
                "boolean",
                "complex",
                "index",
                "matrix",
                "number",
                "string",
              ],
            },
            e: qh,
            E: qh,
            false: {
              name: "false",
              category: "Constants",
              syntax: ["false"],
              description: "Boolean value false",
              examples: ["false"],
              seealso: ["true"],
            },
            i: {
              name: "i",
              category: "Constants",
              syntax: ["i"],
              description:
                "Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",
              examples: ["i", "i * i", "sqrt(-1)"],
              seealso: [],
            },
            Infinity: {
              name: "Infinity",
              category: "Constants",
              syntax: ["Infinity"],
              description:
                "Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",
              examples: ["Infinity", "1 / 0"],
              seealso: [],
            },
            LN2: {
              name: "LN2",
              category: "Constants",
              syntax: ["LN2"],
              description:
                "Returns the natural logarithm of 2, approximately equal to 0.693",
              examples: ["LN2", "log(2)"],
              seealso: [],
            },
            LN10: {
              name: "LN10",
              category: "Constants",
              syntax: ["LN10"],
              description:
                "Returns the natural logarithm of 10, approximately equal to 2.302",
              examples: ["LN10", "log(10)"],
              seealso: [],
            },
            LOG2E: {
              name: "LOG2E",
              category: "Constants",
              syntax: ["LOG2E"],
              description:
                "Returns the base-2 logarithm of E, approximately equal to 1.442",
              examples: ["LOG2E", "log(e, 2)"],
              seealso: [],
            },
            LOG10E: {
              name: "LOG10E",
              category: "Constants",
              syntax: ["LOG10E"],
              description:
                "Returns the base-10 logarithm of E, approximately equal to 0.434",
              examples: ["LOG10E", "log(e, 10)"],
              seealso: [],
            },
            NaN: {
              name: "NaN",
              category: "Constants",
              syntax: ["NaN"],
              description: "Not a number",
              examples: ["NaN", "0 / 0"],
              seealso: [],
            },
            null: {
              name: "null",
              category: "Constants",
              syntax: ["null"],
              description: "Value null",
              examples: ["null"],
              seealso: ["true", "false"],
            },
            pi: zh,
            PI: zh,
            phi: {
              name: "phi",
              category: "Constants",
              syntax: ["phi"],
              description:
                "Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",
              examples: ["phi"],
              seealso: [],
            },
            SQRT1_2: {
              name: "SQRT1_2",
              category: "Constants",
              syntax: ["SQRT1_2"],
              description:
                "Returns the square root of 1/2, approximately equal to 0.707",
              examples: ["SQRT1_2", "sqrt(1/2)"],
              seealso: [],
            },
            SQRT2: {
              name: "SQRT2",
              category: "Constants",
              syntax: ["SQRT2"],
              description:
                "Returns the square root of 2, approximately equal to 1.414",
              examples: ["SQRT2", "sqrt(2)"],
              seealso: [],
            },
            tau: {
              name: "tau",
              category: "Constants",
              syntax: ["tau"],
              description:
                "Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",
              examples: ["tau", "2 * pi"],
              seealso: ["pi"],
            },
            true: {
              name: "true",
              category: "Constants",
              syntax: ["true"],
              description: "Boolean value true",
              examples: ["true"],
              seealso: ["false"],
            },
            version: {
              name: "version",
              category: "Constants",
              syntax: ["version"],
              description: "A string with the version number of math.js",
              examples: ["version"],
              seealso: [],
            },
            speedOfLight: {
              description: "Speed of light in vacuum",
              examples: ["speedOfLight"],
            },
            gravitationConstant: {
              description: "Newtonian constant of gravitation",
              examples: ["gravitationConstant"],
            },
            planckConstant: {
              description: "Planck constant",
              examples: ["planckConstant"],
            },
            reducedPlanckConstant: {
              description: "Reduced Planck constant",
              examples: ["reducedPlanckConstant"],
            },
            magneticConstant: {
              description: "Magnetic constant (vacuum permeability)",
              examples: ["magneticConstant"],
            },
            electricConstant: {
              description: "Electric constant (vacuum permeability)",
              examples: ["electricConstant"],
            },
            vacuumImpedance: {
              description: "Characteristic impedance of vacuum",
              examples: ["vacuumImpedance"],
            },
            coulomb: {
              description: "Coulomb's constant",
              examples: ["coulomb"],
            },
            elementaryCharge: {
              description: "Elementary charge",
              examples: ["elementaryCharge"],
            },
            bohrMagneton: {
              description: "Borh magneton",
              examples: ["bohrMagneton"],
            },
            conductanceQuantum: {
              description: "Conductance quantum",
              examples: ["conductanceQuantum"],
            },
            inverseConductanceQuantum: {
              description: "Inverse conductance quantum",
              examples: ["inverseConductanceQuantum"],
            },
            magneticFluxQuantum: {
              description: "Magnetic flux quantum",
              examples: ["magneticFluxQuantum"],
            },
            nuclearMagneton: {
              description: "Nuclear magneton",
              examples: ["nuclearMagneton"],
            },
            klitzing: {
              description: "Von Klitzing constant",
              examples: ["klitzing"],
            },
            bohrRadius: {
              description: "Borh radius",
              examples: ["bohrRadius"],
            },
            classicalElectronRadius: {
              description: "Classical electron radius",
              examples: ["classicalElectronRadius"],
            },
            electronMass: {
              description: "Electron mass",
              examples: ["electronMass"],
            },
            fermiCoupling: {
              description: "Fermi coupling constant",
              examples: ["fermiCoupling"],
            },
            fineStructure: {
              description: "Fine-structure constant",
              examples: ["fineStructure"],
            },
            hartreeEnergy: {
              description: "Hartree energy",
              examples: ["hartreeEnergy"],
            },
            protonMass: {
              description: "Proton mass",
              examples: ["protonMass"],
            },
            deuteronMass: {
              description: "Deuteron Mass",
              examples: ["deuteronMass"],
            },
            neutronMass: {
              description: "Neutron mass",
              examples: ["neutronMass"],
            },
            quantumOfCirculation: {
              description: "Quantum of circulation",
              examples: ["quantumOfCirculation"],
            },
            rydberg: { description: "Rydberg constant", examples: ["rydberg"] },
            thomsonCrossSection: {
              description: "Thomson cross section",
              examples: ["thomsonCrossSection"],
            },
            weakMixingAngle: {
              description: "Weak mixing angle",
              examples: ["weakMixingAngle"],
            },
            efimovFactor: {
              description: "Efimov factor",
              examples: ["efimovFactor"],
            },
            atomicMass: {
              description: "Atomic mass constant",
              examples: ["atomicMass"],
            },
            avogadro: {
              description: "Avogadro's number",
              examples: ["avogadro"],
            },
            boltzmann: {
              description: "Boltzmann constant",
              examples: ["boltzmann"],
            },
            faraday: { description: "Faraday constant", examples: ["faraday"] },
            firstRadiation: {
              description: "First radiation constant",
              examples: ["firstRadiation"],
            },
            loschmidt: {
              description: "Loschmidt constant at T=273.15 K and p=101.325 kPa",
              examples: ["loschmidt"],
            },
            gasConstant: {
              description: "Gas constant",
              examples: ["gasConstant"],
            },
            molarPlanckConstant: {
              description: "Molar Planck constant",
              examples: ["molarPlanckConstant"],
            },
            molarVolume: {
              description:
                "Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",
              examples: ["molarVolume"],
            },
            sackurTetrode: {
              description: "Sackur-Tetrode constant at T=1 K and p=101.325 kPa",
              examples: ["sackurTetrode"],
            },
            secondRadiation: {
              description: "Second radiation constant",
              examples: ["secondRadiation"],
            },
            stefanBoltzmann: {
              description: "Stefan-Boltzmann constant",
              examples: ["stefanBoltzmann"],
            },
            wienDisplacement: {
              description: "Wien displacement law constant",
              examples: ["wienDisplacement"],
            },
            molarMass: {
              description: "Molar mass constant",
              examples: ["molarMass"],
            },
            molarMassC12: {
              description: "Molar mass constant of carbon-12",
              examples: ["molarMassC12"],
            },
            gravity: {
              description:
                "Standard acceleration of gravity (standard acceleration of free-fall on Earth)",
              examples: ["gravity"],
            },
            planckLength: {
              description: "Planck length",
              examples: ["planckLength"],
            },
            planckMass: {
              description: "Planck mass",
              examples: ["planckMass"],
            },
            planckTime: {
              description: "Planck time",
              examples: ["planckTime"],
            },
            planckCharge: {
              description: "Planck charge",
              examples: ["planckCharge"],
            },
            planckTemperature: {
              description: "Planck temperature",
              examples: ["planckTemperature"],
            },
            derivative: {
              name: "derivative",
              category: "Algebra",
              syntax: [
                "derivative(expr, variable)",
                "derivative(expr, variable, {simplify: boolean})",
              ],
              description:
                "Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",
              examples: [
                'derivative("2x^3", "x")',
                'derivative("2x^3", "x", {simplify: false})',
                'derivative("2x^2 + 3x + 4", "x")',
                'derivative("sin(2x)", "x")',
                'f = parse("x^2 + x")',
                'x = parse("x")',
                "df = derivative(f, x)",
                "df.evaluate({x: 3})",
              ],
              seealso: ["simplify", "parse", "evaluate"],
            },
            lsolve: {
              name: "lsolve",
              category: "Algebra",
              syntax: ["x=lsolve(L, b)"],
              description:
                "Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
              examples: [
                "a = [-2, 3; 2, 1]",
                "b = [11, 9]",
                "x = lsolve(a, b)",
              ],
              seealso: [
                "lsolveAll",
                "lup",
                "lusolve",
                "usolve",
                "matrix",
                "sparse",
              ],
            },
            lsolveAll: {
              name: "lsolveAll",
              category: "Algebra",
              syntax: ["x=lsolveAll(L, b)"],
              description:
                "Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
              examples: [
                "a = [-2, 3; 2, 1]",
                "b = [11, 9]",
                "x = lsolve(a, b)",
              ],
              seealso: [
                "lsolve",
                "lup",
                "lusolve",
                "usolve",
                "matrix",
                "sparse",
              ],
            },
            lup: {
              name: "lup",
              category: "Algebra",
              syntax: ["lup(m)"],
              description:
                "Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",
              examples: [
                "lup([[2, 1], [1, 4]])",
                "lup(matrix([[2, 1], [1, 4]]))",
                "lup(sparse([[2, 1], [1, 4]]))",
              ],
              seealso: [
                "lusolve",
                "lsolve",
                "usolve",
                "matrix",
                "sparse",
                "slu",
                "qr",
              ],
            },
            lusolve: {
              name: "lusolve",
              category: "Algebra",
              syntax: ["x=lusolve(A, b)", "x=lusolve(lu, b)"],
              description:
                "Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",
              examples: [
                "a = [-2, 3; 2, 1]",
                "b = [11, 9]",
                "x = lusolve(a, b)",
              ],
              seealso: ["lup", "slu", "lsolve", "usolve", "matrix", "sparse"],
            },
            simplify: {
              name: "simplify",
              category: "Algebra",
              syntax: ["simplify(expr)", "simplify(expr, rules)"],
              description: "Simplify an expression tree.",
              examples: [
                'simplify("3 + 2 / 4")',
                'simplify("2x + x")',
                'f = parse("x * (x + 2 + x)")',
                "simplified = simplify(f)",
                "simplified.evaluate({x: 2})",
              ],
              seealso: ["derivative", "parse", "evaluate"],
            },
            rationalize: {
              name: "rationalize",
              category: "Algebra",
              syntax: [
                "rationalize(expr)",
                "rationalize(expr, scope)",
                "rationalize(expr, scope, detailed)",
              ],
              description:
                "Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",
              examples: [
                'rationalize("2x/y - y/(x+1)")',
                'rationalize("2x/y - y/(x+1)", true)',
              ],
              seealso: ["simplify"],
            },
            slu: {
              name: "slu",
              category: "Algebra",
              syntax: ["slu(A, order, threshold)"],
              description:
                "Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",
              examples: [
                "slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)",
              ],
              seealso: [
                "lusolve",
                "lsolve",
                "usolve",
                "matrix",
                "sparse",
                "lup",
                "qr",
              ],
            },
            usolve: {
              name: "usolve",
              category: "Algebra",
              syntax: ["x=usolve(U, b)"],
              description:
                "Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
              examples: [
                "x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])",
              ],
              seealso: [
                "usolveAll",
                "lup",
                "lusolve",
                "lsolve",
                "matrix",
                "sparse",
              ],
            },
            usolveAll: {
              name: "usolveAll",
              category: "Algebra",
              syntax: ["x=usolve(U, b)"],
              description:
                "Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
              examples: [
                "x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])",
              ],
              seealso: [
                "usolve",
                "lup",
                "lusolve",
                "lsolve",
                "matrix",
                "sparse",
              ],
            },
            qr: {
              name: "qr",
              category: "Algebra",
              syntax: ["qr(A)"],
              description:
                "Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",
              examples: [
                "qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])",
              ],
              seealso: ["lup", "slu", "matrix"],
            },
            abs: {
              name: "abs",
              category: "Arithmetic",
              syntax: ["abs(x)"],
              description: "Compute the absolute value.",
              examples: ["abs(3.5)", "abs(-4.2)"],
              seealso: ["sign"],
            },
            add: {
              name: "add",
              category: "Operators",
              syntax: ["x + y", "add(x, y)"],
              description: "Add two values.",
              examples: [
                "a = 2.1 + 3.6",
                "a - 3.6",
                "3 + 2i",
                "3 cm + 2 inch",
                '"2.3" + "4"',
              ],
              seealso: ["subtract"],
            },
            cbrt: {
              name: "cbrt",
              category: "Arithmetic",
              syntax: ["cbrt(x)", "cbrt(x, allRoots)"],
              description:
                "Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",
              examples: [
                "cbrt(64)",
                "cube(4)",
                "cbrt(-8)",
                "cbrt(2 + 3i)",
                "cbrt(8i)",
                "cbrt(8i, true)",
                "cbrt(27 m^3)",
              ],
              seealso: ["square", "sqrt", "cube", "multiply"],
            },
            ceil: {
              name: "ceil",
              category: "Arithmetic",
              syntax: ["ceil(x)"],
              description:
                "Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",
              examples: ["ceil(3.2)", "ceil(3.8)", "ceil(-4.2)"],
              seealso: ["floor", "fix", "round"],
            },
            cube: {
              name: "cube",
              category: "Arithmetic",
              syntax: ["cube(x)"],
              description:
                "Compute the cube of a value. The cube of x is x * x * x.",
              examples: ["cube(2)", "2^3", "2 * 2 * 2"],
              seealso: ["multiply", "square", "pow"],
            },
            divide: {
              name: "divide",
              category: "Operators",
              syntax: ["x / y", "divide(x, y)"],
              description: "Divide two values.",
              examples: [
                "a = 2 / 3",
                "a * 3",
                "4.5 / 2",
                "3 + 4 / 2",
                "(3 + 4) / 2",
                "18 km / 4.5",
              ],
              seealso: ["multiply"],
            },
            dotDivide: {
              name: "dotDivide",
              category: "Operators",
              syntax: ["x ./ y", "dotDivide(x, y)"],
              description: "Divide two values element wise.",
              examples: [
                "a = [1, 2, 3; 4, 5, 6]",
                "b = [2, 1, 1; 3, 2, 5]",
                "a ./ b",
              ],
              seealso: ["multiply", "dotMultiply", "divide"],
            },
            dotMultiply: {
              name: "dotMultiply",
              category: "Operators",
              syntax: ["x .* y", "dotMultiply(x, y)"],
              description: "Multiply two values element wise.",
              examples: [
                "a = [1, 2, 3; 4, 5, 6]",
                "b = [2, 1, 1; 3, 2, 5]",
                "a .* b",
              ],
              seealso: ["multiply", "divide", "dotDivide"],
            },
            dotPow: {
              name: "dotPow",
              category: "Operators",
              syntax: ["x .^ y", "dotPow(x, y)"],
              description: "Calculates the power of x to y element wise.",
              examples: ["a = [1, 2, 3; 4, 5, 6]", "a .^ 2"],
              seealso: ["pow"],
            },
            exp: {
              name: "exp",
              category: "Arithmetic",
              syntax: ["exp(x)"],
              description: "Calculate the exponent of a value.",
              examples: [
                "exp(1.3)",
                "e ^ 1.3",
                "log(exp(1.3))",
                "x = 2.4",
                "(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula",
              ],
              seealso: ["expm", "expm1", "pow", "log"],
            },
            expm: {
              name: "expm",
              category: "Arithmetic",
              syntax: ["exp(x)"],
              description:
                "Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",
              examples: ["expm([[0,2],[0,0]])"],
              seealso: ["exp"],
            },
            expm1: {
              name: "expm1",
              category: "Arithmetic",
              syntax: ["expm1(x)"],
              description:
                "Calculate the value of subtracting 1 from the exponential value.",
              examples: ["expm1(2)", "pow(e, 2) - 1", "log(expm1(2) + 1)"],
              seealso: ["exp", "pow", "log"],
            },
            fix: {
              name: "fix",
              category: "Arithmetic",
              syntax: ["fix(x)"],
              description:
                "Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",
              examples: ["fix(3.2)", "fix(3.8)", "fix(-4.2)", "fix(-4.8)"],
              seealso: ["ceil", "floor", "round"],
            },
            floor: {
              name: "floor",
              category: "Arithmetic",
              syntax: ["floor(x)"],
              description:
                "Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",
              examples: ["floor(3.2)", "floor(3.8)", "floor(-4.2)"],
              seealso: ["ceil", "fix", "round"],
            },
            gcd: {
              name: "gcd",
              category: "Arithmetic",
              syntax: ["gcd(a, b)", "gcd(a, b, c, ...)"],
              description: "Compute the greatest common divisor.",
              examples: ["gcd(8, 12)", "gcd(-4, 6)", "gcd(25, 15, -10)"],
              seealso: ["lcm", "xgcd"],
            },
            hypot: {
              name: "hypot",
              category: "Arithmetic",
              syntax: ["hypot(a, b, c, ...)", "hypot([a, b, c, ...])"],
              description: "Calculate the hypotenusa of a list with values. ",
              examples: [
                "hypot(3, 4)",
                "sqrt(3^2 + 4^2)",
                "hypot(-2)",
                "hypot([3, 4, 5])",
              ],
              seealso: ["abs", "norm"],
            },
            lcm: {
              name: "lcm",
              category: "Arithmetic",
              syntax: ["lcm(x, y)"],
              description: "Compute the least common multiple.",
              examples: ["lcm(4, 6)", "lcm(6, 21)", "lcm(6, 21, 5)"],
              seealso: ["gcd"],
            },
            log: {
              name: "log",
              category: "Arithmetic",
              syntax: ["log(x)", "log(x, base)"],
              description:
                "Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",
              examples: [
                "log(3.5)",
                "a = log(2.4)",
                "exp(a)",
                "10 ^ 4",
                "log(10000, 10)",
                "log(10000) / log(10)",
                "b = log(1024, 2)",
                "2 ^ b",
              ],
              seealso: ["exp", "log1p", "log2", "log10"],
            },
            log2: {
              name: "log2",
              category: "Arithmetic",
              syntax: ["log2(x)"],
              description:
                "Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",
              examples: [
                "log2(0.03125)",
                "log2(16)",
                "log2(16) / log2(2)",
                "pow(2, 4)",
              ],
              seealso: ["exp", "log1p", "log", "log10"],
            },
            log1p: {
              name: "log1p",
              category: "Arithmetic",
              syntax: ["log1p(x)", "log1p(x, base)"],
              description: "Calculate the logarithm of a `value+1`",
              examples: [
                "log1p(2.5)",
                "exp(log1p(1.4))",
                "pow(10, 4)",
                "log1p(9999, 10)",
                "log1p(9999) / log(10)",
              ],
              seealso: ["exp", "log", "log2", "log10"],
            },
            log10: {
              name: "log10",
              category: "Arithmetic",
              syntax: ["log10(x)"],
              description: "Compute the 10-base logarithm of a value.",
              examples: [
                "log10(0.00001)",
                "log10(10000)",
                "10 ^ 4",
                "log(10000) / log(10)",
                "log(10000, 10)",
              ],
              seealso: ["exp", "log"],
            },
            mod: {
              name: "mod",
              category: "Operators",
              syntax: ["x % y", "x mod y", "mod(x, y)"],
              description:
                "Calculates the modulus, the remainder of an integer division.",
              examples: [
                "7 % 3",
                "11 % 2",
                "10 mod 4",
                "isOdd(x) = x % 2",
                "isOdd(2)",
                "isOdd(3)",
              ],
              seealso: ["divide"],
            },
            multiply: {
              name: "multiply",
              category: "Operators",
              syntax: ["x * y", "multiply(x, y)"],
              description: "multiply two values.",
              examples: [
                "a = 2.1 * 3.4",
                "a / 3.4",
                "2 * 3 + 4",
                "2 * (3 + 4)",
                "3 * 2.1 km",
              ],
              seealso: ["divide"],
            },
            norm: {
              name: "norm",
              category: "Arithmetic",
              syntax: ["norm(x)", "norm(x, p)"],
              description: "Calculate the norm of a number, vector or matrix.",
              examples: [
                "abs(-3.5)",
                "norm(-3.5)",
                "norm(3 - 4i)",
                "norm([1, 2, -3], Infinity)",
                "norm([1, 2, -3], -Infinity)",
                "norm([3, 4], 2)",
                "norm([[1, 2], [3, 4]], 1)",
                'norm([[1, 2], [3, 4]], "inf")',
                'norm([[1, 2], [3, 4]], "fro")',
              ],
            },
            nthRoot: {
              name: "nthRoot",
              category: "Arithmetic",
              syntax: ["nthRoot(a)", "nthRoot(a, root)"],
              description:
                'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',
              examples: ["4 ^ 3", "nthRoot(64, 3)", "nthRoot(9, 2)", "sqrt(9)"],
              seealso: ["nthRoots", "pow", "sqrt"],
            },
            nthRoots: {
              name: "nthRoots",
              category: "Arithmetic",
              syntax: ["nthRoots(A)", "nthRoots(A, root)"],
              description:
                'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',
              examples: ["nthRoots(1)", "nthRoots(1, 3)"],
              seealso: ["sqrt", "pow", "nthRoot"],
            },
            pow: {
              name: "pow",
              category: "Operators",
              syntax: ["x ^ y", "pow(x, y)"],
              description: "Calculates the power of x to y, x^y.",
              examples: ["2^3", "2*2*2", "1 + e ^ (pi * i)"],
              seealso: ["multiply", "nthRoot", "nthRoots", "sqrt"],
            },
            round: {
              name: "round",
              category: "Arithmetic",
              syntax: ["round(x)", "round(x, n)"],
              description:
                "round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",
              examples: [
                "round(3.2)",
                "round(3.8)",
                "round(-4.2)",
                "round(-4.8)",
                "round(pi, 3)",
                "round(123.45678, 2)",
              ],
              seealso: ["ceil", "floor", "fix"],
            },
            sign: {
              name: "sign",
              category: "Arithmetic",
              syntax: ["sign(x)"],
              description:
                "Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",
              examples: ["sign(3.5)", "sign(-4.2)", "sign(0)"],
              seealso: ["abs"],
            },
            sqrt: {
              name: "sqrt",
              category: "Arithmetic",
              syntax: ["sqrt(x)"],
              description:
                "Compute the square root value. If x = y * y, then y is the square root of x.",
              examples: ["sqrt(25)", "5 * 5", "sqrt(-1)"],
              seealso: [
                "square",
                "sqrtm",
                "multiply",
                "nthRoot",
                "nthRoots",
                "pow",
              ],
            },
            sqrtm: {
              name: "sqrtm",
              category: "Arithmetic",
              syntax: ["sqrtm(x)"],
              description:
                "Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",
              examples: ["sqrtm([[1, 2], [3, 4]])"],
              seealso: ["sqrt", "abs", "square", "multiply"],
            },
            square: {
              name: "square",
              category: "Arithmetic",
              syntax: ["square(x)"],
              description:
                "Compute the square of a value. The square of x is x * x.",
              examples: ["square(3)", "sqrt(9)", "3^2", "3 * 3"],
              seealso: ["multiply", "pow", "sqrt", "cube"],
            },
            subtract: {
              name: "subtract",
              category: "Operators",
              syntax: ["x - y", "subtract(x, y)"],
              description: "subtract two values.",
              examples: [
                "a = 5.3 - 2",
                "a + 2",
                "2/3 - 1/6",
                "2 * 3 - 3",
                "2.1 km - 500m",
              ],
              seealso: ["add"],
            },
            unaryMinus: {
              name: "unaryMinus",
              category: "Operators",
              syntax: ["-x", "unaryMinus(x)"],
              description:
                "Inverse the sign of a value. Converts booleans and strings to numbers.",
              examples: ["-4.5", "-(-5.6)", '-"22"'],
              seealso: ["add", "subtract", "unaryPlus"],
            },
            unaryPlus: {
              name: "unaryPlus",
              category: "Operators",
              syntax: ["+x", "unaryPlus(x)"],
              description: "Converts booleans and strings to numbers.",
              examples: ["+true", '+"2"'],
              seealso: ["add", "subtract", "unaryMinus"],
            },
            xgcd: {
              name: "xgcd",
              category: "Arithmetic",
              syntax: ["xgcd(a, b)"],
              description:
                "Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",
              examples: ["xgcd(8, 12)", "gcd(8, 12)", "xgcd(36163, 21199)"],
              seealso: ["gcd", "lcm"],
            },
            bitAnd: {
              name: "bitAnd",
              category: "Bitwise",
              syntax: ["x & y", "bitAnd(x, y)"],
              description:
                "Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",
              examples: ["5 & 3", "bitAnd(53, 131)", "[1, 12, 31] & 42"],
              seealso: [
                "bitNot",
                "bitOr",
                "bitXor",
                "leftShift",
                "rightArithShift",
                "rightLogShift",
              ],
            },
            bitNot: {
              name: "bitNot",
              category: "Bitwise",
              syntax: ["~x", "bitNot(x)"],
              description:
                "Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",
              examples: ["~1", "~2", "bitNot([2, -3, 4])"],
              seealso: [
                "bitAnd",
                "bitOr",
                "bitXor",
                "leftShift",
                "rightArithShift",
                "rightLogShift",
              ],
            },
            bitOr: {
              name: "bitOr",
              category: "Bitwise",
              syntax: ["x | y", "bitOr(x, y)"],
              description:
                "Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",
              examples: ["5 | 3", "bitOr([1, 2, 3], 4)"],
              seealso: [
                "bitAnd",
                "bitNot",
                "bitXor",
                "leftShift",
                "rightArithShift",
                "rightLogShift",
              ],
            },
            bitXor: {
              name: "bitXor",
              category: "Bitwise",
              syntax: ["bitXor(x, y)"],
              description:
                "Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",
              examples: ["bitOr(1, 2)", "bitXor([2, 3, 4], 4)"],
              seealso: [
                "bitAnd",
                "bitNot",
                "bitOr",
                "leftShift",
                "rightArithShift",
                "rightLogShift",
              ],
            },
            leftShift: {
              name: "leftShift",
              category: "Bitwise",
              syntax: ["x << y", "leftShift(x, y)"],
              description:
                "Bitwise left logical shift of a value x by y number of bits.",
              examples: ["4 << 1", "8 >> 1"],
              seealso: [
                "bitAnd",
                "bitNot",
                "bitOr",
                "bitXor",
                "rightArithShift",
                "rightLogShift",
              ],
            },
            rightArithShift: {
              name: "rightArithShift",
              category: "Bitwise",
              syntax: ["x >> y", "rightArithShift(x, y)"],
              description:
                "Bitwise right arithmetic shift of a value x by y number of bits.",
              examples: ["8 >> 1", "4 << 1", "-12 >> 2"],
              seealso: [
                "bitAnd",
                "bitNot",
                "bitOr",
                "bitXor",
                "leftShift",
                "rightLogShift",
              ],
            },
            rightLogShift: {
              name: "rightLogShift",
              category: "Bitwise",
              syntax: ["x >>> y", "rightLogShift(x, y)"],
              description:
                "Bitwise right logical shift of a value x by y number of bits.",
              examples: ["8 >>> 1", "4 << 1", "-12 >>> 2"],
              seealso: [
                "bitAnd",
                "bitNot",
                "bitOr",
                "bitXor",
                "leftShift",
                "rightArithShift",
              ],
            },
            bellNumbers: {
              name: "bellNumbers",
              category: "Combinatorics",
              syntax: ["bellNumbers(n)"],
              description:
                "The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",
              examples: ["bellNumbers(3)", "bellNumbers(8)"],
              seealso: ["stirlingS2"],
            },
            catalan: {
              name: "catalan",
              category: "Combinatorics",
              syntax: ["catalan(n)"],
              description:
                "The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",
              examples: ["catalan(3)", "catalan(8)"],
              seealso: ["bellNumbers"],
            },
            composition: {
              name: "composition",
              category: "Combinatorics",
              syntax: ["composition(n, k)"],
              description:
                "The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",
              examples: ["composition(5, 3)"],
              seealso: ["combinations"],
            },
            stirlingS2: {
              name: "stirlingS2",
              category: "Combinatorics",
              syntax: ["stirlingS2(n, k)"],
              description:
                "he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",
              examples: ["stirlingS2(5, 3)"],
              seealso: ["bellNumbers"],
            },
            config: {
              name: "config",
              category: "Core",
              syntax: ["config()", "config(options)"],
              description: "Get configuration or change configuration.",
              examples: [
                "config()",
                "1/3 + 1/4",
                'config({number: "Fraction"})',
                "1/3 + 1/4",
              ],
              seealso: [],
            },
            import: {
              name: "import",
              category: "Core",
              syntax: ["import(functions)", "import(functions, options)"],
              description: "Import functions or constants from an object.",
              examples: [
                "import({myFn: f(x)=x^2, myConstant: 32 })",
                "myFn(2)",
                "myConstant",
              ],
              seealso: [],
            },
            typed: {
              name: "typed",
              category: "Core",
              syntax: ["typed(signatures)", "typed(name, signatures)"],
              description: "Create a typed function.",
              examples: [
                'double = typed({ "number, number": f(x)=x+x })',
                "double(2)",
                'double("hello")',
              ],
              seealso: [],
            },
            arg: {
              name: "arg",
              category: "Complex",
              syntax: ["arg(x)"],
              description:
                "Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",
              examples: ["arg(2 + 2i)", "atan2(3, 2)", "arg(2 + 3i)"],
              seealso: ["re", "im", "conj", "abs"],
            },
            conj: {
              name: "conj",
              category: "Complex",
              syntax: ["conj(x)"],
              description:
                "Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",
              examples: ["conj(2 + 3i)", "conj(2 - 3i)", "conj(-5.2i)"],
              seealso: ["re", "im", "abs", "arg"],
            },
            re: {
              name: "re",
              category: "Complex",
              syntax: ["re(x)"],
              description: "Get the real part of a complex number.",
              examples: ["re(2 + 3i)", "im(2 + 3i)", "re(-5.2i)", "re(2.4)"],
              seealso: ["im", "conj", "abs", "arg"],
            },
            im: {
              name: "im",
              category: "Complex",
              syntax: ["im(x)"],
              description: "Get the imaginary part of a complex number.",
              examples: ["im(2 + 3i)", "re(2 + 3i)", "im(-5.2i)", "im(2.4)"],
              seealso: ["re", "conj", "abs", "arg"],
            },
            evaluate: {
              name: "evaluate",
              category: "Expression",
              syntax: [
                "evaluate(expression)",
                "evaluate([expr1, expr2, expr3, ...])",
              ],
              description:
                "Evaluate an expression or an array with expressions.",
              examples: ['evaluate("2 + 3")', 'evaluate("sqrt(" + 4 + ")")'],
              seealso: [],
            },
            help: {
              name: "help",
              category: "Expression",
              syntax: ["help(object)", "help(string)"],
              description: "Display documentation on a function or data type.",
              examples: ["help(sqrt)", 'help("complex")'],
              seealso: [],
            },
            distance: {
              name: "distance",
              category: "Geometry",
              syntax: [
                "distance([x1, y1], [x2, y2])",
                "distance([[x1, y1], [x2, y2]])",
              ],
              description:
                "Calculates the Euclidean distance between two points.",
              examples: ["distance([0,0], [4,4])", "distance([[0,0], [4,4]])"],
              seealso: [],
            },
            intersect: {
              name: "intersect",
              category: "Geometry",
              syntax: [
                "intersect(expr1, expr2, expr3, expr4)",
                "intersect(expr1, expr2, expr3)",
              ],
              description:
                "Computes the intersection point of lines and/or planes.",
              examples: [
                "intersect([0, 0], [10, 10], [10, 0], [0, 10])",
                "intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])",
              ],
              seealso: [],
            },
            and: {
              name: "and",
              category: "Logical",
              syntax: ["x and y", "and(x, y)"],
              description:
                "Logical and. Test whether two values are both defined with a nonzero/nonempty value.",
              examples: ["true and false", "true and true", "2 and 4"],
              seealso: ["not", "or", "xor"],
            },
            not: {
              name: "not",
              category: "Logical",
              syntax: ["not x", "not(x)"],
              description:
                "Logical not. Flips the boolean value of given argument.",
              examples: ["not true", "not false", "not 2", "not 0"],
              seealso: ["and", "or", "xor"],
            },
            or: {
              name: "or",
              category: "Logical",
              syntax: ["x or y", "or(x, y)"],
              description:
                "Logical or. Test if at least one value is defined with a nonzero/nonempty value.",
              examples: ["true or false", "false or false", "0 or 4"],
              seealso: ["not", "and", "xor"],
            },
            xor: {
              name: "xor",
              category: "Logical",
              syntax: ["x xor y", "xor(x, y)"],
              description:
                "Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",
              examples: [
                "true xor false",
                "false xor false",
                "true xor true",
                "0 xor 4",
              ],
              seealso: ["not", "and", "or"],
            },
            concat: {
              name: "concat",
              category: "Matrix",
              syntax: ["concat(A, B, C, ...)", "concat(A, B, C, ..., dim)"],
              description:
                "Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",
              examples: [
                "A = [1, 2; 5, 6]",
                "B = [3, 4; 7, 8]",
                "concat(A, B)",
                "concat(A, B, 1)",
                "concat(A, B, 2)",
              ],
              seealso: [
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            cross: {
              name: "cross",
              category: "Matrix",
              syntax: ["cross(A, B)"],
              description:
                "Calculate the cross product for two vectors in three dimensional space.",
              examples: [
                "cross([1, 1, 0],  [0, 1, 1])",
                "cross([3, -3, 1], [4, 9, 2])",
                "cross([2, 3, 4],  [5, 6, 7])",
              ],
              seealso: ["multiply", "dot"],
            },
            column: {
              name: "column",
              category: "Matrix",
              syntax: ["column(x, index)"],
              description: "Return a column from a matrix or array.",
              examples: [
                "A = [[1, 2], [3, 4]]",
                "column(A, 1)",
                "column(A, 2)",
              ],
              seealso: ["row"],
            },
            ctranspose: {
              name: "ctranspose",
              category: "Matrix",
              syntax: ["x'", "ctranspose(x)"],
              description: "Complex Conjugate and Transpose a matrix",
              examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "ctranspose(a)"],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "zeros",
              ],
            },
            det: {
              name: "det",
              category: "Matrix",
              syntax: ["det(x)"],
              description: "Calculate the determinant of a matrix",
              examples: [
                "det([1, 2; 3, 4])",
                "det([-2, 2, 3; -1, 1, 3; 2, 0, -1])",
              ],
              seealso: [
                "concat",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            diag: {
              name: "diag",
              category: "Matrix",
              syntax: ["diag(x)", "diag(x, k)"],
              description:
                "Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",
              examples: [
                "diag(1:3)",
                "diag(1:3, 1)",
                "a = [1, 2, 3; 4, 5, 6; 7, 8, 9]",
                "diag(a)",
              ],
              seealso: [
                "concat",
                "det",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            diff: {
              name: "diff",
              category: "Matrix",
              syntax: ["diff(arr)", "diff(arr, dim)"],
              description: [
                "Create a new matrix or array with the difference of the passed matrix or array.",
                "Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference",
                "If no dimension parameter is passed it is assumed as dimension 0",
                "Dimension is zero-based in javascript and one-based in the parser",
                "Arrays must be 'rectangular' meaning arrays like [1, 2]",
                "If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays",
              ],
              examples: [
                "diff([1, 2, 4, 7, 0])",
                "diff([1, 2, 4, 7, 0], 0)",
                "diff(matrix([1, 2, 4, 7, 0]))",
                "diff([[1, 2], [3, 4]])",
                "diff([[1, 2], [3, 4]], 0)",
                "diff([[1, 2], [3, 4]], 1)",
                "diff([[1, 2], [3, 4]], bignumber(1))",
                "diff(matrix([[1, 2], [3, 4]]), 1)",
                "diff([[1, 2], matrix([3, 4])], 1)",
              ],
              seealso: ["subtract", "partitionSelect"],
            },
            dot: {
              name: "dot",
              category: "Matrix",
              syntax: ["dot(A, B)", "A * B"],
              description:
                "Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",
              examples: ["dot([2, 4, 1], [2, 2, 3])", "[2, 4, 1] * [2, 2, 3]"],
              seealso: ["multiply", "cross"],
            },
            getMatrixDataType: {
              name: "getMatrixDataType",
              category: "Matrix",
              syntax: ["getMatrixDataType(x)"],
              description:
                'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',
              examples: [
                "getMatrixDataType([1, 2, 3])",
                "getMatrixDataType([[5 cm], [2 inch]])",
                'getMatrixDataType([1, "text"])',
                "getMatrixDataType([1, bignumber(4)])",
              ],
              seealso: ["matrix", "sparse", "typeOf"],
            },
            identity: {
              name: "identity",
              category: "Matrix",
              syntax: ["identity(n)", "identity(m, n)", "identity([m, n])"],
              description:
                "Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",
              examples: [
                "identity(3)",
                "identity(3, 5)",
                "a = [1, 2, 3; 4, 5, 6]",
                "identity(size(a))",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            filter: {
              name: "filter",
              category: "Matrix",
              syntax: ["filter(x, test)"],
              description: "Filter items in a matrix.",
              examples: [
                "isPositive(x) = x > 0",
                "filter([6, -2, -1, 4, 3], isPositive)",
                "filter([6, -2, 0, 1, 0], x != 0)",
              ],
              seealso: ["sort", "map", "forEach"],
            },
            flatten: {
              name: "flatten",
              category: "Matrix",
              syntax: ["flatten(x)"],
              description:
                "Flatten a multi dimensional matrix into a single dimensional matrix.",
              examples: [
                "a = [1, 2, 3; 4, 5, 6]",
                "size(a)",
                "b = flatten(a)",
                "size(b)",
              ],
              seealso: ["concat", "resize", "size", "squeeze"],
            },
            forEach: {
              name: "forEach",
              category: "Matrix",
              syntax: ["forEach(x, callback)"],
              description:
                "Iterates over all elements of a matrix/array, and executes the given callback function.",
              examples: [
                "forEach([1, 2, 3], function(val) { console.log(val) })",
              ],
              seealso: ["map", "sort", "filter"],
            },
            inv: {
              name: "inv",
              category: "Matrix",
              syntax: ["inv(x)"],
              description: "Calculate the inverse of a matrix",
              examples: ["inv([1, 2; 3, 4])", "inv(4)", "1 / 4"],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            eigs: {
              name: "eigs",
              category: "Matrix",
              syntax: ["eigs(x)"],
              description:
                "Calculate the eigenvalues and eigenvectors of a real symmetric matrix",
              examples: ["eigs([[5, 2.3], [2.3, 1]])"],
              seealso: ["inv"],
            },
            kron: {
              name: "kron",
              category: "Matrix",
              syntax: ["kron(x, y)"],
              description:
                "Calculates the kronecker product of 2 matrices or vectors.",
              examples: [
                "kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])",
                "kron([1,1], [2,3,4])",
              ],
              seealso: ["multiply", "dot", "cross"],
            },
            map: {
              name: "map",
              category: "Matrix",
              syntax: ["map(x, callback)"],
              description:
                "Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",
              examples: ["map([1, 2, 3], square)"],
              seealso: ["filter", "forEach"],
            },
            ones: {
              name: "ones",
              category: "Matrix",
              syntax: [
                "ones(m)",
                "ones(m, n)",
                "ones(m, n, p, ...)",
                "ones([m])",
                "ones([m, n])",
                "ones([m, n, p, ...])",
              ],
              description: "Create a matrix containing ones.",
              examples: [
                "ones(3)",
                "ones(3, 5)",
                "ones([2,3]) * 4.5",
                "a = [1, 2, 3; 4, 5, 6]",
                "ones(size(a))",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            partitionSelect: {
              name: "partitionSelect",
              category: "Matrix",
              syntax: [
                "partitionSelect(x, k)",
                "partitionSelect(x, k, compare)",
              ],
              description:
                "Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",
              examples: [
                "partitionSelect([5, 10, 1], 2)",
                'partitionSelect(["C", "B", "A", "D"], 1)',
              ],
              seealso: ["sort"],
            },
            range: {
              name: "range",
              category: "Type",
              syntax: [
                "start:end",
                "start:step:end",
                "range(start, end)",
                "range(start, end, step)",
                "range(string)",
              ],
              description:
                "Create a range. Lower bound of the range is included, upper bound is excluded.",
              examples: [
                "1:5",
                "3:-1:-3",
                "range(3, 7)",
                "range(0, 12, 2)",
                'range("4:10")',
                "a = [1, 2, 3, 4; 5, 6, 7, 8]",
                "a[1:2, 1:2]",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            resize: {
              name: "resize",
              category: "Matrix",
              syntax: ["resize(x, size)", "resize(x, size, defaultValue)"],
              description: "Resize a matrix.",
              examples: [
                "resize([1,2,3,4,5], [3])",
                "resize([1,2,3], [5])",
                "resize([1,2,3], [5], -1)",
                "resize(2, [2, 3])",
                'resize("hello", [8], "!")',
              ],
              seealso: ["size", "subset", "squeeze", "reshape"],
            },
            reshape: {
              name: "reshape",
              category: "Matrix",
              syntax: ["reshape(x, sizes)"],
              description:
                "Reshape a multi dimensional array to fit the specified dimensions.",
              examples: [
                "reshape([1, 2, 3, 4, 5, 6], [2, 3])",
                "reshape([[1, 2], [3, 4]], [1, 4])",
                "reshape([[1, 2], [3, 4]], [4])",
              ],
              seealso: ["size", "squeeze", "resize"],
            },
            row: {
              name: "row",
              category: "Matrix",
              syntax: ["row(x, index)"],
              description: "Return a row from a matrix or array.",
              examples: ["A = [[1, 2], [3, 4]]", "row(A, 1)", "row(A, 2)"],
              seealso: ["column"],
            },
            size: {
              name: "size",
              category: "Matrix",
              syntax: ["size(x)"],
              description: "Calculate the size of a matrix.",
              examples: [
                "size(2.3)",
                'size("hello world")',
                "a = [1, 2; 3, 4; 5, 6]",
                "size(a)",
                "size(1:6)",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "squeeze",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            sort: {
              name: "sort",
              category: "Matrix",
              syntax: ["sort(x)", "sort(x, compare)"],
              description:
                'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',
              examples: [
                "sort([5, 10, 1])",
                'sort(["C", "B", "A", "D"])',
                "sortByLength(a, b) = size(a)[1] - size(b)[1]",
                'sort(["Langdon", "Tom", "Sara"], sortByLength)',
                'sort(["10", "1", "2"], "natural")',
              ],
              seealso: ["map", "filter", "forEach"],
            },
            squeeze: {
              name: "squeeze",
              category: "Matrix",
              syntax: ["squeeze(x)"],
              description:
                "Remove inner and outer singleton dimensions from a matrix.",
              examples: [
                "a = zeros(3,2,1)",
                "size(squeeze(a))",
                "b = zeros(1,1,3)",
                "size(squeeze(b))",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "subset",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            subset: {
              name: "subset",
              category: "Matrix",
              syntax: [
                "value(index)",
                "value(index) = replacement",
                "subset(value, [index])",
                "subset(value, [index], replacement)",
              ],
              description:
                "Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",
              examples: [
                "d = [1, 2; 3, 4]",
                "e = []",
                "e[1, 1:2] = [5, 6]",
                "e[2, :] = [7, 8]",
                "f = d * e",
                "f[2, 1]",
                "f[:, 1]",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "trace",
                "transpose",
                "zeros",
              ],
            },
            trace: {
              name: "trace",
              category: "Matrix",
              syntax: ["trace(A)"],
              description:
                "Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",
              examples: ["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]", "trace(A)"],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "transpose",
                "zeros",
              ],
            },
            transpose: {
              name: "transpose",
              category: "Matrix",
              syntax: ["x'", "transpose(x)"],
              description: "Transpose a matrix",
              examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "transpose(a)"],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "zeros",
              ],
            },
            zeros: {
              name: "zeros",
              category: "Matrix",
              syntax: [
                "zeros(m)",
                "zeros(m, n)",
                "zeros(m, n, p, ...)",
                "zeros([m])",
                "zeros([m, n])",
                "zeros([m, n, p, ...])",
              ],
              description: "Create a matrix containing zeros.",
              examples: [
                "zeros(3)",
                "zeros(3, 5)",
                "a = [1, 2, 3; 4, 5, 6]",
                "zeros(size(a))",
              ],
              seealso: [
                "concat",
                "det",
                "diag",
                "identity",
                "inv",
                "ones",
                "range",
                "size",
                "squeeze",
                "subset",
                "trace",
                "transpose",
              ],
            },
            combinations: {
              name: "combinations",
              category: "Probability",
              syntax: ["combinations(n, k)"],
              description:
                "Compute the number of combinations of n items taken k at a time",
              examples: ["combinations(7, 5)"],
              seealso: ["combinationsWithRep", "permutations", "factorial"],
            },
            combinationsWithRep: {
              name: "combinationsWithRep",
              category: "Probability",
              syntax: ["combinationsWithRep(n, k)"],
              description:
                "Compute the number of combinations of n items taken k at a time with replacements.",
              examples: ["combinationsWithRep(7, 5)"],
              seealso: ["combinations", "permutations", "factorial"],
            },
            factorial: {
              name: "factorial",
              category: "Probability",
              syntax: ["n!", "factorial(n)"],
              description: "Compute the factorial of a value",
              examples: ["5!", "5 * 4 * 3 * 2 * 1", "3!"],
              seealso: [
                "combinations",
                "combinationsWithRep",
                "permutations",
                "gamma",
              ],
            },
            gamma: {
              name: "gamma",
              category: "Probability",
              syntax: ["gamma(n)"],
              description:
                "Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",
              examples: ["gamma(4)", "3!", "gamma(1/2)", "sqrt(pi)"],
              seealso: ["factorial"],
            },
            kldivergence: {
              name: "kldivergence",
              category: "Probability",
              syntax: ["kldivergence(x, y)"],
              description:
                "Calculate the Kullback-Leibler (KL) divergence  between two distributions.",
              examples: ["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],
              seealso: [],
            },
            multinomial: {
              name: "multinomial",
              category: "Probability",
              syntax: ["multinomial(A)"],
              description:
                "Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",
              examples: ["multinomial([1, 2, 1])"],
              seealso: ["combinations", "factorial"],
            },
            permutations: {
              name: "permutations",
              category: "Probability",
              syntax: ["permutations(n)", "permutations(n, k)"],
              description:
                "Compute the number of permutations of n items taken k at a time",
              examples: ["permutations(5)", "permutations(5, 3)"],
              seealso: ["combinations", "combinationsWithRep", "factorial"],
            },
            pickRandom: {
              name: "pickRandom",
              category: "Probability",
              syntax: [
                "pickRandom(array)",
                "pickRandom(array, number)",
                "pickRandom(array, weights)",
                "pickRandom(array, number, weights)",
                "pickRandom(array, weights, number)",
              ],
              description: "Pick a random entry from a given array.",
              examples: [
                "pickRandom(0:10)",
                "pickRandom([1, 3, 1, 6])",
                "pickRandom([1, 3, 1, 6], 2)",
                "pickRandom([1, 3, 1, 6], [2, 3, 2, 1])",
                "pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])",
                "pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)",
              ],
              seealso: ["random", "randomInt"],
            },
            random: {
              name: "random",
              category: "Probability",
              syntax: [
                "random()",
                "random(max)",
                "random(min, max)",
                "random(size)",
                "random(size, max)",
                "random(size, min, max)",
              ],
              description: "Return a random number.",
              examples: ["random()", "random(10, 20)", "random([2, 3])"],
              seealso: ["pickRandom", "randomInt"],
            },
            randomInt: {
              name: "randomInt",
              category: "Probability",
              syntax: [
                "randomInt(max)",
                "randomInt(min, max)",
                "randomInt(size)",
                "randomInt(size, max)",
                "randomInt(size, min, max)",
              ],
              description: "Return a random integer number",
              examples: ["randomInt(10, 20)", "randomInt([2, 3], 10)"],
              seealso: ["pickRandom", "random"],
            },
            compare: {
              name: "compare",
              category: "Relational",
              syntax: ["compare(x, y)"],
              description:
                "Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
              examples: [
                "compare(2, 3)",
                "compare(3, 2)",
                "compare(2, 2)",
                "compare(5cm, 40mm)",
                "compare(2, [1, 2, 3])",
              ],
              seealso: [
                "equal",
                "unequal",
                "smaller",
                "smallerEq",
                "largerEq",
                "compareNatural",
                "compareText",
              ],
            },
            compareNatural: {
              name: "compareNatural",
              category: "Relational",
              syntax: ["compareNatural(x, y)"],
              description:
                "Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
              examples: [
                "compareNatural(2, 3)",
                "compareNatural(3, 2)",
                "compareNatural(2, 2)",
                "compareNatural(5cm, 40mm)",
                'compareNatural("2", "10")',
                "compareNatural(2 + 3i, 2 + 4i)",
                "compareNatural([1, 2, 4], [1, 2, 3])",
                "compareNatural([1, 5], [1, 2, 3])",
                "compareNatural([1, 2], [1, 2])",
                "compareNatural({a: 2}, {a: 4})",
              ],
              seealso: [
                "equal",
                "unequal",
                "smaller",
                "smallerEq",
                "largerEq",
                "compare",
                "compareText",
              ],
            },
            compareText: {
              name: "compareText",
              category: "Relational",
              syntax: ["compareText(x, y)"],
              description:
                "Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
              examples: [
                'compareText("B", "A")',
                'compareText("A", "B")',
                'compareText("A", "A")',
                'compareText("2", "10")',
                'compare("2", "10")',
                "compare(2, 10)",
                'compareNatural("2", "10")',
                'compareText("B", ["A", "B", "C"])',
              ],
              seealso: ["compare", "compareNatural"],
            },
            deepEqual: {
              name: "deepEqual",
              category: "Relational",
              syntax: ["deepEqual(x, y)"],
              description:
                "Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",
              examples: [
                "deepEqual([1,3,4], [1,3,4])",
                "deepEqual([1,3,4], [1,3])",
              ],
              seealso: [
                "equal",
                "unequal",
                "smaller",
                "larger",
                "smallerEq",
                "largerEq",
                "compare",
              ],
            },
            equal: {
              name: "equal",
              category: "Relational",
              syntax: ["x == y", "equal(x, y)"],
              description:
                "Check equality of two values. Returns true if the values are equal, and false if not.",
              examples: [
                "2+2 == 3",
                "2+2 == 4",
                "a = 3.2",
                "b = 6-2.8",
                "a == b",
                "50cm == 0.5m",
              ],
              seealso: [
                "unequal",
                "smaller",
                "larger",
                "smallerEq",
                "largerEq",
                "compare",
                "deepEqual",
                "equalText",
              ],
            },
            equalText: {
              name: "equalText",
              category: "Relational",
              syntax: ["equalText(x, y)"],
              description:
                "Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",
              examples: [
                'equalText("Hello", "Hello")',
                'equalText("a", "A")',
                'equal("2e3", "2000")',
                'equalText("2e3", "2000")',
                'equalText("B", ["A", "B", "C"])',
              ],
              seealso: ["compare", "compareNatural", "compareText", "equal"],
            },
            larger: {
              name: "larger",
              category: "Relational",
              syntax: ["x > y", "larger(x, y)"],
              description:
                "Check if value x is larger than y. Returns true if x is larger than y, and false if not.",
              examples: [
                "2 > 3",
                "5 > 2*2",
                "a = 3.3",
                "b = 6-2.8",
                "(a > b)",
                "(b < a)",
                "5 cm > 2 inch",
              ],
              seealso: [
                "equal",
                "unequal",
                "smaller",
                "smallerEq",
                "largerEq",
                "compare",
              ],
            },
            largerEq: {
              name: "largerEq",
              category: "Relational",
              syntax: ["x >= y", "largerEq(x, y)"],
              description:
                "Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",
              examples: [
                "2 >= 1+1",
                "2 > 1+1",
                "a = 3.2",
                "b = 6-2.8",
                "(a >= b)",
              ],
              seealso: ["equal", "unequal", "smallerEq", "smaller", "compare"],
            },
            smaller: {
              name: "smaller",
              category: "Relational",
              syntax: ["x < y", "smaller(x, y)"],
              description:
                "Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",
              examples: [
                "2 < 3",
                "5 < 2*2",
                "a = 3.3",
                "b = 6-2.8",
                "(a < b)",
                "5 cm < 2 inch",
              ],
              seealso: [
                "equal",
                "unequal",
                "larger",
                "smallerEq",
                "largerEq",
                "compare",
              ],
            },
            smallerEq: {
              name: "smallerEq",
              category: "Relational",
              syntax: ["x <= y", "smallerEq(x, y)"],
              description:
                "Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",
              examples: [
                "2 <= 1+1",
                "2 < 1+1",
                "a = 3.2",
                "b = 6-2.8",
                "(a <= b)",
              ],
              seealso: [
                "equal",
                "unequal",
                "larger",
                "smaller",
                "largerEq",
                "compare",
              ],
            },
            unequal: {
              name: "unequal",
              category: "Relational",
              syntax: ["x != y", "unequal(x, y)"],
              description:
                "Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",
              examples: [
                "2+2 != 3",
                "2+2 != 4",
                "a = 3.2",
                "b = 6-2.8",
                "a != b",
                "50cm != 0.5m",
                "5 cm != 2 inch",
              ],
              seealso: [
                "equal",
                "smaller",
                "larger",
                "smallerEq",
                "largerEq",
                "compare",
                "deepEqual",
              ],
            },
            setCartesian: {
              name: "setCartesian",
              category: "Set",
              syntax: ["setCartesian(set1, set2)"],
              description:
                "Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
              examples: ["setCartesian([1, 2], [3, 4])"],
              seealso: [
                "setUnion",
                "setIntersect",
                "setDifference",
                "setPowerset",
              ],
            },
            setDifference: {
              name: "setDifference",
              category: "Set",
              syntax: ["setDifference(set1, set2)"],
              description:
                "Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
              examples: [
                "setDifference([1, 2, 3, 4], [3, 4, 5, 6])",
                "setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
              ],
              seealso: ["setUnion", "setIntersect", "setSymDifference"],
            },
            setDistinct: {
              name: "setDistinct",
              category: "Set",
              syntax: ["setDistinct(set)"],
              description:
                "Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
              examples: ["setDistinct([1, 1, 1, 2, 2, 3])"],
              seealso: ["setMultiplicity"],
            },
            setIntersect: {
              name: "setIntersect",
              category: "Set",
              syntax: ["setIntersect(set1, set2)"],
              description:
                "Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
              examples: [
                "setIntersect([1, 2, 3, 4], [3, 4, 5, 6])",
                "setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
              ],
              seealso: ["setUnion", "setDifference"],
            },
            setIsSubset: {
              name: "setIsSubset",
              category: "Set",
              syntax: ["setIsSubset(set1, set2)"],
              description:
                "Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
              examples: [
                "setIsSubset([1, 2], [3, 4, 5, 6])",
                "setIsSubset([3, 4], [3, 4, 5, 6])",
              ],
              seealso: ["setUnion", "setIntersect", "setDifference"],
            },
            setMultiplicity: {
              name: "setMultiplicity",
              category: "Set",
              syntax: ["setMultiplicity(element, set)"],
              description:
                "Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
              examples: [
                "setMultiplicity(1, [1, 2, 2, 4])",
                "setMultiplicity(2, [1, 2, 2, 4])",
              ],
              seealso: ["setDistinct", "setSize"],
            },
            setPowerset: {
              name: "setPowerset",
              category: "Set",
              syntax: ["setPowerset(set)"],
              description:
                "Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",
              examples: ["setPowerset([1, 2, 3])"],
              seealso: ["setCartesian"],
            },
            setSize: {
              name: "setSize",
              category: "Set",
              syntax: ["setSize(set)", "setSize(set, unique)"],
              description:
                'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',
              examples: [
                "setSize([1, 2, 2, 4])",
                "setSize([1, 2, 2, 4], true)",
              ],
              seealso: ["setUnion", "setIntersect", "setDifference"],
            },
            setSymDifference: {
              name: "setSymDifference",
              category: "Set",
              syntax: ["setSymDifference(set1, set2)"],
              description:
                "Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
              examples: [
                "setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])",
                "setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
              ],
              seealso: ["setUnion", "setIntersect", "setDifference"],
            },
            setUnion: {
              name: "setUnion",
              category: "Set",
              syntax: ["setUnion(set1, set2)"],
              description:
                "Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
              examples: [
                "setUnion([1, 2, 3, 4], [3, 4, 5, 6])",
                "setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])",
              ],
              seealso: ["setIntersect", "setDifference"],
            },
            erf: {
              name: "erf",
              category: "Special",
              syntax: ["erf(x)"],
              description:
                "Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",
              examples: ["erf(0.2)", "erf(-0.5)", "erf(4)"],
              seealso: [],
            },
            mad: {
              name: "mad",
              category: "Statistics",
              syntax: ["mad(a, b, c, ...)", "mad(A)"],
              description:
                "Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",
              examples: ["mad(10, 20, 30)", "mad([1, 2, 3])"],
              seealso: ["mean", "median", "std", "abs"],
            },
            max: {
              name: "max",
              category: "Statistics",
              syntax: ["max(a, b, c, ...)", "max(A)", "max(A, dim)"],
              description: "Compute the maximum value of a list of values.",
              examples: [
                "max(2, 3, 4, 1)",
                "max([2, 3, 4, 1])",
                "max([2, 5; 4, 3])",
                "max([2, 5; 4, 3], 1)",
                "max([2, 5; 4, 3], 2)",
                "max(2.7, 7.1, -4.5, 2.0, 4.1)",
                "min(2.7, 7.1, -4.5, 2.0, 4.1)",
              ],
              seealso: [
                "mean",
                "median",
                "min",
                "prod",
                "std",
                "sum",
                "variance",
              ],
            },
            mean: {
              name: "mean",
              category: "Statistics",
              syntax: ["mean(a, b, c, ...)", "mean(A)", "mean(A, dim)"],
              description: "Compute the arithmetic mean of a list of values.",
              examples: [
                "mean(2, 3, 4, 1)",
                "mean([2, 3, 4, 1])",
                "mean([2, 5; 4, 3])",
                "mean([2, 5; 4, 3], 1)",
                "mean([2, 5; 4, 3], 2)",
                "mean([1.0, 2.7, 3.2, 4.0])",
              ],
              seealso: [
                "max",
                "median",
                "min",
                "prod",
                "std",
                "sum",
                "variance",
              ],
            },
            median: {
              name: "median",
              category: "Statistics",
              syntax: ["median(a, b, c, ...)", "median(A)"],
              description:
                "Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",
              examples: ["median(5, 2, 7)", "median([3, -1, 5, 7])"],
              seealso: [
                "max",
                "mean",
                "min",
                "prod",
                "std",
                "sum",
                "variance",
                "quantileSeq",
              ],
            },
            min: {
              name: "min",
              category: "Statistics",
              syntax: ["min(a, b, c, ...)", "min(A)", "min(A, dim)"],
              description: "Compute the minimum value of a list of values.",
              examples: [
                "min(2, 3, 4, 1)",
                "min([2, 3, 4, 1])",
                "min([2, 5; 4, 3])",
                "min([2, 5; 4, 3], 1)",
                "min([2, 5; 4, 3], 2)",
                "min(2.7, 7.1, -4.5, 2.0, 4.1)",
                "max(2.7, 7.1, -4.5, 2.0, 4.1)",
              ],
              seealso: [
                "max",
                "mean",
                "median",
                "prod",
                "std",
                "sum",
                "variance",
              ],
            },
            mode: {
              name: "mode",
              category: "Statistics",
              syntax: [
                "mode(a, b, c, ...)",
                "mode(A)",
                "mode(A, a, b, B, c, ...)",
              ],
              description:
                "Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",
              examples: [
                "mode(2, 1, 4, 3, 1)",
                "mode([1, 2.7, 3.2, 4, 2.7])",
                "mode(1, 4, 6, 1, 6)",
              ],
              seealso: [
                "max",
                "mean",
                "min",
                "median",
                "prod",
                "std",
                "sum",
                "variance",
              ],
            },
            prod: {
              name: "prod",
              category: "Statistics",
              syntax: ["prod(a, b, c, ...)", "prod(A)"],
              description: "Compute the product of all values.",
              examples: [
                "prod(2, 3, 4)",
                "prod([2, 3, 4])",
                "prod([2, 5; 4, 3])",
              ],
              seealso: [
                "max",
                "mean",
                "min",
                "median",
                "min",
                "std",
                "sum",
                "variance",
              ],
            },
            quantileSeq: {
              name: "quantileSeq",
              category: "Statistics",
              syntax: [
                "quantileSeq(A, prob[, sorted])",
                "quantileSeq(A, [prob1, prob2, ...][, sorted])",
                "quantileSeq(A, N[, sorted])",
              ],
              description:
                "Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",
              examples: [
                "quantileSeq([3, -1, 5, 7], 0.5)",
                "quantileSeq([3, -1, 5, 7], [1/3, 2/3])",
                "quantileSeq([3, -1, 5, 7], 2)",
                "quantileSeq([-1, 3, 5, 7], 0.5, true)",
              ],
              seealso: [
                "mean",
                "median",
                "min",
                "max",
                "prod",
                "std",
                "sum",
                "variance",
              ],
            },
            std: {
              name: "std",
              category: "Statistics",
              syntax: ["std(a, b, c, ...)", "std(A)", "std(A, normalization)"],
              description:
                'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
              examples: [
                "std(2, 4, 6)",
                "std([2, 4, 6, 8])",
                'std([2, 4, 6, 8], "uncorrected")',
                'std([2, 4, 6, 8], "biased")',
                "std([1, 2, 3; 4, 5, 6])",
              ],
              seealso: [
                "max",
                "mean",
                "min",
                "median",
                "prod",
                "sum",
                "variance",
              ],
            },
            sum: {
              name: "sum",
              category: "Statistics",
              syntax: ["sum(a, b, c, ...)", "sum(A)"],
              description: "Compute the sum of all values.",
              examples: [
                "sum(2, 3, 4, 1)",
                "sum([2, 3, 4, 1])",
                "sum([2, 5; 4, 3])",
              ],
              seealso: [
                "max",
                "mean",
                "median",
                "min",
                "prod",
                "std",
                "sum",
                "variance",
              ],
            },
            variance: {
              name: "variance",
              category: "Statistics",
              syntax: [
                "variance(a, b, c, ...)",
                "variance(A)",
                "variance(A, normalization)",
              ],
              description:
                'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
              examples: [
                "variance(2, 4, 6)",
                "variance([2, 4, 6, 8])",
                'variance([2, 4, 6, 8], "uncorrected")',
                'variance([2, 4, 6, 8], "biased")',
                "variance([1, 2, 3; 4, 5, 6])",
              ],
              seealso: [
                "max",
                "mean",
                "min",
                "median",
                "min",
                "prod",
                "std",
                "sum",
              ],
            },
            acos: {
              name: "acos",
              category: "Trigonometry",
              syntax: ["acos(x)"],
              description: "Compute the inverse cosine of a value in radians.",
              examples: ["acos(0.5)", "acos(cos(2.3))"],
              seealso: ["cos", "atan", "asin"],
            },
            acosh: {
              name: "acosh",
              category: "Trigonometry",
              syntax: ["acosh(x)"],
              description:
                "Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",
              examples: ["acosh(1.5)"],
              seealso: ["cosh", "asinh", "atanh"],
            },
            acot: {
              name: "acot",
              category: "Trigonometry",
              syntax: ["acot(x)"],
              description: "Calculate the inverse cotangent of a value.",
              examples: ["acot(0.5)", "acot(cot(0.5))", "acot(2)"],
              seealso: ["cot", "atan"],
            },
            acoth: {
              name: "acoth",
              category: "Trigonometry",
              syntax: ["acoth(x)"],
              description:
                "Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",
              examples: ["acoth(2)", "acoth(0.5)"],
              seealso: ["acsch", "asech"],
            },
            acsc: {
              name: "acsc",
              category: "Trigonometry",
              syntax: ["acsc(x)"],
              description: "Calculate the inverse cotangent of a value.",
              examples: ["acsc(2)", "acsc(csc(0.5))", "acsc(0.5)"],
              seealso: ["csc", "asin", "asec"],
            },
            acsch: {
              name: "acsch",
              category: "Trigonometry",
              syntax: ["acsch(x)"],
              description:
                "Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",
              examples: ["acsch(0.5)"],
              seealso: ["asech", "acoth"],
            },
            asec: {
              name: "asec",
              category: "Trigonometry",
              syntax: ["asec(x)"],
              description: "Calculate the inverse secant of a value.",
              examples: ["asec(0.5)", "asec(sec(0.5))", "asec(2)"],
              seealso: ["acos", "acot", "acsc"],
            },
            asech: {
              name: "asech",
              category: "Trigonometry",
              syntax: ["asech(x)"],
              description: "Calculate the inverse secant of a value.",
              examples: ["asech(0.5)"],
              seealso: ["acsch", "acoth"],
            },
            asin: {
              name: "asin",
              category: "Trigonometry",
              syntax: ["asin(x)"],
              description: "Compute the inverse sine of a value in radians.",
              examples: ["asin(0.5)", "asin(sin(0.5))"],
              seealso: ["sin", "acos", "atan"],
            },
            asinh: {
              name: "asinh",
              category: "Trigonometry",
              syntax: ["asinh(x)"],
              description:
                "Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",
              examples: ["asinh(0.5)"],
              seealso: ["acosh", "atanh"],
            },
            atan: {
              name: "atan",
              category: "Trigonometry",
              syntax: ["atan(x)"],
              description: "Compute the inverse tangent of a value in radians.",
              examples: ["atan(0.5)", "atan(tan(0.5))"],
              seealso: ["tan", "acos", "asin"],
            },
            atanh: {
              name: "atanh",
              category: "Trigonometry",
              syntax: ["atanh(x)"],
              description:
                "Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",
              examples: ["atanh(0.5)"],
              seealso: ["acosh", "asinh"],
            },
            atan2: {
              name: "atan2",
              category: "Trigonometry",
              syntax: ["atan2(y, x)"],
              description:
                "Computes the principal value of the arc tangent of y/x in radians.",
              examples: [
                "atan2(2, 2) / pi",
                "angle = 60 deg in rad",
                "x = cos(angle)",
                "y = sin(angle)",
                "atan2(y, x)",
              ],
              seealso: ["sin", "cos", "tan"],
            },
            cos: {
              name: "cos",
              category: "Trigonometry",
              syntax: ["cos(x)"],
              description: "Compute the cosine of x in radians.",
              examples: [
                "cos(2)",
                "cos(pi / 4) ^ 2",
                "cos(180 deg)",
                "cos(60 deg)",
                "sin(0.2)^2 + cos(0.2)^2",
              ],
              seealso: ["acos", "sin", "tan"],
            },
            cosh: {
              name: "cosh",
              category: "Trigonometry",
              syntax: ["cosh(x)"],
              description: "Compute the hyperbolic cosine of x in radians.",
              examples: ["cosh(0.5)"],
              seealso: ["sinh", "tanh", "coth"],
            },
            cot: {
              name: "cot",
              category: "Trigonometry",
              syntax: ["cot(x)"],
              description:
                "Compute the cotangent of x in radians. Defined as 1/tan(x)",
              examples: ["cot(2)", "1 / tan(2)"],
              seealso: ["sec", "csc", "tan"],
            },
            coth: {
              name: "coth",
              category: "Trigonometry",
              syntax: ["coth(x)"],
              description: "Compute the hyperbolic cotangent of x in radians.",
              examples: ["coth(2)", "1 / tanh(2)"],
              seealso: ["sech", "csch", "tanh"],
            },
            csc: {
              name: "csc",
              category: "Trigonometry",
              syntax: ["csc(x)"],
              description:
                "Compute the cosecant of x in radians. Defined as 1/sin(x)",
              examples: ["csc(2)", "1 / sin(2)"],
              seealso: ["sec", "cot", "sin"],
            },
            csch: {
              name: "csch",
              category: "Trigonometry",
              syntax: ["csch(x)"],
              description:
                "Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",
              examples: ["csch(2)", "1 / sinh(2)"],
              seealso: ["sech", "coth", "sinh"],
            },
            sec: {
              name: "sec",
              category: "Trigonometry",
              syntax: ["sec(x)"],
              description:
                "Compute the secant of x in radians. Defined as 1/cos(x)",
              examples: ["sec(2)", "1 / cos(2)"],
              seealso: ["cot", "csc", "cos"],
            },
            sech: {
              name: "sech",
              category: "Trigonometry",
              syntax: ["sech(x)"],
              description:
                "Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",
              examples: ["sech(2)", "1 / cosh(2)"],
              seealso: ["coth", "csch", "cosh"],
            },
            sin: {
              name: "sin",
              category: "Trigonometry",
              syntax: ["sin(x)"],
              description: "Compute the sine of x in radians.",
              examples: [
                "sin(2)",
                "sin(pi / 4) ^ 2",
                "sin(90 deg)",
                "sin(30 deg)",
                "sin(0.2)^2 + cos(0.2)^2",
              ],
              seealso: ["asin", "cos", "tan"],
            },
            sinh: {
              name: "sinh",
              category: "Trigonometry",
              syntax: ["sinh(x)"],
              description: "Compute the hyperbolic sine of x in radians.",
              examples: ["sinh(0.5)"],
              seealso: ["cosh", "tanh"],
            },
            tan: {
              name: "tan",
              category: "Trigonometry",
              syntax: ["tan(x)"],
              description: "Compute the tangent of x in radians.",
              examples: [
                "tan(0.5)",
                "sin(0.5) / cos(0.5)",
                "tan(pi / 4)",
                "tan(45 deg)",
              ],
              seealso: ["atan", "sin", "cos"],
            },
            tanh: {
              name: "tanh",
              category: "Trigonometry",
              syntax: ["tanh(x)"],
              description: "Compute the hyperbolic tangent of x in radians.",
              examples: ["tanh(0.5)", "sinh(0.5) / cosh(0.5)"],
              seealso: ["sinh", "cosh"],
            },
            to: {
              name: "to",
              category: "Units",
              syntax: ["x to unit", "to(x, unit)"],
              description: "Change the unit of a value.",
              examples: ["5 inch to cm", "3.2kg to g", "16 bytes in bits"],
              seealso: [],
            },
            clone: {
              name: "clone",
              category: "Utils",
              syntax: ["clone(x)"],
              description:
                "Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",
              examples: [
                "clone(3.5)",
                "clone(2 - 4i)",
                "clone(45 deg)",
                "clone([1, 2; 3, 4])",
                'clone("hello world")',
              ],
              seealso: [],
            },
            format: {
              name: "format",
              category: "Utils",
              syntax: ["format(value)", "format(value, precision)"],
              description: "Format a value of any type as string.",
              examples: [
                "format(2.3)",
                "format(3 - 4i)",
                "format([])",
                "format(pi, 3)",
              ],
              seealso: ["print"],
            },
            bin: {
              name: "bin",
              category: "Utils",
              syntax: ["bin(value)"],
              description: "Format a number as binary",
              examples: ["bin(2)"],
              seealso: ["oct", "hex"],
            },
            oct: {
              name: "oct",
              category: "Utils",
              syntax: ["oct(value)"],
              description: "Format a number as octal",
              examples: ["oct(56)"],
              seealso: ["bin", "hex"],
            },
            hex: {
              name: "hex",
              category: "Utils",
              syntax: ["hex(value)"],
              description: "Format a number as hexadecimal",
              examples: ["hex(240)"],
              seealso: ["bin", "oct"],
            },
            isNaN: {
              name: "isNaN",
              category: "Utils",
              syntax: ["isNaN(x)"],
              description: "Test whether a value is NaN (not a number)",
              examples: [
                "isNaN(2)",
                "isNaN(0 / 0)",
                "isNaN(NaN)",
                "isNaN(Infinity)",
              ],
              seealso: ["isNegative", "isNumeric", "isPositive", "isZero"],
            },
            isInteger: {
              name: "isInteger",
              category: "Utils",
              syntax: ["isInteger(x)"],
              description: "Test whether a value is an integer number.",
              examples: [
                "isInteger(2)",
                "isInteger(3.5)",
                "isInteger([3, 0.5, -2])",
              ],
              seealso: ["isNegative", "isNumeric", "isPositive", "isZero"],
            },
            isNegative: {
              name: "isNegative",
              category: "Utils",
              syntax: ["isNegative(x)"],
              description:
                "Test whether a value is negative: smaller than zero.",
              examples: [
                "isNegative(2)",
                "isNegative(0)",
                "isNegative(-4)",
                "isNegative([3, 0.5, -2])",
              ],
              seealso: ["isInteger", "isNumeric", "isPositive", "isZero"],
            },
            isNumeric: {
              name: "isNumeric",
              category: "Utils",
              syntax: ["isNumeric(x)"],
              description:
                "Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",
              examples: [
                "isNumeric(2)",
                'isNumeric("2")',
                'hasNumericValue("2")',
                "isNumeric(0)",
                "isNumeric(bignumber(500))",
                "isNumeric(fraction(0.125))",
                "isNumeric(2 + 3i)",
                'isNumeric([2.3, "foo", false])',
              ],
              seealso: [
                "isInteger",
                "isZero",
                "isNegative",
                "isPositive",
                "isNaN",
                "hasNumericValue",
              ],
            },
            hasNumericValue: {
              name: "hasNumericValue",
              category: "Utils",
              syntax: ["hasNumericValue(x)"],
              description:
                "Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",
              examples: [
                "hasNumericValue(2)",
                'hasNumericValue("2")',
                'isNumeric("2")',
                "hasNumericValue(0)",
                "hasNumericValue(bignumber(500))",
                "hasNumericValue(fraction(0.125))",
                "hasNumericValue(2 + 3i)",
                'hasNumericValue([2.3, "foo", false])',
              ],
              seealso: [
                "isInteger",
                "isZero",
                "isNegative",
                "isPositive",
                "isNaN",
                "isNumeric",
              ],
            },
            isPositive: {
              name: "isPositive",
              category: "Utils",
              syntax: ["isPositive(x)"],
              description:
                "Test whether a value is positive: larger than zero.",
              examples: [
                "isPositive(2)",
                "isPositive(0)",
                "isPositive(-4)",
                "isPositive([3, 0.5, -2])",
              ],
              seealso: ["isInteger", "isNumeric", "isNegative", "isZero"],
            },
            isPrime: {
              name: "isPrime",
              category: "Utils",
              syntax: ["isPrime(x)"],
              description:
                "Test whether a value is prime: has no divisors other than itself and one.",
              examples: ["isPrime(3)", "isPrime(-2)", "isPrime([2, 17, 100])"],
              seealso: ["isInteger", "isNumeric", "isNegative", "isZero"],
            },
            isZero: {
              name: "isZero",
              category: "Utils",
              syntax: ["isZero(x)"],
              description: "Test whether a value is zero.",
              examples: [
                "isZero(2)",
                "isZero(0)",
                "isZero(-4)",
                "isZero([3, 0, -2, 0])",
              ],
              seealso: ["isInteger", "isNumeric", "isNegative", "isPositive"],
            },
            typeOf: {
              name: "typeOf",
              category: "Utils",
              syntax: ["typeOf(x)"],
              description: "Get the type of a variable.",
              examples: [
                "typeOf(3.5)",
                "typeOf(2 - 4i)",
                "typeOf(45 deg)",
                'typeOf("hello world")',
              ],
              seealso: ["getMatrixDataType"],
            },
            numeric: {
              name: "numeric",
              category: "Utils",
              syntax: ["numeric(x)"],
              description:
                "Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",
              examples: [
                'numeric("4")',
                'numeric("4", "number")',
                'numeric("4", "BigNumber")',
                'numeric("4", "Fraction)',
                'numeric(4, "Fraction")',
                'numeric(fraction(2, 5), "number)',
              ],
              seealso: ["number", "fraction", "bignumber", "string", "format"],
            },
          },
          Uh = Cr("help", ["typed", "mathWithTransform", "Help"], function (e) {
            var t = e.typed,
              n = e.mathWithTransform,
              r = e.Help;
            return t("help", {
              any: function (e) {
                var t,
                  i = e;
                if ("string" != typeof e)
                  for (t in n)
                    if (Bn(n, t) && e === n[t]) {
                      i = t;
                      break;
                    }
                var a = mc(Fh, i);
                if (!a) {
                  var o = "function" == typeof i ? i.name : i;
                  throw new Error('No documentation found on "' + o + '"');
                }
                return new r(a);
              },
            });
          }),
          Vh = Cr("chain", ["typed", "Chain"], function (e) {
            var t = e.typed,
              n = e.Chain;
            return t("chain", {
              "": function () {
                return new n();
              },
              any: function (e) {
                return new n(e);
              },
            });
          }),
          $h = Cr(
            "det",
            ["typed", "matrix", "subtract", "multiply", "unaryMinus", "lup"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.subtract,
                i = e.multiply,
                a = e.unaryMinus,
                o = e.lup;
              return t("det", {
                any: function (e) {
                  return Tn(e);
                },
                "Array | Matrix": function (e) {
                  var t;
                  switch (
                    (t = Xt(e)
                      ? e.size()
                      : Array.isArray(e)
                      ? (e = n(e)).size()
                      : []).length
                  ) {
                    case 0:
                      return Tn(e);
                    case 1:
                      if (1 === t[0]) return Tn(e.valueOf()[0]);
                      throw new RangeError(
                        "Matrix must be square (size: " + ur(t) + ")"
                      );
                    case 2:
                      var s = t[0];
                      if (s === t[1])
                        return (function (e, t, n) {
                          if (1 === t) return Tn(e[0][0]);
                          if (2 === t)
                            return r(i(e[0][0], e[1][1]), i(e[1][0], e[0][1]));
                          for (var s = o(e), u = s.U[0][0], c = 1; c < t; c++)
                            u = i(u, s.U[c][c]);
                          for (var l = 0, f = 0, p = []; ; ) {
                            for (; p[f]; ) f++;
                            if (f >= t) break;
                            for (var h = f, d = 0; !p[s.p[h]]; )
                              (p[s.p[h]] = !0), (h = s.p[h]), d++;
                            d % 2 == 0 && l++;
                          }
                          return l % 2 == 0 ? u : a(u);
                        })(e.clone().valueOf(), s);
                      throw new RangeError(
                        "Matrix must be square (size: " + ur(t) + ")"
                      );
                    default:
                      throw new RangeError(
                        "Matrix must be two dimensional (size: " + ur(t) + ")"
                      );
                  }
                },
              });
            }
          ),
          Hh = Cr(
            "inv",
            [
              "typed",
              "matrix",
              "divideScalar",
              "addScalar",
              "multiply",
              "unaryMinus",
              "det",
              "identity",
              "abs",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.divideScalar,
                i = e.addScalar,
                a = e.multiply,
                o = e.unaryMinus,
                s = e.det,
                u = e.identity,
                c = e.abs;
              return t("inv", {
                "Array | Matrix": function (e) {
                  var t = Xt(e) ? e.size() : dr(e);
                  switch (t.length) {
                    case 1:
                      if (1 === t[0])
                        return Xt(e) ? n([r(1, e.valueOf()[0])]) : [r(1, e[0])];
                      throw new RangeError(
                        "Matrix must be square (size: " + ur(t) + ")"
                      );
                    case 2:
                      var i = t[0],
                        a = t[1];
                      if (i === a)
                        return Xt(e)
                          ? n(l(e.valueOf(), i, a), e.storage())
                          : l(e, i, a);
                      throw new RangeError(
                        "Matrix must be square (size: " + ur(t) + ")"
                      );
                    default:
                      throw new RangeError(
                        "Matrix must be two dimensional (size: " + ur(t) + ")"
                      );
                  }
                },
                any: function (e) {
                  return r(1, e);
                },
              });
              function l(e, t, n) {
                var l, f, p, h, d;
                if (1 === t) {
                  if (0 === (h = e[0][0]))
                    throw Error(
                      "Cannot calculate inverse, determinant is zero"
                    );
                  return [[r(1, h)]];
                }
                if (2 === t) {
                  var m = s(e);
                  if (0 === m)
                    throw Error(
                      "Cannot calculate inverse, determinant is zero"
                    );
                  return [
                    [r(e[1][1], m), r(o(e[0][1]), m)],
                    [r(o(e[1][0]), m), r(e[0][0], m)],
                  ];
                }
                var g = e.concat();
                for (l = 0; l < t; l++) g[l] = g[l].concat();
                for (var y = u(t).valueOf(), v = 0; v < n; v++) {
                  var b = c(g[v][v]),
                    x = v;
                  for (l = v + 1; l < t; )
                    c(g[l][v]) > b && ((b = c(g[l][v])), (x = l)), l++;
                  if (0 === b)
                    throw Error(
                      "Cannot calculate inverse, determinant is zero"
                    );
                  (l = x) !== v &&
                    ((d = g[v]),
                    (g[v] = g[l]),
                    (g[l] = d),
                    (d = y[v]),
                    (y[v] = y[l]),
                    (y[l] = d));
                  var w = g[v],
                    N = y[v];
                  for (l = 0; l < t; l++) {
                    var E = g[l],
                      M = y[l];
                    if (l !== v) {
                      if (0 !== E[v]) {
                        for (p = r(o(E[v]), w[v]), f = v; f < n; f++)
                          E[f] = i(E[f], a(p, w[f]));
                        for (f = 0; f < n; f++) M[f] = i(M[f], a(p, N[f]));
                      }
                    } else {
                      for (p = w[v], f = v; f < n; f++) E[f] = r(E[f], p);
                      for (f = 0; f < n; f++) M[f] = r(M[f], p);
                    }
                  }
                }
                return y;
              }
            }
          ),
          Wh = Cr(
            "eigs",
            [
              "config",
              "typed",
              "matrix",
              "addScalar",
              "equal",
              "subtract",
              "abs",
              "atan",
              "cos",
              "sin",
              "multiplyScalar",
              "inv",
              "bignumber",
              "multiply",
              "add",
            ],
            function (e) {
              var t = e.config,
                n = e.typed,
                r = e.matrix,
                i = e.addScalar,
                a = e.subtract,
                o = e.equal,
                s = e.abs,
                u = e.atan,
                c = e.cos,
                l = e.sin,
                f = e.multiplyScalar,
                p = e.inv,
                h = e.bignumber,
                d = e.multiply,
                m = e.add;
              return n("eigs", {
                Array: function (e) {
                  var t = r(e),
                    n = t.size();
                  if (2 !== n.length || n[0] !== n[1])
                    throw new RangeError(
                      "Matrix must be square (size: " + ur(n) + ")"
                    );
                  var i = g(t, n[0]);
                  return { values: i[0], vectors: i[1] };
                },
                Matrix: function (e) {
                  var t = e.size();
                  if (2 !== t.length || t[0] !== t[1])
                    throw new RangeError(
                      "Matrix must be square (size: " + ur(t) + ")"
                    );
                  var n = g(e, t[0]);
                  return { values: r(n[0]), vectors: r(n[1]) };
                },
              });
              function g(e, n) {
                var r = e.datatype();
                if (
                  (void 0 === r && (r = e.getDataType()),
                  "number" !== r && "BigNumber" !== r && "Fraction" !== r)
                )
                  throw "mixed" === r
                    ? new TypeError(
                        "Mixed matrix element type is not supported"
                      )
                    : new TypeError(
                        "Matrix element type not supported (" + r + ")"
                      );
                if (
                  ((function (e, t) {
                    for (var n = 0; n < t; n++)
                      for (var r = n; r < t; r++)
                        if (!o(e[n][r], e[r][n]))
                          throw new TypeError("Input matrix is not symmetric");
                  })(e.toArray(), n),
                  "number" === r)
                )
                  return y(e.toArray());
                if ("Fraction" === r) {
                  for (var i = e.toArray(), a = 0; a < n; a++)
                    for (var u = a; u < n; u++)
                      (i[a][u] = i[a][u].valueOf()), (i[u][a] = i[a][u]);
                  return y(e.toArray());
                }
                return "BigNumber" === r
                  ? (function (e) {
                      for (
                        var n,
                          r = e.length,
                          i = s(t.epsilon / r),
                          a = new Array(r),
                          o = 0;
                        o < r;
                        o++
                      )
                        (a[o] = k(r, 0)), (a[o][o] = 1);
                      for (var u = S(e); s(u[1]) >= s(i); ) {
                        var c = u[0][0],
                          l = u[0][1];
                        (e = N(e, (n = b(e[c][c], e[l][l], e[c][l])), c, l)),
                          (a = w(a, n, c, l)),
                          (u = S(e));
                      }
                      for (var f = k(r, 0), p = 0; p < r; p++) f[p] = e[p][p];
                      return _(Tn(f), Tn(a));
                    })(e.toArray())
                  : void 0;
              }
              function y(e) {
                for (
                  var n,
                    r = e.length,
                    i = Math.abs(t.epsilon / r),
                    a = new Array(r),
                    o = 0;
                  o < r;
                  o++
                )
                  (a[o] = k(r, 0)), (a[o][o] = 1);
                for (var s = M(e); Math.abs(s[1]) >= Math.abs(i); ) {
                  var u = s[0][0],
                    c = s[0][1];
                  (e = E(e, (n = v(e[u][u], e[c][c], e[u][c])), u, c)),
                    (a = x(a, n, u, c)),
                    (s = M(e));
                }
                for (var l = k(r, 0), f = 0; f < r; f++) l[f] = e[f][f];
                return _(Tn(l), Tn(a));
              }
              function v(e, n, r) {
                var i = n - e;
                return Math.abs(i) <= t.epsilon
                  ? Math.PI / 4
                  : 0.5 * Math.atan((2 * r) / (n - e));
              }
              function b(e, n, r) {
                var i = a(n, e);
                return s(i) <= t.epsilon
                  ? h(-1).acos().div(4)
                  : f(0.5, u(d(2, r, p(i))));
              }
              function x(e, t, n, r) {
                for (
                  var i = e.length,
                    a = Math.cos(t),
                    o = Math.sin(t),
                    s = k(i, 0),
                    u = k(i, 0),
                    c = 0;
                  c < i;
                  c++
                )
                  (s[c] = a * e[c][n] - o * e[c][r]),
                    (u[c] = o * e[c][n] + a * e[c][r]);
                for (var l = 0; l < i; l++) (e[l][n] = s[l]), (e[l][r] = u[l]);
                return e;
              }
              function w(e, t, n, r) {
                for (
                  var o = e.length,
                    s = c(t),
                    u = l(t),
                    p = k(o, h(0)),
                    d = k(o, h(0)),
                    m = 0;
                  m < o;
                  m++
                )
                  (p[m] = a(f(s, e[m][n]), f(u, e[m][r]))),
                    (d[m] = i(f(u, e[m][n]), f(s, e[m][r])));
                for (var g = 0; g < o; g++) (e[g][n] = p[g]), (e[g][r] = d[g]);
                return e;
              }
              function N(e, t, n, r) {
                for (
                  var o = e.length,
                    s = h(c(t)),
                    u = h(l(t)),
                    p = f(s, s),
                    g = f(u, u),
                    y = k(o, h(0)),
                    v = k(o, h(0)),
                    b = d(h(2), s, u, e[n][r]),
                    x = i(a(f(p, e[n][n]), b), f(g, e[r][r])),
                    w = m(f(g, e[n][n]), b, f(p, e[r][r])),
                    N = 0;
                  N < o;
                  N++
                )
                  (y[N] = a(f(s, e[n][N]), f(u, e[r][N]))),
                    (v[N] = i(f(u, e[n][N]), f(s, e[r][N])));
                (e[n][n] = x),
                  (e[r][r] = w),
                  (e[n][r] = h(0)),
                  (e[r][n] = h(0));
                for (var E = 0; E < o; E++)
                  E !== n &&
                    E !== r &&
                    ((e[n][E] = y[E]),
                    (e[E][n] = y[E]),
                    (e[r][E] = v[E]),
                    (e[E][r] = v[E]));
                return e;
              }
              function E(e, t, n, r) {
                for (
                  var i = e.length,
                    a = Math.cos(t),
                    o = Math.sin(t),
                    s = a * a,
                    u = o * o,
                    c = k(i, 0),
                    l = k(i, 0),
                    f = s * e[n][n] - 2 * a * o * e[n][r] + u * e[r][r],
                    p = u * e[n][n] + 2 * a * o * e[n][r] + s * e[r][r],
                    h = 0;
                  h < i;
                  h++
                )
                  (c[h] = a * e[n][h] - o * e[r][h]),
                    (l[h] = o * e[n][h] + a * e[r][h]);
                (e[n][n] = f), (e[r][r] = p), (e[n][r] = 0), (e[r][n] = 0);
                for (var d = 0; d < i; d++)
                  d !== n &&
                    d !== r &&
                    ((e[n][d] = c[d]),
                    (e[d][n] = c[d]),
                    (e[r][d] = l[d]),
                    (e[d][r] = l[d]));
                return e;
              }
              function M(e) {
                for (var t = e.length, n = 0, r = [0, 1], i = 0; i < t; i++)
                  for (var a = i + 1; a < t; a++)
                    Math.abs(n) < Math.abs(e[i][a]) &&
                      ((n = Math.abs(e[i][a])), (r = [i, a]));
                return [r, n];
              }
              function S(e) {
                for (var t = e.length, n = 0, r = [0, 1], i = 0; i < t; i++)
                  for (var a = i + 1; a < t; a++)
                    s(n) < s(e[i][a]) && ((n = s(e[i][a])), (r = [i, a]));
                return [r, n];
              }
              function _(e, t) {
                for (
                  var n = e.length, r = Array(n), i = Array(n), a = 0;
                  a < n;
                  a++
                )
                  i[a] = Array(n);
                for (var o = 0; o < n; o++) {
                  for (var s = 0, u = e[0], c = 0; c < e.length; c++)
                    e[c] < u && (u = e[(s = c)]);
                  r[o] = e.splice(s, 1)[0];
                  for (var l = 0; l < n; l++)
                    (i[l][o] = t[l][s]), t[l].splice(s, 1);
                }
                return [Tn(r), Tn(i)];
              }
              function k(e, t) {
                for (var n = new Array(e), r = 0; r < e; r++) n[r] = t;
                return n;
              }
            }
          ),
          Gh = Cr(
            "expm",
            ["typed", "abs", "add", "identity", "inv", "multiply"],
            function (e) {
              var t = e.typed,
                n = e.abs,
                r = e.add,
                i = e.identity,
                a = e.inv,
                o = e.multiply;
              return t("expm", {
                Matrix: function (e) {
                  var t = e.size();
                  if (2 !== t.length || t[0] !== t[1])
                    throw new RangeError(
                      "Matrix must be square (size: " + ur(t) + ")"
                    );
                  for (
                    var u = t[0],
                      c = (function (e, t) {
                        for (var n = 0; n < 30; n++)
                          for (var r = 0; r <= n; r++) {
                            var i = n - r;
                            if (s(e, r, i) < 1e-15) return { q: r, j: i };
                          }
                        throw new Error(
                          "Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)"
                        );
                      })(
                        (function (e) {
                          for (var t = e.size()[0], r = 0, i = 0; i < t; i++) {
                            for (var a = 0, o = 0; o < t; o++)
                              a += n(e.get([i, o]));
                            r = Math.max(a, r);
                          }
                          return r;
                        })(e)
                      ),
                      l = c.q,
                      f = c.j,
                      p = o(e, Math.pow(2, -f)),
                      h = i(u),
                      d = i(u),
                      m = 1,
                      g = p,
                      y = -1,
                      v = 1;
                    v <= l;
                    v++
                  )
                    v > 1 && ((g = o(g, p)), (y = -y)),
                      (h = r(
                        h,
                        o((m = (m * (l - v + 1)) / ((2 * l - v + 1) * v)), g)
                      )),
                      (d = r(d, o(m * y, g)));
                  for (var b = o(a(d), h), x = 0; x < f; x++) b = o(b, b);
                  return en(e) ? e.createSparseMatrix(b) : b;
                },
              });
              function s(e, t, n) {
                for (var r = 1, i = 2; i <= t; i++) r *= i;
                for (var a = r, o = t + 1; o <= 2 * t; o++) a *= o;
                var s = a * (2 * t + 1);
                return (
                  (8 * Math.pow(e / Math.pow(2, n), 2 * t) * r * r) / (a * s)
                );
              }
            }
          ),
          Jh = Cr(
            "sqrtm",
            [
              "typed",
              "abs",
              "add",
              "multiply",
              "sqrt",
              "subtract",
              "inv",
              "size",
              "max",
              "identity",
            ],
            function (e) {
              var t = e.typed,
                n = e.abs,
                r = e.add,
                i = e.multiply,
                a = e.sqrt,
                o = e.subtract,
                s = e.inv,
                u = e.size,
                c = e.max,
                l = e.identity,
                f = 1e-6;
              return t("sqrtm", {
                "Array | Matrix": function (e) {
                  var t = Xt(e) ? e.size() : dr(e);
                  switch (t.length) {
                    case 1:
                      if (1 === t[0]) return a(e);
                      throw new RangeError(
                        "Matrix must be square (size: " + ur(t) + ")"
                      );
                    case 2:
                      if (t[0] === t[1])
                        return (function (e) {
                          var t,
                            a = 0,
                            p = e,
                            h = l(u(e));
                          do {
                            var d = p;
                            if (
                              ((p = i(0.5, r(d, s(h)))),
                              (h = i(0.5, r(h, s(d)))),
                              (t = c(n(o(p, d)))) > f && ++a > 1e3)
                            )
                              throw new Error(
                                "computing square root of matrix: iterative method could not converge"
                              );
                          } while (t > f);
                          return p;
                        })(e);
                      throw new RangeError(
                        "Matrix must be square (size: " + ur(t) + ")"
                      );
                  }
                },
              });
            }
          ),
          Yh = Cr(
            "divide",
            [
              "typed",
              "matrix",
              "multiply",
              "equalScalar",
              "divideScalar",
              "inv",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.multiply,
                i = e.equalScalar,
                a = e.divideScalar,
                o = e.inv,
                s = Vs({ typed: t, equalScalar: i }),
                u = zs({ typed: t });
              return t(
                "divide",
                In(
                  {
                    "Array | Matrix, Array | Matrix": function (e, t) {
                      return r(e, o(t));
                    },
                    "DenseMatrix, any": function (e, t) {
                      return u(e, t, a, !1);
                    },
                    "SparseMatrix, any": function (e, t) {
                      return s(e, t, a, !1);
                    },
                    "Array, any": function (e, t) {
                      return u(n(e), t, a, !1).valueOf();
                    },
                    "any, Array | Matrix": function (e, t) {
                      return r(e, o(t));
                    },
                  },
                  a.signatures
                )
              );
            }
          ),
          Zh = "distance",
          Xh = Cr(
            Zh,
            [
              "typed",
              "addScalar",
              "subtract",
              "divideScalar",
              "multiplyScalar",
              "unaryMinus",
              "sqrt",
              "abs",
            ],
            function (e) {
              var t = e.typed,
                n = e.addScalar,
                r = e.subtract,
                i = e.multiplyScalar,
                a = e.divideScalar,
                o = e.unaryMinus,
                s = e.sqrt,
                u = e.abs;
              return t(Zh, {
                "Array, Array, Array": function (e, t, n) {
                  if (2 === e.length && 2 === t.length && 2 === n.length) {
                    if (!l(e))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for first argument"
                      );
                    if (!l(t))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for second argument"
                      );
                    if (!l(n))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for third argument"
                      );
                    var s = a(r(n[1], n[0]), r(t[1], t[0])),
                      u = i(i(s, s), t[0]),
                      c = o(i(s, t[0])),
                      f = e[1];
                    return m(e[0], e[1], u, c, f);
                  }
                  throw new TypeError("Invalid Arguments: Try again");
                },
                "Object, Object, Object": function (e, t, n) {
                  if (
                    2 === Object.keys(e).length &&
                    2 === Object.keys(t).length &&
                    2 === Object.keys(n).length
                  ) {
                    if (!l(e))
                      throw new TypeError(
                        "Values of pointX and pointY should be numbers or BigNumbers"
                      );
                    if (!l(t))
                      throw new TypeError(
                        "Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers"
                      );
                    if (!l(n))
                      throw new TypeError(
                        "Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers"
                      );
                    if (
                      "pointX" in e &&
                      "pointY" in e &&
                      "lineOnePtX" in t &&
                      "lineOnePtY" in t &&
                      "lineTwoPtX" in n &&
                      "lineTwoPtY" in n
                    ) {
                      var s = a(
                          r(n.lineTwoPtY, n.lineTwoPtX),
                          r(t.lineOnePtY, t.lineOnePtX)
                        ),
                        u = i(i(s, s), t.lineOnePtX),
                        c = o(i(s, t.lineOnePtX)),
                        f = e.pointX;
                      return m(e.pointX, e.pointY, u, c, f);
                    }
                    throw new TypeError("Key names do not match");
                  }
                  throw new TypeError("Invalid Arguments: Try again");
                },
                "Array, Array": function (e, t) {
                  if (2 === e.length && 3 === t.length) {
                    if (!l(e))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for first argument"
                      );
                    if (!f(t))
                      throw new TypeError(
                        "Array with 3 numbers or BigNumbers expected for second argument"
                      );
                    return m(e[0], e[1], t[0], t[1], t[2]);
                  }
                  if (3 === e.length && 6 === t.length) {
                    if (!f(e))
                      throw new TypeError(
                        "Array with 3 numbers or BigNumbers expected for first argument"
                      );
                    if (!h(t))
                      throw new TypeError(
                        "Array with 6 numbers or BigNumbers expected for second argument"
                      );
                    return g(
                      e[0],
                      e[1],
                      e[2],
                      t[0],
                      t[1],
                      t[2],
                      t[3],
                      t[4],
                      t[5]
                    );
                  }
                  if (e.length === t.length && e.length > 0) {
                    if (!p(e))
                      throw new TypeError(
                        "All values of an array should be numbers or BigNumbers"
                      );
                    if (!p(t))
                      throw new TypeError(
                        "All values of an array should be numbers or BigNumbers"
                      );
                    return y(e, t);
                  }
                  throw new TypeError("Invalid Arguments: Try again");
                },
                "Object, Object": function (e, t) {
                  if (
                    2 === Object.keys(e).length &&
                    3 === Object.keys(t).length
                  ) {
                    if (!l(e))
                      throw new TypeError(
                        "Values of pointX and pointY should be numbers or BigNumbers"
                      );
                    if (!f(t))
                      throw new TypeError(
                        "Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers"
                      );
                    if (
                      "pointX" in e &&
                      "pointY" in e &&
                      "xCoeffLine" in t &&
                      "yCoeffLine" in t &&
                      "constant" in t
                    )
                      return m(
                        e.pointX,
                        e.pointY,
                        t.xCoeffLine,
                        t.yCoeffLine,
                        t.constant
                      );
                    throw new TypeError("Key names do not match");
                  }
                  if (
                    3 === Object.keys(e).length &&
                    6 === Object.keys(t).length
                  ) {
                    if (!f(e))
                      throw new TypeError(
                        "Values of pointX, pointY and pointZ should be numbers or BigNumbers"
                      );
                    if (!h(t))
                      throw new TypeError(
                        "Values of x0, y0, z0, a, b and c should be numbers or BigNumbers"
                      );
                    if (
                      "pointX" in e &&
                      "pointY" in e &&
                      "x0" in t &&
                      "y0" in t &&
                      "z0" in t &&
                      "a" in t &&
                      "b" in t &&
                      "c" in t
                    )
                      return g(
                        e.pointX,
                        e.pointY,
                        e.pointZ,
                        t.x0,
                        t.y0,
                        t.z0,
                        t.a,
                        t.b,
                        t.c
                      );
                    throw new TypeError("Key names do not match");
                  }
                  if (
                    2 === Object.keys(e).length &&
                    2 === Object.keys(t).length
                  ) {
                    if (!l(e))
                      throw new TypeError(
                        "Values of pointOneX and pointOneY should be numbers or BigNumbers"
                      );
                    if (!l(t))
                      throw new TypeError(
                        "Values of pointTwoX and pointTwoY should be numbers or BigNumbers"
                      );
                    if (
                      "pointOneX" in e &&
                      "pointOneY" in e &&
                      "pointTwoX" in t &&
                      "pointTwoY" in t
                    )
                      return y(
                        [e.pointOneX, e.pointOneY],
                        [t.pointTwoX, t.pointTwoY]
                      );
                    throw new TypeError("Key names do not match");
                  }
                  if (
                    3 === Object.keys(e).length &&
                    3 === Object.keys(t).length
                  ) {
                    if (!f(e))
                      throw new TypeError(
                        "Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers"
                      );
                    if (!f(t))
                      throw new TypeError(
                        "Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers"
                      );
                    if (
                      "pointOneX" in e &&
                      "pointOneY" in e &&
                      "pointOneZ" in e &&
                      "pointTwoX" in t &&
                      "pointTwoY" in t &&
                      "pointTwoZ" in t
                    )
                      return y(
                        [e.pointOneX, e.pointOneY, e.pointOneZ],
                        [t.pointTwoX, t.pointTwoY, t.pointTwoZ]
                      );
                    throw new TypeError("Key names do not match");
                  }
                  throw new TypeError("Invalid Arguments: Try again");
                },
                Array: function (e) {
                  if (
                    !(function (e) {
                      if (2 === e[0].length && c(e[0][0]) && c(e[0][1])) {
                        if (
                          e.some(function (e) {
                            return 2 !== e.length || !c(e[0]) || !c(e[1]);
                          })
                        )
                          return !1;
                      } else {
                        if (
                          !(
                            3 === e[0].length &&
                            c(e[0][0]) &&
                            c(e[0][1]) &&
                            c(e[0][2])
                          )
                        )
                          return !1;
                        if (
                          e.some(function (e) {
                            return (
                              3 !== e.length || !c(e[0]) || !c(e[1]) || !c(e[2])
                            );
                          })
                        )
                          return !1;
                      }
                      return !0;
                    })(e)
                  )
                    throw new TypeError(
                      "Incorrect array format entered for pairwise distance calculation"
                    );
                  return (function (e) {
                    for (
                      var t = [], n = [], r = [], i = 0;
                      i < e.length - 1;
                      i++
                    )
                      for (var a = i + 1; a < e.length; a++)
                        2 === e[0].length
                          ? ((n = [e[i][0], e[i][1]]), (r = [e[a][0], e[a][1]]))
                          : 3 === e[0].length &&
                            ((n = [e[i][0], e[i][1], e[i][2]]),
                            (r = [e[a][0], e[a][1], e[a][2]])),
                          t.push(y(n, r));
                    return t;
                  })(e);
                },
              });
              function c(e) {
                return "number" == typeof e || Ht(e);
              }
              function l(e) {
                return (
                  e.constructor !== Array && (e = d(e)), c(e[0]) && c(e[1])
                );
              }
              function f(e) {
                return (
                  e.constructor !== Array && (e = d(e)),
                  c(e[0]) && c(e[1]) && c(e[2])
                );
              }
              function p(e) {
                return Array.isArray(e) || (e = d(e)), e.every(c);
              }
              function h(e) {
                return (
                  e.constructor !== Array && (e = d(e)),
                  c(e[0]) && c(e[1]) && c(e[2]) && c(e[3]) && c(e[4]) && c(e[5])
                );
              }
              function d(e) {
                for (var t = Object.keys(e), n = [], r = 0; r < t.length; r++)
                  n.push(e[t[r]]);
                return n;
              }
              function m(e, t, r, o, c) {
                var l = u(n(n(i(r, e), i(o, t)), c)),
                  f = s(n(i(r, r), i(o, o)));
                return a(l, f);
              }
              function g(e, t, o, u, c, l, f, p, h) {
                var d = [
                  r(i(r(c, t), h), i(r(l, o), p)),
                  r(i(r(l, o), f), i(r(u, e), h)),
                  r(i(r(u, e), p), i(r(c, t), f)),
                ];
                d = s(n(n(i(d[0], d[0]), i(d[1], d[1])), i(d[2], d[2])));
                var m = s(n(n(i(f, f), i(p, p)), i(h, h)));
                return a(d, m);
              }
              function y(e, t) {
                for (var a = e.length, o = 0, u = 0, c = 0; c < a; c++)
                  (u = r(e[c], t[c])), (o = n(i(u, u), o));
                return s(o);
              }
            }
          ),
          Kh = Cr(
            "intersect",
            [
              "typed",
              "config",
              "abs",
              "add",
              "addScalar",
              "matrix",
              "multiply",
              "multiplyScalar",
              "divideScalar",
              "subtract",
              "smaller",
              "equalScalar",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.abs,
                i = e.add,
                a = e.addScalar,
                o = e.matrix,
                s = e.multiply,
                u = e.multiplyScalar,
                c = e.divideScalar,
                l = e.subtract,
                f = e.smaller,
                p = e.equalScalar;
              return t("intersect", {
                "Array, Array, Array": function (e, t, n) {
                  if (!m(e))
                    throw new TypeError(
                      "Array with 3 numbers or BigNumbers expected for first argument"
                    );
                  if (!m(t))
                    throw new TypeError(
                      "Array with 3 numbers or BigNumbers expected for second argument"
                    );
                  if (
                    !(function (e) {
                      return (
                        4 === e.length &&
                        h(e[0]) &&
                        h(e[1]) &&
                        h(e[2]) &&
                        h(e[3])
                      );
                    })(n)
                  )
                    throw new TypeError(
                      "Array with 4 numbers expected as third argument"
                    );
                  return (function (e, t, n, r, i, o, s, f, p, h) {
                    var d = u(e, s),
                      m = u(r, s),
                      g = u(t, f),
                      y = u(i, f),
                      v = u(n, p),
                      b = u(o, p),
                      x = c(
                        l(l(l(h, d), g), v),
                        l(l(l(a(a(m, y), b), d), g), v)
                      );
                    return [
                      a(e, u(x, l(r, e))),
                      a(t, u(x, l(i, t))),
                      a(n, u(x, l(o, n))),
                    ];
                  })(
                    e[0],
                    e[1],
                    e[2],
                    t[0],
                    t[1],
                    t[2],
                    n[0],
                    n[1],
                    n[2],
                    n[3]
                  );
                },
                "Array, Array, Array, Array": function (e, t, o, h) {
                  if (2 === e.length) {
                    if (!d(e))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for first argument"
                      );
                    if (!d(t))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for second argument"
                      );
                    if (!d(o))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for third argument"
                      );
                    if (!d(h))
                      throw new TypeError(
                        "Array with 2 numbers or BigNumbers expected for fourth argument"
                      );
                    return (function (e, t, o, p) {
                      var h = e,
                        d = o,
                        m = l(h, t),
                        g = l(d, p),
                        y = l(u(m[0], g[1]), u(g[0], m[1]));
                      if (f(r(y), n.epsilon)) return null;
                      var v = u(g[0], h[1]),
                        b = u(g[1], h[0]),
                        x = u(g[0], d[1]),
                        w = u(g[1], d[0]),
                        N = c(a(l(l(v, b), x), w), y);
                      return i(s(m, N), h);
                    })(e, t, o, h);
                  }
                  if (3 === e.length) {
                    if (!m(e))
                      throw new TypeError(
                        "Array with 3 numbers or BigNumbers expected for first argument"
                      );
                    if (!m(t))
                      throw new TypeError(
                        "Array with 3 numbers or BigNumbers expected for second argument"
                      );
                    if (!m(o))
                      throw new TypeError(
                        "Array with 3 numbers or BigNumbers expected for third argument"
                      );
                    if (!m(h))
                      throw new TypeError(
                        "Array with 3 numbers or BigNumbers expected for fourth argument"
                      );
                    return (
                      (y = e[0]),
                      (v = e[1]),
                      (b = e[2]),
                      (x = t[0]),
                      (w = t[1]),
                      (N = t[2]),
                      (E = o[0]),
                      (M = o[1]),
                      (S = o[2]),
                      (A = g(
                        y,
                        E,
                        (_ = h[0]),
                        E,
                        v,
                        M,
                        (k = h[1]),
                        M,
                        b,
                        S,
                        (O = h[2]),
                        S
                      )),
                      (C = g(_, E, x, y, k, M, w, v, O, S, N, b)),
                      (T = g(y, E, x, y, v, M, w, v, b, S, N, b)),
                      (I = g(_, E, _, E, k, M, k, M, O, S, O, S)),
                      (P = g(x, y, x, y, w, v, w, v, N, b, N, b)),
                      (B = c(l(u(A, C), u(T, I)), l(u(P, I), u(C, C)))),
                      (D = c(a(A, u(B, C)), I)),
                      (j = a(y, u(B, l(x, y)))),
                      (R = a(v, u(B, l(w, v)))),
                      (L = a(b, u(B, l(N, b)))),
                      (z = a(E, u(D, l(_, E)))),
                      (q = a(M, u(D, l(k, M)))),
                      (F = a(S, u(D, l(O, S)))),
                      p(j, z) && p(R, q) && p(L, F) ? [j, R, L] : null
                    );
                  }
                  throw new TypeError(
                    "Arrays with two or thee dimensional points expected"
                  );
                  var y,
                    v,
                    b,
                    x,
                    w,
                    N,
                    E,
                    M,
                    S,
                    _,
                    k,
                    O,
                    A,
                    C,
                    T,
                    I,
                    P,
                    B,
                    D,
                    j,
                    R,
                    L,
                    z,
                    q,
                    F;
                },
                "Matrix, Matrix, Matrix": function (e, t, n) {
                  return o(this(e.valueOf(), t.valueOf(), n.valueOf()));
                },
                "Matrix, Matrix, Matrix, Matrix": function (e, t, n, r) {
                  return o(
                    this(e.valueOf(), t.valueOf(), n.valueOf(), r.valueOf())
                  );
                },
              });
              function h(e) {
                return "number" == typeof e || Ht(e);
              }
              function d(e) {
                return 2 === e.length && h(e[0]) && h(e[1]);
              }
              function m(e) {
                return 3 === e.length && h(e[0]) && h(e[1]) && h(e[2]);
              }
              function g(e, t, n, r, i, o, s, c, f, p, h, d) {
                var m = u(l(e, t), l(n, r)),
                  g = u(l(i, o), l(s, c)),
                  y = u(l(f, p), l(h, d));
                return a(a(m, g), y);
              }
            }
          ),
          Qh = Cr("sum", ["typed", "config", "add", "numeric"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.add,
              i = e.numeric;
            return t("sum", {
              "Array | Matrix": a,
              "Array | Matrix, number | BigNumber": function (e, t) {
                try {
                  return Aa(e, t, r);
                } catch (e) {
                  throw Lc(e, "sum");
                }
              },
              "...": function (e) {
                if (_a(e))
                  throw new TypeError("Scalar values expected in function sum");
                return a(e);
              },
            });
            function a(e) {
              var t;
              return (
                ka(e, function (e) {
                  try {
                    t = void 0 === t ? e : r(t, e);
                  } catch (t) {
                    throw Lc(t, "sum", e);
                  }
                }),
                void 0 === t && (t = i(0, n.number)),
                "string" == typeof t && (t = i(t, n.number)),
                t
              );
            }
          }),
          ed = Cr("mean", ["typed", "add", "divide"], function (e) {
            var t = e.typed,
              n = e.add,
              r = e.divide;
            return t("mean", {
              "Array | Matrix": i,
              "Array | Matrix, number | BigNumber": function (e, t) {
                try {
                  var i = Aa(e, t, n),
                    a = Array.isArray(e) ? dr(e) : e.size();
                  return r(i, a[t]);
                } catch (e) {
                  throw Lc(e, "mean");
                }
              },
              "...": function (e) {
                if (_a(e))
                  throw new TypeError(
                    "Scalar values expected in function mean"
                  );
                return i(e);
              },
            });
            function i(e) {
              var t,
                i = 0;
              if (
                (ka(e, function (e) {
                  try {
                    (t = void 0 === t ? e : n(t, e)), i++;
                  } catch (t) {
                    throw Lc(t, "mean", e);
                  }
                }),
                0 === i)
              )
                throw new Error("Cannot calculate the mean of an empty array");
              return r(t, i);
            }
          }),
          td = Cr(
            "median",
            ["typed", "add", "divide", "compare", "partitionSelect"],
            function (e) {
              var t = e.typed,
                n = e.add,
                r = e.divide,
                i = e.compare,
                a = e.partitionSelect;
              function o(e) {
                try {
                  var t = (e = wr(e.valueOf())).length;
                  if (0 === t)
                    throw new Error(
                      "Cannot calculate median of an empty array"
                    );
                  if (t % 2 == 0) {
                    for (
                      var n = t / 2 - 1, r = a(e, n + 1), o = e[n], c = 0;
                      c < n;
                      ++c
                    )
                      i(e[c], o) > 0 && (o = e[c]);
                    return u(o, r);
                  }
                  var l = a(e, (t - 1) / 2);
                  return s(l);
                } catch (e) {
                  throw Lc(e, "median");
                }
              }
              var s = t({
                  "number | BigNumber | Complex | Unit": function (e) {
                    return e;
                  },
                }),
                u = t({
                  "number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit": function (
                    e,
                    t
                  ) {
                    return r(n(e, t), 2);
                  },
                });
              return t("median", {
                "Array | Matrix": o,
                "Array | Matrix, number | BigNumber": function (e, t) {
                  throw new Error("median(A, dim) is not yet supported");
                },
                "...": function (e) {
                  if (_a(e))
                    throw new TypeError(
                      "Scalar values expected in function median"
                    );
                  return o(e);
                },
              });
            }
          ),
          nd = Cr(
            "mad",
            ["typed", "abs", "map", "median", "subtract"],
            function (e) {
              var t = e.typed,
                n = e.abs,
                r = e.map,
                i = e.median,
                a = e.subtract;
              return t("mad", {
                "Array | Matrix": o,
                "...": function (e) {
                  return o(e);
                },
              });
              function o(e) {
                if (0 === (e = wr(e.valueOf())).length)
                  throw new Error(
                    "Cannot calculate median absolute deviation (mad) of an empty array"
                  );
                try {
                  var t = i(e);
                  return i(
                    r(e, function (e) {
                      return n(a(e, t));
                    })
                  );
                } catch (e) {
                  throw e instanceof TypeError &&
                    -1 !== e.message.indexOf("median")
                    ? new TypeError(e.message.replace("median", "mad"))
                    : Lc(e, "mad");
                }
              }
            }
          ),
          rd = "unbiased",
          id = "variance",
          ad = Cr(
            id,
            [
              "typed",
              "add",
              "subtract",
              "multiply",
              "divide",
              "apply",
              "isNaN",
            ],
            function (e) {
              var t = e.typed,
                n = e.add,
                r = e.subtract,
                i = e.multiply,
                a = e.divide,
                o = e.apply,
                s = e.isNaN;
              return t(id, {
                "Array | Matrix": function (e) {
                  return u(e, rd);
                },
                "Array | Matrix, string": u,
                "Array | Matrix, number | BigNumber": function (e, t) {
                  return c(e, t, rd);
                },
                "Array | Matrix, number | BigNumber, string": c,
                "...": function (e) {
                  return u(e, rd);
                },
              });
              function u(e, t) {
                var o,
                  u = 0;
                if (0 === e.length)
                  throw new SyntaxError(
                    "Function variance requires one or more parameters (0 provided)"
                  );
                if (
                  (ka(e, function (e) {
                    try {
                      (o = void 0 === o ? e : n(o, e)), u++;
                    } catch (t) {
                      throw Lc(t, "variance", e);
                    }
                  }),
                  0 === u)
                )
                  throw new Error(
                    "Cannot calculate variance of an empty array"
                  );
                var c = a(o, u);
                if (
                  ((o = void 0),
                  ka(e, function (e) {
                    var t = r(e, c);
                    o = void 0 === o ? i(t, t) : n(o, i(t, t));
                  }),
                  s(o))
                )
                  return o;
                switch (t) {
                  case "uncorrected":
                    return a(o, u);
                  case "biased":
                    return a(o, u + 1);
                  case "unbiased":
                    var l = Ht(o) ? o.mul(0) : 0;
                    return 1 === u ? l : a(o, u - 1);
                  default:
                    throw new Error(
                      'Unknown normalization "' +
                        t +
                        '". Choose "unbiased" (default), "uncorrected", or "biased".'
                    );
                }
              }
              function c(e, t, n) {
                try {
                  if (0 === e.length)
                    throw new SyntaxError(
                      "Function variance requires one or more parameters (0 provided)"
                    );
                  return o(e, t, function (e) {
                    return u(e, n);
                  });
                } catch (e) {
                  throw Lc(e, "variance");
                }
              }
            }
          ),
          od = Cr(
            "quantileSeq",
            ["typed", "add", "multiply", "partitionSelect", "compare"],
            function (e) {
              var t = e.typed,
                n = e.add,
                r = e.multiply,
                i = e.partitionSelect,
                a = e.compare;
              function o(e, t, o) {
                var u = wr(e),
                  c = u.length;
                if (0 === c)
                  throw new Error(
                    "Cannot calculate quantile of an empty sequence"
                  );
                if ($t(t)) {
                  var l = t * (c - 1),
                    f = l % 1;
                  if (0 === f) {
                    var p = o ? u[l] : i(u, l);
                    return s(p), p;
                  }
                  var h,
                    d,
                    m = Math.floor(l);
                  if (o) (h = u[m]), (d = u[m + 1]);
                  else {
                    (d = i(u, m + 1)), (h = u[m]);
                    for (var g = 0; g < m; ++g) a(u[g], h) > 0 && (h = u[g]);
                  }
                  return s(h), s(d), n(r(h, 1 - f), r(d, f));
                }
                var y = t.times(c - 1);
                if (y.isInteger()) {
                  y = y.toNumber();
                  var v = o ? u[y] : i(u, y);
                  return s(v), v;
                }
                var b,
                  x,
                  w = y.floor(),
                  N = y.minus(w),
                  E = w.toNumber();
                if (o) (b = u[E]), (x = u[E + 1]);
                else {
                  (x = i(u, E + 1)), (b = u[E]);
                  for (var M = 0; M < E; ++M) a(u[M], b) > 0 && (b = u[M]);
                }
                s(b), s(x);
                var S = new N.constructor(1);
                return n(r(b, S.minus(N)), r(x, N));
              }
              var s = t({
                "number | BigNumber | Unit": function (e) {
                  return e;
                },
              });
              return function (e, t, n) {
                var r, i, a;
                if (arguments.length < 2 || arguments.length > 3)
                  throw new SyntaxError(
                    "Function quantileSeq requires two or three parameters"
                  );
                if (Kt(e)) {
                  if ("boolean" == typeof (n = n || !1)) {
                    if (((i = e.valueOf()), $t(t))) {
                      if (t < 0) throw new Error("N/prob must be non-negative");
                      if (t <= 1) return o(i, t, n);
                      if (t > 1) {
                        if (!Ln(t))
                          throw new Error("N must be a positive integer");
                        var s = t + 1;
                        r = new Array(t);
                        for (var u = 0; u < t; ) r[u] = o(i, ++u / s, n);
                        return r;
                      }
                    }
                    if (Ht(t)) {
                      var c = t.constructor;
                      if (t.isNegative())
                        throw new Error("N/prob must be non-negative");
                      if (((a = new c(1)), t.lte(a))) return new c(o(i, t, n));
                      if (t.gt(a)) {
                        if (!t.isInteger())
                          throw new Error("N must be a positive integer");
                        var l = t.toNumber();
                        if (l > 4294967295)
                          throw new Error(
                            "N must be less than or equal to 2^32-1, as that is the maximum length of an Array"
                          );
                        var f = new c(l + 1);
                        r = new Array(l);
                        for (var p = 0; p < l; )
                          r[p] = new c(o(i, new c(++p).div(f), n));
                        return r;
                      }
                    }
                    if (Array.isArray(t)) {
                      r = new Array(t.length);
                      for (var h = 0; h < r.length; ++h) {
                        var d = t[h];
                        if ($t(d)) {
                          if (d < 0 || d > 1)
                            throw new Error(
                              "Probability must be between 0 and 1, inclusive"
                            );
                        } else {
                          if (!Ht(d))
                            throw new TypeError(
                              "Unexpected type of argument in function quantileSeq"
                            );
                          if (
                            ((a = new d.constructor(1)),
                            d.isNegative() || d.gt(a))
                          )
                            throw new Error(
                              "Probability must be between 0 and 1, inclusive"
                            );
                        }
                        r[h] = o(i, d, n);
                      }
                      return r;
                    }
                    throw new TypeError(
                      "Unexpected type of argument in function quantileSeq"
                    );
                  }
                  throw new TypeError(
                    "Unexpected type of argument in function quantileSeq"
                  );
                }
                throw new TypeError(
                  "Unexpected type of argument in function quantileSeq"
                );
              };
            }
          ),
          sd = Cr("std", ["typed", "sqrt", "variance"], function (e) {
            var t = e.typed,
              n = e.sqrt,
              r = e.variance;
            return t("std", {
              "Array | Matrix": i,
              "Array | Matrix, string": i,
              "Array | Matrix, number | BigNumber": i,
              "Array | Matrix, number | BigNumber, string": i,
              "...": function (e) {
                return i(e);
              },
            });
            function i(e, t) {
              if (0 === e.length)
                throw new SyntaxError(
                  "Function std requires one or more parameters (0 provided)"
                );
              try {
                return n(r.apply(null, arguments));
              } catch (e) {
                throw e instanceof TypeError &&
                  -1 !== e.message.indexOf(" variance")
                  ? new TypeError(e.message.replace(" variance", " std"))
                  : e;
              }
            }
          }),
          ud = "combinations",
          cd = Cr(ud, ["typed"], function (e) {
            return (0, e.typed)(ud, {
              "number, number": ho,
              "BigNumber, BigNumber": function (e, t) {
                var n,
                  r,
                  i = e.constructor,
                  a = e.minus(t),
                  o = new i(1);
                if (!ld(e) || !ld(t))
                  throw new TypeError(
                    "Positive integer value expected in function combinations"
                  );
                if (t.gt(e))
                  throw new TypeError(
                    "k must be less than n in function combinations"
                  );
                if (((n = o), t.lt(a)))
                  for (r = o; r.lte(a); r = r.plus(o))
                    n = n.times(t.plus(r)).dividedBy(r);
                else
                  for (r = o; r.lte(t); r = r.plus(o))
                    n = n.times(a.plus(r)).dividedBy(r);
                return n;
              },
            });
          });
        function ld(e) {
          return e.isInteger() && e.gte(0);
        }
        var fd = "combinationsWithRep",
          pd = Cr(fd, ["typed"], function (e) {
            return (0, e.typed)(fd, {
              "number, number": function (e, t) {
                if (!Ln(e) || e < 0)
                  throw new TypeError(
                    "Positive integer value expected in function combinationsWithRep"
                  );
                if (!Ln(t) || t < 0)
                  throw new TypeError(
                    "Positive integer value expected in function combinationsWithRep"
                  );
                if (e < 1)
                  throw new TypeError(
                    "k must be less than or equal to n + k - 1"
                  );
                return t < e - 1
                  ? po(e, e + t - 1) / po(1, t)
                  : po(t + 1, e + t - 1) / po(1, e - 1);
              },
              "BigNumber, BigNumber": function (e, t) {
                var n,
                  r,
                  i = new (0, e.constructor)(1),
                  a = e.minus(i);
                if (!hd(e) || !hd(t))
                  throw new TypeError(
                    "Positive integer value expected in function combinationsWithRep"
                  );
                if (e.lt(i))
                  throw new TypeError(
                    "k must be less than or equal to n + k - 1 in function combinationsWithRep"
                  );
                if (((n = i), t.lt(a)))
                  for (r = i; r.lte(a); r = r.plus(i))
                    n = n.times(t.plus(r)).dividedBy(r);
                else
                  for (r = i; r.lte(t); r = r.plus(i))
                    n = n.times(a.plus(r)).dividedBy(r);
                return n;
              },
            });
          });
        function hd(e) {
          return e.isInteger() && e.gte(0);
        }
        var dd = Cr(
            "gamma",
            [
              "typed",
              "config",
              "multiplyScalar",
              "pow",
              "BigNumber",
              "Complex",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.multiplyScalar,
                i = e.pow,
                a = e.BigNumber,
                o = e.Complex;
              return t("gamma", {
                number: Eo,
                Complex: function (e) {
                  if (0 === e.im) return this(e.re);
                  e = new o(e.re - 1, e.im);
                  for (var t = new o(So[0], 0), n = 1; n < So.length; ++n) {
                    var a = e.re + n,
                      s = a * a + e.im * e.im;
                    0 !== s
                      ? ((t.re += (So[n] * a) / s),
                        (t.im += (-So[n] * e.im) / s))
                      : (t.re = So[n] < 0 ? -1 / 0 : 1 / 0);
                  }
                  var u = new o(e.re + Mo + 0.5, e.im),
                    c = Math.sqrt(2 * Math.PI);
                  e.re += 0.5;
                  var l = i(u, e);
                  0 === l.im
                    ? (l.re *= c)
                    : (0 === l.re || (l.re *= c), (l.im *= c));
                  var f = Math.exp(-u.re);
                  return (
                    (u.re = f * Math.cos(-u.im)),
                    (u.im = f * Math.sin(-u.im)),
                    r(r(l, u), t)
                  );
                },
                BigNumber: function (e) {
                  if (e.isInteger())
                    return e.isNegative() || e.isZero()
                      ? new a(1 / 0)
                      : (function e(t) {
                          if (t < 8)
                            return new a([1, 1, 2, 6, 24, 120, 720, 5040][t]);
                          var r = n.precision + (0 | Math.log(t.toNumber())),
                            i = a.clone({ precision: r });
                          if (t % 2 == 1) return t.times(e(new a(t - 1)));
                          for (
                            var o = t, s = new i(t), u = t.toNumber();
                            o > 2;

                          )
                            (u += o -= 2), (s = s.times(u));
                          return new a(s.toPrecision(a.precision));
                        })(e.minus(1));
                  if (!e.isFinite()) return new a(e.isNegative() ? NaN : 1 / 0);
                  throw new Error("Integer BigNumber expected");
                },
                "Array | Matrix": function (e) {
                  return Oa(e, this);
                },
              });
            }
          ),
          md = "factorial",
          gd = Cr(md, ["typed", "gamma"], function (e) {
            var t = e.typed,
              n = e.gamma;
            return t(md, {
              number: function (e) {
                if (e < 0) throw new Error("Value must be non-negative");
                return n(e + 1);
              },
              BigNumber: function (e) {
                if (e.isNegative())
                  throw new Error("Value must be non-negative");
                return n(e.plus(1));
              },
              "Array | Matrix": function (e) {
                return Oa(e, this);
              },
            });
          }),
          yd = "kldivergence",
          vd = Cr(
            yd,
            [
              "typed",
              "matrix",
              "divide",
              "sum",
              "multiply",
              "dotDivide",
              "log",
              "isNumeric",
            ],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.divide,
                i = e.sum,
                a = e.multiply,
                o = e.dotDivide,
                s = e.log,
                u = e.isNumeric;
              return t(yd, {
                "Array, Array": function (e, t) {
                  return c(n(e), n(t));
                },
                "Matrix, Array": function (e, t) {
                  return c(e, n(t));
                },
                "Array, Matrix": function (e, t) {
                  return c(n(e), t);
                },
                "Matrix, Matrix": function (e, t) {
                  return c(e, t);
                },
              });
              function c(e, t) {
                var n = t.size().length,
                  c = e.size().length;
                if (n > 1)
                  throw new Error("first object must be one dimensional");
                if (c > 1)
                  throw new Error("second object must be one dimensional");
                if (n !== c)
                  throw new Error("Length of two vectors must be equal");
                if (0 === i(e))
                  throw new Error(
                    "Sum of elements in first object must be non zero"
                  );
                if (0 === i(t))
                  throw new Error(
                    "Sum of elements in second object must be non zero"
                  );
                var l = r(e, i(e)),
                  f = r(t, i(t)),
                  p = i(a(l, s(o(l, f))));
                return u(p) ? p : Number.NaN;
              }
            }
          ),
          bd = "multinomial",
          xd = Cr(
            bd,
            [
              "typed",
              "add",
              "divide",
              "multiply",
              "factorial",
              "isInteger",
              "isPositive",
            ],
            function (e) {
              var t = e.typed,
                n = e.add,
                r = e.divide,
                i = e.multiply,
                a = e.factorial,
                o = e.isInteger,
                s = e.isPositive;
              return t(bd, {
                "Array | Matrix": function (e) {
                  var t = 0,
                    u = 1;
                  return (
                    ka(e, function (e) {
                      if (!o(e) || !s(e))
                        throw new TypeError(
                          "Positive integer value expected in function multinomial"
                        );
                      (t = n(t, e)), (u = i(u, a(e)));
                    }),
                    r(a(t), u)
                  );
                },
              });
            }
          ),
          wd = "permutations",
          Nd = Cr(wd, ["typed", "factorial"], function (e) {
            var t = e.typed,
              n = e.factorial;
            return t(wd, {
              "number | BigNumber": n,
              "number, number": function (e, t) {
                if (!Ln(e) || e < 0)
                  throw new TypeError(
                    "Positive integer value expected in function permutations"
                  );
                if (!Ln(t) || t < 0)
                  throw new TypeError(
                    "Positive integer value expected in function permutations"
                  );
                if (t > e)
                  throw new TypeError(
                    "second argument k must be less than or equal to first argument n"
                  );
                return po(e - t + 1, e);
              },
              "BigNumber, BigNumber": function (e, t) {
                var n, r;
                if (!Ed(e) || !Ed(t))
                  throw new TypeError(
                    "Positive integer value expected in function permutations"
                  );
                if (t.gt(e))
                  throw new TypeError(
                    "second argument k must be less than or equal to first argument n"
                  );
                for (
                  n = e.mul(0).add(1), r = e.minus(t).plus(1);
                  r.lte(e);
                  r = r.plus(1)
                )
                  n = n.times(r);
                return n;
              },
            });
          });
        function Ed(e) {
          return e.isInteger() && e.gte(0);
        }
        var Md = Ne(function (e) {
            var t = 256,
              n = [],
              r = void 0 === xe ? window : xe,
              i = Math.pow(t, 6),
              a = Math.pow(2, 52),
              o = 2 * a,
              s = 255,
              u = Math.random;
            function c(e) {
              var n,
                r = e.length,
                i = this,
                a = 0,
                o = (i.i = i.j = 0),
                u = (i.S = []);
              for (r || (e = [r++]); a < t; ) u[a] = a++;
              for (a = 0; a < t; a++)
                (u[a] = u[(o = s & (o + e[a % r] + (n = u[a])))]), (u[o] = n);
              (i.g = function (e) {
                for (var n, r = 0, a = i.i, o = i.j, u = i.S; e--; )
                  (n = u[(a = s & (a + 1))]),
                    (r =
                      r * t +
                      u[s & ((u[a] = u[(o = s & (o + n))]) + (u[o] = n))]);
                return (i.i = a), (i.j = o), r;
              })(t);
            }
            function l(e, t) {
              var n,
                r = [],
                i = (typeof e)[0];
              if (t && "o" == i)
                for (n in e)
                  try {
                    r.push(l(e[n], t - 1));
                  } catch (e) {}
              return r.length ? r : "s" == i ? e : e + "\0";
            }
            function f(e, t) {
              for (var n, r = e + "", i = 0; i < r.length; )
                t[s & i] = s & ((n ^= 19 * t[s & i]) + r.charCodeAt(i++));
              return h(t);
            }
            function p(e) {
              try {
                return r.crypto.getRandomValues((e = new Uint8Array(t))), h(e);
              } catch (e) {
                return [
                  +new Date(),
                  r,
                  r.navigator && r.navigator.plugins,
                  r.screen,
                  h(n),
                ];
              }
            }
            function h(e) {
              return String.fromCharCode.apply(0, e);
            }
            (e.exports = function (r, s) {
              if (s && !0 === s.global)
                return (
                  (s.global = !1),
                  (Math.random = e.exports(r, s)),
                  (s.global = !0),
                  Math.random
                );
              var u = (s && s.entropy) || !1,
                d = [],
                m =
                  (f(l(u ? [r, h(n)] : 0 in arguments ? r : p(), 3), d),
                  new c(d));
              return (
                f(h(m.S), n),
                function () {
                  for (var e = m.g(6), n = i, r = 0; e < a; )
                    (e = (e + r) * t), (n *= t), (r = m.g(1));
                  for (; e >= o; ) (e /= 2), (n /= 2), (r >>>= 1);
                  return (e + r) / n;
                }
              );
            }),
              (e.exports.resetGlobal = function () {
                Math.random = u;
              }),
              f(Math.random(), n);
          }),
          Sd = (Md.resetGlobal, Md());
        function _d(e) {
          var t, n;
          return (
            (t = null === (n = e) ? Sd : Md(String(n))),
            function () {
              return t();
            }
          );
        }
        var kd = Cr("pickRandom", ["typed", "config", "?on"], function (e) {
          var t = e.typed,
            n = e.config,
            r = e.on,
            i = _d(n.randomSeed);
          return (
            r &&
              r("config", function (e, t) {
                e.randomSeed !== t.randomSeed && (i = _d(e.randomSeed));
              }),
            t({
              "Array | Matrix": function (e) {
                return a(e);
              },
              "Array | Matrix, number": function (e, t) {
                return a(e, t, void 0);
              },
              "Array | Matrix, Array": function (e, t) {
                return a(e, void 0, t);
              },
              "Array | Matrix, Array | Matrix, number": function (e, t, n) {
                return a(e, n, t);
              },
              "Array | Matrix, number, Array | Matrix": function (e, t, n) {
                return a(e, t, n);
              },
            })
          );
          function a(e, t, n) {
            var r = void 0 === t;
            if (
              (r && (t = 1),
              (e = e.valueOf()),
              n && (n = n.valueOf()),
              dr(e).length > 1)
            )
              throw new Error("Only one dimensional vectors supported");
            var a = 0;
            if (void 0 !== n) {
              if (n.length !== e.length)
                throw new Error(
                  "Weights must have the same length as possibles"
                );
              for (var o = 0, s = n.length; o < s; o++) {
                if (!$t(n[o]) || n[o] < 0)
                  throw new Error(
                    "Weights must be an array of positive numbers"
                  );
                a += n[o];
              }
            }
            var u = e.length;
            if (0 === u) return [];
            if (t >= u) return t > 1 ? e : e[0];
            for (var c, l = []; l.length < t; ) {
              if (void 0 === n) c = e[Math.floor(i() * u)];
              else
                for (var f = i() * a, p = 0, h = e.length; p < h; p++)
                  if ((f -= n[p]) < 0) {
                    c = e[p];
                    break;
                  }
              -1 === l.indexOf(c) && l.push(c);
            }
            return r ? l[0] : l;
          }
        });
        function Od(e, t) {
          var n = [];
          if ((e = e.slice(0)).length > 1)
            for (var r = 0, i = e.shift(); r < i; r++) n.push(Od(e, t));
          else for (var a = 0, o = e.shift(); a < o; a++) n.push(t());
          return n;
        }
        var Ad = Cr("random", ["typed", "config", "?on"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.on,
              i = _d(n.randomSeed);
            return (
              r &&
                r("config", function (e, t) {
                  e.randomSeed !== t.randomSeed && (i = _d(e.randomSeed));
                }),
              t("random", {
                "": function () {
                  return o(0, 1);
                },
                number: function (e) {
                  return o(0, e);
                },
                "number, number": function (e, t) {
                  return o(e, t);
                },
                "Array | Matrix": function (e) {
                  return a(e, 0, 1);
                },
                "Array | Matrix, number": function (e, t) {
                  return a(e, 0, t);
                },
                "Array | Matrix, number, number": function (e, t, n) {
                  return a(e, t, n);
                },
              })
            );
            function a(e, t, n) {
              var r = Od(e.valueOf(), function () {
                return o(t, n);
              });
              return Xt(e) ? e.create(r) : r;
            }
            function o(e, t) {
              return e + i() * (t - e);
            }
          }),
          Cd = "randomInt",
          Td = Cr(Cd, ["typed", "config", "?on"], function (e) {
            var t = e.typed,
              n = e.config,
              r = e.on,
              i = _d(n.randomSeed);
            return (
              r &&
                r("config", function (e, t) {
                  e.randomSeed !== t.randomSeed && (i = _d(e.randomSeed));
                }),
              t(Cd, {
                "": function () {
                  return o(0, 1);
                },
                number: function (e) {
                  return o(0, e);
                },
                "number, number": function (e, t) {
                  return o(e, t);
                },
                "Array | Matrix": function (e) {
                  return a(e, 0, 1);
                },
                "Array | Matrix, number": function (e, t) {
                  return a(e, 0, t);
                },
                "Array | Matrix, number, number": function (e, t, n) {
                  return a(e, t, n);
                },
              })
            );
            function a(e, t, n) {
              var r = Od(e.valueOf(), function () {
                return o(t, n);
              });
              return Xt(e) ? e.create(r) : r;
            }
            function o(e, t) {
              return Math.floor(e + i() * (t - e));
            }
          }),
          Id = "stirlingS2",
          Pd = Cr(
            Id,
            [
              "typed",
              "addScalar",
              "subtract",
              "multiplyScalar",
              "divideScalar",
              "pow",
              "factorial",
              "combinations",
              "isNegative",
              "isInteger",
              "larger",
            ],
            function (e) {
              var t = e.typed,
                n = e.addScalar,
                r = e.subtract,
                i = e.multiplyScalar,
                a = e.divideScalar,
                o = e.pow,
                s = e.factorial,
                u = e.combinations,
                c = e.isNegative,
                l = e.isInteger,
                f = e.larger;
              return t(Id, {
                "number | BigNumber, number | BigNumber": function (e, t) {
                  if (!l(e) || c(e) || !l(t) || c(t))
                    throw new TypeError(
                      "Non-negative integer value expected in function stirlingS2"
                    );
                  if (f(t, e))
                    throw new TypeError(
                      "k must be less than or equal to n in function stirlingS2"
                    );
                  for (var p = s(t), h = 0, d = 0; d <= t; d++) {
                    var m = o(-1, r(t, d)),
                      g = u(t, d),
                      y = o(d, e);
                    h = n(h, i(i(g, y), m));
                  }
                  return a(h, p);
                },
              });
            }
          ),
          Bd = "bellNumbers",
          Dd = Cr(
            Bd,
            ["typed", "addScalar", "isNegative", "isInteger", "stirlingS2"],
            function (e) {
              var t = e.typed,
                n = e.addScalar,
                r = e.isNegative,
                i = e.isInteger,
                a = e.stirlingS2;
              return t(Bd, {
                "number | BigNumber": function (e) {
                  if (!i(e) || r(e))
                    throw new TypeError(
                      "Non-negative integer value expected in function bellNumbers"
                    );
                  for (var t = 0, o = 0; o <= e; o++) t = n(t, a(e, o));
                  return t;
                },
              });
            }
          ),
          jd = "catalan",
          Rd = Cr(
            jd,
            [
              "typed",
              "addScalar",
              "divideScalar",
              "multiplyScalar",
              "combinations",
              "isNegative",
              "isInteger",
            ],
            function (e) {
              var t = e.typed,
                n = e.addScalar,
                r = e.divideScalar,
                i = e.multiplyScalar,
                a = e.combinations,
                o = e.isNegative,
                s = e.isInteger;
              return t(jd, {
                "number | BigNumber": function (e) {
                  if (!s(e) || o(e))
                    throw new TypeError(
                      "Non-negative integer value expected in function catalan"
                    );
                  return r(a(i(e, 2), e), n(e, 1));
                },
              });
            }
          ),
          Ld = "composition",
          zd = Cr(
            Ld,
            [
              "typed",
              "addScalar",
              "combinations",
              "isNegative",
              "isPositive",
              "isInteger",
              "larger",
            ],
            function (e) {
              var t = e.typed,
                n = e.addScalar,
                r = e.combinations,
                i = e.isPositive,
                a = (e.isNegative, e.isInteger),
                o = e.larger;
              return t(Ld, {
                "number | BigNumber, number | BigNumber": function (e, t) {
                  if (!(a(e) && i(e) && a(t) && i(t)))
                    throw new TypeError(
                      "Positive integer value expected in function composition"
                    );
                  if (o(t, e))
                    throw new TypeError(
                      "k must be less than or equal to n in function composition"
                    );
                  return r(n(e, -1), n(t, -1));
                },
              });
            }
          ),
          qd = Cr(
            "simplifyUtil",
            ["FunctionNode", "OperatorNode", "SymbolNode"],
            function (e) {
              var t = e.FunctionNode,
                n = e.OperatorNode,
                r = e.SymbolNode,
                i = { add: !0, multiply: !0 },
                a = { add: !0, multiply: !0 };
              function o(e, t) {
                if (!Mn(e)) return !1;
                var n = e.fn.toString();
                return t && Bn(t, n) && Bn(t[n], "associative")
                  ? t[n].associative
                  : a[n] || !1;
              }
              function s(e) {
                var t,
                  n = [];
                return o(e)
                  ? ((t = e.op),
                    (function e(r) {
                      for (var i = 0; i < r.args.length; i++) {
                        var a = r.args[i];
                        Mn(a) && t === a.op ? e(a) : n.push(a);
                      }
                    })(e),
                    n)
                  : e.args;
              }
              function u(e) {
                return Mn(e)
                  ? function (t) {
                      try {
                        return new n(e.op, e.fn, t, e.implicit);
                      } catch (e) {
                        return console.error(e), [];
                      }
                    }
                  : function (n) {
                      return new t(new r(e.name), n);
                    };
              }
              return {
                createMakeNodeFunction: u,
                isCommutative: function (e, t) {
                  if (!Mn(e)) return !0;
                  var n = e.fn.toString();
                  return t && Bn(t, n) && Bn(t[n], "commutative")
                    ? t[n].commutative
                    : i[n] || !1;
                },
                isAssociative: o,
                flatten: function e(t) {
                  if (!t.args || 0 === t.args.length) return t;
                  t.args = s(t);
                  for (var n = 0; n < t.args.length; n++) e(t.args[n]);
                },
                allChildren: s,
                unflattenr: function e(t) {
                  if (t.args && 0 !== t.args.length) {
                    for (var n = u(t), r = t.args.length, i = 0; i < r; i++)
                      e(t.args[i]);
                    if (r > 2 && o(t)) {
                      for (var a = t.args.pop(); t.args.length > 0; )
                        a = n([t.args.pop(), a]);
                      t.args = a.args;
                    }
                  }
                },
                unflattenl: function e(t) {
                  if (t.args && 0 !== t.args.length) {
                    for (var n = u(t), r = t.args.length, i = 0; i < r; i++)
                      e(t.args[i]);
                    if (r > 2 && o(t)) {
                      for (var a = t.args.shift(); t.args.length > 0; )
                        a = n([a, t.args.shift()]);
                      t.args = a.args;
                    }
                  }
                },
              };
            }
          ),
          Fd = Cr(
            "simplifyCore",
            [
              "equal",
              "isZero",
              "add",
              "subtract",
              "multiply",
              "divide",
              "pow",
              "ConstantNode",
              "OperatorNode",
              "FunctionNode",
              "ParenthesisNode",
            ],
            function (e) {
              var t = e.equal,
                n = e.isZero,
                r = e.add,
                i = e.subtract,
                a = e.multiply,
                o = e.divide,
                s = e.pow,
                u = e.ConstantNode,
                c = e.OperatorNode,
                l = e.FunctionNode,
                f = e.ParenthesisNode,
                p = new u(0),
                h = new u(1);
              return function e(d) {
                if (Mn(d) && d.isUnary()) {
                  var m = e(d.args[0]);
                  if ("+" === d.op) return m;
                  if ("-" === d.op) {
                    if (Mn(m)) {
                      if (m.isUnary() && "-" === m.op) return m.args[0];
                      if (m.isBinary() && "subtract" === m.fn)
                        return new c("-", "subtract", [m.args[1], m.args[0]]);
                    }
                    return new c(d.op, d.fn, [m]);
                  }
                } else if (Mn(d) && d.isBinary()) {
                  var g = e(d.args[0]),
                    y = e(d.args[1]);
                  if ("+" === d.op) {
                    if (vn(g)) {
                      if (n(g.value)) return y;
                      if (vn(y)) return new u(r(g.value, y.value));
                    }
                    return vn(y) && n(y.value)
                      ? g
                      : Mn(y) && y.isUnary() && "-" === y.op
                      ? new c("-", "subtract", [g, y.args[0]])
                      : new c(d.op, d.fn, y ? [g, y] : [g]);
                  }
                  if ("-" === d.op) {
                    if (vn(g) && y) {
                      if (vn(y)) return new u(i(g.value, y.value));
                      if (n(g.value)) return new c("-", "unaryMinus", [y]);
                    }
                    if ("subtract" === d.fn)
                      return vn(y) && n(y.value)
                        ? g
                        : Mn(y) && y.isUnary() && "-" === y.op
                        ? e(new c("+", "add", [g, y.args[0]]))
                        : new c(d.op, d.fn, [g, y]);
                  } else {
                    if ("*" === d.op) {
                      if (vn(g)) {
                        if (n(g.value)) return p;
                        if (t(g.value, 1)) return y;
                        if (vn(y)) return new u(a(g.value, y.value));
                      }
                      if (vn(y)) {
                        if (n(y.value)) return p;
                        if (t(y.value, 1)) return g;
                        if (Mn(g) && g.isBinary() && g.op === d.op) {
                          var v = g.args[0];
                          if (vn(v)) {
                            var b = new u(a(v.value, y.value));
                            return new c(
                              d.op,
                              d.fn,
                              [b, g.args[1]],
                              d.implicit
                            );
                          }
                        }
                        return new c(d.op, d.fn, [y, g], d.implicit);
                      }
                      return new c(d.op, d.fn, [g, y], d.implicit);
                    }
                    if ("/" === d.op) {
                      if (vn(g)) {
                        if (n(g.value)) return p;
                        if (
                          vn(y) &&
                          (t(y.value, 1) || t(y.value, 2) || t(y.value, 4))
                        )
                          return new u(o(g.value, y.value));
                      }
                      return new c(d.op, d.fn, [g, y]);
                    }
                    if ("^" === d.op) {
                      if (vn(y)) {
                        if (n(y.value)) return h;
                        if (t(y.value, 1)) return g;
                        if (vn(g)) return new u(s(g.value, y.value));
                        if (Mn(g) && g.isBinary() && "^" === g.op) {
                          var x = g.args[1];
                          if (vn(x))
                            return new c(d.op, d.fn, [
                              g.args[0],
                              new u(a(x.value, y.value)),
                            ]);
                        }
                      }
                      return new c(d.op, d.fn, [g, y]);
                    }
                  }
                } else {
                  if (Sn(d)) {
                    var w = e(d.content);
                    return Sn(w) || kn(w) || vn(w) ? w : new f(w);
                  }
                  if (xn(d)) {
                    var N = d.args.map(e).map(function (e) {
                      return Sn(e) ? e.content : e;
                    });
                    return new l(e(d.fn), N);
                  }
                }
                return d;
              };
            }
          ),
          Ud = Cr(
            "simplifyConstant",
            [
              "typed",
              "config",
              "mathWithTransform",
              "?fraction",
              "?bignumber",
              "ConstantNode",
              "OperatorNode",
              "FunctionNode",
              "SymbolNode",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.mathWithTransform,
                i = e.fraction,
                a = e.bignumber,
                o = e.ConstantNode,
                s = e.OperatorNode,
                u = e.FunctionNode,
                c = e.SymbolNode,
                l = qd({ FunctionNode: u, OperatorNode: s, SymbolNode: c }),
                f = l.isCommutative,
                p = l.isAssociative,
                h = l.allChildren,
                d = l.createMakeNodeFunction;
              function m(e, t, n) {
                try {
                  return v(r[e].apply(null, t), n);
                } catch (i) {
                  return (
                    (t = t.map(function (e) {
                      return Gt(e) ? e.valueOf() : e;
                    })),
                    v(r[e].apply(null, t), n)
                  );
                }
              }
              var g = t({
                Fraction: function (e) {
                  var t,
                    n = e.s * e.n;
                  return (
                    (t =
                      n < 0 ? new s("-", "unaryMinus", [new o(-n)]) : new o(n)),
                    1 === e.d ? t : new s("/", "divide", [t, new o(e.d)])
                  );
                },
                number: function (e) {
                  return e < 0 ? b(new o(-e)) : new o(e);
                },
                BigNumber: function (e) {
                  return e < 0 ? b(new o(-e)) : new o(e);
                },
                Complex: function (e) {
                  throw new Error("Cannot convert Complex number to Node");
                },
              });
              function y(e, t) {
                if (t && !1 !== t.exactFractions && isFinite(e) && i) {
                  var n = i(e);
                  if (n.valueOf() === e) return n;
                }
                return e;
              }
              var v = t({
                "string, Object": function (e, t) {
                  return "BigNumber" === n.number
                    ? (void 0 === a && nc(), a(e))
                    : "Fraction" === n.number
                    ? (void 0 === i && rc(), i(e))
                    : y(parseFloat(e), t);
                },
                "Fraction, Object": function (e, t) {
                  return e;
                },
                "BigNumber, Object": function (e, t) {
                  return e;
                },
                "number, Object": function (e, t) {
                  return y(e, t);
                },
                "Complex, Object": function (e, t) {
                  return 0 !== e.im ? e : y(e.re, t);
                },
              });
              function b(e) {
                return new s("-", "unaryMinus", [e]);
              }
              function x(e, t, n, r) {
                return t.reduce(function (t, i) {
                  if (Nn(t) || Nn(i)) Nn(t) ? Nn(i) || (i = g(i)) : (t = g(t));
                  else {
                    try {
                      return m(e, [t, i], r);
                    } catch (e) {}
                    (t = g(t)), (i = g(i));
                  }
                  return n([t, i]);
                });
              }
              return function (e, t) {
                var n = (function e(t, n) {
                  switch (t.type) {
                    case "SymbolNode":
                      return t;
                    case "ConstantNode":
                      return "number" != typeof t.value && isNaN(t.value)
                        ? t
                        : v(t.value, n);
                    case "FunctionNode":
                      if (r[t.name] && r[t.name].rawArgs) return t;
                      if (-1 === ["add", "multiply"].indexOf(t.name)) {
                        var i = t.args.map(function (t) {
                          return e(t, n);
                        });
                        if (!i.some(Nn))
                          try {
                            return m(t.name, i, n);
                          } catch (t) {}
                        return (
                          (i = i.map(function (e) {
                            return Nn(e) ? e : g(e);
                          })),
                          new u(t.name, i)
                        );
                      }
                    case "OperatorNode":
                      var a,
                        o,
                        s = t.fn.toString(),
                        c = d(t);
                      if (Mn(t) && t.isUnary())
                        o = Nn((a = [e(t.args[0], n)])[0]) ? c(a) : m(s, a, n);
                      else if (p(t))
                        if (
                          ((a = (a = h(t)).map(function (t) {
                            return e(t, n);
                          })),
                          f(s))
                        ) {
                          for (var l = [], y = [], b = 0; b < a.length; b++)
                            Nn(a[b]) ? y.push(a[b]) : l.push(a[b]);
                          l.length > 1
                            ? ((o = x(s, l, c, n)),
                              y.unshift(o),
                              (o = x(s, y, c, n)))
                            : (o = x(s, a, c, n));
                        } else o = x(s, a, c, n);
                      else
                        o = x(
                          s,
                          (a = t.args.map(function (t) {
                            return e(t, n);
                          })),
                          c,
                          n
                        );
                      return o;
                    case "ParenthesisNode":
                      return e(t.content, n);
                    case "AccessorNode":
                    case "ArrayNode":
                    case "AssignmentNode":
                    case "BlockNode":
                    case "FunctionAssignmentNode":
                    case "IndexNode":
                    case "ObjectNode":
                    case "RangeNode":
                    case "ConditionalNode":
                    default:
                      throw new Error(
                        "Unimplemented node type in simplifyConstant: ".concat(
                          t.type
                        )
                      );
                  }
                })(e, t);
                return Nn(n) ? n : g(n);
              };
            }
          ),
          Vd = Cr(
            "resolve",
            ["parse", "FunctionNode", "OperatorNode", "ParenthesisNode"],
            function (e) {
              var t = e.parse,
                n = e.FunctionNode,
                r = e.OperatorNode,
                i = e.ParenthesisNode;
              return function e(a, o) {
                if (!o) return a;
                if (kn(a)) {
                  var s = o[a.name];
                  if (Nn(s)) return e(s, o);
                  if ("number" == typeof s) return t(String(s));
                } else {
                  if (Mn(a)) {
                    var u = a.args.map(function (t) {
                      return e(t, o);
                    });
                    return new r(a.op, a.fn, u, a.implicit);
                  }
                  if (Sn(a)) return new i(e(a.content, o));
                  if (xn(a)) {
                    var c = a.args.map(function (t) {
                      return e(t, o);
                    });
                    return new n(a.name, c);
                  }
                }
                return a;
              };
            }
          );
        function $d(e) {
          return ($d =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                })(e);
        }
        var Hd = Cr(
            "simplify",
            [
              "config",
              "typed",
              "parse",
              "add",
              "subtract",
              "multiply",
              "divide",
              "pow",
              "isZero",
              "equal",
              "?fraction",
              "?bignumber",
              "mathWithTransform",
              "ConstantNode",
              "FunctionNode",
              "OperatorNode",
              "ParenthesisNode",
              "SymbolNode",
            ],
            function (e) {
              var t = e.config,
                n = e.typed,
                r = e.parse,
                i = e.add,
                a = e.subtract,
                o = e.multiply,
                s = e.divide,
                u = e.pow,
                c = e.isZero,
                l = e.equal,
                f = e.fraction,
                p = e.bignumber,
                h = e.mathWithTransform,
                d = e.ConstantNode,
                m = e.FunctionNode,
                g = e.OperatorNode,
                y = e.ParenthesisNode,
                v = e.SymbolNode,
                b = Ud({
                  typed: n,
                  config: t,
                  mathWithTransform: h,
                  fraction: f,
                  bignumber: p,
                  ConstantNode: d,
                  OperatorNode: g,
                  FunctionNode: m,
                  SymbolNode: v,
                }),
                x = Fd({
                  equal: l,
                  isZero: c,
                  add: i,
                  subtract: a,
                  multiply: o,
                  divide: s,
                  pow: u,
                  ConstantNode: d,
                  OperatorNode: g,
                  FunctionNode: m,
                  ParenthesisNode: y,
                }),
                w = Vd({
                  parse: r,
                  FunctionNode: m,
                  OperatorNode: g,
                  ParenthesisNode: y,
                }),
                N = qd({ FunctionNode: m, OperatorNode: g, SymbolNode: v }),
                E = N.isCommutative,
                M = N.isAssociative,
                S = N.flatten,
                _ = N.unflattenr,
                k = N.unflattenl,
                O = N.createMakeNodeFunction,
                A = n("simplify", {
                  string: function (e) {
                    return this(r(e), this.rules, {}, {});
                  },
                  "string, Object": function (e, t) {
                    return this(r(e), this.rules, t, {});
                  },
                  "string, Object, Object": function (e, t, n) {
                    return this(r(e), this.rules, t, n);
                  },
                  "string, Array": function (e, t) {
                    return this(r(e), t, {}, {});
                  },
                  "string, Array, Object": function (e, t, n) {
                    return this(r(e), t, n, {});
                  },
                  "string, Array, Object, Object": function (e, t, n, i) {
                    return this(r(e), t, n, i);
                  },
                  "Node, Object": function (e, t) {
                    return this(e, this.rules, t, {});
                  },
                  "Node, Object, Object": function (e, t, n) {
                    return this(e, this.rules, t, n);
                  },
                  Node: function (e) {
                    return this(e, this.rules, {}, {});
                  },
                  "Node, Array": function (e, t) {
                    return this(e, t, {}, {});
                  },
                  "Node, Array, Object": function (e, t, n) {
                    return this(e, t, n, {});
                  },
                  "Node, Array, Object, Object": function (e, t, n, i) {
                    t = (function (e) {
                      for (var t = [], n = 0; n < e.length; n++) {
                        var i = e[n],
                          a = void 0,
                          o = $d(i);
                        switch (o) {
                          case "string":
                            var s = i.split("->");
                            if (2 !== s.length)
                              throw SyntaxError("Could not parse rule: " + i);
                            i = { l: s[0], r: s[1] };
                          case "object":
                            if (
                              ((a = { l: C(r(i.l)), r: C(r(i.r)) }),
                              i.context && (a.evaluate = i.context),
                              i.evaluate && (a.evaluate = r(i.evaluate)),
                              M(a.l))
                            ) {
                              var u = O(a.l),
                                c = new v("_p" + I++);
                              (a.expanded = {}),
                                (a.expanded.l = u([a.l.clone(), c])),
                                S(a.expanded.l),
                                _(a.expanded.l),
                                (a.expanded.r = u([a.r, c]));
                            }
                            break;
                          case "function":
                            a = i;
                            break;
                          default:
                            throw TypeError("Unsupported type of rule: " + o);
                        }
                        t.push(a);
                      }
                      return t;
                    })(t);
                    for (
                      var a = w(e, n),
                        o = {},
                        s = (a = C(a)).toString({ parenthesis: "all" });
                      !o[s];

                    ) {
                      (o[s] = !0), (I = 0);
                      for (var u = 0; u < t.length; u++)
                        "function" == typeof t[u]
                          ? (a = t[u](a, i))
                          : (S(a), (a = P(a, t[u]))),
                          k(a);
                      s = a.toString({ parenthesis: "all" });
                    }
                    return a;
                  },
                });
              function C(e) {
                return e.transform(function (e, t, n) {
                  return Sn(e) ? C(e.content) : e;
                });
              }
              (A.simplifyCore = x), (A.resolve = w);
              var T = {
                true: !0,
                false: !0,
                e: !0,
                i: !0,
                Infinity: !0,
                LN2: !0,
                LN10: !0,
                LOG2E: !0,
                LOG10E: !0,
                NaN: !0,
                phi: !0,
                pi: !0,
                SQRT1_2: !0,
                SQRT2: !0,
                tau: !0,
              };
              A.rules = [
                x,
                { l: "log(e)", r: "1" },
                { l: "n-n1", r: "n+-n1" },
                { l: "-(c*v)", r: "(-c) * v" },
                { l: "-v", r: "(-1) * v" },
                { l: "n/n1^n2", r: "n*n1^-n2" },
                { l: "n/n1", r: "n*n1^-1" },
                { l: "(n ^ n1) ^ n2", r: "n ^ (n1 * n2)" },
                { l: "n*n", r: "n^2" },
                { l: "n * n^n1", r: "n^(n1+1)" },
                { l: "n^n1 * n^n2", r: "n^(n1+n2)" },
                { l: "n+n", r: "2*n" },
                { l: "n+-n", r: "0" },
                { l: "n1*n2 + n2", r: "(n1+1)*n2" },
                { l: "n1*n3 + n2*n3", r: "(n1+n2)*n3" },
                { l: "n1 + -1 * (n2 + n3)", r: "n1 + -1 * n2 + -1 * n3" },
                b,
                { l: "(-n)*n1", r: "-(n*n1)" },
                { l: "c+v", r: "v+c", context: { add: { commutative: !1 } } },
                {
                  l: "v*c",
                  r: "c*v",
                  context: { multiply: { commutative: !1 } },
                },
                { l: "n+-n1", r: "n-n1" },
                { l: "n*(n1^-1)", r: "n/n1" },
                { l: "n*n1^-n2", r: "n/n1^n2" },
                { l: "n1^-1", r: "1/n1" },
                { l: "n*(n1/n2)", r: "(n*n1)/n2" },
                { l: "n-(n1+n2)", r: "n-n1-n2" },
                { l: "1*n", r: "n" },
                { l: "n1/(n2/n3)", r: "(n1*n3)/n2" },
              ];
              var I = 0,
                P = n("applyRule", {
                  "Node, Object": function (e, t) {
                    var n = e;
                    if (n instanceof g || n instanceof m) {
                      if (n.args)
                        for (var r = 0; r < n.args.length; r++)
                          n.args[r] = P(n.args[r], t);
                    } else
                      n instanceof y &&
                        n.content &&
                        (n.content = P(n.content, t));
                    var i = t.r,
                      a = j(t.l, n)[0];
                    if (
                      (!a &&
                        t.expanded &&
                        ((i = t.expanded.r), (a = j(t.expanded.l, n)[0])),
                      a)
                    ) {
                      var o = n.implicit;
                      (n = i.clone()),
                        o && "implicit" in i && (n.implicit = !0),
                        (n = n.transform(function (e) {
                          return e.isSymbolNode && Bn(a.placeholders, e.name)
                            ? a.placeholders[e.name].clone()
                            : e;
                        }));
                    }
                    return n;
                  },
                });
              function B(e, t) {
                var n = { placeholders: {} };
                if (!e.placeholders && !t.placeholders) return n;
                if (!e.placeholders) return t;
                if (!t.placeholders) return e;
                for (var r in e.placeholders)
                  if (
                    Bn(e.placeholders, r) &&
                    ((n.placeholders[r] = e.placeholders[r]),
                    Bn(t.placeholders, r) &&
                      !R(e.placeholders[r], t.placeholders[r]))
                  )
                    return null;
                for (var i in t.placeholders)
                  Bn(t.placeholders, i) &&
                    (n.placeholders[i] = t.placeholders[i]);
                return n;
              }
              function D(e, t) {
                var n,
                  r = [];
                if (0 === e.length || 0 === t.length) return r;
                for (var i = 0; i < e.length; i++)
                  for (var a = 0; a < t.length; a++)
                    (n = B(e[i], t[a])) && r.push(n);
                return r;
              }
              function j(e, t, n) {
                var r = [{ placeholders: {} }];
                if (
                  (e instanceof g && t instanceof g) ||
                  (e instanceof m && t instanceof m)
                ) {
                  if (e instanceof g) {
                    if (e.op !== t.op || e.fn !== t.fn) return [];
                  } else if (e instanceof m && e.name !== t.name) return [];
                  if (
                    (1 !== t.args.length || 1 !== e.args.length) &&
                    M(t) &&
                    !n
                  ) {
                    if (t.args.length >= 2 && 2 === e.args.length) {
                      for (
                        var i = (function (e, t) {
                            var n,
                              r,
                              i = [],
                              a = O(e);
                            if (E(e, t))
                              for (var o = 0; o < e.args.length; o++)
                                (r = e.args.slice(0)).splice(o, 1),
                                  (n = 1 === r.length ? r[0] : a(r)),
                                  i.push(a([e.args[o], n]));
                            else
                              (n =
                                1 === (r = e.args.slice(1)).length
                                  ? r[0]
                                  : a(r)),
                                i.push(a([e.args[0], n]));
                            return i;
                          })(t, e.context),
                          a = [],
                          o = 0;
                        o < i.length;
                        o++
                      ) {
                        var s = j(e, i[o], !0);
                        a = a.concat(s);
                      }
                      return a;
                    }
                    if (e.args.length > 2)
                      throw Error(
                        "Unexpected non-binary associative function: " +
                          e.toString()
                      );
                    return [];
                  }
                  for (var u = [], c = 0; c < e.args.length; c++) {
                    var f = j(e.args[c], t.args[c]);
                    if (0 === f.length) return [];
                    u.push(f);
                  }
                  r = (function (e) {
                    if (0 === e.length) return e;
                    for (
                      var t = e.reduce(D), n = [], r = {}, i = 0;
                      i < t.length;
                      i++
                    ) {
                      var a = JSON.stringify(t[i]);
                      r[a] || ((r[a] = !0), n.push(t[i]));
                    }
                    return n;
                  })(u);
                } else if (e instanceof v) {
                  if (0 === e.name.length)
                    throw new Error("Symbol in rule has 0 length...!?");
                  if (T[e.name]) {
                    if (e.name !== t.name) return [];
                  } else if (
                    "n" === e.name[0] ||
                    "_p" === e.name.substring(0, 2)
                  )
                    r[0].placeholders[e.name] = t;
                  else if ("v" === e.name[0]) {
                    if (vn(t)) return [];
                    r[0].placeholders[e.name] = t;
                  } else {
                    if ("c" !== e.name[0])
                      throw new Error("Invalid symbol in rule: " + e.name);
                    if (!(t instanceof d)) return [];
                    r[0].placeholders[e.name] = t;
                  }
                } else {
                  if (!(e instanceof d)) return [];
                  if (!l(e.value, t.value)) return [];
                }
                return r;
              }
              function R(e, t) {
                if (e instanceof d && t instanceof d) {
                  if (!l(e.value, t.value)) return !1;
                } else if (e instanceof v && t instanceof v) {
                  if (e.name !== t.name) return !1;
                } else {
                  if (
                    !(
                      (e instanceof g && t instanceof g) ||
                      (e instanceof m && t instanceof m)
                    )
                  )
                    return !1;
                  if (e instanceof g) {
                    if (e.op !== t.op || e.fn !== t.fn) return !1;
                  } else if (e instanceof m && e.name !== t.name) return !1;
                  if (e.args.length !== t.args.length) return !1;
                  for (var n = 0; n < e.args.length; n++)
                    if (!R(e.args[n], t.args[n])) return !1;
                }
                return !0;
              }
              return A;
            }
          ),
          Wd = Cr(
            "derivative",
            [
              "typed",
              "config",
              "parse",
              "simplify",
              "equal",
              "isZero",
              "numeric",
              "ConstantNode",
              "FunctionNode",
              "OperatorNode",
              "ParenthesisNode",
              "SymbolNode",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.parse,
                i = e.simplify,
                a = e.equal,
                o = e.isZero,
                s = e.numeric,
                u = e.ConstantNode,
                c = e.FunctionNode,
                l = e.OperatorNode,
                f = e.ParenthesisNode,
                p = e.SymbolNode,
                h = t("derivative", {
                  "Node, SymbolNode, Object": function (e, t, n) {
                    var r = {};
                    m(r, e, t.name);
                    var a = g(e, r);
                    return n.simplify ? i(a) : a;
                  },
                  "Node, SymbolNode": function (e, t) {
                    return this(e, t, { simplify: !0 });
                  },
                  "string, SymbolNode": function (e, t) {
                    return this(r(e), t);
                  },
                  "string, SymbolNode, Object": function (e, t, n) {
                    return this(r(e), t, n);
                  },
                  "string, string": function (e, t) {
                    return this(r(e), r(t));
                  },
                  "string, string, Object": function (e, t, n) {
                    return this(r(e), r(t), n);
                  },
                  "Node, string": function (e, t) {
                    return this(e, r(t));
                  },
                  "Node, string, Object": function (e, t, n) {
                    return this(e, r(t), n);
                  },
                });
              (h._simplify = !0),
                (h.toTex = function (e) {
                  return d.apply(null, e.args);
                });
              var d = t("_derivTex", {
                  "Node, SymbolNode": function (e, t) {
                    return vn(e) && "string" === An(e.value)
                      ? d(r(e.value).toString(), t.toString(), 1)
                      : d(e.toString(), t.toString(), 1);
                  },
                  "Node, ConstantNode": function (e, t) {
                    if ("string" === An(t.value)) return d(e, r(t.value));
                    throw new Error(
                      "The second parameter to 'derivative' is a non-string constant"
                    );
                  },
                  "Node, SymbolNode, ConstantNode": function (e, t, n) {
                    return d(e.toString(), t.name, n.value);
                  },
                  "string, string, number": function (e, t, n) {
                    return (
                      (1 === n
                        ? "{d\\over d" + t + "}"
                        : "{d^{" + n + "}\\over d" + t + "^{" + n + "}}") +
                      "\\left[".concat(e, "\\right]")
                    );
                  },
                }),
                m = t("constTag", {
                  "Object, ConstantNode, string": function (e, t) {
                    return (e[t] = !0), !0;
                  },
                  "Object, SymbolNode, string": function (e, t, n) {
                    return t.name !== n && ((e[t] = !0), !0);
                  },
                  "Object, ParenthesisNode, string": function (e, t, n) {
                    return m(e, t.content, n);
                  },
                  "Object, FunctionAssignmentNode, string": function (e, t, n) {
                    return -1 === t.params.indexOf(n)
                      ? ((e[t] = !0), !0)
                      : m(e, t.expr, n);
                  },
                  "Object, FunctionNode | OperatorNode, string": function (
                    e,
                    t,
                    n
                  ) {
                    if (t.args.length > 0) {
                      for (
                        var r = m(e, t.args[0], n), i = 1;
                        i < t.args.length;
                        ++i
                      )
                        r = m(e, t.args[i], n) && r;
                      if (r) return (e[t] = !0), !0;
                    }
                    return !1;
                  },
                }),
                g = t("_derivative", {
                  "ConstantNode, Object": function (e) {
                    return y(0);
                  },
                  "SymbolNode, Object": function (e, t) {
                    return void 0 !== t[e] ? y(0) : y(1);
                  },
                  "ParenthesisNode, Object": function (e, t) {
                    return new f(g(e.content, t));
                  },
                  "FunctionAssignmentNode, Object": function (e, t) {
                    return void 0 !== t[e] ? y(0) : g(e.expr, t);
                  },
                  "FunctionNode, Object": function (e, t) {
                    if (
                      (1 !== e.args.length &&
                        (function (e) {
                          if (
                            ("log" !== e.name &&
                              "nthRoot" !== e.name &&
                              "pow" !== e.name) ||
                            2 !== e.args.length
                          ) {
                            for (var t = 0; t < e.args.length; ++t)
                              e.args[t] = y(0);
                            throw (
                              (e.compile().evaluate(),
                              new Error("Expected TypeError, but none found"))
                            );
                          }
                        })(e),
                      void 0 !== t[e])
                    )
                      return y(0);
                    var n,
                      r,
                      i,
                      a,
                      o = e.args[0],
                      s = !1,
                      u = !1;
                    switch (e.name) {
                      case "cbrt":
                        (s = !0),
                          (r = new l("*", "multiply", [
                            y(3),
                            new l("^", "pow", [
                              o,
                              new l("/", "divide", [y(2), y(3)]),
                            ]),
                          ]));
                        break;
                      case "sqrt":
                      case "nthRoot":
                        if (1 === e.args.length)
                          (s = !0),
                            (r = new l("*", "multiply", [
                              y(2),
                              new c("sqrt", [o]),
                            ]));
                        else if (2 === e.args.length)
                          return (
                            (t[(n = new l("/", "divide", [y(1), e.args[1]]))] =
                              t[e.args[1]]),
                            g(new l("^", "pow", [o, n]), t)
                          );
                        break;
                      case "log10":
                        n = y(10);
                      case "log":
                        if (n || 1 !== e.args.length) {
                          if (
                            (1 === e.args.length && n) ||
                            (2 === e.args.length && void 0 !== t[e.args[1]])
                          )
                            (r = new l("*", "multiply", [
                              o.clone(),
                              new c("log", [n || e.args[1]]),
                            ])),
                              (s = !0);
                          else if (2 === e.args.length)
                            return g(
                              new l("/", "divide", [
                                new c("log", [o]),
                                new c("log", [e.args[1]]),
                              ]),
                              t
                            );
                        } else (r = o.clone()), (s = !0);
                        break;
                      case "pow":
                        return (
                          (t[n] = t[e.args[1]]),
                          g(new l("^", "pow", [o, e.args[1]]), t)
                        );
                      case "exp":
                        r = new c("exp", [o.clone()]);
                        break;
                      case "sin":
                        r = new c("cos", [o.clone()]);
                        break;
                      case "cos":
                        r = new l("-", "unaryMinus", [
                          new c("sin", [o.clone()]),
                        ]);
                        break;
                      case "tan":
                        r = new l("^", "pow", [
                          new c("sec", [o.clone()]),
                          y(2),
                        ]);
                        break;
                      case "sec":
                        r = new l("*", "multiply", [
                          e,
                          new c("tan", [o.clone()]),
                        ]);
                        break;
                      case "csc":
                        (u = !0),
                          (r = new l("*", "multiply", [
                            e,
                            new c("cot", [o.clone()]),
                          ]));
                        break;
                      case "cot":
                        (u = !0),
                          (r = new l("^", "pow", [
                            new c("csc", [o.clone()]),
                            y(2),
                          ]));
                        break;
                      case "asin":
                        (s = !0),
                          (r = new c("sqrt", [
                            new l("-", "subtract", [
                              y(1),
                              new l("^", "pow", [o.clone(), y(2)]),
                            ]),
                          ]));
                        break;
                      case "acos":
                        (s = !0),
                          (u = !0),
                          (r = new c("sqrt", [
                            new l("-", "subtract", [
                              y(1),
                              new l("^", "pow", [o.clone(), y(2)]),
                            ]),
                          ]));
                        break;
                      case "atan":
                        (s = !0),
                          (r = new l("+", "add", [
                            new l("^", "pow", [o.clone(), y(2)]),
                            y(1),
                          ]));
                        break;
                      case "asec":
                        (s = !0),
                          (r = new l("*", "multiply", [
                            new c("abs", [o.clone()]),
                            new c("sqrt", [
                              new l("-", "subtract", [
                                new l("^", "pow", [o.clone(), y(2)]),
                                y(1),
                              ]),
                            ]),
                          ]));
                        break;
                      case "acsc":
                        (s = !0),
                          (u = !0),
                          (r = new l("*", "multiply", [
                            new c("abs", [o.clone()]),
                            new c("sqrt", [
                              new l("-", "subtract", [
                                new l("^", "pow", [o.clone(), y(2)]),
                                y(1),
                              ]),
                            ]),
                          ]));
                        break;
                      case "acot":
                        (s = !0),
                          (u = !0),
                          (r = new l("+", "add", [
                            new l("^", "pow", [o.clone(), y(2)]),
                            y(1),
                          ]));
                        break;
                      case "sinh":
                        r = new c("cosh", [o.clone()]);
                        break;
                      case "cosh":
                        r = new c("sinh", [o.clone()]);
                        break;
                      case "tanh":
                        r = new l("^", "pow", [
                          new c("sech", [o.clone()]),
                          y(2),
                        ]);
                        break;
                      case "sech":
                        (u = !0),
                          (r = new l("*", "multiply", [
                            e,
                            new c("tanh", [o.clone()]),
                          ]));
                        break;
                      case "csch":
                        (u = !0),
                          (r = new l("*", "multiply", [
                            e,
                            new c("coth", [o.clone()]),
                          ]));
                        break;
                      case "coth":
                        (u = !0),
                          (r = new l("^", "pow", [
                            new c("csch", [o.clone()]),
                            y(2),
                          ]));
                        break;
                      case "asinh":
                        (s = !0),
                          (r = new c("sqrt", [
                            new l("+", "add", [
                              new l("^", "pow", [o.clone(), y(2)]),
                              y(1),
                            ]),
                          ]));
                        break;
                      case "acosh":
                        (s = !0),
                          (r = new c("sqrt", [
                            new l("-", "subtract", [
                              new l("^", "pow", [o.clone(), y(2)]),
                              y(1),
                            ]),
                          ]));
                        break;
                      case "atanh":
                        (s = !0),
                          (r = new l("-", "subtract", [
                            y(1),
                            new l("^", "pow", [o.clone(), y(2)]),
                          ]));
                        break;
                      case "asech":
                        (s = !0),
                          (u = !0),
                          (r = new l("*", "multiply", [
                            o.clone(),
                            new c("sqrt", [
                              new l("-", "subtract", [
                                y(1),
                                new l("^", "pow", [o.clone(), y(2)]),
                              ]),
                            ]),
                          ]));
                        break;
                      case "acsch":
                        (s = !0),
                          (u = !0),
                          (r = new l("*", "multiply", [
                            new c("abs", [o.clone()]),
                            new c("sqrt", [
                              new l("+", "add", [
                                new l("^", "pow", [o.clone(), y(2)]),
                                y(1),
                              ]),
                            ]),
                          ]));
                        break;
                      case "acoth":
                        (s = !0),
                          (u = !0),
                          (r = new l("-", "subtract", [
                            y(1),
                            new l("^", "pow", [o.clone(), y(2)]),
                          ]));
                        break;
                      case "abs":
                        r = new l("/", "divide", [
                          new c(new p("abs"), [o.clone()]),
                          o.clone(),
                        ]);
                        break;
                      case "gamma":
                      default:
                        throw new Error(
                          'Function "' +
                            e.name +
                            '" is not supported by derivative, or a wrong number of arguments is passed'
                        );
                    }
                    s
                      ? ((i = "/"), (a = "divide"))
                      : ((i = "*"), (a = "multiply"));
                    var f = g(o, t);
                    return (
                      u && (f = new l("-", "unaryMinus", [f])),
                      new l(i, a, [f, r])
                    );
                  },
                  "OperatorNode, Object": function (e, t) {
                    if (void 0 !== t[e]) return y(0);
                    if ("+" === e.op)
                      return new l(
                        e.op,
                        e.fn,
                        e.args.map(function (e) {
                          return g(e, t);
                        })
                      );
                    if ("-" === e.op) {
                      if (e.isUnary())
                        return new l(e.op, e.fn, [g(e.args[0], t)]);
                      if (e.isBinary())
                        return new l(e.op, e.fn, [
                          g(e.args[0], t),
                          g(e.args[1], t),
                        ]);
                    }
                    if ("*" === e.op) {
                      var n = e.args.filter(function (e) {
                        return void 0 !== t[e];
                      });
                      if (n.length > 0) {
                        var r = e.args.filter(function (e) {
                            return void 0 === t[e];
                          }),
                          i = 1 === r.length ? r[0] : new l("*", "multiply", r),
                          s = n.concat(g(i, t));
                        return new l("*", "multiply", s);
                      }
                      return new l(
                        "+",
                        "add",
                        e.args.map(function (n) {
                          return new l(
                            "*",
                            "multiply",
                            e.args.map(function (e) {
                              return e === n ? g(e, t) : e.clone();
                            })
                          );
                        })
                      );
                    }
                    if ("/" === e.op && e.isBinary()) {
                      var u = e.args[0],
                        f = e.args[1];
                      return void 0 !== t[f]
                        ? new l("/", "divide", [g(u, t), f])
                        : void 0 !== t[u]
                        ? new l("*", "multiply", [
                            new l("-", "unaryMinus", [u]),
                            new l("/", "divide", [
                              g(f, t),
                              new l("^", "pow", [f.clone(), y(2)]),
                            ]),
                          ])
                        : new l("/", "divide", [
                            new l("-", "subtract", [
                              new l("*", "multiply", [g(u, t), f.clone()]),
                              new l("*", "multiply", [u.clone(), g(f, t)]),
                            ]),
                            new l("^", "pow", [f.clone(), y(2)]),
                          ]);
                    }
                    if ("^" === e.op && e.isBinary()) {
                      var p = e.args[0],
                        h = e.args[1];
                      if (void 0 !== t[p])
                        return vn(p) && (o(p.value) || a(p.value, 1))
                          ? y(0)
                          : new l("*", "multiply", [
                              e,
                              new l("*", "multiply", [
                                new c("log", [p.clone()]),
                                g(h.clone(), t),
                              ]),
                            ]);
                      if (void 0 !== t[h]) {
                        if (vn(h)) {
                          if (o(h.value)) return y(0);
                          if (a(h.value, 1)) return g(p, t);
                        }
                        var d = new l("^", "pow", [
                          p.clone(),
                          new l("-", "subtract", [h, y(1)]),
                        ]);
                        return new l("*", "multiply", [
                          h.clone(),
                          new l("*", "multiply", [g(p, t), d]),
                        ]);
                      }
                      return new l("*", "multiply", [
                        new l("^", "pow", [p.clone(), h.clone()]),
                        new l("+", "add", [
                          new l("*", "multiply", [
                            g(p, t),
                            new l("/", "divide", [h.clone(), p.clone()]),
                          ]),
                          new l("*", "multiply", [
                            g(h, t),
                            new c("log", [p.clone()]),
                          ]),
                        ]),
                      ]);
                    }
                    throw new Error(
                      'Operator "' +
                        e.op +
                        '" is not supported by derivative, or a wrong number of arguments is passed'
                    );
                  },
                });
              function y(e, t) {
                return new u(s(e, t || n.number));
              }
              return h;
            }
          ),
          Gd = "rationalize",
          Jd = Cr(
            Gd,
            [
              "config",
              "typed",
              "equal",
              "isZero",
              "add",
              "subtract",
              "multiply",
              "divide",
              "pow",
              "parse",
              "simplify",
              "?bignumber",
              "?fraction",
              "mathWithTransform",
              "ConstantNode",
              "OperatorNode",
              "FunctionNode",
              "SymbolNode",
              "ParenthesisNode",
            ],
            function (e) {
              var t = e.config,
                n = e.typed,
                r = e.equal,
                i = e.isZero,
                a = e.add,
                o = e.subtract,
                s = e.multiply,
                u = e.divide,
                c = e.pow,
                l = e.parse,
                f = e.simplify,
                p = e.fraction,
                h = e.bignumber,
                d = e.mathWithTransform,
                m = e.ConstantNode,
                g = e.OperatorNode,
                y = e.FunctionNode,
                v = e.SymbolNode,
                b = e.ParenthesisNode,
                x = Ud({
                  typed: n,
                  config: t,
                  mathWithTransform: d,
                  fraction: p,
                  bignumber: h,
                  ConstantNode: m,
                  OperatorNode: g,
                  FunctionNode: y,
                  SymbolNode: v,
                }),
                w = Fd({
                  equal: r,
                  isZero: i,
                  add: a,
                  subtract: o,
                  multiply: s,
                  divide: u,
                  pow: c,
                  ConstantNode: m,
                  OperatorNode: g,
                  FunctionNode: y,
                  ParenthesisNode: b,
                });
              return n(Gd, {
                string: function (e) {
                  return this(l(e), {}, !1);
                },
                "string, boolean": function (e, t) {
                  return this(l(e), {}, t);
                },
                "string, Object": function (e, t) {
                  return this(l(e), t, !1);
                },
                "string, Object, boolean": function (e, t, n) {
                  return this(l(e), t, n);
                },
                Node: function (e) {
                  return this(e, {}, !1);
                },
                "Node, boolean": function (e, t) {
                  return this(e, {}, t);
                },
                "Node, Object": function (e, t) {
                  return this(e, t, !1);
                },
                "Node, Object, boolean": function (e, t, n) {
                  var r = (function () {
                      var e = [
                          w,
                          { l: "n+n", r: "2*n" },
                          { l: "n+-n", r: "0" },
                          x,
                          { l: "n*(n1^-1)", r: "n/n1" },
                          { l: "n*n1^-n2", r: "n/n1^n2" },
                          { l: "n1^-1", r: "1/n1" },
                          { l: "n*(n1/n2)", r: "(n*n1)/n2" },
                          { l: "1*n", r: "n" },
                        ],
                        t = [
                          { l: "(-n1)/(-n2)", r: "n1/n2" },
                          { l: "(-n1)*(-n2)", r: "n1*n2" },
                          { l: "n1--n2", r: "n1+n2" },
                          { l: "n1-n2", r: "n1+(-n2)" },
                          { l: "(n1+n2)*n3", r: "(n1*n3 + n2*n3)" },
                          { l: "n1*(n2+n3)", r: "(n1*n2+n1*n3)" },
                          { l: "c1*n + c2*n", r: "(c1+c2)*n" },
                          { l: "c1*n + n", r: "(c1+1)*n" },
                          { l: "c1*n - c2*n", r: "(c1-c2)*n" },
                          { l: "c1*n - n", r: "(c1-1)*n" },
                          { l: "v/c", r: "(1/c)*v" },
                          { l: "v/-c", r: "-(1/c)*v" },
                          { l: "-v*-c", r: "c*v" },
                          { l: "-v*c", r: "-c*v" },
                          { l: "v*-c", r: "-c*v" },
                          { l: "v*c", r: "c*v" },
                          { l: "-(-n1*n2)", r: "(n1*n2)" },
                          { l: "-(n1*n2)", r: "(-n1*n2)" },
                          { l: "-(-n1+n2)", r: "(n1-n2)" },
                          { l: "-(n1+n2)", r: "(-n1-n2)" },
                          { l: "(n1^n2)^n3", r: "(n1^(n2*n3))" },
                          { l: "-(-n1/n2)", r: "(n1/n2)" },
                          { l: "-(n1/n2)", r: "(-n1/n2)" },
                        ],
                        n = [
                          { l: "(n1/(n2/n3))", r: "((n1*n3)/n2)" },
                          { l: "(n1/n2/n3)", r: "(n1/(n2*n3))" },
                        ],
                        r = {};
                      return (
                        (r.firstRules = e.concat(t, n)),
                        (r.distrDivRules = [
                          {
                            l: "(n1/n2 + n3/n4)",
                            r: "((n1*n4 + n3*n2)/(n2*n4))",
                          },
                          { l: "(n1/n2 + n3)", r: "((n1 + n3*n2)/n2)" },
                          { l: "(n1 + n2/n3)", r: "((n1*n3 + n2)/n3)" },
                        ]),
                        (r.sucDivRules = n),
                        (r.firstRulesAgain = e.concat(t)),
                        (r.finalRules = [
                          w,
                          { l: "n*-n", r: "-n^2" },
                          { l: "n*n", r: "n^2" },
                          x,
                          { l: "n*-n^n1", r: "-n^(n1+1)" },
                          { l: "n*n^n1", r: "n^(n1+1)" },
                          { l: "n^n1*-n^n2", r: "-n^(n1+n2)" },
                          { l: "n^n1*n^n2", r: "n^(n1+n2)" },
                          { l: "n^n1*-n", r: "-n^(n1+1)" },
                          { l: "n^n1*n", r: "n^(n1+1)" },
                          { l: "n^n1/-n", r: "-n^(n1-1)" },
                          { l: "n^n1/n", r: "n^(n1-1)" },
                          { l: "n/-n^n1", r: "-n^(1-n1)" },
                          { l: "n/n^n1", r: "n^(1-n1)" },
                          { l: "n^n1/-n^n2", r: "n^(n1-n2)" },
                          { l: "n^n1/n^n2", r: "n^(n1-n2)" },
                          { l: "n1+(-n2*n3)", r: "n1-n2*n3" },
                          { l: "v*(-c)", r: "-c*v" },
                          { l: "n1+-n2", r: "n1-n2" },
                          { l: "v*c", r: "c*v" },
                          { l: "(n1^n2)^n3", r: "(n1^(n2*n3))" },
                        ]),
                        r
                      );
                    })(),
                    i = (function (e, t, n, r) {
                      var i = [],
                        a = f(e, r, t, { exactFractions: !1 }),
                        o = "+-*" + ((n = !!n) ? "/" : "");
                      !(function e(t) {
                        var n = t.type;
                        if ("FunctionNode" === n)
                          throw new Error("There is an unsolved function call");
                        if ("OperatorNode" === n)
                          if ("^" === t.op) {
                            if (
                              "ConstantNode" !== t.args[1].type ||
                              !Ln(parseFloat(t.args[1].value))
                            )
                              throw new Error(
                                "There is a non-integer exponent"
                              );
                            e(t.args[0]);
                          } else {
                            if (-1 === o.indexOf(t.op))
                              throw new Error(
                                "Operator " +
                                  t.op +
                                  " invalid in polynomial expression"
                              );
                            for (var r = 0; r < t.args.length; r++)
                              e(t.args[r]);
                          }
                        else if ("SymbolNode" === n) {
                          var a = t.name;
                          -1 === i.indexOf(a) && i.push(a);
                        } else if ("ParenthesisNode" === n) e(t.content);
                        else if ("ConstantNode" !== n)
                          throw new Error(
                            "type " +
                              n +
                              " is not allowed in polynomial expression"
                          );
                      })(a);
                      var s = {};
                      return (s.expression = a), (s.variables = i), s;
                    })(e, t, !0, r.firstRules),
                    a = i.variables.length;
                  if (((e = i.expression), a >= 1)) {
                    var o, s;
                    e = (function e(t, n, r) {
                      var i = t.type,
                        a = arguments.length > 1;
                      if ("OperatorNode" === i && t.isBinary()) {
                        var o,
                          s = !1;
                        if (
                          ("^" === t.op &&
                            (("ParenthesisNode" !== t.args[0].type &&
                              "OperatorNode" !== t.args[0].type) ||
                              "ConstantNode" !== t.args[1].type ||
                              (s =
                                (o = parseFloat(t.args[1].value)) >= 2 &&
                                Ln(o))),
                          s)
                        ) {
                          if (o > 2) {
                            var u = t.args[0],
                              c = new g("^", "pow", [
                                t.args[0].cloneDeep(),
                                new m(o - 1),
                              ]);
                            t = new g("*", "multiply", [u, c]);
                          } else
                            t = new g("*", "multiply", [
                              t.args[0],
                              t.args[0].cloneDeep(),
                            ]);
                          a &&
                            ("content" === r
                              ? (n.content = t)
                              : (n.args[r] = t));
                        }
                      }
                      if ("ParenthesisNode" === i) e(t.content, t, "content");
                      else if ("ConstantNode" !== i && "SymbolNode" !== i)
                        for (var l = 0; l < t.args.length; l++)
                          e(t.args[l], t, l);
                      if (!a) return t;
                    })(e);
                    var u,
                      c = !0,
                      l = !1;
                    for (
                      e = f(e, r.firstRules, {}, { exactFractions: !1 });
                      (s = c ? r.distrDivRules : r.sucDivRules),
                        (c = !c),
                        (u = (e = f(e, s)).toString()) !== o;

                    )
                      (l = !0), (o = u);
                    l &&
                      (e = f(e, r.firstRulesAgain, {}, { exactFractions: !1 })),
                      (e = f(e, r.finalRules, {}, { exactFractions: !1 }));
                  }
                  var p = [],
                    h = {};
                  return (
                    "OperatorNode" === e.type && e.isBinary() && "/" === e.op
                      ? (1 === a &&
                          ((e.args[0] = N(e.args[0], p)),
                          (e.args[1] = N(e.args[1]))),
                        n &&
                          ((h.numerator = e.args[0]),
                          (h.denominator = e.args[1])))
                      : (1 === a && (e = N(e, p)),
                        n && ((h.numerator = e), (h.denominator = null))),
                    n
                      ? ((h.coefficients = p),
                        (h.variables = i.variables),
                        (h.expression = e),
                        h)
                      : e
                  );
                },
              });
              function N(e, t) {
                void 0 === t && (t = []), (t[0] = 0);
                var n = 0,
                  r = "";
                !(function e(i, a, o) {
                  var s = i.type;
                  if ("FunctionNode" === s)
                    throw new Error("There is an unsolved function call");
                  if ("OperatorNode" === s) {
                    if (-1 === "+-*^".indexOf(i.op))
                      throw new Error("Operator " + i.op + " invalid");
                    if (null !== a) {
                      if (
                        ("unaryMinus" === i.fn || "pow" === i.fn) &&
                        "add" !== a.fn &&
                        "subtract" !== a.fn &&
                        "multiply" !== a.fn
                      )
                        throw new Error("Invalid " + i.op + " placing");
                      if (
                        ("subtract" === i.fn ||
                          "add" === i.fn ||
                          "multiply" === i.fn) &&
                        "add" !== a.fn &&
                        "subtract" !== a.fn
                      )
                        throw new Error("Invalid " + i.op + " placing");
                      if (
                        ("subtract" === i.fn ||
                          "add" === i.fn ||
                          "unaryMinus" === i.fn) &&
                        0 !== o.noFil
                      )
                        throw new Error("Invalid " + i.op + " placing");
                    }
                    ("^" !== i.op && "*" !== i.op) || (o.fire = i.op);
                    for (var u = 0; u < i.args.length; u++)
                      "unaryMinus" === i.fn && (o.oper = "-"),
                        ("+" !== i.op && "subtract" !== i.fn) ||
                          ((o.fire = ""),
                          (o.cte = 1),
                          (o.oper = 0 === u ? "+" : i.op)),
                        (o.noFil = u),
                        e(i.args[u], i, o);
                  } else if ("SymbolNode" === s) {
                    if (i.name !== r && "" !== r)
                      throw new Error("There is more than one variable");
                    if (((r = i.name), null === a)) return void (t[1] = 1);
                    if ("^" === a.op && 0 !== o.noFil)
                      throw new Error(
                        "In power the variable should be the first parameter"
                      );
                    if ("*" === a.op && 1 !== o.noFil)
                      throw new Error(
                        "In multiply the variable should be the second parameter"
                      );
                    ("" !== o.fire && "*" !== o.fire) ||
                      (n < 1 && (t[1] = 0),
                      (t[1] += o.cte * ("+" === o.oper ? 1 : -1)),
                      (n = Math.max(1, n)));
                  } else {
                    if ("ConstantNode" !== s)
                      throw new Error("Type " + s + " is not allowed");
                    var c = parseFloat(i.value);
                    if (null === a) return void (t[0] = c);
                    if ("^" === a.op) {
                      if (1 !== o.noFil)
                        throw new Error("Constant cannot be powered");
                      if (!Ln(c) || c <= 0)
                        throw new Error("Non-integer exponent is not allowed");
                      for (var l = n + 1; l < c; l++) t[l] = 0;
                      return (
                        c > n && (t[c] = 0),
                        (t[c] += o.cte * ("+" === o.oper ? 1 : -1)),
                        void (n = Math.max(c, n))
                      );
                    }
                    (o.cte = c),
                      "" === o.fire &&
                        (t[0] += o.cte * ("+" === o.oper ? 1 : -1));
                  }
                })(e, null, { cte: 1, oper: "+", fire: "" });
                for (var i, a = !0, o = (n = t.length - 1); o >= 0; o--)
                  if (0 !== t[o]) {
                    var s = new m(a ? t[o] : Math.abs(t[o])),
                      u = t[o] < 0 ? "-" : "+";
                    if (o > 0) {
                      var c = new v(r);
                      if (o > 1) {
                        var l = new m(o);
                        c = new g("^", "pow", [c, l]);
                      }
                      s =
                        -1 === t[o] && a
                          ? new g("-", "unaryMinus", [c])
                          : 1 === Math.abs(t[o])
                          ? c
                          : new g("*", "multiply", [s, c]);
                    }
                    (i = a
                      ? s
                      : "+" === u
                      ? new g("+", "add", [i, s])
                      : new g("-", "subtract", [i, s])),
                      (a = !1);
                  }
                return a ? new m(0) : i;
              }
            }
          ),
          Yd = Cr("reviver", ["classes"], function (e) {
            var t = e.classes;
            return function (e, n) {
              var r = t[n && n.mathjs];
              return r && "function" == typeof r.fromJSON ? r.fromJSON(n) : n;
            };
          }),
          Zd = Cr("replacer", [], function () {
            return function (e, t) {
              return "number" != typeof t || (isFinite(t) && !isNaN(t))
                ? t
                : { mathjs: "number", value: String(t) };
            };
          }),
          Xd = Cr("true", [], function () {
            return !0;
          }),
          Kd = Cr("false", [], function () {
            return !1;
          }),
          Qd = Cr("null", [], function () {
            return null;
          }),
          em = dm("Infinity", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? new n(1 / 0) : 1 / 0;
          }),
          tm = dm("NaN", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? new n(NaN) : NaN;
          }),
          nm = dm("pi", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? df(n) : mo;
          }),
          rm = dm("tau", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? mf(n) : go;
          }),
          im = dm("e", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? pf(n) : yo;
          }),
          am = dm("phi", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? hf(n) : 1.618033988749895;
          }),
          om = dm("LN2", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? new n(2).ln() : Math.LN2;
          }),
          sm = dm("LN10", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? new n(10).ln() : Math.LN10;
          }),
          um = dm("LOG2E", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number
              ? new n(1).div(new n(2).ln())
              : Math.LOG2E;
          }),
          cm = dm("LOG10E", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number
              ? new n(1).div(new n(10).ln())
              : Math.LOG10E;
          }),
          lm = dm("SQRT1_2", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number
              ? new n("0.5").sqrt()
              : Math.SQRT1_2;
          }),
          fm = dm("SQRT2", ["config", "?BigNumber"], function (e) {
            var t = e.config,
              n = e.BigNumber;
            return "BigNumber" === t.number ? new n(2).sqrt() : Math.SQRT2;
          }),
          pm = dm("i", ["Complex"], function (e) {
            return e.Complex.I;
          }),
          hm = Cr("version", [], function () {
            return "7.3.0";
          });
        function dm(e, t, n) {
          return Cr(e, t, n, { recreateOnConfigChange: !0 });
        }
        var mm = fg("speedOfLight", "299792458", "m s^-1"),
          gm = fg("gravitationConstant", "6.67430e-11", "m^3 kg^-1 s^-2"),
          ym = fg("planckConstant", "6.62607015e-34", "J s"),
          vm = fg("reducedPlanckConstant", "1.0545718176461565e-34", "J s"),
          bm = fg("magneticConstant", "1.25663706212e-6", "N A^-2"),
          xm = fg("electricConstant", "8.8541878128e-12", "F m^-1"),
          wm = fg("vacuumImpedance", "376.730313667", "ohm"),
          Nm = fg("coulomb", "8.987551792261171e9", "N m^2 C^-2"),
          Em = fg("elementaryCharge", "1.602176634e-19", "C"),
          Mm = fg("bohrMagneton", "9.2740100783e-24", "J T^-1"),
          Sm = fg("conductanceQuantum", "7.748091729863649e-5", "S"),
          _m = fg("inverseConductanceQuantum", "12906.403729652257", "ohm"),
          km = fg("magneticFluxQuantum", "2.0678338484619295e-15", "Wb"),
          Om = fg("nuclearMagneton", "5.0507837461e-27", "J T^-1"),
          Am = fg("klitzing", "25812.807459304513", "ohm"),
          Cm = fg("bohrRadius", "5.29177210903e-11", "m"),
          Tm = fg("classicalElectronRadius", "2.8179403262e-15", "m"),
          Im = fg("electronMass", "9.1093837015e-31", "kg"),
          Pm = fg("fermiCoupling", "1.1663787e-5", "GeV^-2"),
          Bm = pg("fineStructure", 0.0072973525693),
          Dm = fg("hartreeEnergy", "4.3597447222071e-18", "J"),
          jm = fg("protonMass", "1.67262192369e-27", "kg"),
          Rm = fg("deuteronMass", "3.3435830926e-27", "kg"),
          Lm = fg("neutronMass", "1.6749271613e-27", "kg"),
          zm = fg("quantumOfCirculation", "3.6369475516e-4", "m^2 s^-1"),
          qm = fg("rydberg", "10973731.568160", "m^-1"),
          Fm = fg("thomsonCrossSection", "6.6524587321e-29", "m^2"),
          Um = pg("weakMixingAngle", 0.2229),
          Vm = pg("efimovFactor", 22.7),
          $m = fg("atomicMass", "1.66053906660e-27", "kg"),
          Hm = fg("avogadro", "6.02214076e23", "mol^-1"),
          Wm = fg("boltzmann", "1.380649e-23", "J K^-1"),
          Gm = fg("faraday", "96485.33212331001", "C mol^-1"),
          Jm = fg("firstRadiation", "3.7417718521927573e-16", "W m^2"),
          Ym = fg("loschmidt", "2.686780111798444e25", "m^-3"),
          Zm = fg("gasConstant", "8.31446261815324", "J K^-1 mol^-1"),
          Xm = fg("molarPlanckConstant", "3.990312712893431e-10", "J s mol^-1"),
          Km = fg("molarVolume", "0.022413969545014137", "m^3 mol^-1"),
          Qm = pg("sackurTetrode", -1.16487052358),
          eg = fg("secondRadiation", "0.014387768775039337", "m K"),
          tg = fg("stefanBoltzmann", "5.67037441918443e-8", "W m^-2 K^-4"),
          ng = fg("wienDisplacement", "2.897771955e-3", "m K"),
          rg = fg("molarMass", "0.99999999965e-3", "kg mol^-1"),
          ig = fg("molarMassC12", "11.9999999958e-3", "kg mol^-1"),
          ag = fg("gravity", "9.80665", "m s^-2"),
          og = fg("planckLength", "1.616255e-35", "m"),
          sg = fg("planckMass", "2.176435e-8", "kg"),
          ug = fg("planckTime", "5.391245e-44", "s"),
          cg = fg("planckCharge", "1.87554603778e-18", "C"),
          lg = fg("planckTemperature", "1.416785e+32", "K");
        function fg(e, t, n) {
          return Cr(e, ["config", "Unit", "BigNumber"], function (e) {
            var r = e.config,
              i = e.Unit,
              a = e.BigNumber,
              o = new i("BigNumber" === r.number ? new a(t) : parseFloat(t), n);
            return (o.fixPrefix = !0), o;
          });
        }
        function pg(e, t) {
          return Cr(e, ["config", "BigNumber"], function (e) {
            var n = e.config,
              r = e.BigNumber;
            return "BigNumber" === n.number ? new r(t) : t;
          });
        }
        var hg = Cr(
            "apply",
            ["typed", "isInteger"],
            function (e) {
              var t = e.typed,
                n = e.isInteger,
                r = Ms({ typed: t, isInteger: n });
              return t("apply", {
                "...any": function (e) {
                  var t = e[1];
                  $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  try {
                    return r.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          dg = Cr(
            "column",
            ["typed", "Index", "matrix", "range"],
            function (e) {
              var t = e.typed,
                n = e.Index,
                r = e.matrix,
                i = e.range,
                a = Bu({ typed: t, Index: n, matrix: r, range: i });
              return t("column", {
                "...any": function (e) {
                  var t = e.length - 1,
                    n = e[t];
                  $t(n) && (e[t] = n - 1);
                  try {
                    return a.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          );
        function mg(e, t, n) {
          var r = e.filter(function (e) {
            return kn(e) && !(e.name in t) && !(e.name in n);
          })[0];
          if (!r)
            throw new Error(
              'No undefined variable found in inline expression "' + e + '"'
            );
          var i = r.name,
            a = Object.create(n),
            o = e.compile();
          return function (e) {
            return (a[i] = e), o.evaluate(a);
          };
        }
        var gg = Cr(
          "filter",
          ["typed"],
          function (e) {
            var t = e.typed;
            function n(e, t, n) {
              var i, a;
              return (
                e[0] && (i = e[0].compile().evaluate(n)),
                e[1] &&
                  (a =
                    kn(e[1]) || bn(e[1])
                      ? e[1].compile().evaluate(n)
                      : mg(e[1], t, n)),
                r(i, a)
              );
            }
            n.rawArgs = !0;
            var r = t("filter", {
              "Array, function": yg,
              "Matrix, function": function (e, t) {
                return e.create(yg(e.toArray(), t));
              },
              "Array, RegExp": Sr,
              "Matrix, RegExp": function (e, t) {
                return e.create(Sr(e.toArray(), t));
              },
            });
            return n;
          },
          { isTransformFunction: !0 }
        );
        function yg(e, t) {
          var n = zu(t);
          return Mr(e, function (e, r, i) {
            return 1 === n ? t(e) : 2 === n ? t(e, [r + 1]) : t(e, [r + 1], i);
          });
        }
        var vg = Cr(
            "forEach",
            ["typed"],
            function (e) {
              var t = e.typed;
              function n(e, t, n) {
                var i, a;
                return (
                  e[0] && (i = e[0].compile().evaluate(n)),
                  e[1] &&
                    (a =
                      kn(e[1]) || bn(e[1])
                        ? e[1].compile().evaluate(n)
                        : mg(e[1], t, n)),
                  r(i, a)
                );
              }
              n.rawArgs = !0;
              var r = t("forEach", {
                "Array | Matrix, function": function (e, t) {
                  var n = zu(t);
                  !(function r(i, a) {
                    Array.isArray(i)
                      ? Er(i, function (e, t) {
                          r(e, a.concat(t + 1));
                        })
                      : 1 === n
                      ? t(i)
                      : 2 === n
                      ? t(i, a)
                      : t(i, a, e);
                  })(e.valueOf(), []);
                },
              });
              return n;
            },
            { isTransformFunction: !0 }
          ),
          bg = Cr(
            "index",
            ["Index"],
            function (e) {
              var t = e.Index;
              return function () {
                for (var e = [], n = 0, r = arguments.length; n < r; n++) {
                  var i = arguments[n];
                  if (tn(i)) i.start--, (i.end -= i.step > 0 ? 0 : 2);
                  else if (i && !0 === i.isSet)
                    i = i.map(function (e) {
                      return e - 1;
                    });
                  else if (Zt(i) || Xt(i))
                    i = i.map(function (e) {
                      return e - 1;
                    });
                  else if ($t(i)) i--;
                  else if (Ht(i)) i = i.toNumber() - 1;
                  else if ("string" != typeof i)
                    throw new TypeError(
                      "Dimension must be an Array, Matrix, number, string, or Range"
                    );
                  e[n] = i;
                }
                var a = new t();
                return t.apply(a, e), a;
              };
            },
            { isTransformFunction: !0 }
          ),
          xg = Cr(
            "map",
            ["typed"],
            function (e) {
              var t = e.typed;
              function n(e, t, n) {
                var i, a;
                return (
                  e[0] && (i = e[0].compile().evaluate(n)),
                  e[1] &&
                    (a =
                      kn(e[1]) || bn(e[1])
                        ? e[1].compile().evaluate(n)
                        : mg(e[1], t, n)),
                  r(i, a)
                );
              }
              n.rawArgs = !0;
              var r = t("map", {
                "Array, function": function (e, t) {
                  return wg(e, t, e);
                },
                "Matrix, function": function (e, t) {
                  return e.create(wg(e.valueOf(), t, e));
                },
              });
              return n;
            },
            { isTransformFunction: !0 }
          );
        function wg(e, t, n) {
          var r = zu(t);
          return (function e(i, a) {
            return Array.isArray(i)
              ? Nr(i, function (t, n) {
                  return e(t, a.concat(n + 1));
                })
              : 1 === r
              ? t(i)
              : 2 === r
              ? t(i, a)
              : t(i, a, n);
          })(e, []);
        }
        var Ng = Cr(
            "max",
            ["typed", "config", "numeric", "larger"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.numeric,
                i = e.larger,
                a = of({ typed: t, config: n, numeric: r, larger: i });
              return t("max", {
                "...any": function (e) {
                  if (2 === e.length && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return a.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Eg = Cr(
            "mean",
            ["typed", "add", "divide"],
            function (e) {
              var t = e.typed,
                n = e.add,
                r = e.divide,
                i = ed({ typed: t, add: n, divide: r });
              return t("mean", {
                "...any": function (e) {
                  if (2 === e.length && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return i.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Mg = Cr(
            "min",
            ["typed", "config", "numeric", "smaller"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.numeric,
                i = e.smaller,
                a = sf({ typed: t, config: n, numeric: r, smaller: i });
              return t("min", {
                "...any": function (e) {
                  if (2 === e.length && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return a.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Sg = Cr(
            "range",
            [
              "typed",
              "config",
              "?matrix",
              "?bignumber",
              "smaller",
              "smallerEq",
              "larger",
              "largerEq",
            ],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.matrix,
                i = e.bignumber,
                a = e.smaller,
                o = e.smallerEq,
                s = e.larger,
                u = e.largerEq,
                c = ac({
                  typed: t,
                  config: n,
                  matrix: r,
                  bignumber: i,
                  smaller: a,
                  smallerEq: o,
                  larger: s,
                  largerEq: u,
                });
              return t("range", {
                "...any": function (e) {
                  return (
                    "boolean" != typeof e[e.length - 1] && e.push(!0),
                    c.apply(null, e)
                  );
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          _g = Cr(
            "row",
            ["typed", "Index", "matrix", "range"],
            function (e) {
              var t = e.typed,
                n = e.Index,
                r = e.matrix,
                i = e.range,
                a = lc({ typed: t, Index: n, matrix: r, range: i });
              return t("row", {
                "...any": function (e) {
                  var t = e.length - 1,
                    n = e[t];
                  $t(n) && (e[t] = n - 1);
                  try {
                    return a.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          kg = Cr(
            "subset",
            ["typed", "matrix"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = Nc({ typed: t, matrix: n });
              return t("subset", {
                "...any": function (e) {
                  try {
                    return r.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Og = Cr(
            "concat",
            ["typed", "matrix", "isInteger"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.isInteger,
                i = Iu({ typed: t, matrix: n, isInteger: r });
              return t("concat", {
                "...any": function (e) {
                  var t = e.length - 1,
                    n = e[t];
                  $t(n) ? (e[t] = n - 1) : Ht(n) && (e[t] = n.minus(1));
                  try {
                    return i.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Ag = Cr(
            "diff",
            ["typed", "matrix", "subtract", "number", "bignumber"],
            function (e) {
              var t = e.typed,
                n = e.matrix,
                r = e.subtract,
                i = e.number,
                a = e.bignumber,
                o = ec({
                  typed: t,
                  matrix: n,
                  subtract: r,
                  number: i,
                  bignumber: a,
                });
              return t("diff", {
                "...any": function (e) {
                  if (2 === e.length && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return o.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Cg = Cr(
            "std",
            ["typed", "sqrt", "variance"],
            function (e) {
              var t = e.typed,
                n = e.sqrt,
                r = e.variance,
                i = sd({ typed: t, sqrt: n, variance: r });
              return t("std", {
                "...any": function (e) {
                  if (e.length >= 2 && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return i.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Tg = Cr(
            "sum",
            ["typed", "config", "add", "numeric"],
            function (e) {
              var t = e.typed,
                n = e.config,
                r = e.add,
                i = e.numeric,
                a = Qh({ typed: t, config: n, add: r, numeric: i });
              return t("sum", {
                "...any": function (e) {
                  if (2 === e.length && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return a.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Ig = "variance",
          Pg = Cr(
            Ig,
            [
              "typed",
              "add",
              "subtract",
              "multiply",
              "divide",
              "apply",
              "isNaN",
            ],
            function (e) {
              var t = e.typed,
                n = e.add,
                r = e.subtract,
                i = e.multiply,
                a = e.divide,
                o = e.apply,
                s = e.isNaN,
                u = ad({
                  typed: t,
                  add: n,
                  subtract: r,
                  multiply: i,
                  divide: a,
                  apply: o,
                  isNaN: s,
                });
              return t(Ig, {
                "...any": function (e) {
                  if (e.length >= 2 && Kt(e[0])) {
                    var t = e[1];
                    $t(t) ? (e[1] = t - 1) : Ht(t) && (e[1] = t.minus(1));
                  }
                  try {
                    return u.apply(null, e);
                  } catch (e) {
                    throw kp(e);
                  }
                },
              });
            },
            { isTransformFunction: !0 }
          ),
          Bg = zr({}),
          Dg = ba({}),
          jg = Na({}),
          Rg = Kd({}),
          Lg = Qd({}),
          zg = Xd({}),
          qg = ga({ config: jn }),
          Fg = Ea({}),
          Ug = Zd({}),
          Vg = pm({ Complex: Dg }),
          $g = sm({ BigNumber: qg, config: jn }),
          Hg = cm({ BigNumber: qg, config: jn }),
          Wg = tm({ BigNumber: qg, config: jn }),
          Gg = nm({ BigNumber: qg, config: jn }),
          Jg = lm({ BigNumber: qg, config: jn }),
          Yg = rm({ BigNumber: qg, config: jn }),
          Zg = Vm({ BigNumber: qg, config: jn }),
          Xg = Bm({ BigNumber: qg, config: jn }),
          Kg = Qm({ BigNumber: qg, config: jn }),
          Qg = Um({ BigNumber: qg, config: jn }),
          ey = wa({}),
          ty = im({ BigNumber: qg, config: jn }),
          ny = em({ BigNumber: qg, config: jn }),
          ry = um({ BigNumber: qg, config: jn }),
          iy = hm({}),
          ay = Ma({ Matrix: Fg }),
          oy = am({ BigNumber: qg, config: jn }),
          sy = Pr({
            BigNumber: qg,
            Complex: Dg,
            DenseMatrix: ay,
            Fraction: ey,
          }),
          uy = Pa({ typed: sy }),
          cy = Xo({ typed: sy }),
          ly = ts({ typed: sy }),
          fy = rs({ typed: sy }),
          py = ss({ config: jn, typed: sy }),
          hy = cs({ typed: sy }),
          dy = ps({ typed: sy }),
          my = ds({ Complex: Dg, typed: sy }),
          gy = vs({ typed: sy }),
          yy = Ns({ BigNumber: qg, config: jn, typed: sy }),
          vy = Ms({ isInteger: uy, typed: sy }),
          by = Cs({ typed: sy }),
          xy = Is({ Complex: Dg, typed: sy }),
          wy = Hs({ Complex: Dg, config: jn, typed: sy }),
          Ny = Xs({ typed: sy }),
          Ey = nu({ BigNumber: qg, Fraction: ey, complex: my, typed: sy }),
          My = iu({ typed: sy }),
          Sy = wu({ typed: sy }),
          _y = Su({ typed: sy }),
          ky = ku({ typed: sy }),
          Oy = Au({ typed: sy }),
          Ay = qu({ typed: sy }),
          Cy = Hu({ typed: sy }),
          Ty = Ku({ typed: sy }),
          Iy = Tc({ typed: sy }),
          Py = qc({ typed: sy }),
          By = Hc({ typed: sy }),
          Dy = Gc({ typed: sy }),
          jy = Xc({ typed: sy }),
          Ry = kf({ Complex: Dg, config: jn, typed: sy }),
          Ly = Af({ BigNumber: qg, typed: sy }),
          zy = Tf({ BigNumber: qg, Complex: Dg, config: jn, typed: sy }),
          qy = Pf({ BigNumber: qg, Complex: Dg, config: jn, typed: sy }),
          Fy = Df({ Complex: Dg, config: jn, typed: sy }),
          Uy = Rf({ typed: sy }),
          Vy = zf({ Complex: Dg, config: jn, typed: sy }),
          $y = Ff({ typed: sy }),
          Hy = Vf({ BigNumber: qg, typed: sy }),
          Wy = Hf({ BigNumber: qg, typed: sy }),
          Gy = Gf({ BigNumber: qg, typed: sy }),
          Jy = Yf({ typed: sy }),
          Yy = Xf({ typed: sy }),
          Zy = cd({ typed: sy }),
          Xy = kd({ config: jn, typed: sy }),
          Ky = Td({ config: jn, typed: sy }),
          Qy = om({ BigNumber: qg, config: jn }),
          ev = Sa({ typed: sy }),
          tv = Qo({ isNumeric: cy, typed: sy }),
          nv = is({ typed: sy }),
          rv = ls({ typed: sy }),
          iv = ms({ Fraction: ey, typed: sy }),
          av = xs({ typed: sy }),
          ov = ks({ typed: sy }),
          sv = Ts({ typed: sy }),
          uv = Ws({ Complex: Dg, config: jn, typed: sy }),
          cv = ru({ Complex: Dg, config: jn, typed: sy }),
          lv = _u({ typed: sy }),
          fv = Ju({ typed: sy }),
          pv = Rc({ isNaN: fy, isNumeric: cy, typed: sy }),
          hv = $c({ typed: sy }),
          dv = Of({ Complex: Dg, config: jn, typed: sy }),
          mv = If({ BigNumber: qg, typed: sy }),
          gv = jf({ typed: sy }),
          yv = qf({ typed: sy }),
          vv = $f({ BigNumber: qg, typed: sy }),
          bv = Jf({ typed: sy }),
          xv = pd({ typed: sy }),
          wv = Ad({ config: jn, typed: sy }),
          Nv = fm({ BigNumber: qg, config: jn }),
          Ev = Yo({ typed: sy }),
          Mv = us({ Matrix: Fg, equalScalar: py, typed: sy }),
          Sv = gs({ DenseMatrix: ay, Matrix: Fg, SparseMatrix: Mv, typed: sy }),
          _v = Os({
            BigNumber: qg,
            Complex: Dg,
            Fraction: ey,
            config: jn,
            isNegative: Ev,
            matrix: Sv,
            typed: sy,
            unaryMinus: av,
          }),
          kv = qs({
            BigNumber: qg,
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
          }),
          Ov = Zs({ DenseMatrix: ay, equalScalar: py, matrix: Sv, typed: sy }),
          Av = tu({ BigNumber: qg, equalScalar: py, matrix: Sv, typed: sy }),
          Cv = uu({ BigNumber: qg, config: jn, matrix: Sv, typed: sy }),
          Tv = xu({ equalScalar: py, matrix: Sv, typed: sy }),
          Iv = Mu({ DenseMatrix: ay, matrix: Sv, typed: sy }),
          Pv = Cu({ DenseMatrix: ay, equalScalar: py, matrix: Sv, typed: sy }),
          Bv = Iu({ isInteger: uy, matrix: Sv, typed: sy }),
          Dv = ju({ DenseMatrix: ay, SparseMatrix: Mv, matrix: Sv, typed: sy }),
          jv = Zu({
            BigNumber: qg,
            DenseMatrix: ay,
            SparseMatrix: Mv,
            config: jn,
            matrix: Sv,
            typed: sy,
          }),
          Rv = tc({ BigNumber: qg, config: jn, matrix: Sv, typed: sy }),
          Lv = sc({ isInteger: uy, matrix: Sv, typed: sy }),
          zv = fc({ matrix: Sv, config: jn, typed: sy }),
          qv = Nc({ matrix: Sv, typed: sy }),
          Fv = Cc({ BigNumber: qg, config: jn, matrix: Sv, typed: sy }),
          Uv = Wc({ typed: sy }),
          Vv = ol({
            BigNumber: qg,
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
            zeros: Fv,
          }),
          $v = Ol({
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
            zeros: Fv,
          }),
          Hv = Il({
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
            zeros: Fv,
          }),
          Wv = Dl({
            BigNumber: qg,
            DenseMatrix: ay,
            Fraction: ey,
            config: jn,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
          }),
          Gv = ql({ matrix: Sv, typed: sy }),
          Jv = Wl({ DenseMatrix: ay, config: jn, matrix: Sv, typed: sy }),
          Yv = Yl({ DenseMatrix: ay, config: jn, matrix: Sv, typed: sy }),
          Zv = tf({
            DenseMatrix: ay,
            config: jn,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
          }),
          Xv = uf({ DenseMatrix: ay, smaller: Jv }),
          Kv = lf({ larger: Yv, smaller: Jv }),
          Qv = Mf({ SparseMatrix: Mv, typed: sy }),
          eb = Cf({ BigNumber: qg, Complex: Dg, config: jn, typed: sy }),
          tb = Lf({
            BigNumber: qg,
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
          }),
          nb = Wf({ BigNumber: qg, typed: sy }),
          rb = vp({
            DenseMatrix: ay,
            SparseMatrix: Mv,
            addScalar: ov,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
          }),
          ib = wp({
            addScalar: ov,
            conj: lv,
            multiplyScalar: Ny,
            size: zv,
            typed: sy,
          }),
          ab = zd({
            addScalar: ov,
            combinations: Zy,
            isInteger: uy,
            isNegative: Ev,
            isPositive: ly,
            larger: Yv,
            typed: sy,
          }),
          ob = ns({ typed: sy }),
          sb = Es({ typed: sy }),
          ub = Bs({ config: jn, round: Vv, typed: sy }),
          cb = Qs({
            addScalar: ov,
            dot: ib,
            equalScalar: py,
            matrix: Sv,
            multiplyScalar: Ny,
            typed: sy,
          }),
          lb = fu({
            equalScalar: py,
            matrix: Sv,
            multiplyScalar: Ny,
            typed: sy,
          }),
          fb = Ou({ typed: sy }),
          pb = Vu({ matrix: Sv, typed: sy }),
          hb = cc({ config: jn, matrix: Sv }),
          db = hc({ matrix: Sv, typed: sy }),
          mb = Yc({ matrix: Sv, typed: sy }),
          gb = tl({
            Complex: Dg,
            config: jn,
            fraction: iv,
            identity: jv,
            matrix: Sv,
            multiply: cb,
            number: hy,
            typed: sy,
          }),
          yb = pl({
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            pow: gb,
            typed: sy,
          }),
          vb = Cl({
            DenseMatrix: ay,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
            zeros: Fv,
          }),
          bb = Ll({ compare: Wv, typed: sy }),
          xb = $l({ compareText: Gv, isZero: ob, typed: sy }),
          wb = Xl({ DenseMatrix: ay, config: jn, matrix: Sv, typed: sy }),
          Nb = rf({ compare: Wv, isNaN: fy, isNumeric: cy, typed: sy }),
          Eb = cf({ ImmutableDenseMatrix: Xv }),
          Mb = Bf({ BigNumber: qg, Complex: Dg, config: jn, typed: sy }),
          Sb = Zf({ typed: sy }),
          _b = tp({
            DenseMatrix: ay,
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          kb = ap({
            DenseMatrix: ay,
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          Ob = cp({
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          Ab = hp({ compareNatural: bb, typed: sy }),
          Cb = Np({ add: rb, matrix: Sv, typed: sy }),
          Tb = od({
            add: rb,
            compare: Wv,
            multiply: cb,
            partitionSelect: Nb,
            typed: sy,
          }),
          Ib = dd({
            BigNumber: qg,
            Complex: Dg,
            config: jn,
            multiplyScalar: Ny,
            pow: gb,
            typed: sy,
          }),
          Pb = hs({ BigNumber: qg, typed: sy }),
          Bb = $s({ equalScalar: py, matrix: Sv, typed: sy }),
          Db = Nu({ DenseMatrix: ay, equalScalar: py, matrix: Sv, typed: sy }),
          jb = Xu({ matrix: Sv, multiplyScalar: Ny, typed: sy }),
          Rb = kc({ matrix: Sv, typed: sy }),
          Lb = Kc({ bignumber: Pb, fraction: iv, number: hy }),
          zb = Pl({
            equalScalar: py,
            matrix: Sv,
            not: Oy,
            typed: sy,
            zeros: Fv,
          }),
          qb = Jl({ DenseMatrix: ay, config: jn, matrix: Sv, typed: sy }),
          Fb = af({ compare: Wv, compareNatural: bb, matrix: Sv, typed: sy }),
          Ub = sf({ config: jn, numeric: Lb, smaller: Jv, typed: sy }),
          Vb = Uf({ BigNumber: qg, typed: sy }),
          $b = rp({
            DenseMatrix: ay,
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          Hb = fp({
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          Wb = Ep({ Index: Eb, typed: sy }),
          Gb = Qh({ add: rb, config: jn, numeric: Lb, typed: sy }),
          Jb = gd({ gamma: Ib, typed: sy }),
          Yb = Nd({ factorial: Jb, typed: sy }),
          Zb = As({ config: jn, round: Vv, typed: sy }),
          Xb = ou({
            DenseMatrix: ay,
            addScalar: ov,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
            unaryMinus: av,
          }),
          Kb = Du({ matrix: Sv, multiply: cb, subtract: Xb, typed: sy }),
          Qb = ac({
            bignumber: Pb,
            matrix: Sv,
            config: jn,
            larger: Yv,
            largerEq: wb,
            smaller: Jv,
            smallerEq: qb,
            typed: sy,
          }),
          ex = Ac({ conj: lv, transpose: Rb, typed: sy }),
          tx = el({ numeric: Lb, typed: sy }),
          nx = fl({ Complex: Dg, config: jn, divideScalar: tx, typed: sy }),
          rx = gl({
            DenseMatrix: ay,
            divideScalar: tx,
            equalScalar: py,
            matrix: Sv,
            multiplyScalar: Ny,
            subtract: Xb,
            typed: sy,
          }),
          ix = wl({
            DenseMatrix: ay,
            divideScalar: tx,
            equalScalar: py,
            matrix: Sv,
            multiplyScalar: Ny,
            subtract: Xb,
            typed: sy,
          }),
          ax = Ul({ DenseMatrix: ay, equalScalar: py, matrix: Sv, typed: sy }),
          ox = of({ config: jn, larger: Yv, numeric: Lb, typed: sy }),
          sx = Qf({
            DenseMatrix: ay,
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          ux = mp({
            Index: Eb,
            concat: Bv,
            setDifference: _b,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          cx = bp({
            abs: sb,
            addScalar: ov,
            divideScalar: tx,
            isPositive: ly,
            multiplyScalar: Ny,
            smaller: Jv,
            sqrt: cv,
            typed: sy,
          }),
          lx = xh({
            addScalar: ov,
            complex: my,
            conj: lv,
            divideScalar: tx,
            equal: ax,
            identity: jv,
            isZero: ob,
            matrix: Sv,
            multiplyScalar: Ny,
            sign: Ey,
            sqrt: cv,
            subtract: Xb,
            typed: sy,
            unaryMinus: av,
            zeros: Fv,
          }),
          fx = Xh({
            abs: sb,
            addScalar: ov,
            divideScalar: tx,
            multiplyScalar: Ny,
            sqrt: cv,
            subtract: Xb,
            typed: sy,
            unaryMinus: av,
          }),
          px = Pd({
            addScalar: ov,
            combinations: Zy,
            divideScalar: tx,
            factorial: Jb,
            isInteger: uy,
            isNegative: Ev,
            larger: Yv,
            multiplyScalar: Ny,
            pow: gb,
            subtract: Xb,
            typed: sy,
          }),
          hx = Rd({
            addScalar: ov,
            combinations: Zy,
            divideScalar: tx,
            isInteger: uy,
            isNegative: Ev,
            multiplyScalar: Ny,
            typed: sy,
          }),
          dx = Ps({ Complex: Dg, ceil: Zb, floor: ub, typed: sy }),
          mx = Bu({ Index: Eb, matrix: Sv, range: Qb, typed: sy }),
          gx = lc({ Index: Eb, matrix: Sv, range: Qb, typed: sy }),
          yx = ul({ Complex: Dg, config: jn, divideScalar: tx, typed: sy }),
          vx = dl({
            DenseMatrix: ay,
            divideScalar: tx,
            equalScalar: py,
            matrix: Sv,
            typed: sy,
          }),
          bx = Sl({
            DenseMatrix: ay,
            divideScalar: tx,
            equalScalar: py,
            matrix: Sv,
            multiplyScalar: Ny,
            subtract: Xb,
            typed: sy,
          }),
          xx = ff({ FibonacciHeap: Kv, addScalar: ov, equalScalar: py }),
          wx = sp({
            Index: Eb,
            compareNatural: bb,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          Nx = vh({
            DenseMatrix: ay,
            Spa: xx,
            SparseMatrix: Mv,
            abs: sb,
            addScalar: ov,
            divideScalar: tx,
            equalScalar: py,
            larger: Yv,
            matrix: Sv,
            multiplyScalar: Ny,
            subtract: Xb,
            typed: sy,
            unaryMinus: av,
          }),
          Ex = $h({
            lup: Nx,
            matrix: Sv,
            multiply: cb,
            subtract: Xb,
            typed: sy,
            unaryMinus: av,
          }),
          Mx = Kh({
            abs: sb,
            add: rb,
            addScalar: ov,
            config: jn,
            divideScalar: tx,
            equalScalar: py,
            matrix: Sv,
            multiply: cb,
            multiplyScalar: Ny,
            smaller: Jv,
            subtract: Xb,
            typed: sy,
          }),
          Sx = Dd({
            addScalar: ov,
            isInteger: uy,
            isNegative: Ev,
            stirlingS2: px,
            typed: sy,
          }),
          _x = Tu({ DenseMatrix: ay, matrix: Sv, typed: sy }),
          kx = zc({ config: jn, multiplyScalar: Ny, numeric: Lb, typed: sy }),
          Ox = yl({
            DenseMatrix: ay,
            divideScalar: tx,
            equalScalar: py,
            matrix: Sv,
            multiplyScalar: Ny,
            subtract: Xb,
            typed: sy,
          }),
          Ax = Nf({
            BigNumber: qg,
            Complex: Dg,
            Fraction: ey,
            abs: sb,
            addScalar: ov,
            config: jn,
            divideScalar: tx,
            equal: ax,
            fix: dx,
            format: Py,
            isNumeric: cy,
            multiplyScalar: Ny,
            number: hy,
            pow: gb,
            round: Vv,
            subtract: Xb,
          }),
          Cx = _f({ Unit: Ax, typed: sy }),
          Tx = Ph({
            SparseMatrix: Mv,
            abs: sb,
            add: rb,
            divideScalar: tx,
            larger: Yv,
            largerEq: wb,
            multiply: cb,
            subtract: Xb,
            transpose: Rb,
            typed: sy,
          }),
          Ix = Hh({
            abs: sb,
            addScalar: ov,
            det: Ex,
            divideScalar: tx,
            identity: jv,
            matrix: Sv,
            multiply: cb,
            typed: sy,
            unaryMinus: av,
          }),
          Px = Gh({
            abs: sb,
            add: rb,
            identity: jv,
            inv: Ix,
            multiply: cb,
            typed: sy,
          }),
          Bx = Yh({
            divideScalar: tx,
            equalScalar: py,
            inv: Ix,
            matrix: Sv,
            multiply: cb,
            typed: sy,
          }),
          Dx = td({
            add: rb,
            compare: Wv,
            divide: Bx,
            partitionSelect: Nb,
            typed: sy,
          }),
          jx = ad({
            add: rb,
            apply: vy,
            divide: Bx,
            isNaN: fy,
            multiply: cb,
            subtract: Xb,
            typed: sy,
          }),
          Rx = vd({
            divide: Bx,
            dotDivide: vx,
            isNumeric: cy,
            log: yx,
            matrix: Sv,
            multiply: cb,
            sum: Gb,
            typed: sy,
          }),
          Lx = $m({ BigNumber: qg, Unit: Ax, config: jn }),
          zx = Mm({ BigNumber: qg, Unit: Ax, config: jn }),
          qx = Wm({ BigNumber: qg, Unit: Ax, config: jn }),
          Fx = Sm({ BigNumber: qg, Unit: Ax, config: jn }),
          Ux = Rm({ BigNumber: qg, Unit: Ax, config: jn }),
          Vx = Im({ BigNumber: qg, Unit: Ax, config: jn }),
          $x = Gm({ BigNumber: qg, Unit: Ax, config: jn }),
          Hx = Jm({ BigNumber: qg, Unit: Ax, config: jn }),
          Wx = gm({ BigNumber: qg, Unit: Ax, config: jn }),
          Gx = Dm({ BigNumber: qg, Unit: Ax, config: jn }),
          Jx = Am({ BigNumber: qg, Unit: Ax, config: jn }),
          Yx = bm({ BigNumber: qg, Unit: Ax, config: jn }),
          Zx = rg({ BigNumber: qg, Unit: Ax, config: jn }),
          Xx = Xm({ BigNumber: qg, Unit: Ax, config: jn }),
          Kx = Lm({ BigNumber: qg, Unit: Ax, config: jn }),
          Qx = cg({ BigNumber: qg, Unit: Ax, config: jn }),
          ew = og({ BigNumber: qg, Unit: Ax, config: jn }),
          tw = lg({ BigNumber: qg, Unit: Ax, config: jn }),
          nw = jm({ BigNumber: qg, Unit: Ax, config: jn }),
          rw = vm({ BigNumber: qg, Unit: Ax, config: jn }),
          iw = eg({ BigNumber: qg, Unit: Ax, config: jn }),
          aw = tg({ BigNumber: qg, Unit: Ax, config: jn }),
          ow = wm({ BigNumber: qg, Unit: Ax, config: jn }),
          sw = ec({ matrix: Sv, number: hy, subtract: Xb, typed: sy }),
          uw = Ql({ equal: ax, typed: sy }),
          cw = yp({
            Index: Eb,
            concat: Bv,
            setIntersect: kb,
            setSymDifference: ux,
            size: zv,
            subset: qv,
            typed: sy,
          }),
          lw = jh({
            DenseMatrix: ay,
            lsolve: rx,
            lup: Nx,
            matrix: Sv,
            slu: Tx,
            typed: sy,
            usolve: Ox,
          }),
          fw = Wh({
            abs: sb,
            add: rb,
            addScalar: ov,
            atan: Uy,
            bignumber: Pb,
            config: jn,
            cos: yv,
            equal: ax,
            inv: Ix,
            matrix: Sv,
            multiply: cb,
            multiplyScalar: Ny,
            sin: bv,
            subtract: Xb,
            typed: sy,
          }),
          pw = ed({ add: rb, divide: Bx, typed: sy }),
          hw = sd({ sqrt: cv, typed: sy, variance: jx }),
          dw = Hm({ BigNumber: qg, Unit: Ax, config: jn }),
          mw = Tm({ BigNumber: qg, Unit: Ax, config: jn }),
          gw = xm({ BigNumber: qg, Unit: Ax, config: jn }),
          yw = Pm({ BigNumber: qg, Unit: Ax, config: jn }),
          vw = ag({ BigNumber: qg, Unit: Ax, config: jn }),
          bw = Ym({ BigNumber: qg, Unit: Ax, config: jn }),
          xw = ig({ BigNumber: qg, Unit: Ax, config: jn }),
          ww = Om({ BigNumber: qg, Unit: Ax, config: jn }),
          Nw = sg({ BigNumber: qg, Unit: Ax, config: jn }),
          Ew = zm({ BigNumber: qg, Unit: Ax, config: jn }),
          Mw = mm({ BigNumber: qg, Unit: Ax, config: jn }),
          Sw = ng({ BigNumber: qg, Unit: Ax, config: jn }),
          _w = cl({
            Complex: Dg,
            config: jn,
            divideScalar: tx,
            log: yx,
            typed: sy,
          }),
          kw = xp({
            abs: sb,
            add: rb,
            conj: lv,
            ctranspose: ex,
            eigs: fw,
            equalScalar: py,
            larger: Yv,
            matrix: Sv,
            multiply: cb,
            pow: gb,
            smaller: Jv,
            sqrt: cv,
            typed: sy,
          }),
          Ow = Jh({
            abs: sb,
            add: rb,
            identity: jv,
            inv: Ix,
            max: ox,
            multiply: cb,
            size: zv,
            sqrt: cv,
            subtract: Xb,
            typed: sy,
          }),
          Aw = xd({
            add: rb,
            divide: Bx,
            factorial: Jb,
            isInteger: uy,
            isPositive: ly,
            multiply: cb,
            typed: sy,
          }),
          Cw = Cm({ BigNumber: qg, Unit: Ax, config: jn }),
          Tw = Em({ BigNumber: qg, Unit: Ax, config: jn }),
          Iw = _m({ BigNumber: qg, Unit: Ax, config: jn }),
          Pw = Km({ BigNumber: qg, Unit: Ax, config: jn }),
          Bw = ug({ BigNumber: qg, Unit: Ax, config: jn }),
          Dw = Fm({ BigNumber: qg, Unit: Ax, config: jn }),
          jw = Ef({ Unit: Ax, typed: sy }),
          Rw = nd({ abs: sb, map: Ty, median: Dx, subtract: Xb, typed: sy }),
          Lw = Nm({ BigNumber: qg, Unit: Ax, config: jn }),
          zw = km({ BigNumber: qg, Unit: Ax, config: jn }),
          qw = qm({ BigNumber: qg, Unit: Ax, config: jn }),
          Fw = ym({ BigNumber: qg, Unit: Ax, config: jn }),
          Uw = Zm({ BigNumber: qg, Unit: Ax, config: jn });
        function Vw() {
          return (Vw =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }).apply(this, arguments);
        }
        var $w = {},
          Hw = {},
          Ww = {},
          Gw = _p({ mathWithTransform: Hw }),
          Jw = Tp({ Node: Gw }),
          Yw = Lp({ Node: Gw, ResultSet: Bg }),
          Zw = Zp({ Node: Gw }),
          Xw = th({ Node: Gw }),
          Kw = rh({ Node: Gw }),
          Qw = ah({ Node: Gw }),
          eN = Lh({ math: $w }),
          tN = Yd({ classes: Ww }),
          nN = zp({ Node: Gw }),
          rN = nh({ Node: Gw }),
          iN = ih({ Node: Gw }),
          aN = Xp({ Node: Gw, typed: sy }),
          oN = Vh({ Chain: eN, typed: sy }),
          sN = Cp({ Node: Gw, subset: qv }),
          uN = Qp({ Node: Gw, Range: jg, size: zv }),
          cN = Rp({ matrix: Sv, Node: Gw, subset: qv }),
          lN = oh({ Unit: Ax, Node: Gw, math: $w }),
          fN = ch({ Node: Gw, SymbolNode: lN, math: $w }),
          pN = fh({
            AccessorNode: sN,
            ArrayNode: Jw,
            AssignmentNode: cN,
            BlockNode: Yw,
            ConditionalNode: nN,
            ConstantNode: Zw,
            FunctionAssignmentNode: aN,
            FunctionNode: fN,
            IndexNode: uN,
            ObjectNode: Xw,
            OperatorNode: rN,
            ParenthesisNode: Kw,
            RangeNode: iN,
            RelationalNode: Qw,
            SymbolNode: lN,
            config: jn,
            numeric: Lb,
            typed: sy,
          }),
          hN = mh({ parse: pN, typed: sy }),
          dN = Rh({ parse: pN }),
          mN = Hd({
            bignumber: Pb,
            fraction: iv,
            ConstantNode: Zw,
            FunctionNode: fN,
            OperatorNode: rN,
            ParenthesisNode: Kw,
            SymbolNode: lN,
            add: rb,
            config: jn,
            divide: Bx,
            equal: ax,
            isZero: ob,
            mathWithTransform: Hw,
            multiply: cb,
            parse: pN,
            pow: gb,
            subtract: Xb,
            typed: sy,
          }),
          gN = Jd({
            bignumber: Pb,
            fraction: iv,
            ConstantNode: Zw,
            FunctionNode: fN,
            OperatorNode: rN,
            ParenthesisNode: Kw,
            SymbolNode: lN,
            add: rb,
            config: jn,
            divide: Bx,
            equal: ax,
            isZero: ob,
            mathWithTransform: Hw,
            multiply: cb,
            parse: pN,
            pow: gb,
            simplify: mN,
            subtract: Xb,
            typed: sy,
          }),
          yN = hh({ parse: pN, typed: sy }),
          vN = Uh({ Help: dN, mathWithTransform: Hw, typed: sy }),
          bN = gh({ parse: pN });
        Vw($w, {
          reviver: tN,
          false: Rg,
          null: Lg,
          true: zg,
          replacer: Ug,
          i: Vg,
          LN10: $g,
          LOG10E: Hg,
          NaN: Wg,
          pi: Gg,
          SQRT1_2: Jg,
          tau: Yg,
          efimovFactor: Zg,
          fineStructure: Xg,
          sackurTetrode: Kg,
          weakMixingAngle: Qg,
          e: ty,
          Infinity: ny,
          LOG2E: ry,
          PI: Gg,
          version: iy,
          E: ty,
          phi: oy,
          typed: sy,
          isInteger: uy,
          isNumeric: cy,
          isPositive: ly,
          isNaN: fy,
          equalScalar: py,
          number: hy,
          boolean: dy,
          complex: my,
          splitUnit: gy,
          unaryPlus: yy,
          apply: vy,
          cube: by,
          expm1: xy,
          log10: wy,
          multiplyScalar: Ny,
          sign: Ey,
          square: My,
          bitNot: Sy,
          arg: _y,
          im: ky,
          not: Oy,
          filter: Ay,
          forEach: Cy,
          map: Ty,
          erf: Iy,
          format: Py,
          oct: By,
          print: Dy,
          isPrime: jy,
          acos: Ry,
          acot: Ly,
          acsc: zy,
          asec: qy,
          asin: Fy,
          atan: Uy,
          atanh: Vy,
          cosh: $y,
          coth: Hy,
          csch: Wy,
          sech: Gy,
          sinh: Jy,
          tanh: Yy,
          chain: oN,
          combinations: Zy,
          pickRandom: Xy,
          randomInt: Ky,
          LN2: Qy,
          clone: ev,
          hasNumericValue: tv,
          typeOf: nv,
          string: rv,
          fraction: iv,
          unaryMinus: av,
          addScalar: ov,
          exp: sv,
          log2: uv,
          sqrt: cv,
          conj: lv,
          getMatrixDataType: fv,
          mode: pv,
          bin: hv,
          acosh: dv,
          acsch: mv,
          asinh: gv,
          cos: yv,
          csc: vv,
          sin: bv,
          combinationsWithRep: xv,
          random: wv,
          SQRT2: Nv,
          isNegative: Ev,
          matrix: Sv,
          cbrt: _v,
          gcd: kv,
          mod: Ov,
          nthRoot: Av,
          xgcd: Cv,
          bitAnd: Tv,
          bitXor: Iv,
          or: Pv,
          concat: Bv,
          diag: Dv,
          identity: jv,
          ones: Rv,
          reshape: Lv,
          size: zv,
          subset: qv,
          zeros: Fv,
          hex: Uv,
          round: Vv,
          leftShift: $v,
          rightLogShift: Hv,
          compare: Wv,
          compareText: Gv,
          smaller: Jv,
          larger: Yv,
          unequal: Zv,
          sparse: Qv,
          acoth: eb,
          atan2: tb,
          sec: nb,
          add: rb,
          dot: ib,
          composition: ab,
          isZero: ob,
          abs: sb,
          floor: ub,
          multiply: cb,
          dotMultiply: lb,
          re: fb,
          flatten: pb,
          resize: hb,
          squeeze: db,
          to: mb,
          pow: gb,
          dotPow: yb,
          rightArithShift: vb,
          compareNatural: bb,
          equalText: xb,
          largerEq: wb,
          partitionSelect: Nb,
          asech: Mb,
          tan: Sb,
          setDifference: _b,
          setIntersect: kb,
          setMultiplicity: Ob,
          setSize: Ab,
          trace: Cb,
          quantileSeq: Tb,
          gamma: Ib,
          bignumber: Pb,
          lcm: Bb,
          bitOr: Db,
          kron: jb,
          transpose: Rb,
          numeric: Lb,
          and: zb,
          smallerEq: qb,
          sort: Fb,
          min: Ub,
          cot: Vb,
          setDistinct: $b,
          setPowerset: Hb,
          index: Wb,
          sum: Gb,
          factorial: Jb,
          permutations: Yb,
          ceil: Zb,
          subtract: Xb,
          cross: Kb,
          range: Qb,
          ctranspose: ex,
          divideScalar: tx,
          nthRoots: nx,
          lsolve: rx,
          lsolveAll: ix,
          equal: ax,
          max: ox,
          setCartesian: sx,
          setSymDifference: ux,
          hypot: cx,
          qr: lx,
          distance: fx,
          stirlingS2: px,
          catalan: hx,
          fix: dx,
          column: mx,
          row: gx,
          log: yx,
          dotDivide: vx,
          usolveAll: bx,
          setIsSubset: wx,
          lup: Nx,
          det: Ex,
          intersect: Mx,
          bellNumbers: Sx,
          xor: _x,
          prod: kx,
          usolve: Ox,
          createUnit: Cx,
          slu: Tx,
          inv: Ix,
          expm: Px,
          divide: Bx,
          median: Dx,
          variance: jx,
          kldivergence: Rx,
          atomicMass: Lx,
          bohrMagneton: zx,
          boltzmann: qx,
          conductanceQuantum: Fx,
          deuteronMass: Ux,
          electronMass: Vx,
          faraday: $x,
          firstRadiation: Hx,
          gravitationConstant: Wx,
          hartreeEnergy: Gx,
          klitzing: Jx,
          magneticConstant: Yx,
          molarMass: Zx,
          molarPlanckConstant: Xx,
          neutronMass: Kx,
          planckCharge: Qx,
          planckLength: ew,
          planckTemperature: tw,
          protonMass: nw,
          reducedPlanckConstant: rw,
          secondRadiation: iw,
          stefanBoltzmann: aw,
          vacuumImpedance: ow,
          diff: sw,
          deepEqual: uw,
          setUnion: cw,
          lusolve: lw,
          eigs: fw,
          mean: pw,
          std: hw,
          avogadro: dw,
          classicalElectronRadius: mw,
          electricConstant: gw,
          fermiCoupling: yw,
          gravity: vw,
          loschmidt: bw,
          molarMassC12: xw,
          nuclearMagneton: ww,
          planckMass: Nw,
          quantumOfCirculation: Ew,
          speedOfLight: Mw,
          wienDisplacement: Sw,
          log1p: _w,
          norm: kw,
          sqrtm: Ow,
          multinomial: Aw,
          bohrRadius: Cw,
          elementaryCharge: Tw,
          inverseConductanceQuantum: Iw,
          molarVolume: Pw,
          planckTime: Bw,
          thomsonCrossSection: Dw,
          unit: jw,
          mad: Rw,
          coulomb: Lw,
          magneticFluxQuantum: zw,
          rydberg: qw,
          parse: pN,
          evaluate: hN,
          simplify: mN,
          rationalize: gN,
          planckConstant: Fw,
          compile: yN,
          help: vN,
          gasConstant: Uw,
          derivative: Wd({
            ConstantNode: Zw,
            FunctionNode: fN,
            OperatorNode: rN,
            ParenthesisNode: Kw,
            SymbolNode: lN,
            config: jn,
            equal: ax,
            isZero: ob,
            numeric: Lb,
            parse: pN,
            simplify: mN,
            typed: sy,
          }),
          parser: yh({ Parser: bN, typed: sy }),
          config: jn,
        }),
          Vw(Hw, $w, {
            apply: hg({ isInteger: uy, typed: sy }),
            filter: gg({ typed: sy }),
            map: xg({ typed: sy }),
            forEach: vg({ typed: sy }),
            subset: kg({ matrix: Sv, typed: sy }),
            index: bg({ Index: Eb }),
            concat: Og({ isInteger: uy, matrix: Sv, typed: sy }),
            max: Ng({ config: jn, larger: Yv, numeric: Lb, typed: sy }),
            min: Mg({ config: jn, numeric: Lb, smaller: Jv, typed: sy }),
            sum: Tg({ add: rb, config: jn, numeric: Lb, typed: sy }),
            column: dg({ Index: Eb, matrix: Sv, range: Qb, typed: sy }),
            range: Sg({
              bignumber: Pb,
              matrix: Sv,
              config: jn,
              larger: Yv,
              largerEq: wb,
              smaller: Jv,
              smallerEq: qb,
              typed: sy,
            }),
            diff: Ag({
              bignumber: Pb,
              matrix: Sv,
              number: hy,
              subtract: Xb,
              typed: sy,
            }),
            row: _g({ Index: Eb, matrix: Sv, range: Qb, typed: sy }),
            mean: Eg({ add: rb, divide: Bx, typed: sy }),
            variance: Pg({
              add: rb,
              apply: vy,
              divide: Bx,
              isNaN: fy,
              multiply: cb,
              subtract: Xb,
              typed: sy,
            }),
            std: Cg({ sqrt: cv, typed: sy, variance: jx }),
          }),
          Vw(Ww, {
            ResultSet: Bg,
            Complex: Dg,
            Range: jg,
            Node: Gw,
            ArrayNode: Jw,
            BlockNode: Yw,
            ConstantNode: Zw,
            ObjectNode: Xw,
            ParenthesisNode: Kw,
            RelationalNode: Qw,
            Chain: eN,
            BigNumber: qg,
            Matrix: Fg,
            ConditionalNode: nN,
            OperatorNode: rN,
            Fraction: ey,
            RangeNode: iN,
            DenseMatrix: ay,
            FunctionAssignmentNode: aN,
            SparseMatrix: Mv,
            ImmutableDenseMatrix: Xv,
            FibonacciHeap: Kv,
            AccessorNode: sN,
            IndexNode: uN,
            Index: Eb,
            AssignmentNode: cN,
            Spa: xx,
            Unit: Ax,
            SymbolNode: lN,
            FunctionNode: fN,
            Help: dN,
            Parser: bN,
          }),
          eN.createProxy($w);
        var xN = function (e) {
            e = e.replace(/ /g, "");
            var t = /\(([^\(\)]|\(([^\(\)]|\(([^\(\)]|\(([^\(\)])*\))*\))*\))*\)/.exec(
              e
            );
            if (void 0 === t) return { result: !1 };
            var n = e.split(")");
            return { result: !0, unit: n[n.length - 1], expression: t[0] };
          },
          wN = (function () {
            function e(t) {
              u(this, e), (this.expressionProps = t);
            }
            return (
              l(e, [
                {
                  key: "resize",
                  value: function (e) {
                    var t = xN(this.expressionProps.expression),
                      n = "(".concat(t.expression, "*").concat(e, ")");
                    return ""
                      .concat(F.mathExpPreface, "(")
                      .concat(n, ")")
                      .concat(this.expressionProps.unit);
                  },
                },
                {
                  key: "calculateValues",
                  value: function (e) {
                    var t = e.length,
                      n = new bN();
                    n.set(F.totalElements, t);
                    for (var r = [], i = 0; i < t; i++) {
                      n.set(F.elementIndex, i);
                      try {
                        var a = n.evaluate(this.expressionProps.expression);
                        if (void 0 === a)
                          console.error(
                            "".concat(
                              this.expressionProps.expression,
                              " is not a valid mathematical expression. Returning 0"
                            )
                          ),
                            r.push(0);
                        else {
                          var o = ""
                            .concat(a)
                            .concat(this.expressionProps.unit);
                          "amount" === this.expressionProps.type &&
                            (o = parseFloat(o)),
                            r.push(o);
                        }
                      } catch (e) {
                        console.error(
                          "".concat(
                            this.expressionProps.expression,
                            " is not a valid mathematical expression. Returning 0"
                          )
                        ),
                          r.push(0);
                      }
                    }
                    return r;
                  },
                },
              ]),
              e
            );
          })(),
          NN = new RegExp(
            /^#([\da-f]{3}){1,2}$|^#([\da-f]{4}){1,2}$|(rgb|hsl)a?\((\s*-?\d+%?\s*,){2}(\s*-?\d+%?\s*,?\s*\)?)(,\s*(0?\.\d+)?|1)?\)/,
            "gi"
          ),
          EN = new RegExp(/^[-+]?\d+$/),
          MN = new (class {
            constructor(e) {
              if (
                ((this.opts = {}),
                (this.defaults = {}),
                (this.messages = Object.assign({}, Ze)),
                (this.rules = {
                  any: Xe,
                  array: Ke,
                  boolean: Qe,
                  class: et,
                  custom: tt,
                  currency: nt,
                  date: rt,
                  email: ot,
                  enum: st,
                  equal: ut,
                  forbidden: ct,
                  function: lt,
                  multi: ft,
                  number: pt,
                  object: gt,
                  objectID: yt,
                  string: Et,
                  tuple: Mt,
                  url: _t,
                  uuid: Ot,
                  mac: Ct,
                  luhn: Tt,
                }),
                (this.aliases = {}),
                (this.cache = new Map()),
                e)
              ) {
                if (
                  (Ye(this.opts, e),
                  e.defaults && Ye(this.defaults, e.defaults),
                  e.messages)
                )
                  for (const t in e.messages) this.addMessage(t, e.messages[t]);
                if (e.aliases)
                  for (const t in e.aliases) this.alias(t, e.aliases[t]);
                if (e.customRules)
                  for (const t in e.customRules) this.add(t, e.customRules[t]);
                if (e.plugins) {
                  const t = e.plugins;
                  if (!Array.isArray(t))
                    throw new Error("Plugins type must be array");
                  t.forEach(this.plugin.bind(this));
                }
              }
            }
            validate(e, t) {
              return this.compile(t)(e);
            }
            wrapRequiredCheckSourceCode(e, t, n, r) {
              const i = [];
              let a,
                o = !0 === e.schema.optional || "forbidden" === e.schema.type,
                s =
                  !0 === e.schema.optional ||
                  !0 === e.schema.nullable ||
                  "forbidden" === e.schema.type;
              if (null != e.schema.default) {
                let t;
                (o = !1),
                  !0 !== e.schema.nullable && (s = !1),
                  "function" == typeof e.schema.default
                    ? (n.customs[e.index] || (n.customs[e.index] = {}),
                      (n.customs[e.index].defaultFn = e.schema.default),
                      (t = `context.customs[${e.index}].defaultFn()`))
                    : (t = JSON.stringify(e.schema.default)),
                  (a = `\n\t\t\t\tvalue = ${t};\n\t\t\t\t${r} = value;\n\t\t\t`);
              } else
                a = this.makeError({
                  type: "required",
                  actual: "value",
                  messages: e.messages,
                });
              return (
                i.push(
                  `\n\t\t\tif (value === undefined) { ${
                    o ? "\n// allow undefined\n" : a
                  } }\n\t\t\telse if (value === null) { ${
                    s ? "\n// allow null\n" : a
                  } }\n\t\t\t${t ? `else { ${t} }` : ""}\n\t\t`
                ),
                i.join("\n")
              );
            }
            compile(e) {
              if (null === e || "object" != typeof e)
                throw new Error("Invalid schema.");
              const t = this,
                n = { index: 0, rules: [], fn: [], customs: {} };
              if ((this.cache.clear(), !0 !== e.$$root))
                if (Array.isArray(e)) e = this.getRuleFromSchema(e).schema;
                else {
                  const t = Object.assign({}, e);
                  (e = { type: "object", strict: t.$$strict, properties: t }),
                    delete t.$$strict;
                }
              const r = [
                  "var errors = [];",
                  "var field;",
                  "var parent = null;",
                ],
                i = this.getRuleFromSchema(e);
              r.push(
                this.compileRule(
                  i,
                  n,
                  null,
                  "context.fn[%%INDEX%%](value, field, null, errors, context);",
                  "value"
                )
              ),
                r.push("if (errors.length) {"),
                r.push(
                  '\n\t\t\treturn errors.map(err => {\n\t\t\t\tif (err.message)\n\t\t\t\t\terr.message = err.message\n\t\t\t\t\t\t.replace(/\\{field\\}/g, err.field || "")\n\t\t\t\t\t\t.replace(/\\{expected\\}/g, err.expected != null ? err.expected : "")\n\t\t\t\t\t\t.replace(/\\{actual\\}/g, err.actual != null ? err.actual : "");\n\n\t\t\t\treturn err;\n\t\t\t});\n\t\t'
                ),
                r.push("}"),
                r.push("return true;");
              const a = r.join("\n"),
                o = new Function("value", "context", a);
              if (this.opts.debug) {
                let e = function (e) {
                  return e;
                };
                "undefined" == typeof window && (e = jt),
                  n.fn.forEach((t, n) =>
                    console.log(e(`// Context.fn[${n}]\n` + t.toString()))
                  ),
                  console.log(e("// Main check function\n" + o.toString()));
              }
              return (
                this.cache.clear(),
                function (e) {
                  return (n.data = e), o.call(t, e, n);
                }
              );
            }
            compileRule(e, t, n, r, i) {
              const a = [],
                o = this.cache.get(e.schema);
              if (o)
                ((e = o).cycle = !0),
                  (e.cycleStack = []),
                  a.push(
                    this.wrapRequiredCheckSourceCode(
                      e,
                      `\n\t\t\t\tvar rule = context.rules[${
                        e.index
                      }];\n\t\t\t\tif (rule.cycleStack.indexOf(value) === -1) {\n\t\t\t\t\trule.cycleStack.push(value);\n\t\t\t\t\t${r.replace(
                        /%%INDEX%%/g,
                        e.index
                      )}\n\t\t\t\t\trule.cycleStack.pop(value);\n\t\t\t\t}\n\t\t\t`,
                      t,
                      i
                    )
                  );
              else {
                this.cache.set(e.schema, e),
                  (e.index = t.index),
                  (t.rules[t.index] = e);
                const o = null != n ? n : "$$root";
                t.index++;
                const s = e.ruleFunction.call(this, e, n, t);
                s.source = s.source.replace(/%%INDEX%%/g, e.index);
                const u = new Function(
                  "value",
                  "field",
                  "parent",
                  "errors",
                  "context",
                  s.source
                );
                (t.fn[e.index] = u),
                  a.push(
                    this.wrapRequiredCheckSourceCode(
                      e,
                      r.replace(/%%INDEX%%/g, e.index),
                      t,
                      i
                    )
                  ),
                  a.push(
                    this.makeCustomValidator({
                      vName: i,
                      path: o,
                      schema: e.schema,
                      context: t,
                      messages: e.messages,
                      ruleIndex: e.index,
                    })
                  );
              }
              return a.join("\n");
            }
            getRuleFromSchema(e) {
              if ("string" == typeof e) e = this.parseShortHand(e);
              else if (Array.isArray(e)) {
                if (0 == e.length) throw new Error("Invalid schema.");
                (e = { type: "multi", rules: e }).rules
                  .map((e) => this.getRuleFromSchema(e))
                  .every((e) => 1 == e.schema.optional) && (e.optional = !0);
              }
              if (e.$$type) {
                const t = e.$$type,
                  n = this.getRuleFromSchema(t).schema;
                delete e.$$type;
                const r = Object.assign({}, e);
                for (const t in e) delete e[t];
                Ye(e, n, { skipIfExist: !0 }), (e.props = r);
              }
              const t = this.aliases[e.type];
              t && (delete e.type, (e = Ye(e, t, { skipIfExist: !0 })));
              const n = this.rules[e.type];
              if (!n)
                throw new Error(
                  "Invalid '" + e.type + "' type in validator schema."
                );
              return {
                messages: Object.assign({}, this.messages, e.messages),
                schema: Ye(e, this.defaults[e.type], { skipIfExist: !0 }),
                ruleFunction: n,
              };
            }
            parseShortHand(e) {
              const t = e.split("|").map((e) => e.trim());
              let n,
                r = t[0];
              return (
                (n = r.endsWith("[]")
                  ? this.getRuleFromSchema({
                      type: "array",
                      items: r.slice(0, -2),
                    }).schema
                  : { type: t[0] }),
                t.slice(1).map((e) => {
                  const t = e.indexOf(":");
                  if (-1 !== t) {
                    const r = e.substr(0, t).trim();
                    let i = e.substr(t + 1).trim();
                    "true" === i || "false" === i
                      ? (i = "true" === i)
                      : Number.isNaN(Number(i)) || (i = Number(i)),
                      (n[r] = i);
                  } else
                    e.startsWith("no-") ? (n[e.slice(3)] = !1) : (n[e] = !0);
                }),
                n
              );
            }
            makeError({
              type: e,
              field: t,
              expected: n,
              actual: r,
              messages: i,
            }) {
              const a = { type: `"${e}"`, message: `"${i[e]}"` };
              return (
                (a.field = t ? `"${t}"` : "field"),
                null != n && (a.expected = n),
                null != r && (a.actual = r),
                `errors.push({ ${Object.keys(a)
                  .map((e) => `${e}: ${a[e]}`)
                  .join(", ")} });`
              );
            }
            makeCustomValidator({
              vName: e = "value",
              fnName: t = "custom",
              ruleIndex: n,
              path: r,
              schema: i,
              context: a,
              messages: o,
            }) {
              const s = "rule" + n,
                u = "fnCustomErrors" + n;
              return "function" == typeof i[t]
                ? (a.customs[n]
                    ? ((a.customs[n].messages = o), (a.customs[n].schema = i))
                    : (a.customs[n] = { messages: o, schema: i }),
                  this.opts.useNewCustomCheckerFunction
                    ? `\n               const ${s} = context.customs[${n}];\n\t\t\t\t\tconst ${u} = [];\n\t\t\t\t\t${e} = ${s}.schema.${t}.call(this, ${e}, ${u} , ${s}.schema, "${r}", parent, context);\n\t\t\t\t\tif (Array.isArray(${u} )) {\n                  ${u} .forEach(err => errors.push(Object.assign({ message: ${s}.messages[err.type], field }, err)));\n\t\t\t\t\t}\n\t\t\t\t`
                    : `\n\t\t\t\tconst ${s} = context.customs[${n}];\n\t\t\t\tconst res = ${s}.schema.${t}.call(this, ${e}, ${s}.schema, "${r}", parent, context);\n\t\t\t\tif (Array.isArray(res)) {\n\t\t\t\t\tres.forEach(err => errors.push(Object.assign({ message: ${s}.messages[err.type], field }, err)));\n\t\t\t\t}\n\t\t`)
                : "";
            }
            add(e, t) {
              this.rules[e] = t;
            }
            addMessage(e, t) {
              this.messages[e] = t;
            }
            alias(e, t) {
              if (this.rules[e])
                throw new Error("Alias name must not be a rule name");
              this.aliases[e] = t;
            }
            plugin(e) {
              if ("function" != typeof e)
                throw new Error("Plugin fn type must be function");
              return e(this);
            }
          })({
            messages: {
              color:
                "The '{field}' field must be an a valid color! Actual: {actual}",
              measurement:
                "The '{field}' must be a measurement with specs that are not met. You've either provided wrong value/units or an invalid stagger expression. Actual: {actual}",
            },
          });
        MN.add("amount", function (e, t, n) {
          var r = e.schema;
          return (
            e.messages,
            {
              source: "\n      let startUnits, endUnits, startNumberPart, endNumberPart;\n      const staggerValidation = "
                .concat(Ft, ";\n      const staggerAnalyser = ")
                .concat(Lt, ';\n      const easingKeys = "')
                .concat(
                  Object.keys(ze).join(","),
                  "\".split(',');\n      const validateExpression = "
                )
                .concat(xN, ";\n      const attributeRegexp = /^")
                .concat(
                  F.attibuteValue,
                  "\\([_A-z0-9-]*\\)$/;\n\n      function isNumeric(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n      }\n\n      if(typeof value === 'string' || value instanceof String){\n        if(value.trim().startsWith('"
                )
                .concat(
                  F.staggerPreface,
                  "')){\n          const staggerValid = staggerValidation(value);\n          if(staggerValid === false){\n            "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The " + F.staggerPreface + " expression is invalid",
                    },
                  }),
                  ";\n            return;\n          } else {\n            const analysis = staggerAnalyser(value, false);\n            if(!isNumeric(analysis.start)){\n              "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.start",
                    messages: {
                      amount:
                        "The provided start " +
                        F.staggerPreface +
                        " value is invalid",
                    },
                  }),
                  ";\n              return;\n            } else {\n              startNumberPart = analysis.start*1;\n              if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "min"),
                  "){\n                if("
                )
                .concat(r.min, " > analysis.start){\n                  ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.start",
                    messages: {
                      amount:
                        "The provided start " +
                        F.staggerPreface +
                        " value is smaller than the minimum accepted value (" +
                        r.min +
                        ")",
                    },
                  }),
                  ";\n                  return;\n                }\n              }\n              if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "max"),
                  "){\n                if("
                )
                .concat(r.max, " < analysis.start){\n                  ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.start",
                    messages: {
                      amount:
                        "The provided start " +
                        F.staggerPreface +
                        " value is bigger than the maximum accepted value (" +
                        r.max +
                        ")",
                    },
                  }),
                  ";\n                  return;\n                }\n              }\n               if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "integer"),
                  "){\n                if(!analysis.start.match("
                )
                .concat(EN, ")){\n                  ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.start",
                    messages: {
                      amount:
                        "The provided start " +
                        F.staggerPreface +
                        " value is not an integer",
                    },
                  }),
                  ";\n                  return;\n                }\n              }\n            }\n\n            if(!isNumeric(analysis.end)){\n              "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.end",
                    messages: {
                      amount:
                        "The provided end " +
                        F.staggerPreface +
                        " value is invalid",
                    },
                  }),
                  ";\n              return;\n            } else {\n              endNumberPart = analysis.end*1;\n              if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "min"),
                  "){\n                if("
                )
                .concat(r.min, " > analysis.end){\n                  ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.end",
                    messages: {
                      amount:
                        "The provided end " +
                        F.staggerPreface +
                        " value is smaller than the minimum accepted value (" +
                        r.min +
                        ")",
                    },
                  }),
                  ";\n                  return;\n                }\n              }\n              if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "max"),
                  "){\n                if("
                )
                .concat(r.max, " < analysis.end){\n                  ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.end",
                    messages: {
                      amount:
                        "The provided end " +
                        F.staggerPreface +
                        " value is bigger than the maximum accepted value (" +
                        r.max +
                        ")",
                    },
                  }),
                  ";\n                  return;\n                }\n              }\n               if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "integer"),
                  "){\n                if(!analysis.end.match("
                )
                .concat(EN, ")){\n                  ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.end",
                    messages: {
                      amount:
                        "The provided end " +
                        F.staggerPreface +
                        " value is not an integer",
                    },
                  }),
                  ";\n                  return;\n                }\n              }\n            }\n\n            if(analysis.startFraction < 0 || analysis.startFraction > 1){\n              "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.startFraction",
                    messages: {
                      amount:
                        "The " +
                        F.staggerPreface +
                        " fraction must be a number >=0 and <=1",
                    },
                  }),
                  ";\n              return;\n            }\n\n            if(easingKeys.indexOf(analysis.easing) < 0){\n              "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.startFraction",
                    messages: {
                      amount:
                        "The provided " +
                        F.staggerPreface +
                        " easing is not recognised by the system",
                    },
                  }),
                  ";\n              return;\n            }\n\n            if(analysis.mode !== 'linear' && analysis.mode !== 'omni'){\n              "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.mode",
                    messages: {
                      amount:
                        F.staggerPreface +
                        " mode can only be either linear or omni",
                    },
                  }),
                  ";\n              return;\n            }\n\n            if(analysis.reverse !== true && analysis.reverse !== false){\n              "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "analysis.reverse",
                    messages: {
                      amount:
                        F.staggerPreface +
                        " reverse needs to be either true or false",
                    },
                  }),
                  ";\n              return;\n            }\n\n            return value;\n          }\n        } else if(value.trim().startsWith('"
                )
                .concat(
                  F.attibuteValue,
                  "')){\n          if(!attributeRegexp.test(value)){\n            "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The " + F.attibuteValue + " expression is invalid",
                    },
                  }),
                  ";\n            return;\n          }\n\n          return value;\n        } else if(value.trim().startsWith('"
                )
                .concat(
                  F.mathExpPreface,
                  "')){\n          const validity = validateExpression(value);\n          if(validity.result === false){\n            "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The " + F.expressionPreface + " expression is invalid",
                    },
                  }),
                  ';\n            return;\n          } else {\n            if(validity.unit !== ""){\n              '
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The " +
                        F.expressionPreface +
                        " expression includes units",
                    },
                  }),
                  ";\n              return;\n            }\n\n            return value;\n          }\n        }\n      }\n\n\n      if(typeof value !== 'number'){\n        "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount: "Type measurement accepts only numbers",
                    },
                  }),
                  ";\n        return;\n      }\n      if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "max"),
                  "){\n        if("
                )
                .concat(r.max, " < value){\n          ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The provided amount is bigger than the maximum accepted value",
                    },
                  }),
                  ";\n          return;\n        }\n      }\n      if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "min"),
                  "){\n        if("
                )
                .concat(r.min, " > value){\n          ")
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The provided amount is lower than the minimum accepted value",
                    },
                  }),
                  ";\n          return;\n        }\n      }\n      if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "integer"),
                  "){\n        if(value !== parseInt(value, 10)){\n          "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount: "The provided amount is not an integer",
                    },
                  }),
                  ";\n          return;\n        }\n      }\n      return value;\n\n    "
                ),
            }
          );
        }),
          MN.add("measurement", function (e, t, n) {
            var r = e.schema,
              i = e.messages,
              a = new RegExp(
                "^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)(" +
                  r.units.join("|") +
                  ")$",
                "gi"
              ),
              o = new RegExp("^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)", "gi");
            return {
              source: "\n      let startUnits, endUnits, startNumberPart, endNumberPart;\n      const staggerValidation = "
                .concat(Ft, ";\n      const staggerAnalyser = ")
                .concat(Lt, ';\n      const easingKeys = "')
                .concat(
                  Object.keys(ze).join(","),
                  "\".split(',');\n      const validateExpression = "
                )
                .concat(xN, ";\n      const validUnits = ['")
                .concat(
                  r.units.join("','"),
                  "'];\n      const attributeRegexp = /^"
                )
                .concat(
                  F.attibuteValue,
                  "\\([_A-z0-9-]*\\)$/;\n\n      if(typeof value !== 'string' && !(value instanceof String)){\n        "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: i,
                  }),
                  "\n        return ;\n      }\n\n      if(value.trim().startsWith('"
                )
                .concat(
                  F.attibuteValue,
                  "')){\n        if(!attributeRegexp.test(value)){\n          "
                )
                .concat(
                  this.makeError({
                    type: "amount",
                    actual: "value",
                    messages: {
                      amount:
                        "The " + F.attibuteValue + " expression is invalid",
                    },
                  }),
                  ";\n          return;\n        }\n\n        return value;\n      } else if(value.trim().startsWith('"
                )
                .concat(
                  F.staggerPreface,
                  "')){\n        const staggerValid = staggerValidation(value);\n        if(staggerValid === false){\n          "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: {
                      measurement:
                        "The " + F.staggerPreface + " expression is invalid",
                    },
                  }),
                  ";\n          return;\n        } else {\n          const analysis = staggerAnalyser(value, false);\n          if(!analysis.start.match("
                )
                .concat(a, ")){\n            ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.start",
                    messages: {
                      measurement:
                        "The provided start " +
                        F.staggerPreface +
                        " value is invalid",
                    },
                  }),
                  ";\n            return;\n          } else {\n            var numberPart = analysis.start.match("
                )
                .concat(
                  o,
                  ")[0];\n            startNumberPart = numberPart;\n            startUnits = analysis.start.toString().substring(numberPart.length);\n            if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "min"),
                  "){\n              if("
                )
                .concat(r.min, " > numberPart){\n                ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.start",
                    messages: {
                      measurement:
                        "The provided start " +
                        F.staggerPreface +
                        " value is smaller than the minimum accepted value (" +
                        r.min +
                        ")",
                    },
                  }),
                  ";\n                return;\n              }\n            }\n            if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "max"),
                  "){\n              if("
                )
                .concat(r.max, " < numberPart){\n                ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.start",
                    messages: {
                      measurement:
                        "The provided start " +
                        F.staggerPreface +
                        " value is bigger than the maximum accepted value (" +
                        r.max +
                        ")",
                    },
                  }),
                  ";\n                return;\n              }\n            }\n             if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "integer"),
                  "){\n              if(!numberPart.match("
                )
                .concat(EN, ")){\n                ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.start",
                    messages: {
                      measurement:
                        "The provided start " +
                        F.staggerPreface +
                        " value is not an integer",
                    },
                  }),
                  ";\n                return;\n              }\n            }\n          }\n\n          if(!analysis.end.match("
                )
                .concat(a, ")){\n            ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.end",
                    messages: {
                      measurement:
                        "The provided end " +
                        F.staggerPreface +
                        " value is invalid",
                    },
                  }),
                  ";\n            return;\n          } else {\n            var numberPart = analysis.end.match("
                )
                .concat(
                  o,
                  ")[0];\n            endNumberPart = numberPart;\n            endUnits = analysis.end.toString().substring(numberPart.length);\n            if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "min"),
                  "){\n              if("
                )
                .concat(r.min, " > numberPart){\n                ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.end",
                    messages: {
                      measurement:
                        "The provided end " +
                        F.staggerPreface +
                        " value is smaller than the minimum accepted value (" +
                        r.min +
                        ")",
                    },
                  }),
                  ";\n                return;\n              }\n            }\n            if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "max"),
                  "){\n              if("
                )
                .concat(r.max, " < numberPart){\n                ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.end",
                    messages: {
                      measurement:
                        "The provided end " +
                        F.staggerPreface +
                        " value is bigger than the maximum accepted value (" +
                        r.max +
                        ")",
                    },
                  }),
                  ";\n                return;\n              }\n            }\n             if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "integer"),
                  "){\n              if(!numberPart.match("
                )
                .concat(EN, ")){\n                ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.end",
                    messages: {
                      measurement:
                        "The provided end " +
                        F.staggerPreface +
                        " value is not an integer",
                    },
                  }),
                  ";\n                return;\n              }\n            }\n          }\n\n          if(startUnits !== endUnits){\n            "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.startFraction",
                    messages: {
                      measurement:
                        "The " +
                        F.staggerPreface +
                        " start and end must always have the same units",
                    },
                  }),
                  ";\n            return;\n          }\n\n          if(analysis.startFraction < 0 || analysis.startFraction > 1){\n            "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.startFraction",
                    messages: {
                      measurement:
                        "The " +
                        F.staggerPreface +
                        " fraction must be a number >=0 and <=1",
                    },
                  }),
                  ";\n            return;\n          }\n\n          if(easingKeys.indexOf(analysis.easing) < 0){\n            "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.startFraction",
                    messages: {
                      measurement:
                        "The provided " +
                        F.staggerPreface +
                        " easing is not recognised by the system",
                    },
                  }),
                  ";\n            return;\n          }\n\n          if(analysis.mode !== 'linear' && analysis.mode !== 'omni'){\n            "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.mode",
                    messages: {
                      measurement:
                        F.staggerPreface +
                        " mode can only be either linear or omni",
                    },
                  }),
                  ";\n            return;\n          }\n\n          if(analysis.reverse !== true && analysis.reverse !== false){\n            "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "analysis.reverse",
                    messages: {
                      measurement:
                        F.staggerPreface +
                        " reverse needs to be either true or false",
                    },
                  }),
                  ";\n            return;\n          }\n\n          return value;\n        }\n      } else if(value.trim().startsWith('"
                )
                .concat(
                  F.mathExpPreface,
                  "')){\n          const validity = validateExpression(value);\n          if(validity.result === false){\n            "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: {
                      measurement:
                        "The " + F.expressionPreface + " expression is invalid",
                    },
                  }),
                  ";\n            return;\n          } else {\n            if(validUnits.indexOf(validity.unit) < 0){\n              "
                )
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: {
                      measurement:
                        "The " +
                        F.expressionPreface +
                        " expression has non-supported units",
                    },
                  }),
                  ";\n              return;\n            }\n\n            return value;\n          }\n        }\n\n\n      if(!value.match("
                )
                .concat(a, ")){\n        ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: i,
                  }),
                  "\n      } else {\n        var numberPart = value.match("
                )
                .concat(o, ")[0];\n        if(")
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "min"),
                  "){\n          if("
                )
                .concat(r.min, " > numberPart){\n            ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: i,
                  }),
                  "\n          }\n        }\n        if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "max"),
                  "){\n          if("
                )
                .concat(r.max, " < numberPart){\n            ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: i,
                  }),
                  "\n          }\n        }\n         if("
                )
                .concat(
                  Object.prototype.hasOwnProperty.call(r, "integer"),
                  "){\n          if(!numberPart.match("
                )
                .concat(EN, ")){\n            ")
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: i,
                  }),
                  "\n          }\n        }\n      }\n      return value;\n    "
                ),
            };
          }),
          MN.add("html", function (e, t, n) {
            e.schema;
            var r = e.messages;
            return {
              source: "\n      if(value === null){\n        ".concat(
                this.makeError({ type: "html", actual: "value", messages: r }),
                "\n      } else {\n        return value;\n      }\n    "
              ),
            };
          }),
          MN.add("css", function (e, t, n) {
            e.schema;
            var r = e.messages;
            return {
              source: "\n      if(value === null){\n        ".concat(
                this.makeError({ type: "css", actual: "value", messages: r }),
                "\n      } else {\n        return value;\n      }\n    "
              ),
            };
          }),
          MN.add("color", function (e, t, n) {
            e.schema;
            var r = e.messages;
            return {
              source: "\n      if(typeof value !== 'string' && !(value instanceof String)){\n        "
                .concat(
                  this.makeError({
                    type: "measurement",
                    actual: "value",
                    messages: r,
                  }),
                  "\n        return ;\n      }\n      if(!value.match("
                )
                .concat(
                  NN,
                  ') && [\n          "aliceblue",\n          "antiquewhite",\n          "aqua",\n          "aquamarine",\n          "azure",\n          "beige",\n          "bisque",\n          "black",\n          "blanchedalmond",\n          "blue",\n          "blueviolet",\n          "brown",\n          "burlywood",\n          "cadetblue",\n          "chartreuse",\n          "chocolate",\n          "coral",\n          "cornflowerblue",\n          "cornsilk",\n          "crimson",\n          "cyan",\n          "darkblue",\n          "darkcyan",\n          "darkgoldenrod",\n          "darkgray",\n          "darkgrey",\n          "darkgreen",\n          "darkkhaki",\n          "darkmagenta",\n          "darkolivegreen",\n          "darkorange",\n          "darkorchid",\n          "darkred",\n          "darksalmon",\n          "darkseagreen",\n          "darkslateblue",\n          "darkslategray",\n          "darkslategrey",\n          "darkturquoise",\n          "darkviolet",\n          "deeppink",\n          "deepskyblue",\n          "dimgray",\n          "dimgrey",\n          "dodgerblue",\n          "firebrick",\n          "floralwhite",\n          "forestgreen",\n          "fuchsia",\n          "gainsboro",\n          "ghostwhite",\n          "gold",\n          "goldenrod",\n          "gray",\n          "grey",\n          "green",\n          "greenyellow",\n          "honeydew",\n          "hotpink",\n          "indianred",\n          "indigo",\n          "ivory",\n          "khaki",\n          "lavender",\n          "lavenderblush",\n          "lawngreen",\n          "lemonchiffon",\n          "lightblue",\n          "lightcoral",\n          "lightcyan",\n          "lightgoldenrodyellow",\n          "lightgray",\n          "lightgrey",\n          "lightgreen",\n          "lightpink",\n          "lightsalmon",\n          "lightseagreen",\n          "lightskyblue",\n          "lightslategray",\n          "lightslategrey",\n          "lightsteelblue",\n          "lightyellow",\n          "lime",\n          "limegreen",\n          "linen",\n          "magenta",\n          "maroon",\n          "mediumaquamarine",\n          "mediumblue",\n          "mediumorchid",\n          "mediumpurple",\n          "mediumseagreen",\n          "mediumslateblue",\n          "mediumspringgreen",\n          "mediumturquoise",\n          "mediumvioletred",\n          "midnightblue",\n          "mintcream",\n          "mistyrose",\n          "moccasin",\n          "navajowhite",\n          "navy",\n          "oldlace",\n          "olive",\n          "olivedrab",\n          "orange",\n          "orangered",\n          "orchid",\n          "palegoldenrod",\n          "palegreen",\n          "paleturquoise",\n          "palevioletred",\n          "papayawhip",\n          "peachpuff",\n          "peru",\n          "pink",\n          "plum",\n          "powderblue",\n          "purple",\n          "rebeccapurple",\n          "red",\n          "rosybrown",\n          "royalblue",\n          "saddlebrown",\n          "salmon",\n          "sandybrown",\n          "seagreen",\n          "seashell",\n          "sienna",\n          "silver",\n          "skyblue",\n          "slateblue",\n          "slategray",\n          "slategrey",\n          "snow",\n          "springgreen",\n          "steelblue",\n          "tan",\n          "teal",\n          "thistle",\n          "tomato",\n          "turquoise",\n          "violet",\n          "wheat",\n          "white",\n          "whitesmoke",\n          "yellow",\n          "yellowgreen",\n        ].indexOf(value.toLowerCase()) < 0){\n        '
                )
                .concat(
                  this.makeError({
                    type: "color",
                    actual: "value",
                    messages: r,
                  }),
                  "\n      }\n      return value;\n    "
                ),
            };
          });
        var SN = [
            "cm",
            "mm",
            "in",
            "px",
            "pt",
            "pc",
            "em",
            "ex",
            "ch",
            "rem",
            "vw",
            "vh",
            "vmin",
            "vmax",
            "%",
          ],
          _N = [
            {
              type: "string",
              optional: !0,
              default: "linear",
              enum: [
                "linear",
                "easeInQuad",
                "easeOutQuad",
                "easeInOutQuad",
                "easeInCubic",
                "easeOutCubic",
                "easeInOutCubic",
                "easeInQuart",
                "easeOutQuart",
                "easeInOutQuart",
                "easeInQuint",
                "easeOutQuint",
                "easeInOutQuint",
                "easeInSine",
                "easeOutSine",
                "easeInOutSine",
                "easeInExpo",
                "easeOutExpo",
                "easeInOutExpo",
                "easeInCirc",
                "easeOutCirc",
                "easeInOutCirc",
                "easeInElastic",
                "easeOutElastic",
                "easeInOutElastic",
                "easeInBack",
                "easeOutBack",
                "easeInOutBack",
                "easeInBounce",
                "easeOutBounce",
                "easeInOutBounce",
              ],
            },
            {
              type: "array",
              optional: !0,
              length: 4,
              items: { type: "number" },
            },
          ],
          kN = { type: "string", empty: !1, trim: !0, optional: !0 },
          ON = { type: "string", empty: !1, trim: !0, optional: !0 },
          AN = { type: "string", empty: !1, optional: !1 },
          CN = { type: "amount", optional: !1, integer: !0, min: 0 },
          TN = { type: "html", optional: !0 },
          IN = { type: "css", optional: !0 },
          PN = {
            type: "array",
            optional: !0,
            items: { type: "object", props: { type: "string", src: "string" } },
          },
          BN = {
            type: "array",
            items: {
              type: "object",
              strict: !0,
              props: {
                src: "string",
                id: "string",
                mcid: { type: "string", optional: !0 },
                classes: { type: "array", optional: !0, items: "string" },
                base64: { type: "boolean", optional: !0 },
              },
            },
            optional: !0,
          },
          DN = MN.compile({
            id: kN,
            name: ON,
            selector: h(h({}, AN), {}, { optional: !0 }),
            easing: _N,
            duration: CN,
            startFrom: { type: "amount", integer: !0, min: 0, optional: !0 },
            repeats: { type: "amount", integer: !0, min: 1, optional: !0 },
            hiatus: { type: "amount", integer: !0, min: 0, optional: !0 },
            delay: { type: "amount", integer: !0, min: 0, optional: !0 },
          }),
          jN = {
            type: "object",
            optional: !0,
            props: {
              width: { type: "measurement", units: SN, optional: !0 },
              height: { type: "measurement", units: SN, optional: !0 },
            },
          },
          RN = { type: "string", enum: ["on", "off"], optional: !0 },
          LN = MN.compile({
            props: [
              {
                type: "object",
                strict: !0,
                props: {
                  id: kN,
                  name: ON,
                  selector: h(h({}, AN), {}, { optional: !0 }),
                  easing: _N,
                  html: TN,
                  css: IN,
                  audioSources: BN,
                  audio: RN,
                  containerParams: jN,
                  fonts: PN,
                  initParams: { type: "object", optional: !0 },
                },
              },
              {
                type: "object",
                strict: !0,
                props: {
                  id: kN,
                  name: ON,
                  host: { type: "any", optional: !1 },
                  html: TN,
                  css: IN,
                  audioSources: BN,
                  audio: RN,
                  containerParams: jN,
                  fonts: PN,
                  initParams: { type: "object", optional: !0 },
                },
              },
              {
                type: "object",
                strict: !0,
                props: {
                  root: { type: "boolean", optional: !0 },
                  name: ON,
                  id: kN,
                  audioSources: BN,
                  audio: h(h({}, RN), {}, { enum: ["on"] }),
                },
              },
            ],
          }),
          zN = MN.compile({
            selector: h(h({}, AN), {}, { optional: !0, strict: !0 }),
            name: ON,
          }),
          qN = MN.compile({
            selector: h(h({}, AN), {}, { strict: !0, optional: !0 }),
            name: ON,
            repeats: { type: "amount", integer: !0, min: 1, optional: !0 },
            hiatus: { type: "amount", integer: !0, min: 0, optional: !0 },
            delay: { type: "amount", integer: !0, min: 0, optional: !0 },
          }),
          FN =
            (MN.compile({ selector: AN, duration: CN }),
            "mc.descriptive.decisionAuthority");
        function UN(e) {
          e.descriptor.value = function (e) {
            if (null !== this.constructor.attrsValidationRules) {
              var t = this.constructor.attrsValidationMethod(e);
              if (t.length > 0) return { result: !1, errors: t };
            }
            return !0 ===
              this.putMessageOnPipe("checkForClip", {}, FN, {
                selfExecute: !0,
                direction: ue,
              }).response
              ? this.manageEditAttrProps(e, "attrs")
              : ((this.attrs = e), { result: !0 });
          };
        }
        function VN(e) {
          e.descriptor.value = function (e) {
            var t = ie.validateProps(
              e,
              this.constructor.propsValidationRules,
              this.constructor
            );
            return t.result
              ? !0 ===
                this.putMessageOnPipe("checkForClip", {}, FN, {
                  selfExecute: !0,
                  direction: ue,
                }).response
                ? this.manageEditAttrProps(e, "props")
                : ((this.props = e), { result: !0 })
              : t;
          };
        }
        function $N(e) {
          e.descriptor.value = function () {
            return null !== this.props.host && void 0 !== this.props.host
              ? [this.props.host]
              : this.hasParent &&
                this.putMessageOnPipe("checkForClip", {}, FN, {
                  selfExecute: !0,
                  direction: ue,
                }).response
              ? this.putMessageOnPipe(
                  "getElements",
                  { selector: this.selector() },
                  FN,
                  { selfExecute: !1, direction: ue }
                ).response
              : [];
          };
        }
        function HN(e) {
          e.descriptor.value = function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : { check: !0 };
            if ("dynamic" === this.duration)
              return {
                result: !1,
                reason:
                  "Incidents with dynamic duration can't be resized. Once the Incident enters a Clip it'll become resizable",
              };
            if (e === this.duration)
              return { result: !0, meta: { unprocessed: !0 } };
            if (e <= 0)
              return { result: !1, reason: "Size must always be > 0" };
            if (t.check && this.hasParent) {
              var n = this.putMessageOnPipe(
                "checkResize",
                { id: this.id, newSize: e, fraction: e / this.duration },
                FN,
                { selfExecute: !1, direction: ue }
              );
              if (!n.response.result) return n.response;
            }
            return this.setNewDuration(e), { result: !0 };
          };
        }
        function WN(e) {
          var t = new e.Class(e.attrs, e.props);
          if (!1 === t.result) return t;
          if (Object.prototype.hasOwnProperty.call(e, "incidents"))
            for (var n in e.incidents) {
              var r = e.incidents[n],
                i = WN(r.leaf);
              if (!1 === i.result) return i;
              var a = t.addIncident(i, r.position);
              if (!1 === a.result) return a;
            }
          return t;
        }
        function GN(e) {
          e.descriptor.value = function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              n = this.exportLiveDefinition();
            for (var r in e) Ge(r, e[r], !0, "attrs", n);
            for (var i in t) Ge(i, t[i], !0, "props", n);
            return WN(n);
          };
        }
        function JN(e) {
          e.descriptor.value = function () {
            return null === this.inheritedSelector
              ? Object.prototype.hasOwnProperty.call(this.props, "selector")
                ? this.props.selector
                : null
              : Object.prototype.hasOwnProperty.call(this.props, "selector")
              ? "&" === this.props.selector.charAt(0)
                ? this.inheritedSelector + this.props.selector.substring(1)
                : ""
                    .concat(this.inheritedSelector, " ")
                    .concat(this.props.selector)
              : this.inheritedSelector;
          };
        }
        var YN = (function () {
            function e(t) {
              u(this, e), (this.expressionProps = t);
            }
            return (
              l(e, [
                {
                  key: "calculateValues",
                  value: function (e) {
                    for (var t, n = [], r = 0; r < e.length; r++) {
                      var i = e[r].getAttribute(this.expressionProps.attribute);
                      (t = i),
                        !isNaN(parseFloat(t)) &&
                          isFinite(t) &&
                          (i = parseFloat(i)),
                        n.push(i);
                    }
                    return n;
                  },
                },
              ]),
              e
            );
          })(),
          ZN = function e(t) {
            return (
              u(this, e),
              "expression" === t.dynamicType
                ? new wN(t)
                : "stagger" === t.dynamicType
                ? new qt(t)
                : "attribute" === t.dynamicType
                ? new YN(t)
                : (console.error(
                    'dynamicType must be either "stgger" or "expression". '.concat(
                      t.dynamicType,
                      " provided"
                    )
                  ),
                  !1)
            );
          },
          XN = new RegExp("^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)", "gi"),
          KN = function (e, t) {
            var n = [];
            return (
              (function e(r) {
                var i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : "";
                if (null == r) return [];
                for (var a = 0, o = Object.entries(r); a < o.length; a++) {
                  var s = E(o[a], 2),
                    u = s[0],
                    c = s[1];
                  if (H(c))
                    e(
                      c,
                      ""
                        .concat(i)
                        .concat("" === i ? "" : ".")
                        .concat(u)
                    );
                  else if ($(c)) {
                    var l = c.trim();
                    if (l.startsWith(F.staggerPreface)) {
                      var f = Lt(l, !1),
                        p = f.start.match(XN)[0],
                        h = f.end.match(XN)[0],
                        d = f.start.toString().substring(p.length),
                        m = {
                          dynamicType: "stagger",
                          incidentId: t,
                          path: ""
                            .concat(i)
                            .concat("" === i ? "" : ".")
                            .concat(u),
                          from: 1 * p,
                          to: 1 * h,
                          mode: f.mode,
                          unit: d,
                          fraction: f.startFraction,
                          easing: f.easing,
                          reverse: f.reverse,
                          type: "" === d ? "amount" : "measurement",
                        };
                      n.push(m);
                    } else if (l.startsWith(F.attibuteValue)) {
                      var g = {
                        dynamicType: "attribute",
                        incidentId: t,
                        path: ""
                          .concat(i)
                          .concat("" === i ? "" : ".")
                          .concat(u),
                        unit: "",
                        type: "measurement",
                        attribute: /\(([^\)]+)\)/.exec(l)[1],
                      };
                      n.push(g);
                    } else if (l.startsWith(F.mathExpPreface)) {
                      var y = xN(l),
                        v = {
                          dynamicType: "expression",
                          incidentId: t,
                          path: ""
                            .concat(i)
                            .concat("" === i ? "" : ".")
                            .concat(u),
                          unit: y.unit,
                          type: "" === y.unit ? "amount" : "measurement",
                          expression: y.expression,
                        };
                      n.push(v);
                    }
                  }
                }
              })(e),
              n
            );
          };
        function QN(e) {
          e.descriptor.value = function () {
            for (var e = KN(this.props, this.id), t = 0; t < e.length; t++)
              this.propsStaggers.push({
                path: e[t].path,
                stagger: new ZN(e[t]),
              });
            for (var n = KN(this.attrs, this.id), r = 0; r < n.length; r++)
              this.attributesStaggers.push({
                path: n[r].path,
                stagger: new ZN(n[r]),
              });
          };
        }
        var eE = T(
            null,
            function (e, t) {
              var n = (function (t) {
                d(r, t);
                var n = v(r);
                function r() {
                  var t,
                    i =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    a =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : null;
                  u(this, r),
                    null === a
                      ? ((t = n.call(this, i)),
                        e(g(t)),
                        (t.attrs = {}),
                        (t.props = i))
                      : ((t = n.call(this, a)),
                        e(g(t)),
                        (t.attrs = i),
                        (t.props = a));
                  var o = ie.validateProps(t.props, zN, t.constructor);
                  return o.result
                    ? ((t._inheritedSelector = null),
                      (t.attributesStaggers = []),
                      (t.propsStaggers = []),
                      t.setupDynamicValues(),
                      (t.passiveAddition = !0),
                      t._buildTree(),
                      (t.passiveAddition = !1),
                      y(t))
                    : y(t, o);
                }
                return r;
              })(t);
              return {
                F: n,
                d: [
                  {
                    kind: "field",
                    static: !0,
                    key: "Incident",
                    value: function () {
                      return be;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "plugin_npm_name",
                    value: function () {
                      return "motor-cortex-js";
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "Channel",
                    value: function () {
                      return oe;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "ClassName",
                    value: function () {
                      return "Group";
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "isGroup",
                    value: function () {
                      return !0;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "attrsValidationRules",
                    value: function () {
                      return null;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "propsValidationRules",
                    value: function () {
                      return zN;
                    },
                  },
                  {
                    kind: "method",
                    decorators: [UN],
                    key: "editAttributes",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [VN],
                    key: "editProperties",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [HN],
                    key: "resize",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [GN],
                    key: "clone",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [JN],
                    key: "selector",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [$N],
                    key: "getElements",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [QN],
                    key: "setupDynamicValues",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    key: "_buildTree",
                    value: function () {
                      this.buildTree();
                    },
                  },
                  {
                    kind: "method",
                    key: "_calculateDuration",
                    value: function () {
                      var e =
                          arguments.length > 0 &&
                          void 0 !== arguments[0] &&
                          arguments[0],
                        t = 0;
                      for (var n in this.children) {
                        var r = this.children[n];
                        if (
                          (!0 === e &&
                            !0 === r.leaf.constructor.isGroup &&
                            r.leaf._calculateDuration(!0),
                          "dynamic" === r.leaf.duration)
                        ) {
                          t = "dynamic";
                          break;
                        }
                        r.position + r.leaf.duration > t &&
                          (t = r.position + r.leaf.duration);
                      }
                      return (
                        t !== this.calculatedDuration &&
                        (this.props &&
                          Object.prototype.hasOwnProperty.call(
                            this.props,
                            "duration"
                          ) &&
                          (this.props.duration = t),
                        (this.calculatedDuration = t),
                        !0)
                      );
                    },
                  },
                  {
                    kind: "method",
                    key: "_rebuildTree",
                    value: function () {
                      for (var e in this.children) {
                        var t = this.children[e];
                        !0 === t.leaf.passive && this.removeIncident(t.id);
                      }
                      (this.passiveAddition = !0),
                        this.buildTree(),
                        (this.passiveAddition = !1);
                    },
                  },
                  { kind: "method", key: "buildTree", value: function () {} },
                  {
                    kind: "method",
                    key: "manageEditAttrProps",
                    value: function (e, t) {
                      var n = this.parentNode,
                        r = n.getLeafPosition(this.id),
                        i = JSON.parse(JSON.stringify(this[t]));
                      (this[t] = e),
                        n.removeIncident(this.id),
                        this._rebuildTree();
                      var a = n.addIncident(this, r);
                      return (
                        a.result ||
                          ((this[t] = i),
                          this._rebuildTree(),
                          n.addIncident(this, r)),
                        a
                      );
                    },
                  },
                  {
                    kind: "method",
                    key: "detachFromParent",
                    value: function () {
                      x(m(n.prototype), "detachFromParent", this).call(this),
                        (this.inheritedSelector = null);
                    },
                  },
                  {
                    kind: "get",
                    key: "inheritedSelector",
                    value: function () {
                      return this._inheritedSelector;
                    },
                  },
                  {
                    kind: "set",
                    key: "inheritedSelector",
                    value: function (e) {
                      for (var t in ((this._inheritedSelector = e),
                      this.children))
                        this.children[
                          t
                        ].leaf.inheritedSelector = this.selector();
                    },
                  },
                  {
                    kind: "get",
                    key: "selectorToPassToChildren",
                    value: function () {
                      return this.selector();
                    },
                  },
                  {
                    kind: "method",
                    key: "exportDefinition",
                    value: function () {
                      var e = {
                        ClassName: this.constructor.ClassName,
                        plugin:
                          this.constructor.plugin ||
                          this.constructor.plugin_npm_name,
                        plugin_npm_name: this.constructor.plugin_npm_name,
                        attrs: this.attrs,
                        props: this.props,
                        incidents: {},
                        duration: this.duration,
                      };
                      for (var t in this.children) {
                        var n = this.children[t];
                        !0 !== n.leaf.passive &&
                          (e.incidents[t] = {
                            id: n.id,
                            position: n.position,
                            leaf: n.leaf.exportDefinition(),
                          });
                      }
                      return e;
                    },
                  },
                  {
                    kind: "method",
                    key: "exportLiveDefinition",
                    value: function () {
                      var e =
                          !(arguments.length > 0 && void 0 !== arguments[0]) ||
                          arguments[0],
                        t = JSON.parse(JSON.stringify(this.props));
                      !1 === e && delete t.id;
                      var n = {
                        Class: this.constructor,
                        attrs: JSON.parse(JSON.stringify(this.attrs)),
                        props: t,
                        incidents: {},
                      };
                      for (var r in this.children) {
                        var i = this.children[r];
                        !0 !== i.leaf.passive &&
                          (n.incidents[r] = {
                            position: i.position,
                            leaf: i.leaf.exportLiveDefinition(e),
                          });
                      }
                      return n;
                    },
                  },
                  {
                    kind: "method",
                    key: "addIncident",
                    value: function (e, t) {
                      var r,
                        i =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : { check: !0 };
                      if (
                        ((e.inheritedSelector = this.selectorToPassToChildren),
                        !0 === i.check)
                      ) {
                        var a = x(m(n.prototype), "checkAddition", this).call(
                          this,
                          e,
                          t
                        );
                        if (!a.result) return (e.inheritedSelector = null), a;
                        if (
                          !0 ===
                          (r = this.putMessageOnPipe("checkForClip", {}, FN, {
                            selfExecute: !0,
                            direction: ue,
                          })).response
                        ) {
                          var o = e.putMessageOnPipe(
                            "checkForInvalidSelectors",
                            {},
                            null,
                            { selfExecute: !0, direction: ce }
                          );
                          if (o.length > 0) {
                            for (var s = [], u = 0; u < o.length; u++)
                              s.push(o[u].response);
                            return { result: !1, errors: s };
                          }
                        }
                        var c = this.putMessageOnPipe(
                          "checkAddition",
                          {
                            incident: e,
                            millisecond: t,
                            parentGroupId: this.id,
                          },
                          FN,
                          { selfExecute: !0, direction: ue }
                        );
                        if (!c.response.result)
                          return (e.inheritedSelector = null), c.response;
                      }
                      !0 === this.passiveAddition && (e.passive = !0);
                      var l = this.addChild(e, t);
                      return (
                        l.result || (e.inheritedSelector = null),
                        "dynamic" === e.duration &&
                          r &&
                          this._calculateDuration(!0),
                        l
                      );
                    },
                  },
                  {
                    kind: "method",
                    key: "moveIncident",
                    value: function (e, t) {
                      var r = e;
                      "object" === s(e) && (r = e.id);
                      var i = x(m(n.prototype), "checkEditPosition", this).call(
                        this,
                        r,
                        t
                      );
                      if (!i.result) return i;
                      var a = t - this.getLeafPosition(r);
                      if (0 === a) return { result: !0 };
                      var o = this.putMessageOnPipe(
                        "checkMove",
                        {
                          id: r,
                          millisecond: t,
                          positionDelta: a,
                          parentGroupId: this.id,
                        },
                        FN,
                        { selfExecute: !0, direction: ue }
                      );
                      return o.response.result
                        ? this.editPosition(r, t)
                        : o.response;
                    },
                  },
                  {
                    kind: "method",
                    key: "removeIncident",
                    value: function (e) {
                      var t = e;
                      "object" === s(e) && (t = e.id);
                      var r = x(m(n.prototype), "checkRemoveChild", this).call(
                        this,
                        t
                      );
                      if (!r.result) return r;
                      var i = this.putMessageOnPipe(
                        "checkDeletion",
                        { id: t, parentGroupId: this.id },
                        FN,
                        { selfExecute: !0, direction: ue }
                      );
                      return i.response.result
                        ? this.removeChild(t)
                        : i.response;
                    },
                  },
                  {
                    kind: "method",
                    key: "handleCheckForClip",
                    value: function (e, t) {
                      return !!this.hasParent && this.bypass();
                    },
                  },
                  {
                    kind: "method",
                    key: "handleCheckAddition",
                    value: function (e, t) {
                      return this.hasParent ? this.bypass() : { result: !0 };
                    },
                  },
                  {
                    kind: "method",
                    key: "handleCheckMove",
                    value: function (e, t) {
                      return this.hasParent ? this.bypass() : { result: !0 };
                    },
                  },
                  {
                    kind: "method",
                    key: "handleCheckDeletion",
                    value: function (e, t) {
                      return this.hasParent ? this.bypass() : { result: !0 };
                    },
                  },
                  {
                    kind: "method",
                    key: "handleCheckResize",
                    value: function (e, t) {
                      return this.hasParent ? this.bypass() : { result: !0 };
                    },
                  },
                  {
                    kind: "method",
                    key: "handleSetDurationDynamic",
                    value: function (e, t) {
                      (this.calculatedDuration = "dynamic"),
                        this.putMessageOnPipe(
                          "setDurationDynamic",
                          {},
                          "Groups",
                          { selfExecute: !1, direction: ue }
                        );
                    },
                  },
                ],
              };
            },
            me
          ),
          tE = {
            isCombo: function (e) {
              return e.incidentClass.isCombo;
            },
            getItem: function (e, t) {
              return (function (e) {
                for (
                  var t,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : window,
                    r = (e =
                      (arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : q) +
                      "." +
                      e).split("."),
                    i = 0;
                  i < r.length;
                  i++
                ) {
                  if (!Object.prototype.hasOwnProperty.call(n, r[i])) return;
                  (t = n[r[i]]), (n = n[r[i]]);
                }
                return t;
              })(t.join("."), "attrs", e);
            },
            getRepeatPosition: function (e, t, n, r) {
              return r * (t || 0) + (r + 1) * (e || 0) + r * n;
            },
            refersToOwnSelector: function (e, t) {
              var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 0,
                r = t;
              !1 === Array.isArray(t) && (r = t.split("."));
              var i = this.getItem(e, r.slice(0, 2 + n));
              return (
                ("" === i.props.selector ||
                  void 0 === i.props.selector ||
                  null === i.props.selector) &&
                ("props" === r[2] ||
                  !this.isCombo(i) ||
                  this.refersToOwnSelector(e, r, n + 3))
              );
            },
            cascadeSelectors: function (e, t) {
              for (
                var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : "",
                  r = [],
                  i = 0;
                i < t.length;
                i++
              ) {
                var a = t[i],
                  o = void 0;
                if (
                  ((o = Object.prototype.hasOwnProperty.call(
                    a.props,
                    "selector"
                  )
                    ? "".concat(e, " ").concat(a.props.selector)
                    : e),
                  r.push({
                    path: ""
                      .concat(n)
                      .concat("" === n ? "" : ".")
                      .concat(i, ".props.selector"),
                    value: o,
                  }),
                  this.isCombo(a))
                ) {
                  var s = this.cascadeSelectors(
                    o,
                    a.attrs.incidents,
                    ""
                      .concat(n)
                      .concat("" === n ? "" : ".")
                      .concat(i, ".attrs.incidents")
                  );
                  r = r.concat(s);
                }
              }
              return r;
            },
            createDescriptiveIncidentLikeObject: function (e, t, n) {
              var r = e.props.id || Q();
              return {
                constructor: {
                  Incident: e.incidentClass,
                  plugin_npm_name: e.incidentClass.plugin_npm_name,
                  Channel: e.incidentClass.Channel,
                  isClip: !1,
                },
                attrs: e.attrs,
                props: e.props,
                selector: function () {
                  return e.props.selector;
                },
                id: r,
                audioClip: null,
                audio: "no",
                dynamicDurationValue: null,
                putMessageOnPipe: function () {},
                attributesStaggers: t,
                propsStaggers: n,
              };
            },
            getStaggersForChild: function (e, t, n) {
              for (var r = [], i = [], a = 0; a < e.length; a++)
                0 === e[a].path.indexOf("incidents.".concat(t, ".").concat(n))
                  ? i.push({
                      path: e[a].path.substring(
                        "incidents.".concat(t, ".").concat(n).length + 1
                      ),
                      stagger: e[a].stagger,
                    })
                  : r.push(e[a]);
              return { identifiedDynamics: i, remainingDynamics: r };
            },
            createElementProxy: function (e, t, n, r, i) {
              for (
                var a = (function e(t) {
                    var n = {};
                    return new Proxy(t, {
                      get: function (e, r) {
                        return "setValue" === r
                          ? this.setValue
                          : "_getFromProxy" === r
                          ? this._getFromProxy
                          : Object.prototype.hasOwnProperty.call(n, r)
                          ? n[r]
                          : t[r];
                      },
                      _getFromProxy: function (e) {
                        return Object.prototype.hasOwnProperty.call(n, e)
                          ? n[e]
                          : void 0;
                      },
                      set: function () {
                        return !1;
                      },
                      setValue: function (r, i) {
                        for (
                          var a = n, o = t, s = r.split("."), u = 0;
                          u < s.length - 1;
                          u++
                        ) {
                          if (
                            0 === u
                              ? null == a[s[u]]
                              : void 0 === a._getFromProxy(s[u])
                          ) {
                            var c = e(o[s[u]] || {});
                            0 === u ? (a[s[u]] = c) : a.setValue(s[u], c);
                          }
                          (a = a[s[u]]), (o = o[s[u]]);
                        }
                        return (
                          1 === s.length
                            ? (a[s[s.length - 1]] = i)
                            : a.setValue(s[s.length - 1], i),
                          !0
                        );
                      },
                    });
                  })(e),
                  o = this.cascadeSelectors(
                    t,
                    e.attrs.incidents,
                    "attrs.incidents"
                  ),
                  s = 0;
                s < r.length;
                s++
              )
                a.setValue("attrs.".concat(r[s].path), r[s].values[n]);
              for (var u = 0; u < i.length; u++)
                a.setValue("props.".concat(i[u].path), i[u].values[n]);
              for (var c = 0; c < o.length; c++)
                a.setValue(o[c].path, o[c].value);
              return a;
            },
          },
          nE = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              return u(this, n), t.apply(this, arguments);
            }
            return (
              l(n, [
                {
                  key: "parseAttrsDynamicValues",
                  value: function (e, t) {
                    for (var n = 0; n < e.attributesStaggers.length; n++)
                      tE.refersToOwnSelector(e, e.attributesStaggers[n].path) &&
                        this.staggerAttrs.push({
                          path: e.attributesStaggers[n].path,
                          values: e.attributesStaggers[
                            n
                          ].stagger.calculateValues(t),
                        });
                  },
                },
                {
                  key: "_createElementIncident",
                  value: function (e, t, n, r, i, a) {
                    for (
                      var o = this,
                        s = tE.createElementProxy(
                          t,
                          n.context.getElementSelectorByMCID(a),
                          r,
                          this.staggerAttrs,
                          this.staggerProps
                        ),
                        u = Le({
                          id: "".concat(this.id, "_element.").concat(r),
                          attrs: {},
                          props: {},
                          Incident: eE.Incident,
                          plugin_npm_name: eE.plugin_npm_name,
                          Channel: eE.Channel,
                          DescriptiveIncident: new eE(),
                        }),
                        c = function (e) {
                          var i = Le({
                              id: ""
                                .concat(o.id, "_element.")
                                .concat(r, "_repeat.")
                                .concat(e),
                              attrs: {},
                              props: {},
                              Incident: eE.Incident,
                              plugin_npm_name: eE.plugin_npm_name,
                              Channel: eE.Channel,
                              DescriptiveIncident: new eE(),
                            }),
                            a = t.attributesStaggers;
                          s.attrs.incidents.forEach(function (e, t) {
                            var r = tE.getStaggersForChild(a, t, "attrs"),
                              o = tE.getStaggersForChild(
                                r.remainingDynamics,
                                t,
                                "props"
                              );
                            a = o.remainingDynamics;
                            var s = rE(
                              tE.createDescriptiveIncidentLikeObject(
                                e,
                                r.identifiedDynamics,
                                o.identifiedDynamics
                              ),
                              n
                            );
                            i.addChild(s, e.position);
                          }),
                            u.addChild(
                              i,
                              tE.getRepeatPosition(
                                s.props.delay,
                                s.props.hiatus,
                                i.duration,
                                e
                              )
                            );
                        },
                        l = 0;
                      l < (s.props.repeats || 1);
                      l++
                    )
                      c(l);
                    this.addChild(u, 0);
                  },
                },
              ]),
              n
            );
          })(He);
        function rE(e, t) {
          var n,
            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          if ((r && "off" === e.audio) || (!r && "only" === e.audio))
            return null;
          if (
            Object.prototype.hasOwnProperty.call(e.props, "selector") &&
            ((!r && "~" === e.props.selector.charAt(0)) ||
              (r &&
                "~" !== e.props.selector.charAt(0) &&
                !e.constructor.isClip))
          )
            return null;
          if (e.constructor.isClip) {
            if (!Object.prototype.hasOwnProperty.call(e.props, "selector") || r)
              return r ? e.audioClip : e.realClip;
            (n = new We(e, t)).plugin_channel_class = oe;
          } else if (e.constructor.isCombo) n = new nE(e, t);
          else if (e.constructor.isGroup)
            for (var i in ((n = Le({
              id: e.id,
              attrs: e.attrs,
              props: e.props,
              Incident: e.constructor.Incident,
              plugin_npm_name: e.constructor.plugin_npm_name,
              Channel: e.constructor.Channel,
              DescriptiveIncident: e,
            })),
            e.children)) {
              var a = rE(e.children[i].leaf, t);
              null !== a && n.addChild(a, e.children[i].position);
            }
          else n = new He(e, t);
          return n;
        }
        var iE = "@kissmybutton/self-contained-incidents",
          aE = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r) {
              var i;
              return (
                u(this, n),
                ((i = t.call(this, e, r)).attrs = e),
                (i.props = r),
                (i.isTheClip = !0),
                (i.blockingWaitings = {}),
                (i.instantiatedChannels = {}),
                (i.isHostedClip = !0),
                (i.instantiatedCopiesContexts = {}),
                (i.instantiatedCopiesUnblockingMethods = []),
                i.onClipInitialise(),
                (i.runTimeInfo = i.props.runTimeInfo),
                (i.durationSubs = []),
                (i.audioClip = !1),
                i
              );
            }
            return (
              l(n, [
                { key: "onClipInitialise", value: function () {} },
                {
                  key: "contextLoading",
                  value: function () {
                    this.context.contextLoaded = !1;
                  },
                },
                {
                  key: "contextLoaded",
                  value: function () {
                    for (var e in ((this.context.contextLoaded = !0),
                    this.putMessageOnPipe(
                      "contextLoaded",
                      {},
                      {},
                      { selfExecute: !1, direction: ce }
                    ),
                    this.instantiatedChannels))
                      this.instantiatedChannels[e].recalcScratchValues();
                    for (
                      var t = 0;
                      t < this.instantiatedCopiesUnblockingMethods.length;
                      t++
                    )
                      this.instantiatedCopiesUnblockingMethods[t]();
                    this.unblock();
                  },
                },
                {
                  key: "getElements",
                  value: function (e) {
                    if (null !== this.props.host && void 0 !== this.props.host)
                      return this.context.getElements(e);
                    var t = [];
                    for (var n in this.instantiatedCopiesContexts)
                      for (
                        var r = this.instantiatedCopiesContexts[n].getElements(
                            e
                          ),
                          i = 0;
                        i < r.length;
                        i++
                      )
                        t.push(r[i]);
                    return t;
                  },
                },
                {
                  key: "addContext",
                  value: function (e) {
                    (this.instantiatedCopiesContexts[e.clipId] = e.context),
                      (e.instantiatedCopiesContexts = this.instantiatedCopiesContexts),
                      this.instantiatedCopiesUnblockingMethods.push(e.unblock);
                    var t = this.putMessageOnPipe(
                      "addContext",
                      e,
                      {},
                      { selfExecute: !1, direction: ce }
                    );
                    if (
                      1 === Object.keys(this.instantiatedCopiesContexts).length
                    ) {
                      for (var n in this.instantiatedChannels)
                        this.instantiatedChannels[n].recalcScratchValues(
                          e.clipId
                        );
                      this.context.nonFragmentedContext = e.context;
                    }
                    return t;
                  },
                },
                {
                  key: "exportConstructionArguments",
                  value: function () {
                    return { attrs: this.attrs, props: this.props };
                  },
                },
                {
                  key: "_resize",
                  value: function (e) {
                    for (var t in this.instantiatedChannels)
                      this.instantiatedChannels[t]._resize(e);
                    this.setNewDuration(this.duration * e);
                    for (var n = 0; n < this.durationSubs.length; n++)
                      this.durationSubs[n](this.duration);
                  },
                },
                {
                  key: "addIncident",
                  value: function (e) {
                    for (
                      var t = this,
                        n = this.putMessageOnPipe(
                          "addIncident",
                          {
                            incident: e.incident,
                            millisecond: e.millisecond,
                            parentGroupId: e.parentGroupId,
                            incidentFromDescription: rE,
                            contextData: {
                              clipId: this.id,
                              context: this.context,
                              instantiatedCopiesContexts: this
                                .instantiatedCopiesContexts,
                            },
                            audio: this.audioClip,
                          },
                          e.parentGroupId,
                          { selfExecute: !0, direction: ce }
                        ),
                        r = {},
                        i = 0;
                      i < n.length;
                      i++
                    ) {
                      var a = n[i].response.getIncidentsByChannel(
                        n[i].positionDelta + e.millisecond
                      );
                      for (var o in a) {
                        var s;
                        Object.prototype.hasOwnProperty.call(r, o) ||
                          (r[o] = []),
                          (s = r[o]).push.apply(s, M(a[o]));
                      }
                    }
                    var u = this.checkAddition(r);
                    return u.result
                      ? {
                          result: !0,
                          execute: function () {
                            u.execute();
                            for (var r = 0; r < n.length; r++)
                              for (var i in (n[r].responder.addChild(
                                n[r].response,
                                e.millisecond
                              ),
                              n[r].responder.putMessageOnPipe(
                                "recalcDuration",
                                {},
                                "Groups",
                                { selfExecute: !0, direction: ue }
                              ),
                              t.instantiatedCopiesContexts))
                                n[r].responder.putMessageOnPipe(
                                  "addContext",
                                  {
                                    clipId: i,
                                    context: t.instantiatedCopiesContexts[i],
                                  },
                                  "ContextAwareIncidents",
                                  { selfExecute: !1, direction: ce }
                                );
                          },
                        }
                      : u;
                  },
                },
                {
                  key: "checkAddition",
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : "all-or-nothing",
                      n = !0,
                      r = [],
                      i = [];
                    for (var a in e) {
                      Object.prototype.hasOwnProperty.call(
                        this.instantiatedChannels,
                        a
                      ) ||
                        (this.instantiatedChannels[a] = new e[
                          a
                        ][0].incident.plugin_channel_class({
                          runTimeInfo: this.runTimeInfo,
                          context: this.context,
                          subscribe: this.props.subscribe,
                        }));
                      var o = this.instantiatedChannels[a].addIncidents(
                        e[a],
                        t
                      );
                      (n = n && o.result),
                        o.result ? i.push(o.execute) : (r = r.concat(o.errors));
                    }
                    var s = function () {
                        for (var e = 0; e < i.length; e++) i[e]();
                      },
                      u = { result: n, errors: r, execute: s };
                    return u;
                  },
                },
                {
                  key: "moveIncident",
                  value: function (e) {
                    for (
                      var t = this.putMessageOnPipe(
                          "moveIncident",
                          {
                            incidentId: e.id,
                            millisecond: e.millisecond,
                            parentGroupId: e.parentGroupId,
                            contextData: {
                              clipId: this.id,
                              context: this.context,
                            },
                            audio: this.audioClip,
                          },
                          e.parentGroupId,
                          { selfExecute: !0, direction: ce }
                        ),
                        n = {},
                        r = 0;
                      r < t.length;
                      r++
                    ) {
                      var i = t[r].response.getIncidentsByChannel(
                        t[r].positionDelta + e.millisecond
                      );
                      for (var a in i) {
                        var o;
                        Object.prototype.hasOwnProperty.call(n, a) ||
                          (n[a] = []),
                          (o = n[a]).push.apply(o, M(i[a]));
                      }
                    }
                    var s = this.checkMove(n, e.positionDelta);
                    return s.result
                      ? {
                          result: !0,
                          execute: function () {
                            s.execute();
                            for (var n = 0; n < t.length; n++)
                              t[n].responder.editPosition(
                                t[n].response.id,
                                e.millisecond
                              ),
                                t[
                                  n
                                ].responder.putMessageOnPipe(
                                  "recalcDuration",
                                  {},
                                  "Groups",
                                  { selfExecute: !0, direction: ue }
                                );
                          },
                        }
                      : s;
                  },
                },
                {
                  key: "checkMove",
                  value: function (e, t) {
                    var n = !0,
                      r = [],
                      i = [];
                    for (var a in e) {
                      var o = this.instantiatedChannels[a].editIncidents(
                        e[a],
                        t
                      );
                      (n = n && o.result),
                        o.result ? i.push(o.execute) : (r = r.concat(o.errors));
                    }
                    return {
                      result: n,
                      errors: r,
                      execute: function () {
                        for (var e = 0; e < i.length; e++) i[e]();
                      },
                    };
                  },
                },
                {
                  key: "removeIncident",
                  value: function (e) {
                    for (
                      var t = this.putMessageOnPipe(
                          "removeIncident",
                          {
                            incidentId: e.id,
                            parentGroupId: e.parentGroupId,
                            contextData: {
                              clipId: this.id,
                              context: this.context,
                            },
                            audio: this.audioClip,
                          },
                          e.parentGroupId,
                          { selfExecute: !0, direction: ce }
                        ),
                        n = {},
                        r = 0;
                      r < t.length;
                      r++
                    ) {
                      var i = t[r].response.getIncidentsByChannel();
                      for (var a in i) {
                        var o;
                        Object.prototype.hasOwnProperty.call(n, a) ||
                          (n[a] = []),
                          (o = n[a]).push.apply(o, M(i[a]));
                      }
                    }
                    var s = this.checkDelete(n);
                    return s.result
                      ? {
                          result: !0,
                          execute: function () {
                            s.execute();
                            for (var e = 0; e < t.length; e++)
                              t[e].responder.removeChild(t[e].response.id),
                                t[
                                  e
                                ].responder.putMessageOnPipe(
                                  "recalcDuration",
                                  {},
                                  "Groups",
                                  { selfExecute: !0, direction: ue }
                                );
                          },
                        }
                      : s;
                  },
                },
                {
                  key: "checkDelete",
                  value: function (e) {
                    var t = !0,
                      n = [],
                      r = [];
                    for (var i in e) {
                      var a = this.instantiatedChannels[i].removeIncidents(
                        e[i]
                      );
                      (t = t && a.result),
                        a.result ? r.push(a.execute) : (n = n.concat(a.errors));
                    }
                    return {
                      result: t,
                      errors: n,
                      execute: function () {
                        for (var e = 0; e < r.length; e++) r[e]();
                      },
                    };
                  },
                },
                {
                  key: "resizeIncident",
                  value: function (e) {
                    for (
                      var t = this.putMessageOnPipe(
                          "resize",
                          {
                            incidentId: e.id,
                            newSize: e.newSize,
                            fraction: e.fraction,
                            contextData: {
                              clipId: this.id,
                              context: this.context,
                            },
                            audio: this.audioClip,
                          },
                          e.id,
                          { selfExecute: !1, direction: ce }
                        ),
                        n = {},
                        r = 0;
                      r < t.length;
                      r++
                    ) {
                      var i = t[r].response.getIncidentsByChannel(
                        t[r].positionDelta
                      );
                      for (var a in i) {
                        var o;
                        Object.prototype.hasOwnProperty.call(n, a) ||
                          (n[a] = []),
                          (o = n[a]).push.apply(o, M(i[a]));
                      }
                    }
                    var s = 0;
                    t.length > 0 && (s = t[0].positionDelta);
                    var u = this.checkResize(e.fraction, n, s);
                    return u.result
                      ? {
                          result: !0,
                          execute: function () {
                            u.execute();
                            for (var n = 0; n < t.length; n++)
                              t[n].responder.setNewDuration(e.newSize);
                          },
                        }
                      : u;
                  },
                },
                {
                  key: "checkResize",
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 0,
                      r = !0,
                      i = [],
                      a = [];
                    for (var o in t) {
                      var s = ie.systoleDiastoleProjections(t[o], e, n),
                        u = this.instantiatedChannels[o].checkResizedIncidents(
                          s
                        );
                      (r = r && u.result),
                        u.result ? a.push(u.execute) : (i = i.concat(u.errors));
                    }
                    var c = function () {
                        for (var e = 0; e < a.length; e++) a[e]();
                      },
                      l = { result: r, errors: i, execute: c };
                    return l;
                  },
                },
                {
                  key: "getIncidentsByChannel",
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0,
                      t = {};
                    return (
                      (t[iE] = [
                        { millisecond: e, incident: this, id: this.id },
                      ]),
                      t
                    );
                  },
                },
                {
                  key: "setVolume",
                  value: function (e) {
                    this.volume = parseFloat(e);
                  },
                },
                { key: "_onGetContextOnce", value: function (e) {} },
                {
                  key: "handleRecalcDuration",
                  value: function (e, t) {
                    if (this._calculateDuration())
                      for (var n = 0; n < this.durationSubs.length; n++)
                        this.durationSubs[n](this.duration);
                    return !0;
                  },
                },
                {
                  key: "onProgress",
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 &&
                      void 0 !== arguments[3] &&
                      arguments[3];
                    if (!1 !== this.contextReady) {
                      for (var i in (n || (n = this.id),
                      this.instantiatedChannels)) {
                        var a = this.instantiatedChannels[i];
                        a.moveTo(this.runTimeInfo.currentMillisecond, t, n, r);
                      }
                      this.onAfterProgress(e, t);
                    } else this.setBlock();
                  },
                },
                { key: "onAfterProgress", value: function (e, t) {} },
                {
                  key: "flash",
                  value: function () {
                    for (var e in this.instantiatedChannels)
                      this.instantiatedChannels[e].moveTo(
                        0,
                        this.runTimeInfo.currentMillisecond,
                        this.id,
                        !0
                      );
                  },
                },
                {
                  key: "subscribeToDurationChange",
                  value: function (e) {
                    this.durationSubs.push(e);
                  },
                },
                { key: "handleSetBlockingWaiting", value: function (e, t) {} },
                {
                  key: "handleRemoveBlockingWaiting",
                  value: function (e, t) {},
                },
                {
                  key: "contextReady",
                  get: function () {
                    return this.context.contextLoaded;
                  },
                },
                {
                  key: "context",
                  get: function () {
                    return this.ownContext;
                  },
                },
              ]),
              n
            );
          })(be),
          oE = (function () {
            function e() {
              u(this, e),
                (this.output = U.createGain()),
                (this.gainNode = U.createGain()),
                U.createStereoPanner &&
                  (this.pannerNode = U.createStereoPanner()),
                U.createStereoPanner
                  ? (this.pannerNode.connect(this.gainNode),
                    this.gainNode.connect(this.output),
                    (this.input = this.pannerNode))
                  : (this.gainNode.connect(this.output),
                    (this.input = this.gainNode));
            }
            return (
              l(e, [
                {
                  key: "connect",
                  value: function (e) {
                    this.output.connect(e);
                  },
                },
                {
                  key: "disconnect",
                  value: function () {
                    this.output.disconnect();
                  },
                },
              ]),
              e
            );
          })();
        function sE(e) {
          for (
            var t = window.atob(e), n = t.length, r = new Uint8Array(n), i = 0;
            i < n;
            i++
          )
            r[i] = t.charCodeAt(i);
          return r.buffer;
        }
        var uE = /\[data(-mcid="+\w+")+\]/g,
          cE = (function () {
            function e() {
              u(this, e), (this.subscribers = []);
            }
            return (
              l(e, [
                {
                  key: "sub",
                  value: function (e, t) {
                    this.subscribers.push(t);
                  },
                },
                {
                  key: "pub",
                  value: function (e) {
                    for (var t = 0; t < this.subscribers.length; t++)
                      this.subscribers[t](e);
                  },
                },
              ]),
              e
            );
          })(),
          lE = (function () {
            function e() {
              var t = this,
                n =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                r = arguments.length > 1 ? arguments[1] : void 0;
              u(this, e),
                (this.totalSources = n.length),
                (this.audioSources = {}),
                (this.elementsByMCID = {});
              for (
                var i = function (e) {
                    var i = n[e],
                      a = {
                        mcid: i.mcid || Q(),
                        id: i.id,
                        src: i.src,
                        classes: i.classes || [],
                        base64: i.base64 || !1,
                        pubSub: new cE(),
                        soundLoaded: !1,
                        startValues: i.startValues || {},
                      };
                    if (
                      ((t.audioSources[a.id] = a),
                      (t.elementsByMCID[a.mcid] = a),
                      i.base64)
                    )
                      U.decodeAudioData(sE(i.src), function (e) {
                        t._setBuffer(a, e, r);
                      });
                    else {
                      var o = new XMLHttpRequest();
                      o.open("GET", a.src, !0),
                        (o.responseType = "arraybuffer"),
                        (t.soundLoaded = !1),
                        (o.onload = function () {
                          U.decodeAudioData(
                            o.response,
                            function (e) {
                              t._setBuffer(a, e, r);
                            },
                            t.onError
                          );
                        }),
                        o.send();
                    }
                  },
                  a = 0;
                a < n.length;
                a++
              )
                i(a);
              this.context = {
                document: document,
                window: window,
                rootElement: document.body,
                unmount: function () {},
                masterNode: r,
                audioContext: U,
                getElements: this.getElements.bind(this),
                getMCID: this.getMCID.bind(this),
                setMCID: this.setMCID.bind(this),
                getElementSelectorByMCID: this.getElementSelectorByMCID.bind(
                  this
                ),
                getElementByMCID: this.getElementByMCID.bind(this),
              };
            }
            return (
              l(e, [
                {
                  key: "_setBuffer",
                  value: function (e, t, n) {
                    (e.soundLoaded = !0),
                      (e.buffer = t),
                      (e.effectsAudioNode = new oE()),
                      e.effectsAudioNode.connect(n.input),
                      e.pubSub.pub();
                  },
                },
                {
                  key: "getElementByMCID",
                  value: function (e) {
                    return Object.prototype.hasOwnProperty.call(
                      this.elementsByMCID,
                      e
                    )
                      ? this.elementsByMCID[e]
                      : null;
                  },
                },
                {
                  key: "getElements",
                  value: function (e) {
                    if ("~" !== e.charAt(0)) {
                      if (uE.exec(e)) {
                        var t = e.split('"')[1];
                        return this.elementsByMCID[t];
                      }
                      return [];
                    }
                    if ("#" === (e = e.substr(1)).charAt(0))
                      return Object.prototype.hasOwnProperty.call(
                        this.audioSources,
                        e.substr(1)
                      )
                        ? [this.audioSources[e.substr(1)]]
                        : [];
                    if ("." === e.charAt(0)) {
                      var n = e.substr(1),
                        r = [];
                      for (var i in this.audioSources)
                        i.classes.indexOf(n) >= 0 && r.push(i);
                      return r;
                    }
                  },
                },
                {
                  key: "getMCID",
                  value: function (e) {
                    return e.mcid;
                  },
                },
                {
                  key: "setMCID",
                  value: function (e, t) {
                    e.mcid = t;
                  },
                },
                {
                  key: "getElementSelectorByMCID",
                  value: function (e) {
                    return '[data-mcid="'.concat(e, '"]');
                  },
                },
              ]),
              e
            );
          })(),
          fE = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r) {
              var i;
              u(this, n),
                ((i = t.call(this, e, r)).audioNode = new oE()),
                i.audioNode.connect(U.destination);
              var a = new lE(i.props.audioSources, i.audioNode);
              return (
                (i.ownContext = h(
                  h({}, a.context),
                  {},
                  { isHostedClip: !0, contextLoaded: !0 }
                )),
                (i.audioClip = !0),
                i
              );
            }
            return (
              l(n, [
                {
                  key: "onProgress",
                  value: function (e, t, r) {
                    var i =
                      arguments.length > 3 &&
                      void 0 !== arguments[3] &&
                      arguments[3];
                    x(m(n.prototype), "onProgress", this).call(
                      this,
                      e,
                      t,
                      this.id,
                      i
                    );
                  },
                },
                {
                  key: "_onGetContextOnce",
                  value: function (e) {
                    this.audioNode.disconnect(),
                      (this.parentClipContext = e),
                      this.audioNode.connect(e.masterNode.input);
                  },
                },
                {
                  key: "lastWish",
                  value: function () {
                    this.audioNode.output.disconnect(),
                      this.audioNode.output.connect(U.destination);
                  },
                },
                {
                  key: "setVolume",
                  value: function (e) {
                    this.audioNode.output.gain.value = e;
                  },
                },
              ]),
              n
            );
          })(aE),
          pE = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              return u(this, n), t.apply(this, arguments);
            }
            return (
              l(n, [
                {
                  key: "onProgress",
                  value: function (e) {
                    var t = this;
                    if (!this.element.soundLoaded)
                      return (
                        this.setBlock("loading sound"),
                        this.element.pubSub.sub(this.id, function () {
                          t.unblock();
                        }),
                        !1
                      );
                    if ("gain" === this.attributeKey) {
                      var n =
                        (this.targetValue - this.getInitialValue()) * e +
                        this.getInitialValue();
                      this.element.effectsAudioNode.gainNode.gain.value = n;
                    } else if ("pan" === this.attributeKey) {
                      var r =
                        (this.targetValue - this.getInitialValue()) * e +
                        this.getInitialValue();
                      this.element.effectsAudioNode.pannerNode.pan.value = r;
                    }
                  },
                },
                {
                  key: "getScratchValue",
                  value: function () {
                    return "pan" === this.attributeKey
                      ? Object.prototype.hasOwnProperty.call(
                          this.element.startValues,
                          "pan"
                        )
                        ? this.element.startValues.pan
                        : 0
                      : "gain" === this.attributeKey
                      ? Object.prototype.hasOwnProperty.call(
                          this.element.startValues,
                          "gain"
                        )
                        ? this.element.startValues.gain
                        : 1
                      : void 0;
                  },
                },
              ]),
              n
            );
          })(je),
          hE = "|||",
          dE = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e) {
              var r;
              return (
                u(this, n),
                ((r = t.call(this, e)).playingIncidentsIds = []),
                (r.transitioned = !1),
                e.subscribe(Q(), r._stateChange.bind(g(r)), 0, 1, !0),
                r
              );
            }
            return (
              l(n, [
                {
                  key: "_stateChange",
                  value: function (e, t) {
                    ("paused" !== t && "idle" !== t && "blocked" !== t) ||
                      (this._stopPlayingIncidents(), (this.transitioned = !0));
                  },
                },
                {
                  key: "_stopPlayingIncidents",
                  value: function () {
                    for (var e = 0; e < this.playingIncidentsIds.length; e++) {
                      var t = this.playingIncidentsIds[e].split(hE);
                      this._incidentById(t[0]).stop(t[1]);
                    }
                    this.playingIncidentsIds = [];
                  },
                },
                {
                  key: "moveTo",
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 &&
                      void 0 !== arguments[3] &&
                      arguments[3];
                    if ("transitional" === this.runTimeInfo.state || r) {
                      (this.transitioned = !0), this._stopPlayingIncidents();
                      for (var i = 0; i < this.incidents.length; i++) {
                        var a = this.incidents[i],
                          o = this._incidentById(a.id);
                        t < a.millisecond
                          ? o.onProgress(0, 0, n, !0)
                          : t > a.millisecond + o.duration
                          ? o.onProgress(1, o.duration, n, !0)
                          : o.onProgress(
                              (t - a.millisecond) / o.duration,
                              t - a.millisecond,
                              n,
                              !0
                            );
                      }
                    } else {
                      this.transitioned && ((e = 0), (this.transitioned = !1));
                      for (
                        var s = this,
                          u = Me(this.incidents, function (n) {
                            return (
                              n.millisecond >= e &&
                              n.millisecond < t &&
                              n.millisecond + s._incidentById(n.id).duration > t
                            );
                          }),
                          c = Me(this.incidents, function (n) {
                            return (
                              s._incidentById(n.id).duration + n.millisecond >
                                e &&
                              s._incidentById(n.id).duration + n.millisecond <=
                                t
                            );
                          }),
                          l = 0;
                        l < u.length;
                        l++
                      ) {
                        var f = u[l],
                          p = this._incidentById(f.id),
                          h = (t - f.millisecond) / p.duration >= 1,
                          d = h ? 1 : (t - f.millisecond) / p.duration,
                          m = h ? p.duration : t - f.millisecond,
                          g = p.play(d, m, n);
                        !0 === g &&
                          this.playingIncidentsIds.push(
                            "".concat(f.id).concat(hE).concat(n)
                          );
                      }
                      for (var y = 0; y < c.length; y++) {
                        var v = c[y],
                          b = this._incidentById(v.id);
                        b.stop(n);
                        var x = this.playingIncidentsIds.indexOf(
                          "".concat(v.id).concat(hE).concat(n)
                        );
                        x > -1 && this.playingIncidentsIds.splice(x, 1);
                      }
                      this.runTimeInfo.currentMillisecond = t;
                    }
                  },
                },
              ]),
              n
            );
          })(_e),
          mE = T(null, function (e) {
            return {
              F: function t() {
                var n =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  r =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  i = arguments.length > 2 ? arguments[2] : void 0;
                u(this, t),
                  e(this),
                  (this.attrs = n),
                  (this.props = r),
                  (this.dna = i),
                  (this.context = i.context),
                  (this.mcid = i.mcid),
                  (this.id = r.id || Q()),
                  (this.modelId = r.modelId),
                  (this.gotContext = !1),
                  (this.plugin_channel_class = dE),
                  (this.mc_plugin_npm_name = "motor-cortex-js-media-playback"),
                  Object.prototype.hasOwnProperty.call(
                    r,
                    "plugin_channel_class"
                  ) && (this.plugin_channel_class = r.plugin_channel_class),
                  Object.prototype.hasOwnProperty.call(
                    r,
                    "mc_plugin_npm_name"
                  ) && (this.mc_plugin_npm_name = r.mc_plugin_npm_name),
                  (this.hasIncidents = !1),
                  (this.autoGenerated = !1),
                  this.onInitialise(n, r);
              },
              d: [
                {
                  kind: "get",
                  key: "selector",
                  value: function () {
                    return this.props.selector;
                  },
                },
                {
                  kind: "get",
                  key: "element",
                  value: function () {
                    return this.context.getElementByMCID(this.mcid);
                  },
                },
                {
                  kind: "method",
                  decorators: [De],
                  key: "getIncidentsByChannel",
                  value: function () {},
                },
                {
                  kind: "method",
                  key: "_onGetContextOnce",
                  value: function () {
                    try {
                      if (!0 === this.context.fragment) return;
                      this.gotContext ||
                        (this.onGetContext(), (this.gotContext = !0));
                    } catch (e) {
                      console.log(e), console.log(this.mcid);
                    }
                  },
                },
                {
                  kind: "method",
                  key: "onGetContext",
                  value: function () {
                    ie.info(
                      'Overwritte the "onGetContext" method with the code you want to get executed',
                      "info"
                    );
                  },
                },
                { kind: "method", key: "lastWish", value: function () {} },
                {
                  kind: "method",
                  key: "onInitialise",
                  value: function () {
                    ie.info(
                      'Overwritte the "onInialise" method with the code you want to get executed',
                      "info"
                    );
                  },
                },
                {
                  kind: "method",
                  key: "onProgress",
                  value: function (e, t) {},
                },
                {
                  kind: "method",
                  key: "play",
                  value: function (e) {
                    return !0;
                  },
                },
                { kind: "method", key: "stop", value: function () {} },
                {
                  kind: "method",
                  decorators: [ge],
                  key: "setBlock",
                  value: function () {},
                },
                {
                  kind: "method",
                  decorators: [ve],
                  key: "unblock",
                  value: function () {},
                },
              ],
            };
          }),
          gE = {
            npm_name: "@kissmybutton/motorcortex-soundsystem",
            name: "Internal MotorCortex Soundsystem",
            incidents: [
              {
                exportable: (function (e) {
                  d(n, e);
                  var t = v(n);
                  function n() {
                    return u(this, n), t.apply(this, arguments);
                  }
                  return (
                    l(n, [
                      {
                        key: "play",
                        value: function (e) {
                          var t = this;
                          if (!this.element.soundLoaded)
                            return (
                              this.setBlock("loading sound"),
                              this.element.pubSub.sub(this.id, function () {
                                t.unblock();
                              }),
                              !1
                            );
                          var n = 0;
                          return (
                            Object.prototype.hasOwnProperty.call(
                              this.props,
                              "startFrom"
                            ) && (n = this.props.startFrom),
                            (this.audioNode = U.createBufferSource()),
                            (this.audioNode.buffer = this.element.buffer),
                            this.audioNode.connect(
                              this.element.effectsAudioNode.input
                            ),
                            this.audioNode.start(0, (e + n) / 1e3),
                            !0
                          );
                        },
                      },
                      {
                        key: "stop",
                        value: function () {
                          this.audioNode.stop();
                        },
                      },
                    ]),
                    n
                  );
                })(mE),
                name: "AudioPlayback",
              },
              { exportable: pE, name: "AudioEffect" },
            ],
            Clip: { exportable: fE },
            audio: "only",
          },
          yE = Ne(function (e, t) {
            var n = "__lodash_hash_undefined__",
              r = 9007199254740991,
              i = "[object Arguments]",
              a = "[object Array]",
              o = "[object Boolean]",
              s = "[object Date]",
              u = "[object Error]",
              c = "[object Function]",
              l = "[object Map]",
              f = "[object Number]",
              p = "[object Object]",
              h = "[object Promise]",
              d = "[object RegExp]",
              m = "[object Set]",
              g = "[object String]",
              y = "[object Symbol]",
              v = "[object WeakMap]",
              b = "[object ArrayBuffer]",
              x = "[object DataView]",
              w = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
              N = /^\w*$/,
              E = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
              M = /^\s+|\s+$/g,
              S = /\\(\\)?/g,
              _ = /^[-+]0x[0-9a-f]+$/i,
              k = /^0b[01]+$/i,
              O = /^\[object .+?Constructor\]$/,
              A = /^0o[0-7]+$/i,
              C = /^(?:0|[1-9]\d*)$/,
              T = {};
            (T["[object Float32Array]"] = T["[object Float64Array]"] = T[
              "[object Int8Array]"
            ] = T["[object Int16Array]"] = T["[object Int32Array]"] = T[
              "[object Uint8Array]"
            ] = T["[object Uint8ClampedArray]"] = T["[object Uint16Array]"] = T[
              "[object Uint32Array]"
            ] = !0),
              (T[i] = T[a] = T[b] = T[o] = T[x] = T[s] = T[u] = T[c] = T[l] = T[
                f
              ] = T[p] = T[d] = T[m] = T[g] = T[v] = !1);
            var I = parseInt,
              P = "object" == typeof xe && xe && xe.Object === Object && xe,
              B =
                "object" == typeof self &&
                self &&
                self.Object === Object &&
                self,
              D = P || B || Function("return this")(),
              j = t && !t.nodeType && t,
              R = j && e && !e.nodeType && e,
              L = R && R.exports === j,
              z = L && P.process,
              q = (function () {
                try {
                  return z && z.binding && z.binding("util");
                } catch (e) {}
              })(),
              F = q && q.isTypedArray;
            function U(e, t) {
              for (var n = -1, r = null == e ? 0 : e.length; ++n < r; )
                if (t(e[n], n, e)) return !0;
              return !1;
            }
            function V(e) {
              var t = -1,
                n = Array(e.size);
              return (
                e.forEach(function (e, r) {
                  n[++t] = [r, e];
                }),
                n
              );
            }
            function $(e) {
              var t = -1,
                n = Array(e.size);
              return (
                e.forEach(function (e) {
                  n[++t] = e;
                }),
                n
              );
            }
            var H,
              W,
              G,
              J = Array.prototype,
              Y = Function.prototype,
              Z = Object.prototype,
              X = D["__core-js_shared__"],
              K = Y.toString,
              Q = Z.hasOwnProperty,
              ee = (H = /[^.]+$/.exec((X && X.keys && X.keys.IE_PROTO) || ""))
                ? "Symbol(src)_1." + H
                : "",
              te = Z.toString,
              ne = RegExp(
                "^" +
                  K.call(Q)
                    .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                    .replace(
                      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                      "$1.*?"
                    ) +
                  "$"
              ),
              re = L ? D.Buffer : void 0,
              ie = D.Symbol,
              ae = D.Uint8Array,
              oe = Z.propertyIsEnumerable,
              se = J.splice,
              ue = ie ? ie.toStringTag : void 0,
              ce = Object.getOwnPropertySymbols,
              le = re ? re.isBuffer : void 0,
              fe =
                ((W = Object.keys),
                (G = Object),
                function (e) {
                  return W(G(e));
                }),
              pe = Math.max,
              he = $e(D, "DataView"),
              de = $e(D, "Map"),
              me = $e(D, "Promise"),
              ge = $e(D, "Set"),
              ye = $e(D, "WeakMap"),
              ve = $e(Object, "create"),
              be = Qe(he),
              we = Qe(de),
              Ne = Qe(me),
              Ee = Qe(ge),
              Me = Qe(ye),
              Se = ie ? ie.prototype : void 0,
              _e = Se ? Se.valueOf : void 0,
              ke = Se ? Se.toString : void 0;
            function Oe(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Ae(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Ce(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
              }
            }
            function Te(e) {
              var t = -1,
                n = null == e ? 0 : e.length;
              for (this.__data__ = new Ce(); ++t < n; ) this.add(e[t]);
            }
            function Ie(e) {
              var t = (this.__data__ = new Ae(e));
              this.size = t.size;
            }
            function Pe(e, t) {
              for (var n = e.length; n--; ) if (tt(e[n][0], t)) return n;
              return -1;
            }
            function Be(e, t) {
              for (var n = 0, r = (t = qe(t, e)).length; null != e && n < r; )
                e = e[Ke(t[n++])];
              return n && n == r ? e : void 0;
            }
            function De(e) {
              return null == e
                ? void 0 === e
                  ? "[object Undefined]"
                  : "[object Null]"
                : ue && ue in Object(e)
                ? (function (e) {
                    var t = Q.call(e, ue),
                      n = e[ue];
                    try {
                      e[ue] = void 0;
                      var r = !0;
                    } catch (e) {}
                    var i = te.call(e);
                    return r && (t ? (e[ue] = n) : delete e[ue]), i;
                  })(e)
                : (function (e) {
                    return te.call(e);
                  })(e);
            }
            function je(e, t) {
              return null != e && t in Object(e);
            }
            function Re(e) {
              return ut(e) && De(e) == i;
            }
            function Le(e, t, n, r, c) {
              return (
                e === t ||
                (null == e || null == t || (!ut(e) && !ut(t))
                  ? e != e && t != t
                  : (function (e, t, n, r, c, h) {
                      var v = rt(e),
                        w = rt(t),
                        N = v ? a : We(e),
                        E = w ? a : We(t),
                        M = (N = N == i ? p : N) == p,
                        S = (E = E == i ? p : E) == p,
                        _ = N == E;
                      if (_ && it(e)) {
                        if (!it(t)) return !1;
                        (v = !0), (M = !1);
                      }
                      if (_ && !M)
                        return (
                          h || (h = new Ie()),
                          v || lt(e)
                            ? Fe(e, t, n, r, c, h)
                            : (function (e, t, n, r, i, a, c) {
                                switch (n) {
                                  case x:
                                    if (
                                      e.byteLength != t.byteLength ||
                                      e.byteOffset != t.byteOffset
                                    )
                                      return !1;
                                    (e = e.buffer), (t = t.buffer);
                                  case b:
                                    return !(
                                      e.byteLength != t.byteLength ||
                                      !a(new ae(e), new ae(t))
                                    );
                                  case o:
                                  case s:
                                  case f:
                                    return tt(+e, +t);
                                  case u:
                                    return (
                                      e.name == t.name && e.message == t.message
                                    );
                                  case d:
                                  case g:
                                    return e == t + "";
                                  case l:
                                    var p = V;
                                  case m:
                                    var h = 1 & r;
                                    if ((p || (p = $), e.size != t.size && !h))
                                      return !1;
                                    var v = c.get(e);
                                    if (v) return v == t;
                                    (r |= 2), c.set(e, t);
                                    var w = Fe(p(e), p(t), r, i, a, c);
                                    return c.delete(e), w;
                                  case y:
                                    if (_e) return _e.call(e) == _e.call(t);
                                }
                                return !1;
                              })(e, t, N, n, r, c, h)
                        );
                      if (!(1 & n)) {
                        var k = M && Q.call(e, "__wrapped__"),
                          O = S && Q.call(t, "__wrapped__");
                        if (k || O) {
                          var A = k ? e.value() : e,
                            C = O ? t.value() : t;
                          return h || (h = new Ie()), c(A, C, n, r, h);
                        }
                      }
                      return (
                        !!_ &&
                        (h || (h = new Ie()),
                        (function (e, t, n, r, i, a) {
                          var o = 1 & n,
                            s = Ue(e),
                            u = s.length;
                          if (u != Ue(t).length && !o) return !1;
                          for (var c = u; c--; ) {
                            var l = s[c];
                            if (!(o ? l in t : Q.call(t, l))) return !1;
                          }
                          var f = a.get(e);
                          if (f && a.get(t)) return f == t;
                          var p = !0;
                          a.set(e, t), a.set(t, e);
                          for (var h = o; ++c < u; ) {
                            var d = e[(l = s[c])],
                              m = t[l];
                            if (r)
                              var g = o
                                ? r(m, d, l, t, e, a)
                                : r(d, m, l, e, t, a);
                            if (
                              !(void 0 === g ? d === m || i(d, m, n, r, a) : g)
                            ) {
                              p = !1;
                              break;
                            }
                            h || (h = "constructor" == l);
                          }
                          if (p && !h) {
                            var y = e.constructor,
                              v = t.constructor;
                            y == v ||
                              !("constructor" in e) ||
                              !("constructor" in t) ||
                              ("function" == typeof y &&
                                y instanceof y &&
                                "function" == typeof v &&
                                v instanceof v) ||
                              (p = !1);
                          }
                          return a.delete(e), a.delete(t), p;
                        })(e, t, n, r, c, h))
                      );
                    })(e, t, n, r, Le, c))
              );
            }
            function ze(e) {
              if ("string" == typeof e) return e;
              if (rt(e))
                return (
                  (function (e, t) {
                    for (
                      var n = -1, r = null == e ? 0 : e.length, i = Array(r);
                      ++n < r;

                    )
                      i[n] = t(e[n], n, e);
                    return i;
                  })(e, ze) + ""
                );
              if (ct(e)) return ke ? ke.call(e) : "";
              var t = e + "";
              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function qe(e, t) {
              return rt(e)
                ? e
                : Je(e, t)
                ? [e]
                : Xe(
                    (function (e) {
                      return null == e ? "" : ze(e);
                    })(e)
                  );
            }
            function Fe(e, t, n, r, i, a) {
              var o = 1 & n,
                s = e.length,
                u = t.length;
              if (s != u && !(o && u > s)) return !1;
              var c = a.get(e);
              if (c && a.get(t)) return c == t;
              var l = -1,
                f = !0,
                p = 2 & n ? new Te() : void 0;
              for (a.set(e, t), a.set(t, e); ++l < s; ) {
                var h = e[l],
                  d = t[l];
                if (r) var m = o ? r(d, h, l, t, e, a) : r(h, d, l, e, t, a);
                if (void 0 !== m) {
                  if (m) continue;
                  f = !1;
                  break;
                }
                if (p) {
                  if (
                    !U(t, function (e, t) {
                      if (((o = t), !p.has(o) && (h === e || i(h, e, n, r, a))))
                        return p.push(t);
                      var o;
                    })
                  ) {
                    f = !1;
                    break;
                  }
                } else if (h !== d && !i(h, d, n, r, a)) {
                  f = !1;
                  break;
                }
              }
              return a.delete(e), a.delete(t), f;
            }
            function Ue(e) {
              return (function (e, t, n) {
                var r = t(e);
                return rt(e)
                  ? r
                  : (function (e, t) {
                      for (var n = -1, r = t.length, i = e.length; ++n < r; )
                        e[i + n] = t[n];
                      return e;
                    })(r, n(e));
              })(e, ft, He);
            }
            function Ve(e, t) {
              var n,
                r,
                i = e.__data__;
              return (
                "string" == (r = typeof (n = t)) ||
                "number" == r ||
                "symbol" == r ||
                "boolean" == r
                  ? "__proto__" !== n
                  : null === n
              )
                ? i["string" == typeof t ? "string" : "hash"]
                : i.map;
            }
            function $e(e, t) {
              var n = (function (e, t) {
                return null == e ? void 0 : e[t];
              })(e, t);
              return (function (e) {
                return (
                  !(
                    !st(e) ||
                    (function (e) {
                      return !!ee && ee in e;
                    })(e)
                  ) && (at(e) ? ne : O).test(Qe(e))
                );
              })(n)
                ? n
                : void 0;
            }
            (Oe.prototype.clear = function () {
              (this.__data__ = ve ? ve(null) : {}), (this.size = 0);
            }),
              (Oe.prototype.delete = function (e) {
                var t = this.has(e) && delete this.__data__[e];
                return (this.size -= t ? 1 : 0), t;
              }),
              (Oe.prototype.get = function (e) {
                var t = this.__data__;
                if (ve) {
                  var r = t[e];
                  return r === n ? void 0 : r;
                }
                return Q.call(t, e) ? t[e] : void 0;
              }),
              (Oe.prototype.has = function (e) {
                var t = this.__data__;
                return ve ? void 0 !== t[e] : Q.call(t, e);
              }),
              (Oe.prototype.set = function (e, t) {
                var r = this.__data__;
                return (
                  (this.size += this.has(e) ? 0 : 1),
                  (r[e] = ve && void 0 === t ? n : t),
                  this
                );
              }),
              (Ae.prototype.clear = function () {
                (this.__data__ = []), (this.size = 0);
              }),
              (Ae.prototype.delete = function (e) {
                var t = this.__data__,
                  n = Pe(t, e);
                return !(
                  n < 0 ||
                  (n == t.length - 1 ? t.pop() : se.call(t, n, 1),
                  --this.size,
                  0)
                );
              }),
              (Ae.prototype.get = function (e) {
                var t = this.__data__,
                  n = Pe(t, e);
                return n < 0 ? void 0 : t[n][1];
              }),
              (Ae.prototype.has = function (e) {
                return Pe(this.__data__, e) > -1;
              }),
              (Ae.prototype.set = function (e, t) {
                var n = this.__data__,
                  r = Pe(n, e);
                return (
                  r < 0 ? (++this.size, n.push([e, t])) : (n[r][1] = t), this
                );
              }),
              (Ce.prototype.clear = function () {
                (this.size = 0),
                  (this.__data__ = {
                    hash: new Oe(),
                    map: new (de || Ae)(),
                    string: new Oe(),
                  });
              }),
              (Ce.prototype.delete = function (e) {
                var t = Ve(this, e).delete(e);
                return (this.size -= t ? 1 : 0), t;
              }),
              (Ce.prototype.get = function (e) {
                return Ve(this, e).get(e);
              }),
              (Ce.prototype.has = function (e) {
                return Ve(this, e).has(e);
              }),
              (Ce.prototype.set = function (e, t) {
                var n = Ve(this, e),
                  r = n.size;
                return n.set(e, t), (this.size += n.size == r ? 0 : 1), this;
              }),
              (Te.prototype.add = Te.prototype.push = function (e) {
                return this.__data__.set(e, n), this;
              }),
              (Te.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (Ie.prototype.clear = function () {
                (this.__data__ = new Ae()), (this.size = 0);
              }),
              (Ie.prototype.delete = function (e) {
                var t = this.__data__,
                  n = t.delete(e);
                return (this.size = t.size), n;
              }),
              (Ie.prototype.get = function (e) {
                return this.__data__.get(e);
              }),
              (Ie.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (Ie.prototype.set = function (e, t) {
                var n = this.__data__;
                if (n instanceof Ae) {
                  var r = n.__data__;
                  if (!de || r.length < 199)
                    return r.push([e, t]), (this.size = ++n.size), this;
                  n = this.__data__ = new Ce(r);
                }
                return n.set(e, t), (this.size = n.size), this;
              });
            var He = ce
                ? function (e) {
                    return null == e
                      ? []
                      : ((e = Object(e)),
                        (function (e, t) {
                          for (
                            var n = -1,
                              r = null == e ? 0 : e.length,
                              i = 0,
                              a = [];
                            ++n < r;

                          ) {
                            var o = e[n];
                            t(o) && (a[i++] = o);
                          }
                          return a;
                        })(ce(e), function (t) {
                          return oe.call(e, t);
                        }));
                  }
                : function () {
                    return [];
                  },
              We = De;
            function Ge(e, t) {
              var n = typeof e;
              return (
                !!(t = null == t ? r : t) &&
                ("number" == n || ("symbol" != n && C.test(e))) &&
                e > -1 &&
                e % 1 == 0 &&
                e < t
              );
            }
            function Je(e, t) {
              if (rt(e)) return !1;
              var n = typeof e;
              return (
                !(
                  "number" != n &&
                  "symbol" != n &&
                  "boolean" != n &&
                  null != e &&
                  !ct(e)
                ) ||
                N.test(e) ||
                !w.test(e) ||
                (null != t && e in Object(t))
              );
            }
            function Ye(e) {
              return e == e && !st(e);
            }
            function Ze(e, t) {
              return function (n) {
                return (
                  null != n && n[e] === t && (void 0 !== t || e in Object(n))
                );
              };
            }
            ((he && We(new he(new ArrayBuffer(1))) != x) ||
              (de && We(new de()) != l) ||
              (me && We(me.resolve()) != h) ||
              (ge && We(new ge()) != m) ||
              (ye && We(new ye()) != v)) &&
              (We = function (e) {
                var t = De(e),
                  n = t == p ? e.constructor : void 0,
                  r = n ? Qe(n) : "";
                if (r)
                  switch (r) {
                    case be:
                      return x;
                    case we:
                      return l;
                    case Ne:
                      return h;
                    case Ee:
                      return m;
                    case Me:
                      return v;
                  }
                return t;
              });
            var Xe = (function (e) {
              var t = et(
                  function (e) {
                    var t = [];
                    return (
                      46 === e.charCodeAt(0) && t.push(""),
                      e.replace(E, function (e, n, r, i) {
                        t.push(r ? i.replace(S, "$1") : n || e);
                      }),
                      t
                    );
                  },
                  function (e) {
                    return 500 === n.size && n.clear(), e;
                  }
                ),
                n = t.cache;
              return t;
            })();
            function Ke(e) {
              if ("string" == typeof e || ct(e)) return e;
              var t = e + "";
              return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function Qe(e) {
              if (null != e) {
                try {
                  return K.call(e);
                } catch (e) {}
                try {
                  return e + "";
                } catch (e) {}
              }
              return "";
            }
            function et(e, t) {
              if (
                "function" != typeof e ||
                (null != t && "function" != typeof t)
              )
                throw new TypeError("Expected a function");
              var n = function () {
                var r = arguments,
                  i = t ? t.apply(this, r) : r[0],
                  a = n.cache;
                if (a.has(i)) return a.get(i);
                var o = e.apply(this, r);
                return (n.cache = a.set(i, o) || a), o;
              };
              return (n.cache = new (et.Cache || Ce)()), n;
            }
            function tt(e, t) {
              return e === t || (e != e && t != t);
            }
            et.Cache = Ce;
            var nt = Re(
                (function () {
                  return arguments;
                })()
              )
                ? Re
                : function (e) {
                    return (
                      ut(e) && Q.call(e, "callee") && !oe.call(e, "callee")
                    );
                  },
              rt = Array.isArray,
              it =
                le ||
                function () {
                  return !1;
                };
            function at(e) {
              if (!st(e)) return !1;
              var t = De(e);
              return (
                t == c ||
                "[object GeneratorFunction]" == t ||
                "[object AsyncFunction]" == t ||
                "[object Proxy]" == t
              );
            }
            function ot(e) {
              return "number" == typeof e && e > -1 && e % 1 == 0 && e <= r;
            }
            function st(e) {
              var t = typeof e;
              return null != e && ("object" == t || "function" == t);
            }
            function ut(e) {
              return null != e && "object" == typeof e;
            }
            function ct(e) {
              return "symbol" == typeof e || (ut(e) && De(e) == y);
            }
            var lt = F
              ? (function (e) {
                  return function (t) {
                    return e(t);
                  };
                })(F)
              : function (e) {
                  return ut(e) && ot(e.length) && !!T[De(e)];
                };
            function ft(e) {
              return null != (t = e) && ot(t.length) && !at(t)
                ? (function (e, t) {
                    var n = rt(e),
                      r = !n && nt(e),
                      i = !n && !r && it(e),
                      a = !n && !r && !i && lt(e),
                      o = n || r || i || a,
                      s = o
                        ? (function (e, t) {
                            for (var n = -1, r = Array(e); ++n < e; )
                              r[n] = t(n);
                            return r;
                          })(e.length, String)
                        : [],
                      u = s.length;
                    for (var c in e)
                      (!t && !Q.call(e, c)) ||
                        (o &&
                          ("length" == c ||
                            (i && ("offset" == c || "parent" == c)) ||
                            (a &&
                              ("buffer" == c ||
                                "byteLength" == c ||
                                "byteOffset" == c)) ||
                            Ge(c, u))) ||
                        s.push(c);
                    return s;
                  })(e)
                : (function (e) {
                    if (
                      ((n = (t = e) && t.constructor),
                      t !== (("function" == typeof n && n.prototype) || Z))
                    )
                      return fe(e);
                    var t,
                      n,
                      r = [];
                    for (var i in Object(e))
                      Q.call(e, i) && "constructor" != i && r.push(i);
                    return r;
                  })(e);
              var t;
            }
            function pt(e) {
              return e;
            }
            e.exports = function (e, t, n) {
              var r = null == e ? 0 : e.length;
              if (!r) return -1;
              var i,
                a,
                o =
                  null == n
                    ? 0
                    : ((a =
                        (i = (function (e) {
                          return e
                            ? (e = (function (e) {
                                if ("number" == typeof e) return e;
                                if (ct(e)) return NaN;
                                if (st(e)) {
                                  var t =
                                    "function" == typeof e.valueOf
                                      ? e.valueOf()
                                      : e;
                                  e = st(t) ? t + "" : t;
                                }
                                if ("string" != typeof e)
                                  return 0 === e ? e : +e;
                                e = e.replace(M, "");
                                var n = k.test(e);
                                return n || A.test(e)
                                  ? I(e.slice(2), n ? 2 : 8)
                                  : _.test(e)
                                  ? NaN
                                  : +e;
                              })(e)) ===
                                1 / 0 || e === -1 / 0
                              ? 17976931348623157e292 * (e < 0 ? -1 : 1)
                              : e == e
                              ? e
                              : 0
                            : 0 === e
                            ? e
                            : 0;
                        })(n)) % 1),
                      i == i ? (a ? i - a : i) : 0);
              return (
                o < 0 && (o = pe(r + o, 0)),
                (function (e, t, n, r) {
                  for (var i = e.length, a = n + -1; ++a < i; )
                    if (t(e[a], a, e)) return a;
                  return -1;
                })(
                  e,
                  (function (e) {
                    return "function" == typeof e
                      ? e
                      : null == e
                      ? pt
                      : "object" == typeof e
                      ? rt(e)
                        ? (function (e, t) {
                            return Je(e) && Ye(t)
                              ? Ze(Ke(e), t)
                              : function (n) {
                                  var r = (function (e, t, n) {
                                    var r = null == e ? void 0 : Be(e, t);
                                    return void 0 === r ? void 0 : r;
                                  })(n, e);
                                  return void 0 === r && r === t
                                    ? (function (e, t) {
                                        return (
                                          null != e &&
                                          (function (e, t, n) {
                                            for (
                                              var r = -1,
                                                i = (t = qe(t, e)).length,
                                                a = !1;
                                              ++r < i;

                                            ) {
                                              var o = Ke(t[r]);
                                              if (!(a = null != e && n(e, o)))
                                                break;
                                              e = e[o];
                                            }
                                            return a || ++r != i
                                              ? a
                                              : !!(i =
                                                  null == e ? 0 : e.length) &&
                                                  ot(i) &&
                                                  Ge(o, i) &&
                                                  (rt(e) || nt(e));
                                          })(e, t, je)
                                        );
                                      })(n, e)
                                    : Le(t, r, 3);
                                };
                          })(e[0], e[1])
                        : (function (e) {
                            var t = (function (e) {
                              for (var t = ft(e), n = t.length; n--; ) {
                                var r = t[n],
                                  i = e[r];
                                t[n] = [r, i, Ye(i)];
                              }
                              return t;
                            })(e);
                            return 1 == t.length && t[0][2]
                              ? Ze(t[0][0], t[0][1])
                              : function (n) {
                                  return (
                                    n === e ||
                                    (function (e, t, n, r) {
                                      var i = n.length,
                                        a = i;
                                      if (null == e) return !a;
                                      for (e = Object(e); i--; ) {
                                        var o = n[i];
                                        if (
                                          o[2] ? o[1] !== e[o[0]] : !(o[0] in e)
                                        )
                                          return !1;
                                      }
                                      for (; ++i < a; ) {
                                        var s = (o = n[i])[0],
                                          u = e[s],
                                          c = o[1];
                                        if (o[2]) {
                                          if (void 0 === u && !(s in e))
                                            return !1;
                                        } else {
                                          var l,
                                            f = new Ie();
                                          if (
                                            !(void 0 === l
                                              ? Le(c, u, 3, r, f)
                                              : l)
                                          )
                                            return !1;
                                        }
                                      }
                                      return !0;
                                    })(n, 0, t)
                                  );
                                };
                          })(e)
                      : (function (e) {
                          return Je(e)
                            ? ((t = Ke(e)),
                              function (e) {
                                return null == e ? void 0 : e[t];
                              })
                            : (function (e) {
                                return function (t) {
                                  return Be(t, e);
                                };
                              })(e);
                          var t;
                        })(e);
                  })(t),
                  o
                )
              );
            };
          }),
          vE = (function () {
            function e() {
              var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null;
              u(this, e),
                (this.realArray = []),
                null != t && (this.realArray = t);
            }
            return (
              l(e, [
                {
                  key: "_hasOwnProperty",
                  value: function (e) {
                    return Object.prototype.hasOwnProperty.call(
                      this.realArray,
                      e
                    );
                  },
                },
                {
                  key: "_get",
                  value: function (e) {
                    return this.realArray[e];
                  },
                },
                {
                  key: "_set",
                  value: function (e, t) {
                    this.realArray[e] = t;
                  },
                },
                {
                  key: "_keys",
                  value: function () {
                    return Object.keys(this.realArray);
                  },
                },
                {
                  key: "_delete",
                  value: function (e) {
                    return delete this.realArray[e];
                  },
                },
                {
                  key: "_export",
                  value: function () {
                    return this.realArray;
                  },
                },
              ]),
              e
            );
          })();
        function bE(e, t, n, r) {
          var i = !1;
          for (var a in t)
            Object.prototype.hasOwnProperty.call(n, a) ||
              ((i = !0), (r[a] = t[a]));
          return (e.animatedAttributeValue = r), i;
        }
        function xE(e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
            a = e[r],
            o = t._get(a.id);
          o.setInitialValue(n, i);
          var s = bE(
            o,
            o.initialValue,
            o.originalAnimatedAttributeValue,
            JSON.parse(JSON.stringify(o.animatedAttributeValue))
          );
          s && (o.lastWish(), o.onGetContext()),
            s &&
              r < e.length - 1 &&
              xE(e, t, o.animatedAttributeValue, r + 1, !1);
        }
        var wE,
          NE = (function () {
            function e(t) {
              u(this, e),
                (this.originalArray = t),
                (this.extraArray = {}),
                (this.addedKeys = []),
                (this.removedKeys = []);
            }
            return (
              l(e, [
                {
                  key: "_hasOwnProperty",
                  value: function (e) {
                    return (
                      Object.prototype.hasOwnProperty.call(
                        this.originalArray,
                        e
                      ) ||
                      Object.prototype.hasOwnProperty.call(this.extraArray, e)
                    );
                  },
                },
                {
                  key: "_get",
                  value: function (e) {
                    return Object.prototype.hasOwnProperty.call(
                      this.extraArray,
                      e
                    )
                      ? this.extraArray[e]
                      : Object.prototype.hasOwnProperty.call(
                          this.originalArray,
                          e
                        )
                      ? ((this.extraArray[e] = h({}, this.originalArray[e])),
                        this.extraArray[e])
                      : void 0;
                  },
                },
                {
                  key: "_set",
                  value: function (e, t) {
                    (this.extraArray[e] = t),
                      Object.prototype.hasOwnProperty.call(
                        this.originalArray,
                        e
                      ) || this.addedKeys.push(e);
                    var n = this.removedKeys.indexOf(e);
                    n > -1 && this.removedKeys.splice(n, 1);
                  },
                },
                {
                  key: "_keys",
                  value: function () {
                    for (
                      var e = Object.keys(this.originalArray).concat(
                          this.addedKeys
                        ),
                        t = 0;
                      t < this.removedKeys.length;
                      t++
                    ) {
                      var n = this.removedKeys.indexOf(this.removedKeys[t]);
                      e.splice(n, 1);
                    }
                    return e;
                  },
                },
                {
                  key: "_delete",
                  value: function (e) {
                    var t = this.addedKeys.indexOf(e);
                    return t > -1
                      ? (this.addedKeys.splice(t), delete this.extraArray[e])
                      : this.removedKeys.push(e);
                  },
                },
                {
                  key: "_export",
                  value: function () {
                    for (var e in this.extraArray)
                      this.originalArray[e] = this.extraArray[e];
                    for (var t = 0; t < this.removedKeys.length; t++)
                      delete this.originalArray[this.removedKeys[t]];
                    return this.originalArray;
                  },
                },
              ]),
              e
            );
          })(),
          EE = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              return u(this, n), t.apply(this, arguments);
            }
            return (
              l(n, [
                {
                  key: "_get",
                  value: function (e) {
                    return Object.prototype.hasOwnProperty.call(
                      this.extraArray,
                      e
                    )
                      ? this.extraArray[e]
                      : Object.prototype.hasOwnProperty.call(
                          this.originalArray,
                          e
                        )
                      ? this.originalArray[e]
                      : void 0;
                  },
                },
              ]),
              n
            );
          })(NE),
          ME = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              return u(this, n), t.apply(this, arguments);
            }
            return (
              l(n, [
                {
                  key: "_get",
                  value: function (e) {
                    if (
                      Object.prototype.hasOwnProperty.call(this.extraArray, e)
                    )
                      return this.extraArray[e];
                    if (
                      Object.prototype.hasOwnProperty.call(
                        this.originalArray,
                        e
                      )
                    ) {
                      this.extraArray[e] = [];
                      for (var t = 0; t < this.originalArray[e].length; t++)
                        this.extraArray[e].push({
                          id: this.originalArray[e][t].id,
                          millisecond: 1 * this.originalArray[e][t].millisecond,
                        });
                      return this.extraArray[e];
                    }
                  },
                },
              ]),
              n
            );
          })(NE),
          SE = (function () {
            function e() {
              var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              u(this, e),
                (this.lanes = new vE({})),
                t.lanes && (this.lanes = t.lanes),
                (this.comboAttributes = {}),
                null != t.comboAttributes &&
                  (this.comboAttributes = t.comboAttributes),
                (this.runTimeInfo = t.runTimeInfo),
                (this.belongingLaneKeysByAnimationId = new vE({})),
                t.belongingLaneKeysByAnimationId &&
                  (this.belongingLaneKeysByAnimationId =
                    t.belongingLaneKeysByAnimationId),
                (this.incidentsById = new vE({})),
                t.incidentsById && (this.incidentsById = t.incidentsById);
            }
            return (
              l(e, [
                {
                  key: "_resize",
                  value: function (e) {
                    for (var t = this.lanes._keys(), n = 0; n < t.length; n++)
                      for (
                        var r = t[n], i = this.lanes._get(r), a = 0;
                        a < i.length;
                        a++
                      )
                        i[a].millisecond = i[a].millisecond * e;
                  },
                },
                {
                  key: "createTestLanesSanbox",
                  value: function () {
                    var t = {
                      lanes: new ME(this.lanes._export()),
                      belongingLaneKeysByAnimationId: new NE(
                        this.belongingLaneKeysByAnimationId._export()
                      ),
                      incidentsById: new EE(this.incidentsById._export()),
                    };
                    return (
                      this.comboAttributes &&
                        (t.comboAttributes = this.comboAttributes),
                      new e(t)
                    );
                  },
                },
                {
                  key: "getLanesCopy",
                  value: function (e) {
                    for (var t = [], n = 0; n < e.length; n++)
                      t.push({
                        id: e[n].id,
                        millisecond: 1 * e[n].millisecond,
                      });
                    return t;
                  },
                },
                {
                  key: "getLaneElementsClone",
                  value: function (e) {
                    return { id: e.id, millisecond: 1 * e.millisecond };
                  },
                },
                {
                  key: "applySandboxChanges",
                  value: function (e) {
                    (this.lanes = new vE(e.lanes._export())),
                      (this.belongingLaneKeysByAnimationId = new vE(
                        e.belongingLaneKeysByAnimationId._export()
                      )),
                      (this.incidentsById = new vE(e.incidentsById._export()));
                  },
                },
                {
                  key: "getLane",
                  value: function (e, t) {
                    return this.lanes._get(te(e, t));
                  },
                },
                {
                  key: "laneExists",
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 &&
                        void 0 !== arguments[2] &&
                        arguments[2],
                      r = te(e, t);
                    return (
                      !!this.lanes._hasOwnProperty(r) ||
                      (n && this.lanes._set(r, []), !1)
                    );
                  },
                },
                {
                  key: "getOverlappingAnims",
                  value: function (e, t, n) {
                    var r =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : [],
                      i =
                        arguments.length > 4 && void 0 !== arguments[4]
                          ? arguments[4]
                          : null,
                      a = this,
                      o = Me(this.lanes._get(te(t, n)), function (t) {
                        var n = e.incident.duration;
                        return (
                          null != i && (n = i),
                          t.id !== e.incident.id &&
                            r.indexOf(t.id) < 0 &&
                            ((t.millisecond >= e.millisecond &&
                              t.millisecond < n + e.millisecond) ||
                              (t.millisecond +
                                a.incidentsById._get(t.id).duration >
                                e.millisecond &&
                                t.millisecond +
                                  a.incidentsById._get(t.id).duration <=
                                  n + e.millisecond) ||
                              (t.millisecond < e.millisecond &&
                                t.millisecond +
                                  a.incidentsById._get(t.id).duration >
                                  n + e.millisecond))
                        );
                      });
                    return o;
                  },
                },
                {
                  key: "addElementToLane",
                  value: function (e, t, n, r) {
                    var i = te(e, t);
                    this.incidentsById._set(r.id, r);
                    var a = { millisecond: n, id: r.id };
                    this.laneExists(e, t, !0);
                    var o = this.lanes._get(i);
                    o.push(a),
                      (o = Se(o, ["millisecond"])),
                      this.lanes._set(i, o),
                      this.belongingLaneKeysByAnimationId._hasOwnProperty(
                        r.id
                      ) || this.belongingLaneKeysByAnimationId._set(r.id, []),
                      this.belongingLaneKeysByAnimationId._get(r.id).push(i);
                    var s = yE(o, function (e) {
                      return e.id === r.id;
                    });
                    if (
                      (0 === s
                        ? o.length > 1
                          ? r.setInitialValue(
                              this.incidentsById._get(o[1].id).pureInitialValues
                            )
                          : r.setInitialValue()
                        : r.setInitialValue(
                            this.incidentsById._get(o[s - 1].id)
                              .animatedAttributeValue
                          ),
                      Object.prototype.hasOwnProperty.call(
                        this.comboAttributes,
                        t
                      ))
                    ) {
                      var u = r.initialValue;
                      xE(o, this.incidentsById, u, s);
                    }
                    s + 1 < o.length &&
                      (this.incidentsById
                        ._get(o[s + 1].id)
                        .setInitialValue(r.animatedAttributeValue),
                      this.incidentsById._get(o[s + 1].id).gotContext &&
                        (this.incidentsById._get(o[s + 1].id).lastWish(),
                        this.incidentsById._get(o[s + 1].id).onGetContext()));
                  },
                },
                {
                  key: "updateLane",
                  value: function (e, t) {
                    for (var n = this, r = {}, i = 0; i < e.length; i++)
                      for (
                        var a = this.belongingLaneKeysByAnimationId._get(e[i]),
                          o = 0;
                        o < a.length;
                        o++
                      ) {
                        var s = a[o];
                        Object.prototype.hasOwnProperty.call(r, s) ||
                          (r[s] = {
                            animations: [],
                            lane: this.lanes._get(s),
                            laneData: X(a[o]),
                          }),
                          r[s].animations.push(e[i]);
                      }
                    for (var u in r) {
                      for (
                        var c = r[u],
                          l = c.lane,
                          f = c.laneData,
                          p = Se(this.getLanesCopy(l), ["millisecond"]),
                          h = Object.prototype.hasOwnProperty.call(
                            this.comboAttributes,
                            f.attribute
                          ),
                          d = 0;
                        d < l.length;
                        d++
                      )
                        c.animations.indexOf(l[d].id) >= 0 &&
                          (l[d].millisecond += t);
                      var m = Se(l, ["millisecond"]);
                      this.lanes._set(u, m), (l = m);
                      for (
                        var g = function (e) {
                            var t = c.animations[e],
                              r = yE(p, function (e) {
                                return e.id === t;
                              }),
                              i = yE(l, function (e) {
                                return e.id === t;
                              }),
                              a = n.incidentsById._get(l[i].id);
                            if (r !== i || i > 1) {
                              if (r + 1 < l.length)
                                if (0 === r)
                                  h
                                    ? xE(
                                        l,
                                        n.incidentsById,
                                        a.pureInitialValues,
                                        0,
                                        !0
                                      )
                                    : (n.incidentsById
                                        ._get(p[1].id)
                                        .setInitialValue(a.pureInitialValues),
                                      n.incidentsById
                                        ._get(p[1].id)
                                        .onGetContext());
                                else if (h) {
                                  var o = i > r ? r : i;
                                  xE(
                                    l,
                                    n.incidentsById,
                                    n.incidentsById._get(p[r - 1].id)
                                      .animatedAttributeValue,
                                    o,
                                    !0
                                  );
                                } else
                                  n.incidentsById
                                    ._get(p[r + 1].id)
                                    .setInitialValue(
                                      n.incidentsById._get(p[r - 1].id)
                                        .animatedAttributeValue
                                    ),
                                    n.incidentsById
                                      ._get(p[r + 1].id)
                                      .onGetContext();
                              0 === i
                                ? h
                                  ? xE(
                                      l,
                                      n.incidentsById,
                                      n.incidentsById._get(p[0].id)
                                        .pureInitialValues,
                                      i,
                                      !0
                                    )
                                  : (a.setInitialValue(
                                      n.incidentsById._get(p[0].id)
                                        .pureInitialValues
                                    ),
                                    a.onGetContext())
                                : h
                                ? xE(
                                    l,
                                    n.incidentsById,
                                    n.incidentsById._get(l[i - 1].id)
                                      .animatedAttributeValue,
                                    i,
                                    !0
                                  )
                                : (a.setInitialValue(
                                    n.incidentsById._get(l[i - 1].id)
                                      .animatedAttributeValue
                                  ),
                                  a.onGetContext()),
                                i + 1 < l.length &&
                                  (h
                                    ? xE(
                                        l,
                                        n.incidentsById,
                                        a.animatedAttributeValue,
                                        i + 1,
                                        !0
                                      )
                                    : (n.incidentsById
                                        ._get(l[i + 1].id)
                                        .setInitialValue(
                                          a.animatedAttributeValue
                                        ),
                                      n.incidentsById
                                        ._get(l[i + 1].id)
                                        .onGetContext()));
                            }
                          },
                          y = 0;
                        y < c.animations.length;
                        y++
                      )
                        g(y);
                    }
                  },
                },
                {
                  key: "deleteAnimations",
                  value: function (e) {
                    for (var t = {}, n = 0; n < e.length; n++) {
                      for (
                        var r = e[n],
                          i = this.belongingLaneKeysByAnimationId._get(r),
                          a = 0;
                        a < i.length;
                        a++
                      ) {
                        for (
                          var o = this.lanes._get(i[a]), s = -1, u = 0;
                          u < o.length;
                          u++
                        )
                          if (o[u].id === r) {
                            s = u;
                            break;
                          }
                        for (
                          var c = h({}, o[s]),
                            l = this.incidentsById._get(c.id),
                            f = X(i[a]),
                            p = [],
                            d = 0;
                          d < o.length;
                          d++
                        )
                          o[d].id !== r && p.push(o[d]);
                        this.lanes._set(i[a], p),
                          0 === (o = this.lanes._get(i[a])).length
                            ? (l.onProgress(0, 0),
                              this.lanes._delete(i[a]),
                              Object.prototype.hasOwnProperty.call(t, i[a]) &&
                                delete t[i[a]])
                            : ((t[i[a]] = X(i[a])),
                              s < o.length &&
                                !1 !==
                                  this.incidentsById._get(c.id)
                                    .pureInitialValues &&
                                (Object.prototype.hasOwnProperty.call(
                                  this.comboAttributes,
                                  f.attribute
                                )
                                  ? xE(
                                      o,
                                      this.incidentsById,
                                      this.incidentsById._get(c.id)
                                        .pureInitialValues,
                                      s,
                                      !0
                                    )
                                  : (this.incidentsById
                                      ._get(o[s].id)
                                      .setInitialValue(
                                        this.incidentsById._get(c.id)
                                          .pureInitialValues
                                      ),
                                    this.incidentsById
                                      ._get(o[s].id)
                                      .onGetContext())));
                      }
                      this.belongingLaneKeysByAnimationId._delete(e[n]);
                    }
                    return t;
                  },
                },
                {
                  key: "recalcScratchValues",
                  value: function (e) {
                    for (var t = this.lanes._keys(), n = 0; n < t.length; n++) {
                      var r = t[n],
                        i = this.lanes._get(r);
                      if (i.length > 0) {
                        var a = this.incidentsById._get(i[0].id),
                          o = a.getScratchValue(e),
                          s = X(r);
                        Object.prototype.hasOwnProperty.call(
                          this.comboAttributes,
                          s.attribute
                        )
                          ? xE(i, this.incidentsById, o, 0, !0)
                          : a.setInitialValue(o),
                          a.lastWish(),
                          a.onGetContext();
                      }
                    }
                  },
                },
              ]),
              e
            );
          })(),
          _E = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e) {
              var r;
              return (
                u(this, n),
                ((r = t.call(this, e)).comboAttributes = {}),
                (r.fixedAttributeName = "_"),
                null != e.comboAttributes &&
                  (r.comboAttributes = e.comboAttributes),
                (r.LanesHandler = new SE({
                  comboAttributes: r.comboAttributes,
                  runTimeInfo: r.runTimeInfo,
                })),
                r
              );
            }
            return (
              l(
                n,
                [
                  {
                    key: "setComboAttributes",
                    value: function (e) {
                      (this.comboAttributes = e),
                        (this.LanesHandler = new SE({
                          comboAttributes: this.comboAttributes,
                        }));
                    },
                  },
                  {
                    key: "_resize",
                    value: function (e) {
                      this.LanesHandler._resize(e);
                    },
                  },
                  {
                    key: "checkAddition",
                    value: function (e) {
                      for (
                        var t = this,
                          n =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : "all-or-nothing",
                          r = this.LanesHandler.createTestLanesSanbox(),
                          i = [],
                          a = [],
                          o = function (n) {
                            var o = !1,
                              s = e[n],
                              u = s.incident,
                              c = u.mcid,
                              l = u.attribute || t.fixedAttributeName;
                            r.laneExists(c, l);
                            var f = r.getOverlappingAnims(s, c, l);
                            f.length > 0 &&
                              ((o = !0),
                              a.push({
                                type:
                                  "unauthorised, overlapping incidents on the same element",
                                meta: {
                                  element_mcid: c,
                                  attribute: l,
                                  incident: s,
                                  overlappingAnims: f,
                                },
                              })),
                              o ||
                                i.push(function () {
                                  r.addElementToLane(c, l, s.millisecond, u),
                                    u._onGetContextOnce();
                                });
                          },
                          s = 0;
                        s < e.length;
                        s++
                      )
                        o(s);
                      if (a.length > 0 && "all-or-nothing" === n)
                        return { result: !1, errors: a };
                      var u = this,
                        c = function () {
                          for (var e = 0; e < i.length; e++) i[e]();
                          u.LanesHandler.applySandboxChanges(r);
                        };
                      return { result: !0, errors: a, execute: c };
                    },
                  },
                  {
                    key: "checkEdit",
                    value: function (e, t) {
                      for (var n = [], r = 0; r < e.length; r++)
                        n.push(e[r].id);
                      for (
                        var i = this.LanesHandler.createTestLanesSanbox(),
                          a = [],
                          o = 0;
                        o < e.length;
                        o++
                      )
                        for (
                          var s = e[o].incident.id,
                            u = e[o].incident.mcid,
                            c =
                              e[o].incident.attribute ||
                              this.fixedAttributeName,
                            l = i.getLane(u, c),
                            f = 0;
                          f < l.length;
                          f++
                        )
                          if (l[f].id === s) {
                            var p = l[f],
                              h = i.getLaneElementsClone(p);
                            (h.millisecond += t),
                              (h.incident = i.incidentsById._get(h.id));
                            var d = i.getOverlappingAnims(h, u, c, n);
                            d.length > 0 &&
                              a.push({
                                type:
                                  "anauthorised, overlapping animations on the same element",
                                meta: {
                                  element_mcid: u,
                                  attribute: c,
                                  newAnimation: h,
                                  overlappingAnims: d,
                                },
                              });
                            break;
                          }
                      if (a.length > 0) return { result: !1, errors: a };
                      var m = this;
                      return {
                        result: !0,
                        execute: function () {
                          m.LanesHandler.updateLane(n, t);
                        },
                      };
                    },
                  },
                  {
                    key: "checkResizedIncidents",
                    value: function (e) {
                      for (
                        var t =
                            arguments.length > 1 &&
                            void 0 !== arguments[1] &&
                            arguments[1],
                          n = [],
                          r = 0;
                        r < e.length;
                        r++
                      )
                        n.push(e[r].id);
                      for (
                        var i = this.LanesHandler.createTestLanesSanbox(),
                          a = [],
                          o = 0;
                        o < e.length;
                        o++
                      )
                        for (
                          var s = this.LanesHandler.incidentsById._get(e[o].id),
                            u = s.mcid,
                            c = s.attribute || this.fixedAttributeName,
                            l = i.getLane(u, c),
                            f = { mcid: u, attribute: c },
                            p = e[o].end - e[o].start,
                            h = 0;
                          h < l.length;
                          h++
                        )
                          if (l[h].id === e[o].id) {
                            if (!t) {
                              var d = l[h],
                                m = i.getLaneElementsClone(d);
                              (m.millisecond += e[o].startDelta),
                                (m.incident = i.incidentsById._get(m.id));
                              var g = i.getOverlappingAnims(
                                m,
                                f.mcid,
                                f.attribute,
                                n,
                                p
                              );
                              g.length > 0 &&
                                a.push({
                                  type:
                                    "anauthorised overlapping animations on the same element",
                                  meta: {
                                    element_mcid: f.mcid,
                                    attribute: f.attribute,
                                    newAnimation: m,
                                    overlappingAnims: g,
                                  },
                                });
                            }
                            break;
                          }
                      if (a.length > 0) return { result: !1, errors: a };
                      var y = this,
                        v = function () {
                          for (var t = 0; t < e.length; t++)
                            y.LanesHandler.updateLane(
                              [e[t].id],
                              e[t].startDelta
                            );
                        };
                      return { execute: v, result: !0 };
                    },
                  },
                  {
                    key: "checkDelete",
                    value: function (e) {
                      for (var t = [], n = 0; n < e.length; n++)
                        t.push(e[n].id);
                      var r = this;
                      return {
                        result: !0,
                        execute: function () {
                          r.LanesHandler.deleteAnimations(t);
                        },
                      };
                    },
                  },
                  {
                    key: "recalcScratchValues",
                    value: function (e) {
                      this.LanesHandler.recalcScratchValues(e);
                    },
                  },
                  {
                    key: "slipIntoLaneForwards",
                    value: function (e, t, n, r, i) {
                      var a =
                          arguments.length > 5 &&
                          void 0 !== arguments[5] &&
                          arguments[5],
                        o = this,
                        s = Me(e, function (e) {
                          return (
                            (e.millisecond +
                              o.incidentsById._get(e.id).duration >=
                              n &&
                              e.millisecond +
                                o.incidentsById._get(e.id).duration <=
                                r) ||
                            (o.incidentsById._get(e.id).duration +
                              e.millisecond >=
                              r &&
                              e.millisecond <= r)
                          );
                        });
                      if (0 === s.length) {
                        if (a && 0 === n) {
                          var u = this.incidentsById._get(e[0].id);
                          u.onProgress(0, 0, i);
                        }
                        return !0;
                      }
                      var c =
                          (s = Se(s, [
                            function (e) {
                              return e.millisecond;
                            },
                          ])).length - 1,
                        l = this.incidentsById._get(s[c].id),
                        f = s[c].millisecond;
                      if (l.duration + f <= r) l.onProgress(1, l.duration, i);
                      else {
                        var p = (r - f) / l.duration;
                        l.onProgress(p, r - f, i);
                      }
                    },
                  },
                  {
                    key: "slipToLaneBackwards",
                    value: function (e, t, n, r, i) {
                      var a = this,
                        o = Me(e, function (e) {
                          var t =
                            a.incidentsById._get(e.id).duration + e.millisecond;
                          return (
                            (t <= r && t >= n) ||
                            (e.millisecond >= n && e.millisecond <= r) ||
                            (e.millisecond < n && t > r)
                          );
                        });
                      if (0 === o.length) return !0;
                      o = Se(o, [
                        function (e) {
                          return e.millisecond;
                        },
                      ]);
                      var s = this.incidentsById._get(o[0].id),
                        u = o[0].millisecond;
                      if (u >= r) s.onProgress(0, 0, i);
                      else {
                        var c = (r - u) / s.duration;
                        s.onProgress(c, r - u, i);
                      }
                    },
                  },
                  {
                    key: "moveTo",
                    value: function (e, t, n) {
                      for (
                        var r =
                            arguments.length > 3 &&
                            void 0 !== arguments[3] &&
                            arguments[3],
                          i = this.lanes._keys(),
                          a = 0;
                        a < i.length;
                        a++
                      ) {
                        var o = i[a],
                          s = this.lanes._get(o),
                          u = X(o);
                        e <= t
                          ? this.slipIntoLaneForwards(s, u, e, t, n, r)
                          : e > t && this.slipToLaneBackwards(s, u, e, t, n, r);
                      }
                    },
                  },
                  {
                    key: "lanes",
                    get: function () {
                      return this.LanesHandler.lanes;
                    },
                  },
                  {
                    key: "incidentsById",
                    get: function () {
                      return this.LanesHandler.incidentsById;
                    },
                  },
                ],
                [
                  {
                    key: "type",
                    get: function () {
                      return "attributes";
                    },
                  },
                ]
              ),
              n
            );
          })(oe),
          kE = (function () {
            function e() {
              u(this, e), (this.customEntities = {});
            }
            return (
              l(e, [
                {
                  key: "calcClipDims",
                  value: function (e) {
                    var t = { use: !1, width: null, height: null };
                    return Object.prototype.hasOwnProperty.call(
                      e,
                      "originalDims"
                    ) &&
                      null !== e.originalDims.width &&
                      void 0 !== e.originalDims.width &&
                      null !== e.originalDims.height &&
                      void 0 !== e.originalDims.height
                      ? {
                          use: !0,
                          width:
                            e.originalDims.width.number +
                            e.originalDims.width.unit,
                          height:
                            e.originalDims.height.number +
                            e.originalDims.height.unit,
                        }
                      : (Object.prototype.hasOwnProperty.call(
                          e,
                          "containerParams"
                        ) &&
                          (Object.prototype.hasOwnProperty.call(
                            e.containerParams,
                            "width"
                          ) &&
                            ((t.use = !0), (t.width = e.containerParams.width)),
                          Object.prototype.hasOwnProperty.call(
                            e.containerParams,
                            "height"
                          ) &&
                            ((t.use = !0),
                            (t.height = e.containerParams.height))),
                        t);
                  },
                },
                {
                  key: "scalingCalculator",
                  value: function (e) {
                    if (
                      !Object.prototype.hasOwnProperty.call(
                        e,
                        "containerParams"
                      ) ||
                      !Object.prototype.hasOwnProperty.call(e, "originalDims")
                    )
                      return { width: 1, height: 1 };
                    if (
                      !(
                        (null !== e.originalDims.width &&
                          void 0 !== e.originalDims.width) ||
                        (null !== e.originalDims.height &&
                          void 0 !== e.originalDims.height)
                      )
                    )
                      return { width: 1, height: 1 };
                    var t = Y(e.containerParams),
                      n = null,
                      r = null;
                    return (
                      null !== t.width &&
                        null !== e.originalDims.width &&
                        (t.width.unit === e.originalDims.width.unit
                          ? (n = t.width.number / e.originalDims.width.number)
                          : ie.warning(
                              "containerParams and originalDims width of Incident have different dimensions.\n          containerParams.width will be ignored"
                            )),
                      null !== t.height &&
                        null !== e.originalDims.height &&
                        (t.height.unit === e.originalDims.height.unit
                          ? (r = t.height.number / e.originalDims.height.number)
                          : ie.warning(
                              "containerParams and originalDims height of Incident have different dimensions.\n          containerParams.width will be ignored"
                            )),
                      null === n && null === r
                        ? { width: 1, height: 1 }
                        : ((null !== n) & (null === r)
                            ? (r = n)
                            : (null !== r) & (null === n) && (n = r),
                          { width: n, height: r })
                    );
                  },
                },
                {
                  key: "getElementByMCID",
                  value: function (e) {
                    if (
                      Object.prototype.hasOwnProperty.call(
                        this.customEntities,
                        e
                      )
                    )
                      return this.customEntities[e];
                    if (
                      Object.prototype.hasOwnProperty.call(
                        this.elementsByMCID,
                        e
                      )
                    )
                      return this.elementsByMCID[e];
                    var t = this.context.rootElement.querySelector(
                      this.getElementSelectorByMCID(e)
                    );
                    return (this.elementsByMCID[e] = t), t;
                  },
                },
                {
                  key: "getElements",
                  value: function (e) {
                    if (null == e || "" === e) return [];
                    if ("!" === e.charAt(0)) {
                      if ("#" === (e = e.substr(1)).charAt(0))
                        return [this.customEntities[e.substr(1)]];
                      if ("." === e.charAt(0)) {
                        var t = [];
                        for (var n in this.customEntities) {
                          var r = this.customEntities[n];
                          r.classes.indexOf(e.substr(1)) > -1 && t.push(r);
                        }
                        return t;
                      }
                    }
                    return Array.from(
                      this.context.rootElement.querySelectorAll(e)
                    );
                  },
                },
                {
                  key: "getMCID",
                  value: function (e) {
                    return !0 === e.customEntity ? e.id : e.getAttribute(L);
                  },
                },
                {
                  key: "setMCID",
                  value: function (e, t) {
                    e.setAttribute(L, t);
                  },
                },
                {
                  key: "getElementSelectorByMCID",
                  value: function (e) {
                    return Object.prototype.hasOwnProperty.call(
                      this.customEntities,
                      e
                    )
                      ? "!#".concat(e)
                      : "[".concat(L, '="').concat(e, '"]');
                  },
                },
                {
                  key: "setCustomEntity",
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : [];
                    return Object.prototype.hasOwnProperty.call(
                      this.customEntities,
                      e
                    )
                      ? (ie.error(
                          "Clip "
                            .concat(
                              this.id,
                              " already has custom Entity with id: "
                            )
                            .concat(e)
                        ),
                        !1)
                      : ((this.customEntities[e] = {
                          id: e,
                          entity: t,
                          classes: n,
                          customEntity: !0,
                        }),
                        !0);
                  },
                },
              ]),
              e
            );
          })(),
          OE = Ne(function (e, t) {
            var n = /[|\\{}()[\]^$+*?.]/g;
            t.escapeRegExpChars = function (e) {
              return e ? String(e).replace(n, "\\$&") : "";
            };
            var r = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&#34;",
                "'": "&#39;",
              },
              i = /[&<>'"]/g;
            function a(e) {
              return r[e] || e;
            }
            (t.escapeXML = function (e) {
              return null == e ? "" : String(e).replace(i, a);
            }),
              (t.escapeXML.toString = function () {
                return (
                  Function.prototype.toString.call(this) +
                  ';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'
                );
              }),
              (t.shallowCopy = function (e, t) {
                for (var n in (t = t || {})) e[n] = t[n];
                return e;
              }),
              (t.shallowCopyFromList = function (e, t, n) {
                for (var r = 0; r < n.length; r++) {
                  var i = n[r];
                  void 0 !== t[i] && (e[i] = t[i]);
                }
                return e;
              }),
              (t.cache = {
                _data: {},
                set: function (e, t) {
                  this._data[e] = t;
                },
                get: function (e) {
                  return this._data[e];
                },
                remove: function (e) {
                  delete this._data[e];
                },
                reset: function () {
                  this._data = {};
                },
              }),
              (t.hyphenToCamel = function (e) {
                return e.replace(/-[a-z]/g, function (e) {
                  return e[1].toUpperCase();
                });
              });
          }),
          AE =
            (OE.escapeRegExpChars,
            OE.escapeXML,
            OE.shallowCopy,
            OE.shallowCopyFromList,
            OE.cache,
            OE.hyphenToCamel,
            "ejs@^3.1.5"),
          CE = "ejs@3.1.5",
          TE =
            "sha512-dldq3ZfFtgVTJMLjOe+/3sROTzALlL9E34V4/sDtUd/KlBSS0s6U1/+WPE1B4sj9CXHJpL1M6rhNJnc9Wbal9w==",
          IE = {},
          PE = {
            type: "range",
            registry: !0,
            raw: "ejs@^3.1.5",
            name: "ejs",
            escapedName: "ejs",
            rawSpec: "^3.1.5",
            saveSpec: null,
            fetchSpec: "^3.1.5",
          },
          BE = ["#DEV:/"],
          DE = "https://registry.npmjs.org/ejs/-/ejs-3.1.5.tgz",
          jE = "aed723844dc20acb4b170cd9ab1017e476a0d93b",
          RE = "ejs@^3.1.5",
          LE = "/home/ec2-user/environment/motorcortex2",
          zE = {
            name: "Matthew Eernisse",
            email: "mde@fleegix.org",
            url: "http://fleegix.org",
          },
          qE = { ejs: "./bin/cli.js" },
          FE = { url: "https://github.com/mde/ejs/issues" },
          UE = { jake: "^10.6.1" },
          VE = "Embedded JavaScript templates",
          $E = {
            browserify: "^16.5.1",
            eslint: "^6.8.0",
            "git-directory-deploy": "^1.5.1",
            jsdoc: "^3.6.4",
            "lru-cache": "^4.0.1",
            mocha: "^7.1.1",
            "uglify-js": "^3.3.16",
          },
          HE = { node: ">=0.10.0" },
          WE = "https://github.com/mde/ejs",
          GE = "ejs.min.js",
          JE = ["template", "engine", "ejs"],
          YE = "Apache-2.0",
          ZE = "./lib/ejs.js",
          XE = { type: "git", url: "git://github.com/mde/ejs.git" },
          KE = { test: "mocha" },
          QE = "ejs.min.js",
          eM = {
            _from: AE,
            _id: CE,
            _inBundle: !1,
            _integrity: TE,
            _location: "/ejs",
            _phantomChildren: IE,
            _requested: PE,
            _requiredBy: BE,
            _resolved: DE,
            _shasum: jE,
            _spec: RE,
            _where: LE,
            author: zE,
            bin: qE,
            bugs: FE,
            bundleDependencies: !1,
            dependencies: UE,
            deprecated: !1,
            description: VE,
            devDependencies: $E,
            engines: HE,
            homepage: WE,
            jsdelivr: GE,
            keywords: JE,
            license: YE,
            main: ZE,
            name: "ejs",
            repository: XE,
            scripts: KE,
            unpkg: QE,
            version: "3.1.5",
          },
          tM =
            ((wE = Object.freeze({
              __proto__: null,
              _from: AE,
              _id: CE,
              _inBundle: !1,
              _integrity: TE,
              _location: "/ejs",
              _phantomChildren: IE,
              _requested: PE,
              _requiredBy: BE,
              _resolved: DE,
              _shasum: jE,
              _spec: RE,
              _where: LE,
              author: zE,
              bin: qE,
              bugs: FE,
              bundleDependencies: !1,
              dependencies: UE,
              deprecated: !1,
              description: VE,
              devDependencies: $E,
              engines: HE,
              homepage: WE,
              jsdelivr: GE,
              keywords: JE,
              license: YE,
              main: ZE,
              name: "ejs",
              repository: XE,
              scripts: KE,
              unpkg: QE,
              version: "3.1.5",
              default: eM,
            })) &&
              wE.default) ||
            wE,
          nM = Ne(function (e, t) {
            /**
             * @file Embedded JavaScript templating engine. {@link http://ejs.co}
             * @author Matthew Eernisse <mde@fleegix.org>
             * @author Tiancheng "Timothy" Gu <timothygu99@gmail.com>
             * @project EJS
             * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}
             */
            var n = o.default,
              r = !1,
              i = tM.version,
              s = "locals",
              u = [
                "delimiter",
                "scope",
                "context",
                "debug",
                "compileDebug",
                "client",
                "_with",
                "rmWhitespace",
                "strict",
                "filename",
                "async",
              ],
              c = u.concat("cache"),
              l = /^\uFEFF/;
            function f(e, n) {
              var r;
              if (
                n.some(function (n) {
                  return (
                    (r = t.resolveInclude(e, n, !0)), a.default.existsSync(r)
                  );
                })
              )
                return r;
            }
            function p(e, n) {
              var r,
                i = e.filename,
                a = arguments.length > 1;
              if (e.cache) {
                if (!i) throw new Error("cache option requires a filename");
                if ((r = t.cache.get(i))) return r;
                a || (n = d(i).toString().replace(l, ""));
              } else if (!a) {
                if (!i)
                  throw new Error(
                    "Internal EJS error: no file name or template provided"
                  );
                n = d(i).toString().replace(l, "");
              }
              return (r = t.compile(n, e)), e.cache && t.cache.set(i, r), r;
            }
            function h(e, n, r) {
              var i;
              if (!r) {
                if ("function" == typeof t.promiseImpl)
                  return new t.promiseImpl(function (t, r) {
                    try {
                      t((i = p(e)(n)));
                    } catch (e) {
                      r(e);
                    }
                  });
                throw new Error("Please provide a callback function");
              }
              try {
                i = p(e)(n);
              } catch (e) {
                return r(e);
              }
              r(null, i);
            }
            function d(e) {
              return t.fileLoader(e);
            }
            function m(e, n) {
              var r = OE.shallowCopy({}, n);
              if (
                ((r.filename = (function (e, n) {
                  var r,
                    i,
                    o = n.views,
                    s = /^[A-Za-z]+:\\|^\//.exec(e);
                  if (s && s.length)
                    (e = e.replace(/^\/*/, "")),
                      (r = Array.isArray(n.root)
                        ? f(e, n.root)
                        : t.resolveInclude(e, n.root || "/", !0));
                  else if (
                    (n.filename &&
                      ((i = t.resolveInclude(e, n.filename)),
                      a.default.existsSync(i) && (r = i)),
                    !r && Array.isArray(o) && (r = f(e, o)),
                    !r && "function" != typeof n.includer)
                  )
                    throw new Error(
                      'Could not find the include file "' +
                        n.escapeFunction(e) +
                        '"'
                    );
                  return r;
                })(e, r)),
                "function" == typeof n.includer)
              ) {
                var i = n.includer(e, r.filename);
                if (i && (i.filename && (r.filename = i.filename), i.template))
                  return p(r, i.template);
              }
              return p(r);
            }
            function g(e, t, n, r, i) {
              var a = t.split("\n"),
                o = Math.max(r - 3, 0),
                s = Math.min(a.length, r + 3),
                u = i(n),
                c = a
                  .slice(o, s)
                  .map(function (e, t) {
                    var n = t + o + 1;
                    return (n == r ? " >> " : "    ") + n + "| " + e;
                  })
                  .join("\n");
              throw (
                ((e.path = u),
                (e.message =
                  (u || "ejs") + ":" + r + "\n" + c + "\n\n" + e.message),
                e)
              );
            }
            function y(e) {
              return e.replace(/;(\s*$)/, "$1");
            }
            function v(e, n) {
              n = n || {};
              var r = {};
              (this.templateText = e),
                (this.mode = null),
                (this.truncate = !1),
                (this.currentLine = 1),
                (this.source = ""),
                (r.client = n.client || !1),
                (r.escapeFunction =
                  n.escape || n.escapeFunction || OE.escapeXML),
                (r.compileDebug = !1 !== n.compileDebug),
                (r.debug = !!n.debug),
                (r.filename = n.filename),
                (r.openDelimiter = n.openDelimiter || t.openDelimiter || "<"),
                (r.closeDelimiter =
                  n.closeDelimiter || t.closeDelimiter || ">"),
                (r.delimiter = n.delimiter || t.delimiter || "%"),
                (r.strict = n.strict || !1),
                (r.context = n.context),
                (r.cache = n.cache || !1),
                (r.rmWhitespace = n.rmWhitespace),
                (r.root = n.root),
                (r.includer = n.includer),
                (r.outputFunctionName = n.outputFunctionName),
                (r.localsName = n.localsName || t.localsName || s),
                (r.views = n.views),
                (r.async = n.async),
                (r.destructuredLocals = n.destructuredLocals),
                (r.legacyInclude =
                  void 0 === n.legacyInclude || !!n.legacyInclude),
                r.strict
                  ? (r._with = !1)
                  : (r._with = void 0 === n._with || n._with),
                (this.opts = r),
                (this.regex = this.createRegex());
            }
            (t.cache = OE.cache),
              (t.fileLoader = a.default.readFileSync),
              (t.localsName = s),
              (t.promiseImpl = new Function("return this;")().Promise),
              (t.resolveInclude = function (e, t, r) {
                var i = n.dirname,
                  a = n.extname,
                  o = (0, n.resolve)(r ? t : i(t), e);
                return a(e) || (o += ".ejs"), o;
              }),
              (t.compile = function (e, t) {
                return (
                  t &&
                    t.scope &&
                    (r ||
                      (console.warn(
                        "`scope` option is deprecated and will be removed in EJS 3"
                      ),
                      (r = !0)),
                    t.context || (t.context = t.scope),
                    delete t.scope),
                  new v(e, t).compile()
                );
              }),
              (t.render = function (e, t, n) {
                var r = t || {},
                  i = n || {};
                return (
                  2 == arguments.length && OE.shallowCopyFromList(i, r, u),
                  p(i, e)(r)
                );
              }),
              (t.renderFile = function () {
                var e,
                  t,
                  n,
                  r = Array.prototype.slice.call(arguments),
                  i = r.shift(),
                  a = { filename: i };
                return (
                  "function" == typeof arguments[arguments.length - 1] &&
                    (e = r.pop()),
                  r.length
                    ? ((t = r.shift()),
                      r.length
                        ? OE.shallowCopy(a, r.pop())
                        : (t.settings &&
                            (t.settings.views && (a.views = t.settings.views),
                            t.settings["view cache"] && (a.cache = !0),
                            (n = t.settings["view options"]) &&
                              OE.shallowCopy(a, n)),
                          OE.shallowCopyFromList(a, t, c)),
                      (a.filename = i))
                    : (t = {}),
                  h(a, t, e)
                );
              }),
              (t.Template = v),
              (t.clearCache = function () {
                t.cache.reset();
              }),
              (v.modes = {
                EVAL: "eval",
                ESCAPED: "escaped",
                RAW: "raw",
                COMMENT: "comment",
                LITERAL: "literal",
              }),
              (v.prototype = {
                createRegex: function () {
                  var e = "(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",
                    t = OE.escapeRegExpChars(this.opts.delimiter),
                    n = OE.escapeRegExpChars(this.opts.openDelimiter),
                    r = OE.escapeRegExpChars(this.opts.closeDelimiter);
                  return (
                    (e = e.replace(/%/g, t).replace(/</g, n).replace(/>/g, r)),
                    new RegExp(e)
                  );
                },
                compile: function () {
                  var e,
                    t,
                    r,
                    i = this.opts,
                    a = "",
                    o = "",
                    s = i.escapeFunction;
                  if (!this.source) {
                    if (
                      (this.generateSource(),
                      (a +=
                        '  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n'),
                      i.outputFunctionName &&
                        (a +=
                          "  var " + i.outputFunctionName + " = __append;\n"),
                      i.destructuredLocals && i.destructuredLocals.length)
                    ) {
                      for (
                        var u =
                            "  var __locals = (" + i.localsName + " || {}),\n",
                          c = 0;
                        c < i.destructuredLocals.length;
                        c++
                      ) {
                        var l = i.destructuredLocals[c];
                        c > 0 && (u += ",\n  "), (u += l + " = __locals." + l);
                      }
                      a += u + ";\n";
                    }
                    !1 !== i._with &&
                      ((a += "  with (" + i.localsName + " || {}) {\n"),
                      (o += "  }\n")),
                      (o += "  return __output;\n"),
                      (this.source = a + this.source + o);
                  }
                  (e = i.compileDebug
                    ? "var __line = 1\n  , __lines = " +
                      JSON.stringify(this.templateText) +
                      "\n  , __filename = " +
                      (i.filename ? JSON.stringify(i.filename) : "undefined") +
                      ";\ntry {\n" +
                      this.source +
                      "} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n"
                    : this.source),
                    i.client &&
                      ((e =
                        "escapeFn = escapeFn || " + s.toString() + ";\n" + e),
                      i.compileDebug &&
                        (e =
                          "rethrow = rethrow || " + g.toString() + ";\n" + e)),
                    i.strict && (e = '"use strict";\n' + e),
                    i.debug && console.log(e),
                    i.compileDebug &&
                      i.filename &&
                      (e = e + "\n//# sourceURL=" + i.filename + "\n");
                  try {
                    if (i.async)
                      try {
                        r = new Function(
                          "return (async function(){}).constructor;"
                        )();
                      } catch (e) {
                        throw e instanceof SyntaxError
                          ? new Error(
                              "This environment does not support async/await"
                            )
                          : e;
                      }
                    else r = Function;
                    t = new r(i.localsName + ", escapeFn, include, rethrow", e);
                  } catch (e) {
                    throw (
                      (e instanceof SyntaxError &&
                        (i.filename && (e.message += " in " + i.filename),
                        (e.message += " while compiling ejs\n\n"),
                        (e.message +=
                          "If the above error is not helpful, you may want to try EJS-Lint:\n"),
                        (e.message += "https://github.com/RyanZim/EJS-Lint"),
                        i.async ||
                          ((e.message += "\n"),
                          (e.message +=
                            "Or, if you meant to create an async function, pass `async: true` as an option."))),
                      e)
                    );
                  }
                  var f = i.client
                    ? t
                    : function (e) {
                        return t.apply(i.context, [
                          e || {},
                          s,
                          function (t, n) {
                            var r = OE.shallowCopy({}, e);
                            return n && (r = OE.shallowCopy(r, n)), m(t, i)(r);
                          },
                          g,
                        ]);
                      };
                  if (
                    i.filename &&
                    "function" == typeof Object.defineProperty
                  ) {
                    var p = i.filename,
                      h = n.basename(p, n.extname(p));
                    try {
                      Object.defineProperty(f, "name", {
                        value: h,
                        writable: !1,
                        enumerable: !1,
                        configurable: !0,
                      });
                    } catch (e) {}
                  }
                  return f;
                },
                generateSource: function () {
                  this.opts.rmWhitespace &&
                    (this.templateText = this.templateText
                      .replace(/[\r\n]+/g, "\n")
                      .replace(/^\s+|\s+$/gm, "")),
                    (this.templateText = this.templateText
                      .replace(/[ \t]*<%_/gm, "<%_")
                      .replace(/_%>[ \t]*/gm, "_%>"));
                  var e = this,
                    t = this.parseTemplateText(),
                    n = this.opts.delimiter,
                    r = this.opts.openDelimiter,
                    i = this.opts.closeDelimiter;
                  t &&
                    t.length &&
                    t.forEach(function (a, o) {
                      var s;
                      if (
                        0 === a.indexOf(r + n) &&
                        0 !== a.indexOf(r + n + n) &&
                        (s = t[o + 2]) != n + i &&
                        s != "-" + n + i &&
                        s != "_" + n + i
                      )
                        throw new Error(
                          'Could not find matching close tag for "' + a + '".'
                        );
                      e.scanLine(a);
                    });
                },
                parseTemplateText: function () {
                  for (
                    var e,
                      t = this.templateText,
                      n = this.regex,
                      r = n.exec(t),
                      i = [];
                    r;

                  )
                    0 !== (e = r.index) &&
                      (i.push(t.substring(0, e)), (t = t.slice(e))),
                      i.push(r[0]),
                      (t = t.slice(r[0].length)),
                      (r = n.exec(t));
                  return t && i.push(t), i;
                },
                _addOutput: function (e) {
                  if (
                    (this.truncate &&
                      ((e = e.replace(/^(?:\r\n|\r|\n)/, "")),
                      (this.truncate = !1)),
                    !e)
                  )
                    return e;
                  (e = (e = (e = (e = e.replace(/\\/g, "\\\\")).replace(
                    /\n/g,
                    "\\n"
                  )).replace(/\r/g, "\\r")).replace(/"/g, '\\"')),
                    (this.source += '    ; __append("' + e + '")\n');
                },
                scanLine: function (e) {
                  var t,
                    n = this.opts.delimiter,
                    r = this.opts.openDelimiter,
                    i = this.opts.closeDelimiter;
                  switch (((t = e.split("\n").length - 1), e)) {
                    case r + n:
                    case r + n + "_":
                      this.mode = v.modes.EVAL;
                      break;
                    case r + n + "=":
                      this.mode = v.modes.ESCAPED;
                      break;
                    case r + n + "-":
                      this.mode = v.modes.RAW;
                      break;
                    case r + n + "#":
                      this.mode = v.modes.COMMENT;
                      break;
                    case r + n + n:
                      (this.mode = v.modes.LITERAL),
                        (this.source +=
                          '    ; __append("' +
                          e.replace(r + n + n, r + n) +
                          '")\n');
                      break;
                    case n + n + i:
                      (this.mode = v.modes.LITERAL),
                        (this.source +=
                          '    ; __append("' +
                          e.replace(n + n + i, n + i) +
                          '")\n');
                      break;
                    case n + i:
                    case "-" + n + i:
                    case "_" + n + i:
                      this.mode == v.modes.LITERAL && this._addOutput(e),
                        (this.mode = null),
                        (this.truncate =
                          0 === e.indexOf("-") || 0 === e.indexOf("_"));
                      break;
                    default:
                      if (this.mode) {
                        switch (this.mode) {
                          case v.modes.EVAL:
                          case v.modes.ESCAPED:
                          case v.modes.RAW:
                            e.lastIndexOf("//") > e.lastIndexOf("\n") &&
                              (e += "\n");
                        }
                        switch (this.mode) {
                          case v.modes.EVAL:
                            this.source += "    ; " + e + "\n";
                            break;
                          case v.modes.ESCAPED:
                            this.source +=
                              "    ; __append(escapeFn(" + y(e) + "))\n";
                            break;
                          case v.modes.RAW:
                            this.source += "    ; __append(" + y(e) + ")\n";
                            break;
                          case v.modes.COMMENT:
                            break;
                          case v.modes.LITERAL:
                            this._addOutput(e);
                        }
                      } else this._addOutput(e);
                  }
                  this.opts.compileDebug &&
                    t &&
                    ((this.currentLine += t),
                    (this.source +=
                      "    ; __line = " + this.currentLine + "\n"));
                },
              }),
              (t.escapeXML = OE.escapeXML),
              (t.__express = t.renderFile),
              (t.VERSION = i),
              (t.name = "ejs"),
              "undefined" != typeof window && (window.ejs = t);
          });
        function rM(e) {
          e.descriptor.value = function (e, t) {
            return W(e) ? e(t) : nM.render(e, { initParams: t });
          };
        }
        nM.cache,
          nM.fileLoader,
          nM.localsName,
          nM.promiseImpl,
          nM.resolveInclude,
          nM.compile,
          nM.render,
          nM.renderFile,
          nM.Template,
          nM.clearCache,
          nM.escapeXML,
          nM.__express,
          nM.VERSION,
          nM.name;
        var iM = T(
            null,
            function (e, t) {
              return {
                F: (function (t) {
                  d(r, t);
                  var n = v(r);
                  function r() {
                    var t,
                      i =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                    if ((u(this, r), (t = n.call(this)), e(g(t)), !H(i)))
                      return (
                        ie.error(
                          "ContextHandler expects an object on its constructor. ".concat(
                            s(i),
                            " passed"
                          )
                        ),
                        y(t, !1)
                      );
                    if (!Object.prototype.hasOwnProperty.call(i, "html"))
                      return (
                        ie.error(
                          "ContextHandler expects the html key on its constructor properties which is missing"
                        ),
                        y(t, !1)
                      );
                    if (!Object.prototype.hasOwnProperty.call(i, "css"))
                      return (
                        ie.error(
                          "ContextHandler expects the css key on its constructor properties which is missing"
                        ),
                        y(t, !1)
                      );
                    if (
                      (Object.prototype.hasOwnProperty.call(i, "initParams") ||
                        ie.info("ContextHandler got null initParams"),
                      !Object.prototype.hasOwnProperty.call(i, "host"))
                    )
                      return (
                        ie.error(
                          "ContextHandler expects the host key on its constructor properties which is missing"
                        ),
                        y(t, !1)
                      );
                    t.isDOM = !0;
                    var a = i.host.ownerDocument;
                    if (
                      !a.getElementById(
                        "@kissmybutton/motorcortex/iframeContextHandler/css"
                      )
                    ) {
                      var o =
                          "\n            iframe[seamless]{\n                background-color: transparent;\n                border: 0px none transparent;\n                padding: 0px;\n                overflow: hidden;\n            }\n            ",
                        c = a.createElement("style");
                      (c.id =
                        "@kissmybutton/motorcortex/iframeContextHandler/css"),
                        (c.type = "text/css");
                      var l = a.head || a.getElementsByTagName("head")[0];
                      c.styleSheet
                        ? (c.styleSheet.cssText = o)
                        : c.appendChild(a.createTextNode(o)),
                        l.appendChild(c);
                    }
                    var f = a.createElement("iframe");
                    i.host.appendChild(f);
                    var p = t.scalingCalculator(i),
                      h = t.calcClipDims(i);
                    f.setAttribute("seamless", "seamless"),
                      !0 === h.use &&
                        (null !== h.width && f.setAttribute("width", h.width),
                        null !== h.height &&
                          f.setAttribute("height", h.height)),
                      (f.style.transform = "scale("
                        .concat(p.width, ", ")
                        .concat(p.height, ")")),
                      (f.style.transformOrigin = "top left"),
                      (f.style.position = "absolute"),
                      (f.src = "");
                    var d = f.contentWindow || f.contentDocument;
                    d.document && (d = d.document),
                      d.write(t.compileHTML(i.html, i.initParams));
                    var m =
                        "\n        body{\n            padding:0;\n            margin:0;\n        }\n        ",
                      v = d.createElement("style");
                    (v.type = "text/css"),
                      v.styleSheet
                        ? (v.styleSheet.cssText =
                            t.compileHTML(i.css, i.initParams) + m)
                        : v.appendChild(
                            a.createTextNode(
                              t.compileHTML(i.css, i.initParams) + m
                            )
                          );
                    var b = d.head || d.getElementsByTagName("head")[0];
                    if (
                      (b.appendChild(v),
                      Object.prototype.hasOwnProperty.call(i, "fonts"))
                    )
                      for (var x = 0; x < i.fonts.length; x++) {
                        var w = i.fonts[x];
                        if ("google-font" === w.type) {
                          var N = d.createElement("link");
                          N.setAttribute("rel", "stylesheet"),
                            N.setAttribute("href", w.src),
                            b.appendChild(N);
                        }
                      }
                    return (
                      (t.rootElement = f),
                      d.close(),
                      (t.context = {
                        document: d,
                        window: f.contentWindow || f,
                        clipContainer: f,
                        rootElement: d.body,
                        unmount: function () {
                          i.host.removeChild(f);
                        },
                        getElements: t.getElements.bind(g(t)),
                        getMCID: t.getMCID.bind(g(t)),
                        setMCID: t.setMCID.bind(g(t)),
                        getElementSelectorByMCID: t.getElementSelectorByMCID.bind(
                          g(t)
                        ),
                        getElementByMCID: t.getElementByMCID.bind(g(t)),
                        setCustomEntity: t.setCustomEntity.bind(g(t)),
                      }),
                      (t.elementsByMCID = {}),
                      t
                    );
                  }
                  return r;
                })(t),
                d: [
                  {
                    kind: "method",
                    decorators: [rM],
                    key: "compileHTML",
                    value: function () {},
                  },
                ],
              };
            },
            kE
          ),
          aM = T(
            null,
            function (e, t) {
              return {
                F: (function (t) {
                  d(r, t);
                  var n = v(r);
                  function r() {
                    var t,
                      i =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                    if ((u(this, r), (t = n.call(this)), e(g(t)), !H(i)))
                      return (
                        ie.error(
                          "ContextHandler expects an object on its constructor. ".concat(
                            s(i),
                            " passed"
                          )
                        ),
                        y(t, !1)
                      );
                    if (!Object.prototype.hasOwnProperty.call(i, "html"))
                      return (
                        ie.error(
                          "ContextHandler expects the html key on its constructor properties which is missing"
                        ),
                        y(t, !1)
                      );
                    if (!Object.prototype.hasOwnProperty.call(i, "css"))
                      return (
                        ie.error(
                          "ContextHandler expects the css key on its constructor properties which is missing"
                        ),
                        y(t, !1)
                      );
                    if (!Object.prototype.hasOwnProperty.call(i, "host"))
                      return (
                        ie.error(
                          "ContextHandler expects the host key on its constructor properties which is missing"
                        ),
                        y(t, !1)
                      );
                    t.isDOM = !0;
                    var a = i.host.shadowRoot;
                    a || (a = i.host.attachShadow({ mode: "open" }));
                    var o = document.createElement("div"),
                      c = t.scalingCalculator(i),
                      l = t.calcClipDims(i);
                    o.setAttribute("data-motorocortex-container", "true"),
                      (o.style.all = "initial"),
                      !0 === l.use &&
                        (null !== l.width && (o.style.width = l.width),
                        null !== l.height && (o.style.height = l.height)),
                      (o.style.transform = "scale("
                        .concat(c.width, ", ")
                        .concat(c.height, ")")),
                      (o.style.transformOrigin = "top left"),
                      (o.style.position = "absolute"),
                      (o.innerHTML = t.compileHTML(i.html, i.initParams)),
                      a.appendChild(o);
                    var f = document.createElement("slot");
                    a.appendChild(f);
                    var p = document.createElement("style");
                    if (
                      ((p.type = "text/css"),
                      p.styleSheet
                        ? (p.styleSheet.cssText = t.compileHTML(
                            i.css,
                            i.initParams
                          ))
                        : p.appendChild(
                            document.createTextNode(
                              t.compileHTML(i.css, i.initParams)
                            )
                          ),
                      a.appendChild(p),
                      (t.fontTags = []),
                      Object.prototype.hasOwnProperty.call(i, "fonts"))
                    )
                      for (var h = 0; h < i.fonts.length; h++) {
                        var d = i.fonts[h];
                        if ("google-font" === d.type) {
                          var m = document.createElement("link");
                          m.setAttribute("rel", "stylesheet"),
                            m.setAttribute("href", d.src),
                            document
                              .getElementsByTagName("head")[0]
                              .appendChild(m),
                            t.fontTags.push(m);
                        }
                      }
                    return (
                      (o.style.overflow = "hidden"),
                      (t.rootElement = o),
                      (t.context = {
                        document: document,
                        window: window,
                        clipContainer: t.rootElement,
                        rootElement: o,
                        unmount: function () {
                          try {
                            a.innerHTML = "";
                            for (var e = 0; e < this.fontTags.length; e++)
                              document
                                .getElementsByTagName("head")[0]
                                .removeChild(this.fontTags[e]);
                          } catch (e) {
                            ie.warning(
                              "The element of the Clip to be removed seems not to exist any more"
                            );
                          }
                        },
                        getElements: t.getElements.bind(g(t)),
                        getMCID: t.getMCID.bind(g(t)),
                        setMCID: t.setMCID.bind(g(t)),
                        getElementSelectorByMCID: t.getElementSelectorByMCID.bind(
                          g(t)
                        ),
                        getElementByMCID: t.getElementByMCID.bind(g(t)),
                        setCustomEntity: t.setCustomEntity.bind(g(t)),
                      }),
                      (t.elementsByMCID = {}),
                      t
                    );
                  }
                  return r;
                })(t),
                d: [
                  {
                    kind: "method",
                    decorators: [rM],
                    key: "compileHTML",
                    value: function () {},
                  },
                ],
              };
            },
            kE
          ),
          oM = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              var e,
                r,
                i,
                a =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : null;
              u(this, n),
                null === o ? ((r = {}), (i = a)) : ((r = a), (i = o)),
                (e = t.call(this, r, i)),
                (i = h(
                  h({}, i),
                  {},
                  {
                    html: "" !== e.html ? e.html : i.html,
                    css: "" !== e.css ? e.css : i.css,
                    fonts: e.fonts.length > 0 ? e.fonts : i.fonts,
                  }
                ));
              var s = z;
              e.clipType = s;
              var c = new (document.head.createShadowRoot ||
              document.head.attachShadow
                ? aM
                : iM)(i);
              return (
                (e.ownContext = h(
                  h({}, c.context),
                  {},
                  { isHostedClip: e.isHostedClip, contextLoaded: !0 }
                )),
                (e.iframe = c.iframeElement),
                (e.forceExportIncidents = !0),
                e.onAfterRender(),
                e
              );
            }
            return (
              l(n, [
                { key: "onAfterRender", value: function () {} },
                {
                  key: "exportConstructionArguments",
                  value: function () {
                    return {
                      attrs: this.attrs,
                      props: h(
                        h({}, this.props),
                        {},
                        {
                          host: void 0,
                          html: this.ownContext.rootElement.innerHTML,
                        }
                      ),
                    };
                  },
                },
                {
                  key: "setCustomEntity",
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : [];
                    return this.context.setCustomEntity(e, t, n);
                  },
                },
                {
                  key: "html",
                  get: function () {
                    return "";
                  },
                },
                {
                  key: "css",
                  get: function () {
                    return "";
                  },
                },
                {
                  key: "fonts",
                  get: function () {
                    return [];
                  },
                },
                {
                  key: "rootElement",
                  get: function () {
                    return this.ownContext.clipContainer;
                  },
                },
              ]),
              n
            );
          })(aE),
          sM = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              var e,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              u(this, n), (e = t.call(this));
              var i = h({}, r);
              if (!H(i))
                return (
                  ie.error(
                    "HTMLFragmentContextHandler expects an object on its constructor. ".concat(
                      s(i),
                      " passed"
                    )
                  ),
                  y(e, !1)
                );
              Object.prototype.hasOwnProperty.call(i, "html") || (i.html = ""),
                (e.isDOM = !0);
              var a = document.createDocumentFragment(),
                o = document.createElement("div");
              return (
                Object.prototype.hasOwnProperty.call(i, "containerParams") &&
                  (Object.prototype.hasOwnProperty.call(i, "width") &&
                    (o.style.width = i.containerParams.width),
                  Object.prototype.hasOwnProperty.call(i, "height") &&
                    (o.style.height = i.containerParams.height)),
                (o.innerHTML = ee(i.html, { params: i.initParams })),
                a.appendChild(o),
                (o.style.overflow = "hidden"),
                (e.rootElement = o),
                (e.context = {
                  document: document,
                  window: window,
                  clipContainer: e.rootElement,
                  rootElement: o,
                  unmount: function () {
                    i.host.removeChild(a);
                  },
                  getElements: e.getElements.bind(g(e)),
                  getMCID: e.getMCID.bind(g(e)),
                  setMCID: e.setMCID.bind(g(e)),
                  getElementSelectorByMCID: e.getElementSelectorByMCID.bind(
                    g(e)
                  ),
                  getElementByMCID: e.getElementByMCID.bind(g(e)),
                  setCustomEntity: e.setCustomEntity.bind(g(e)),
                  fragment: !0,
                }),
                (e.elementsByMCID = {}),
                e
              );
            }
            return n;
          })(kE),
          uM = (function (e) {
            d(n, e);
            var t = v(n);
            function n() {
              var e,
                r,
                i,
                a =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : null;
              u(this, n),
                null === o ? ((r = {}), (i = a)) : ((r = a), (i = o)),
                (e = t.call(this, r, i));
              var s = new sM(
                h(
                  h({}, i),
                  {},
                  {
                    html: Object.prototype.hasOwnProperty.call(i, "html")
                      ? i.html
                      : e.html,
                    css: Object.prototype.hasOwnProperty.call(i, "css")
                      ? i.css
                      : e.css,
                    fonts: Object.prototype.hasOwnProperty.call(i, "fonts")
                      ? i.fonts
                      : e.fonts,
                  }
                )
              );
              return (
                (e.ownContext = h(h({}, s.context), {}, { isHostedClip: !1 })),
                (e.iframe = s.iframeElement),
                (e.forceExportIncidents = !0),
                e.onDOMCLipInitialise(),
                e
              );
            }
            return (
              l(n, [
                {
                  key: "exportConstructionArguments",
                  value: function () {
                    return {
                      attrs: this.attrs,
                      props: h(
                        h({}, this.props),
                        {},
                        { html: this.ownContext.rootElement.innerHTML }
                      ),
                    };
                  },
                },
                { key: "onDOMCLipInitialise", value: function () {} },
                {
                  key: "rootElement",
                  get: function () {
                    return this.ownContext.clipContainer;
                  },
                },
              ]),
              n
            );
          })(aE),
          cM = (function () {
            function e() {
              u(this, e);
            }
            return (
              l(e, [
                {
                  key: "addIncident",
                  value: function () {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "moveIncident",
                  value: function () {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "removeIncident",
                  value: function () {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "resizeIncident",
                  value: function () {
                    return { result: !0, execute: function () {} };
                  },
                },
                {
                  key: "getIncidentsByChannel",
                  value: function () {
                    return {};
                  },
                },
                { key: "flash", value: function () {} },
                { key: "_resize", value: function () {} },
                { key: "onProgress", value: function () {} },
                {
                  key: "duration",
                  get: function () {
                    return 0;
                  },
                },
              ]),
              e
            );
          })(),
          lM = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r) {
              var i;
              return (
                u(this, n),
                ((i = t.call(this, e, r)).runTimeInfo = {
                  currentMillisecond: 0,
                  state: "idle",
                }),
                (i.listeners = {}),
                (i.previousTimeStamp = -1),
                (i.speed = 1),
                i
              );
            }
            return (
              l(n, [
                {
                  key: "_setState",
                  value: function (e) {
                    if (e !== this.runTimeInfo.state)
                      for (var t in ((this.runTimeInfo.state = e),
                      this.putMessageOnPipe("setState", e, "Clips", {
                        selfExecute: !1,
                        direction: ce,
                      }),
                      this.listeners))
                        this.listeners[t].funct(
                          this.runTimeInfo.currentMillisecond,
                          e
                        );
                  },
                },
                {
                  key: "handleSetState",
                  value: function (e, t) {
                    this._setState(t);
                  },
                },
                {
                  key: "play",
                  value: function () {
                    var e = this,
                      t =
                        arguments.length > 0 &&
                        void 0 !== arguments[0] &&
                        arguments[0];
                    if (
                      "idle" === this.runTimeInfo.state ||
                      "paused" === this.runTimeInfo.state ||
                      "armed" === this.runTimeInfo.state ||
                      "transitional" === this.runTimeInfo.state ||
                      "blocked" === this.runTimeInfo.state
                    ) {
                      if ("paused" === this.runTimeInfo.state) {
                        var n = new Date().getTime() - this.pauseMoment;
                        this.previousTimeStamp += n;
                      }
                      this._setState("playing"),
                        this.onPlay(),
                        t ||
                          window.requestAnimationFrame(function (t) {
                            e.step(t);
                          });
                    }
                  },
                },
                {
                  key: "pause",
                  value: function () {
                    "playing" === this.runTimeInfo.state &&
                      (this._setState("paused"),
                      (this.pauseMoment = new Date().getTime()),
                      this.onWait());
                  },
                },
                {
                  key: "arm",
                  value: function () {
                    "transitional" === this.runTimeInfo.state &&
                      this._setState("armed");
                  },
                },
                {
                  key: "complete",
                  value: function () {
                    this._setState("idle"), (this.previousTimeStamp = -1);
                  },
                },
                {
                  key: "stop",
                  value: function () {
                    this._setState("transitional"),
                      (this.previousTimeStamp = -1);
                  },
                },
                {
                  key: "block",
                  value: function () {
                    this._setState("blocked"), (this.previousTimeStamp = -1);
                  },
                },
                { key: "onPlay", value: function () {} },
                { key: "onWait", value: function () {} },
                {
                  key: "playableProgress",
                  value: function (e, t) {
                    if (this.isTheRootClip) {
                      for (var n in this.listeners) {
                        var r = this.listeners[n];
                        !0 !== r.onlyOnStateChange &&
                          (Math.abs(
                            t +
                              r.cavaDelta -
                              this.runTimeInfo.currentMillisecond
                          ) > r.threshold
                            ? (r.funct(Z(t, r.roundTo), this.runTimeInfo.state),
                              (r.cavaDelta = 0))
                            : (r.cavaDelta += Math.abs(
                                t - this.runTimeInfo.currentMillisecond
                              )));
                      }
                      return (
                        this.onProgress(e, t),
                        (this.runTimeInfo.currentMillisecond = t),
                        !0
                      );
                    }
                    return !1;
                  },
                },
                {
                  key: "step",
                  value: function (e) {
                    var t =
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1];
                    if ("playing" === this.runTimeInfo.state) {
                      var n = this;
                      -1 === this.previousTimeStamp &&
                        (this.previousTimeStamp = e);
                      var r = {
                        milliseconds: Math.round(
                          this.runTimeInfo.currentMillisecond +
                            (e - this.previousTimeStamp) * this.speed
                        ),
                        fraction:
                          (this.runTimeInfo.currentMillisecond +
                            (e - this.previousTimeStamp) * this.speed) /
                          this.duration,
                      };
                      if (r.fraction >= 1)
                        return (
                          this.playableProgress(1, this.duration),
                          void this.complete()
                        );
                      if (r.fraction < 0)
                        return (
                          this.playableProgress(0, 0), void this.complete()
                        );
                      this.playableProgress(r.fraction, r.milliseconds),
                        (this.previousTimeStamp = e),
                        t || window.requestAnimationFrame(n.step.bind(n));
                    }
                  },
                },
                {
                  key: "subscribe",
                  value: function (e, t, n, r) {
                    var i =
                      arguments.length > 4 &&
                      void 0 !== arguments[4] &&
                      arguments[4];
                    n || (n = 0),
                      r || (r = 1),
                      (this.listeners[e] = {
                        funct: t,
                        threshold: n,
                        roundTo: r,
                        cavaDelta: 0,
                        onlyOnStateChange: i,
                      });
                  },
                },
                {
                  key: "unsubscribe",
                  value: function (e) {
                    Object.prototype.hasOwnProperty.call(this.listeners, e) &&
                      delete this.listeners[e];
                  },
                },
                {
                  key: "subscribeToDurationChange",
                  value: function (e) {
                    return (
                      !!this.isTheRootClip &&
                      (this.realClip.subscribeToDurationChange(e), !0)
                    );
                  },
                },
                {
                  key: "executionSpeed",
                  set: function (e) {
                    if (!this.isTheRootClip) return !1;
                    this.speed = parseFloat(e);
                  },
                },
              ]),
              n
            );
          })(eE),
          fM = (function () {
            function e(t) {
              u(this, e),
                (this.runTimeInfo = {
                  currentMillisecond: 0,
                  state: "transitional",
                }),
                (this.id = Q()),
                (this.realClip = t.descriptiveIncident.realClip);
              var n = t.descriptiveIncident.realClip.exportConstructionArguments(),
                r = h(
                  h({}, n.props),
                  {},
                  { selector: void 0, host: t.host, id: this.id }
                );
              (this.ownClip = new t.descriptiveIncident.constructor.Incident(
                n.attrs,
                r
              )),
                t.descriptiveIncident.realClip.addContext(
                  {
                    clipId: this.id,
                    context: this.ownClip.ownContext,
                    synchronize: t.synchronize,
                    runTimeInfo: this.runTimeInfo,
                  },
                  !0
                );
            }
            return (
              l(e, [
                {
                  key: "onProgress",
                  value: function (e, t) {
                    for (var n in this.realClip.instantiatedChannels)
                      this.realClip.instantiatedChannels[n].moveTo(
                        this.runTimeInfo.currentMillisecond,
                        t,
                        this.id,
                        !0
                      );
                    this.runTimeInfo.currentMillisecond = t;
                  },
                },
              ]),
              e
            );
          })(),
          pM = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e) {
              var r,
                i,
                a,
                o =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : null;
              u(this, n),
                null === o ? ((i = {}), (a = e)) : ((i = e), (a = o)),
                ((r = t.call(this, i, a)).initParams = a.initParams || {});
              var s = r._validateProps();
              if (!s.result) return y(r, s);
              (r.isTheRootClip = !1),
                (r.isExportableToJSONFormat = !0),
                Object.prototype.hasOwnProperty.call(a, "html") &&
                  W(a.html) &&
                  (r.isExportableToJSONFormat = !1);
              var c = {
                id: r.id,
                attrs: i,
                props: h(
                  h({}, a),
                  {},
                  {
                    html: Object.prototype.hasOwnProperty.call(a, "html")
                      ? a.html
                      : r.html,
                    css: Object.prototype.hasOwnProperty.call(a, "css")
                      ? a.css
                      : r.css,
                    fonts: Object.prototype.hasOwnProperty.call(a, "fonts")
                      ? a.fonts
                      : r.fonts,
                    runTimeInfo: r.runTimeInfo,
                    subscribe: r.subscribe.bind(g(r)),
                  }
                ),
                plugin_npm_name: r.constructor.plugin_npm_name,
                Channel: r.constructor.Channel,
                DescriptiveIncident: g(r),
              };
              if (
                ((r.audio = "on"),
                Object.prototype.hasOwnProperty.call(r.constructor, "audio") &&
                  (r.audio = r.constructor.audio),
                Object.prototype.hasOwnProperty.call(a, "audio") &&
                  (r.audio = a.audio),
                Object.prototype.hasOwnProperty.call(a, "selector") &&
                  void 0 !== a.selector &&
                  !0 !== r.constructor.customClip)
              )
                c.Incident = uM;
              else if (
                Object.prototype.hasOwnProperty.call(a, "selector") &&
                void 0 !== a.selector &&
                !0 === r.constructor.customClip
              ) {
                delete c.props.selector;
                var l = new uM({ html: '<div id="clip-container"></div>' });
                (c.props.host = l.rootElement),
                  (c.Incident = r.constructor.Incident);
              } else
                "only" === r.audio && !0 !== r.props.root
                  ? (r.isTheRootClip = !1)
                  : ((r.isTheRootClip = !0),
                    (r.blockingWaitings = {}),
                    (c.Incident = r.constructor.Incident));
              if (
                ("on" === r.audio || "off" === r.audio
                  ? (r.realClip = Le(c))
                  : (r.realClip = new cM()),
                "on" === r.audio || "only" === r.audio)
              ) {
                var f = {
                  id: r.id,
                  attrs: {},
                  props: {
                    audioSources: Object.prototype.hasOwnProperty.call(
                      a,
                      "audioSources"
                    )
                      ? a.audioSources
                      : r.audioSources,
                    runTimeInfo: r.runTimeInfo,
                    subscribe: r.subscribe.bind(g(r)),
                  },
                  plugin_npm_name: r.constructor.plugin_npm_name,
                  Channel: r.constructor.Channel,
                  Incident: fE,
                  DescriptiveIncident: g(r),
                };
                r.audioClip = Le(f);
              } else (r.audio = "off"), (r.audioClip = new cM());
              return (
                (r.passiveAddition = !0),
                r._buildTree(),
                (r.passiveAddition = !1),
                r
              );
            }
            return (
              l(n, [
                {
                  key: "_validateProps",
                  value: function () {
                    return ie.validateProps(
                      { props: this.props },
                      LN,
                      this.constructor,
                      this.id
                    );
                  },
                },
                {
                  key: "exportLiveDefinition",
                  value: function () {
                    var e =
                        !(arguments.length > 0 && void 0 !== arguments[0]) ||
                        arguments[0],
                      t = x(m(n.prototype), "exportLiveDefinition", this).call(
                        this,
                        e
                      );
                    return (
                      W(this.props.html) && (t.props.html = this.props.html),
                      W(this.props.css) && (t.props.css = this.props.css),
                      t
                    );
                  },
                },
                {
                  key: "_buildTree",
                  value: function () {
                    void 0 !== this.realClip && this.buildTree();
                  },
                },
                {
                  key: "resize",
                  value: function (e) {
                    return (
                      this.realClip._resize(e / this.duration),
                      this.audioClip._resize(e / this.duration),
                      (this.duration = e),
                      this.putMessageOnPipe("recalcDuration", {}, "Groups", {
                        selfExecute: !1,
                        direction: ue,
                      }),
                      this.putMessageOnPipe("flash", {}, "RootClip", {
                        selfExecute: !0,
                        direction: ue,
                      }),
                      { result: !0 }
                    );
                  },
                },
                {
                  key: "manageEditAttrProps",
                  value: function (e, t) {
                    return {
                      result: !1,
                      errors: [
                        "Clips attributes and properties can not be edited",
                      ],
                    };
                  },
                },
                {
                  key: "handleCheckForClip",
                  value: function (e, t) {
                    return !0;
                  },
                },
                {
                  key: "handleGetElements",
                  value: function (e, t) {
                    return this.realClip.getElements(t.selector);
                  },
                },
                {
                  key: "handleCheckAddition",
                  value: function (e, t) {
                    var n = this.realClip.addIncident(t),
                      r = this.audioClip.addIncident(t);
                    return !0 === n.result && !0 === r.result
                      ? (n.execute(),
                        r.execute(),
                        this.putMessageOnPipe("flash", {}, "RootClip", {
                          selfExecute: !0,
                          direction: ue,
                        }),
                        { result: !0 })
                      : n;
                  },
                },
                {
                  key: "handleCheckMove",
                  value: function (e, t) {
                    var n = this.realClip.moveIncident(t),
                      r = this.audioClip.moveIncident(t);
                    return !0 === n.result && !0 === r.result
                      ? (n.execute(),
                        r.execute(),
                        this.putMessageOnPipe("flash", {}, "RootClip", {
                          selfExecute: !0,
                          direction: ue,
                        }),
                        { result: !0 })
                      : n;
                  },
                },
                {
                  key: "handleCheckDeletion",
                  value: function (e, t) {
                    var n = this.realClip.removeIncident(t),
                      r = this.audioClip.removeIncident(t);
                    return !0 === n.result && !0 === r.result
                      ? (n.execute(),
                        r.execute(),
                        this.putMessageOnPipe("flash", {}, "RootClip", {
                          selfExecute: !0,
                          direction: ue,
                        }),
                        { result: !0 })
                      : n;
                  },
                },
                {
                  key: "handleCheckResize",
                  value: function (e, t) {
                    var n = this.realClip.resizeIncident(t),
                      r = this.audioClip.resizeIncident(t);
                    return !0 === n.result && !0 === r.result
                      ? (n.execute(),
                        r.execute(),
                        this.putMessageOnPipe("flash", {}, "RootClip", {
                          selfExecute: !0,
                          direction: ue,
                        }),
                        { result: !0 })
                      : n;
                  },
                },
                {
                  key: "handleFlash",
                  value: function (e, t) {
                    if (!this.isTheRootClip) return this.bypass();
                    this.flash();
                  },
                },
                {
                  key: "handleSetBlock",
                  value: function (e, t) {
                    if (!this.isTheRootClip) return this.bypass();
                    "transitional" !== this.runTimeInfo.state &&
                      ("blocked" !== this.runTimeInfo.state &&
                        (this.statusBeforeBlock = this.runTimeInfo.state),
                      (this.blockingWaitings[t.id] = t),
                      this.block());
                  },
                },
                {
                  key: "handleUnBlock",
                  value: function (e, t) {
                    if (!this.isTheRootClip) return this.bypass();
                    Object.prototype.hasOwnProperty.call(
                      this.blockingWaitings,
                      t.id
                    ) &&
                      (delete this.blockingWaitings[t.id],
                      0 === Object.keys(this.blockingWaitings).length &&
                        ("playing" === this.statusBeforeBlock
                          ? ((this.previousTimeStamp = -1), this.play())
                          : this.arm()));
                  },
                },
                {
                  key: "stop",
                  value: function () {
                    x(m(n.prototype), "stop", this).call(this),
                      (this.blockingWaitings = {});
                  },
                },
                {
                  key: "onProgress",
                  value: function (e, t) {
                    this.realClip.onProgress(e, t),
                      this.audioClip.onProgress(e, t);
                  },
                },
                {
                  key: "paste",
                  value: function (e) {
                    return this.isTheRootClip
                      ? new fM({ host: e, descriptiveIncident: this })
                      : null;
                  },
                },
                {
                  key: "flash",
                  value: function () {
                    this.realClip.flash();
                  },
                },
                {
                  key: "setVolume",
                  value: function (e) {
                    return e < 0 || e > 1
                      ? {
                          result: !1,
                          errors: [{ type: "invalid volume number" }],
                        }
                      : "off" === this.audio
                      ? {
                          result: !1,
                          errors: [
                            {
                              type: "can not set volume of Clip with audio off",
                            },
                          ],
                        }
                      : (this.audioClip.setVolume(e), { result: !0 });
                  },
                },
                {
                  key: "selectorToPassToChildren",
                  get: function () {
                    return null;
                  },
                },
                {
                  key: "inheritedSelector",
                  get: function () {
                    return this._inheritedSelector;
                  },
                  set: function (e) {
                    this._inheritedSelector = e;
                  },
                },
                {
                  key: "html",
                  get: function () {
                    return "";
                  },
                },
                {
                  key: "css",
                  get: function () {
                    return "";
                  },
                },
                {
                  key: "fonts",
                  get: function () {
                    return [];
                  },
                },
                {
                  key: "audioSources",
                  get: function () {
                    return [];
                  },
                },
              ]),
              n
            );
          })(lM);
        f(pM, "isClip", !0),
          f(pM, "Incident", oM),
          f(pM, "plugin_npm_name", "@kissmybutton/self-contained-incidents"),
          f(pM, "Channel", _e),
          f(pM, "ClassName", "Clip"),
          f(pM, "propsValidationRules", LN);
        var hM = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e) {
              var r =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null;
              u(this, n);
              var i = { audio: "only", audioSources: e };
              return null !== r && (i.id = r), t.call(this, i);
            }
            return n;
          })(pM),
          dM = MN.compile({
            incidents: {
              type: "array",
              items: {
                type: "object",
                props: {
                  position: {
                    type: "number",
                    integer: !0,
                    min: 0,
                    optional: !1,
                  },
                  attrs: { type: "object", optional: !1 },
                  props: { type: "object", optional: !1 },
                  incidentClass: { type: "any", optional: !1 },
                },
              },
            },
          }),
          mM = (function (e) {
            d(n, e);
            var t = v(n);
            function n(e, r) {
              var i;
              u(this, n), (i = t.call(this, e, r));
              var a = ie.validateProps(i.props, qN, i.constructor);
              if (!a.result) return y(i, a);
              var o = dM(i.attrs);
              if (o.length > 0)
                return (
                  ie.error(
                    "The provided attributes for Combo Incident are invalid"
                  ),
                  y(i, { result: !1, errors: o })
                );
              for (var s = [], c = 0; c < i.attrs.length; c++) {
                var l = i.attrs[c];
                if (
                  (console.log(l),
                  null !== l.incidentClass.attrsValidationRules)
                ) {
                  var f = l.incidentClass.attrsValidationMethod(l.attrs);
                  f.length > 0 && s.concat(f.errors);
                }
                var p = ie.validateProps(
                  l.props,
                  l.incidentClass.propsValidationRules,
                  l.incidentClass
                );
                !1 === p.result && s.concat(p.errors);
              }
              return s.length > 0 ? y(i, { result: !1, errors: s }) : i;
            }
            return (
              l(n, [
                {
                  key: "addIncident",
                  value: function () {
                    var e =
                      "Combos don't accept any Incidents to be added on their timeline externally";
                    return ie.error(e), { result: !1, errors: [e] };
                  },
                },
                {
                  key: "moveIncident",
                  value: function () {
                    var e =
                      "Combo Incidents don't allow external manipulation of their Incidents";
                    return ie.error(e), { result: !1, errors: [e] };
                  },
                },
                {
                  key: "removeIncident",
                  value: function () {
                    var e =
                      "Combo Incidents don't allow external manipulation of their Incidents";
                    return ie.error(e), { result: !1, errors: [e] };
                  },
                },
                {
                  key: "handleCheckAddition",
                  value: function (e, t) {
                    return !1;
                  },
                },
                {
                  key: "handleCheckMove",
                  value: function (e, t) {
                    return !1;
                  },
                },
                {
                  key: "handleCheckDeletion",
                  value: function (e, t) {
                    return !1;
                  },
                },
                {
                  key: "handleCheckResize",
                  value: function (e, t) {
                    return !1;
                  },
                },
              ]),
              n
            );
          })(eE);
        f(mM, "isCombo", !0),
          f(mM, "attrsValidationRules", null),
          f(mM, "propsValidationRules", qN);
        var gM = T(
            null,
            function (e, t) {
              var n = (function (t) {
                d(r, t);
                var n = v(r);
                function r(t, i) {
                  var a;
                  u(this, r),
                    void 0 === i && ((i = t), (t = {})),
                    (a = n.call(this, i)),
                    e(g(a));
                  var o = ie.validateProps(i, DN, a.constructor, a.id);
                  return o.result
                    ? ((a.inheritedSelector = null),
                      (a.attrs = t),
                      Object.prototype.hasOwnProperty.call(i, "duration") ||
                        (i.duration = 0),
                      (a.props = i),
                      (a.attributesStaggers = []),
                      (a.propsStaggers = []),
                      a.setupDynamicValues(),
                      (a.dynamicDurationValue = null),
                      (a.passive = !1),
                      a)
                    : y(a, o);
                }
                return r;
              })(t);
              return {
                F: n,
                d: [
                  {
                    kind: "field",
                    static: !0,
                    key: "Incident",
                    value: function () {
                      return je;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "plugin_npm_name",
                    value: function () {
                      return "motor-cortex-js-attribute";
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "Channel",
                    value: function () {
                      return _E;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "ClassName",
                    value: function () {
                      return "Incident";
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "attrsValidationRules",
                    value: function () {
                      return null;
                    },
                  },
                  {
                    kind: "field",
                    static: !0,
                    key: "propsValidationRules",
                    value: function () {
                      return DN;
                    },
                  },
                  {
                    kind: "method",
                    decorators: [UN],
                    key: "editAttributes",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [VN],
                    key: "editProperties",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [HN],
                    key: "resize",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [GN],
                    key: "clone",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [JN],
                    key: "selector",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [$N],
                    key: "getElements",
                    value: function () {},
                  },
                  {
                    kind: "method",
                    decorators: [QN],
                    key: "setupDynamicValues",
                    value: function () {},
                  },
                  {
                    kind: "get",
                    key: "duration",
                    value: function () {
                      return null !== this.dynamicDurationValue
                        ? this.dynamicDurationValue
                        : this.propsStaggers.length > 0
                        ? "dynamic"
                        : x(m(n.prototype), "duration", this);
                    },
                  },
                  {
                    kind: "set",
                    key: "duration",
                    value: function (e) {
                      if (this.propsStaggers.length > 0) {
                        for (var t = 0; t < this.propsStaggers.length; t++)
                          if ("repeats" !== this.propsStaggers[t].path) {
                            var r = this.propsStaggers[t].stagger.resize(
                              e / this.duration
                            );
                            ne(this.props, this.propsStaggers[t].path, r);
                          }
                        this.dynamicDurationValue = e;
                      } else N(m(n.prototype), "duration", e, this, !0);
                    },
                  },
                  {
                    kind: "method",
                    key: "manageEditAttrProps",
                    value: function (e, t) {
                      var n = this.parentNode,
                        r = n.getLeafPosition(this.id);
                      n.removeIncident(this.id);
                      var i = JSON.parse(JSON.stringify(this[t]));
                      this[t] = e;
                      var a = n.addIncident(this, r);
                      return (
                        a.result ||
                          (n.removeIncident(this.id),
                          (this[t] = i),
                          n.addIncident(this, r)),
                        a
                      );
                    },
                  },
                  {
                    kind: "method",
                    key: "detachFromParent",
                    value: function () {
                      x(m(n.prototype), "detachFromParent", this).call(this),
                        (this.inheritedSelector = null);
                    },
                  },
                  {
                    kind: "method",
                    key: "handleCheckForInvalidSelectors",
                    value: function () {
                      var e = this.selector();
                      return null === e
                        ? {
                            id: this.id,
                            ClassName: this.constructor.ClassName,
                            plugin_npm_name: this.constructor.plugin_npm_name,
                            error: "null selector",
                          }
                        : "&" === e.charAt(0)
                        ? {
                            id: this.id,
                            ClassName: this.constructor.ClassName,
                            plugin_npm_name: this.constructor.plugin_npm_name,
                            error:
                              "relative selector with no inherited selector",
                            selector: e,
                          }
                        : this.bypass();
                    },
                  },
                  {
                    kind: "method",
                    key: "exportDefinition",
                    value: function () {
                      return {
                        ClassName: this.constructor.ClassName,
                        plugin:
                          this.constructor.plugin ||
                          this.constructor.plugin_npm_name,
                        plugin_npm_name: this.constructor.plugin_npm_name,
                        attrs: this.attrs,
                        props: this.props,
                      };
                    },
                  },
                  {
                    kind: "method",
                    key: "exportLiveDefinition",
                    value: function () {
                      var e =
                          !(arguments.length > 0 && void 0 !== arguments[0]) ||
                          arguments[0],
                        t = JSON.parse(JSON.stringify(this.props));
                      return (
                        !1 === e && delete t.id,
                        {
                          Class: this.constructor,
                          attrs: JSON.parse(JSON.stringify(this.attrs)),
                          props: t,
                        }
                      );
                    },
                  },
                ],
              };
            },
            fe
          ),
          yM = (function () {
            function e(t) {
              if (
                (u(this, e),
                !Object.prototype.hasOwnProperty.call(t, "incident"))
              )
                return (
                  ie.error(
                    'Journey constructor expects an Incident on its properties on the key "incident"'
                  ),
                  !1
                );
              (this.memory = t.calpuleMemory),
                (this.stations = []),
                (this.incident = t.incident),
                (this.startMillisecond =
                  1 * this.incident.runTimeInfo.currentMillisecond),
                (this.startState = "".concat(this.incident.runTimeInfo.state)),
                this.incident.stop();
            }
            return (
              l(e, [
                {
                  key: "station",
                  value: function (e) {
                    this.stations.length > 0 &&
                      this.stations[this.stations.length - 1],
                      this.stations.push(e),
                      this.incident.playableProgress(
                        e / this.incident.duration,
                        e
                      );
                  },
                },
                {
                  key: "destination",
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : null;
                    null != e
                      ? this.station(e)
                      : (e = this.stations[this.stations.length - 1]),
                      this.incident.playableProgress(
                        e / this.incident.duration,
                        e
                      ),
                      "playing" === this.startState ||
                      ("blocked" === this.startState &&
                        "playing" === this.incident.statusBeforeBlock)
                        ? this.incident.play()
                        : e >= this.incident.duration
                        ? this.incident.complete()
                        : this.incident.arm(),
                      this.memory.push(this.exportJourneyLog);
                  },
                },
                {
                  key: "exportJourneyLog",
                  value: function () {
                    return {
                      startMillisecond: this.startMillisecond,
                      startState: this.startState,
                      stations: this.stations,
                    };
                  },
                },
              ]),
              e
            );
          })(),
          vM = (function () {
            function e() {
              u(this, e), (this.memory = []);
            }
            return (
              l(e, [
                {
                  key: "startJourney",
                  value: function (e) {
                    return e
                      ? new yM({ incident: e, calpuleMemory: this.memory })
                      : (ie.error(
                          "startJourney expects an Incident as an argument"
                        ),
                        !1);
                  },
                },
              ]),
              e
            );
          })(),
          bM = (function () {
            var e = function (e, t) {
                return e.startsWith("on") && "function" == typeof t;
              },
              t = function (e) {
                return e.substr(2).toLowerCase();
              },
              n = function (e) {
                return "string" == typeof e;
              },
              r = function (e) {
                return "function" == typeof e;
              };
            function i(e) {
              var t = document.createElement("div");
              return (t.innerHTML = e.trim()), t.firstChild;
            }
            function a(n, r) {
              if (!r) return n;
              for (var i = 0, a = Object.entries(r); i < a.length; i++) {
                var o = E(a[i], 2),
                  s = o[0],
                  u = o[1];
                if (e(s)) n.addEventListener(t(s), u);
                else if ("class" === s) {
                  var c,
                    l = Array.isArray(u) ? u : [u];
                  (c = n.classList).add.apply(c, M(l));
                } else n.setAttribute(s, u);
              }
              return n;
            }
            return function (e, t) {
              for (
                var o = arguments.length,
                  s = new Array(o > 2 ? o - 2 : 0),
                  u = 2;
                u < o;
                u++
              )
                s[u - 2] = arguments[u];
              if (r(e)) return e(h(h({}, t), {}, { children: s }));
              var c = a(document.createElement(e), t);
              return (
                s.flat().forEach(function (e) {
                  if (!1 !== e) {
                    var t = n(e) ? i(e) : e;
                    c.appendChild(t);
                  }
                }),
                c.outerHTML
              );
            };
          })(),
          xM = new re({ logLevel: 1 });
        function wM(e) {
          if (
            (Object.prototype.hasOwnProperty.call(e, "default") &&
              (e = e.default),
            Object.prototype.hasOwnProperty.call(e, "npm_name") ||
              (e.npm_name = "plugin_".concat(new Date().getTime())),
            !(function (e) {
              Object.prototype.hasOwnProperty.call(e, "default") &&
                (e = e.default);
              var t = e.npm_name,
                n = !0;
              if (
                (Object.prototype.hasOwnProperty.call(e, "name") ||
                  xM.error(
                    "Warning on plugin ".concat(
                      t,
                      '. A plugin is always good to have its name on\n        its main.js file, under the key "name". It\'s missing from this plugin'
                    )
                  ),
                Object.prototype.hasOwnProperty.call(e, "incidents") ||
                  Object.prototype.hasOwnProperty.call(e, "Clip") ||
                  (xM.error(
                    "Error on plugin ".concat(
                      t,
                      '. A plugin must expose at least one Incident or a Clip.\n        Exposed plugin Incidents should be defined on the "incidents" key of the main.js file while Clips on the "Clip".'
                    )
                  ),
                  (n = !1)),
                Object.prototype.hasOwnProperty.call(e, "incidents") &&
                  !Array.isArray(e.incidents))
              )
                xM.error(
                  "Error on plugin ".concat(
                    t,
                    '. thePlugin exposed Incidents are defined on the "incidents" key of the main.js file in array format.\n        Please refer to the documentation'
                  )
                ),
                  (n = !1);
              else if (Object.prototype.hasOwnProperty.call(e, "incidents"))
                for (var r = 0; r < e.incidents.length; r++) {
                  var i = e.incidents[r];
                  "object" === s(i.exportable) &&
                    Object.prototype.hasOwnProperty.call(
                      i.exportable,
                      "default"
                    ) &&
                    (i.exportable = i.exportable.default),
                    i.exportable.prototype instanceof eE ||
                      i.exportable.prototype instanceof pM ||
                      i.exportable.prototype instanceof je ||
                      i.exportable.prototype instanceof mE ||
                      (xM.error(
                        "Error on plugin "
                          .concat(
                            t,
                            ". Exportable Incidents by any plugin must extend one of the base classes provided by MotorCortex.\n                "
                          )
                          .concat(
                            i.exportable.constructor.name,
                            " doesn't.\n                Please refer to documentation"
                          )
                      ),
                      (n = !1)),
                    i.exportable.prototype instanceof pM &&
                      (Object.prototype.hasOwnProperty.call(i, "originalDims")
                        ? !1 === J(i.originalDims).result &&
                          (xM.error(
                            "Error on plugin "
                              .concat(
                                t,
                                ". Invalid originalDims value passed on "
                              )
                              .concat(i.name)
                          ),
                          (n = !1))
                        : xM.log(
                            "Warning on plugin ".concat(
                              t,
                              '. It\'s always good to provide originalDims\n            when exposing Incidents extending API.Clip. By defining their original dims the users\n            of your plugin will be able to define the desired dimensions of your Incident by\n            the "containerParams object"'
                            )
                          )),
                    Object.prototype.hasOwnProperty.call(i, "name") ||
                      (xM.error(
                        "Error on plugin ".concat(
                          t,
                          '. Exportable Incidents by any plugin must have the "name" key which defines the name of the exported Incident.\n                Please refer to documentation'
                        )
                      ),
                      (n = !1)),
                    Object.prototype.hasOwnProperty.call(i, "propTypes") ||
                      xM.log(
                        "Warning on plugin "
                          .concat(
                            t,
                            ".\n                It's always good for plugins to define the supported propTypes of their exposed Incidents' supported properties.\n                "
                          )
                          .concat(
                            i.exportable.constructor.name,
                            " doesn't.\n                Please refer to documentation"
                          ),
                        "warning"
                      );
                }
              return n;
            })(e))
          )
            return !1;
          var t = {};
          if (Object.prototype.hasOwnProperty.call(e, "Clip"))
            if (Object.prototype.hasOwnProperty.call(e.Clip, "exportable")) {
              var n,
                r,
                i,
                a =
                  ((r = n = (function (e) {
                    d(n, e);
                    var t = v(n);
                    function n() {
                      return u(this, n), t.apply(this, arguments);
                    }
                    return n;
                  })(pM)),
                  f(n, "Incident", e.Clip.exportable),
                  f(n, "plugin", e.npm_name),
                  f(n, "audio", e.audio ? e.audio : "off"),
                  f(n, "customClip", !0),
                  r);
              Object.prototype.hasOwnProperty.call(
                e.Clip,
                "attributesValidationRules"
              ) && (i = MN.compile(e.Clip.attributesValidationRules)),
                (t.Clip = function t(n, r) {
                  u(this, t);
                  var o = n,
                    s = r;
                  void 0 === r && ((o = {}), (s = n));
                  var c = new a(o, s);
                  if (
                    Object.prototype.hasOwnProperty.call(
                      e.Clip,
                      "attributesValidationRules"
                    )
                  ) {
                    var l = i(o);
                    if (l.length > 0) {
                      for (
                        var f = "Error on plugin's \"".concat(
                            e.npm_name,
                            '" Clip instantiation. Errors:'
                          ),
                          p = 0;
                        p < l.length;
                        p++
                      )
                        f += "\n - "
                          .concat(l[p].message, ". ")
                          .concat(l[p].actual, " provided");
                      return console.error(f), { result: !1, errors: l };
                    }
                    (c.attrsValidationRules = e.Clip.attributesValidationRules),
                      (c.attrsValidationMethod = i);
                  } else
                    (c.attrsValidationRules = null),
                      xM.warning(
                        "It's always good to provide attributesValidationRules to the exported incidents. "
                          .concat(e.npm_name, ".")
                          .concat(c.constructor.name, " doesn't provide it")
                      );
                  return c;
                });
            } else {
              var o,
                c,
                l =
                  ((c = o = (function (e) {
                    d(n, e);
                    var t = v(n);
                    function n() {
                      return u(this, n), t.apply(this, arguments);
                    }
                    return n;
                  })(pM)),
                  f(o, "Incident", e.Clip),
                  f(o, "plugin", e.npm_name),
                  f(o, "audio", e.audio ? e.audio : "off"),
                  f(o, "customClip", !0),
                  c);
              xM.warning(
                "It's always good to provide attributesValidationRules to the exported incidents. ".concat(
                  e.npm_name,
                  ".Clip doesn't provide it"
                )
              ),
                (t.Clip = l);
            }
          var p = _E;
          if (
            (Object.prototype.hasOwnProperty.call(e, "compositeAttributes") &&
              (p = (function (t) {
                d(r, t);
                var n = v(r);
                function r(t) {
                  return (
                    u(this, r),
                    (t.comboAttributes = e.compositeAttributes),
                    n.call(this, t)
                  );
                }
                return r;
              })(_E)),
            Object.prototype.hasOwnProperty.call(e, "incidents"))
          )
            for (
              var h = function (n) {
                  var r = e.incidents[n].exportable,
                    i = null,
                    a = null,
                    o = !1;
                  if (
                    Object.prototype.hasOwnProperty.call(
                      e.incidents[n],
                      "attributesValidationRules"
                    )
                  ) {
                    o = !0;
                    var s = JSON.parse(
                      JSON.stringify(e.incidents[n].attributesValidationRules)
                    );
                    Object.prototype.hasOwnProperty.call(
                      e.incidents[n].attributesValidationRules,
                      "animatedAttrs"
                    ) &&
                      (s.initialValues = xM.buildInitialValuesValidationRules(
                        s.animatedAttrs
                      )),
                      (a = s),
                      (i = MN.compile(s));
                  }
                  var c,
                    l,
                    h = void 0;
                  if (r.prototype instanceof je)
                    (l = c = (function (e) {
                      d(n, e);
                      var t = v(n);
                      function n() {
                        return u(this, n), t.apply(this, arguments);
                      }
                      return n;
                    })(gM)),
                      f(c, "Incident", r),
                      f(c, "plugin_npm_name", e.npm_name),
                      f(c, "plugin", e.npm_name),
                      f(c, "ClassName", e.incidents[n].name),
                      f(c, "Channel", p),
                      f(c, "audio", e.audio ? e.audio : "off"),
                      f(c, "attrsValidationRules", a),
                      f(c, "attrsValidationMethod", i),
                      (h = l);
                  else if (r.prototype instanceof mE) {
                    var m, g;
                    (g = m = (function (e) {
                      d(n, e);
                      var t = v(n);
                      function n() {
                        return u(this, n), t.apply(this, arguments);
                      }
                      return n;
                    })(gM)),
                      f(m, "Incident", r),
                      f(m, "plugin_npm_name", "@kissmybutton/media-playback"),
                      f(m, "plugin", e.npm_name),
                      f(m, "ClassName", e.incidents[n].name),
                      f(m, "Channel", dE),
                      f(m, "audio", e.audio ? e.audio : "off"),
                      f(m, "attrsValidationRules", a),
                      f(m, "attrsValidationMethod", i),
                      (h = g);
                  } else if (r.prototype instanceof pM) {
                    var y, b;
                    (b = y = (function (e) {
                      d(n, e);
                      var t = v(n);
                      function n() {
                        return u(this, n), t.apply(this, arguments);
                      }
                      return n;
                    })(r)),
                      f(y, "plugin", e.npm_name),
                      f(y, "ClassName", e.incidents[n].name),
                      f(y, "audio", e.audio ? e.audio : "on"),
                      f(
                        y,
                        "originalDims",
                        J(e.incidents[n].originalDims).analysis
                      ),
                      f(y, "attrsValidationRules", a),
                      f(y, "attrsValidationMethod", i),
                      (h = b);
                  } else if (r.prototype instanceof eE) {
                    var x, w;
                    (w = x = (function (e) {
                      d(n, e);
                      var t = v(n);
                      function n() {
                        return u(this, n), t.apply(this, arguments);
                      }
                      return n;
                    })(r)),
                      f(x, "plugin", e.npm_name),
                      f(x, "ClassName", e.incidents[n].name),
                      f(x, "attrsValidationRules", a),
                      f(x, "attrsValidationMethod", i),
                      (h = w);
                  }
                  Object.defineProperty(t, e.incidents[n].name, {
                    get: function () {
                      var t = function t(r, a) {
                        u(this, t);
                        var s = new h(r, a);
                        if (!1 === s.result) return s;
                        if (o) {
                          var c = i(r);
                          if (c.length > 0) {
                            for (
                              var l = "Error on plugin's \""
                                  .concat(e.npm_name, '" "')
                                  .concat(
                                    e.incidents[n].name,
                                    '" instantiation. Errors:'
                                  ),
                                f = 0;
                              f < c.length;
                              f++
                            )
                              l += "\n - "
                                .concat(c[f].message, ". ")
                                .concat(c[f].actual, " provided");
                            return console.error(l), { result: !1, errors: c };
                          }
                        } else
                          xM.warning(
                            "It's always good to provide attributesValidationRules to the exported incidents. "
                              .concat(e.npm_name, ".")
                              .concat(s.constructor.name, " doesn't provide it")
                          );
                        return s;
                      };
                      return (
                        f(t, "plugin_npm_name", h.plugin_npm_name || null),
                        f(t, "Channel", h.Channel || null),
                        f(t, "attrsValidationRules", a),
                        f(t, "attrsValidationMethod", i),
                        t
                      );
                    },
                  });
                },
                m = 0;
              m < e.incidents.length;
              m++
            )
              h(m);
          return t;
        }
        var NM = wM(gE),
          EM = pM,
          MM = eE,
          SM = mM,
          _M = NM.Clip,
          kM = NM.AudioPlayback,
          OM = {
            MonoIncident: je,
            Group: MM,
            Clip: EM,
            AudioClip: hM,
            MediaPlayback: mE,
            ExtendableClip: aE,
            DOMClip: oM,
            easings: ze,
            clipFromDefinition: WN,
          },
          AM = { createDOMElement: bM },
          CM = {
            API: OM,
            utils: AM,
            Group: MM,
            Combo: SM,
            Clip: EM,
            loadPlugin: wM,
            AudioClip: _M,
            AudioPlayback: kM,
            AudioEffect: NM.AudioEffect,
            TimeCapsule: vM,
          };
        (t.API = OM),
          (t.AudioClip = _M),
          (t.AudioPlayback = kM),
          (t.Clip = EM),
          (t.Combo = SM),
          (t.Group = MM),
          (t.TimeCapsule = vM),
          (t.default = CM),
          (t.loadPlugin = wM),
          (t.utils = AM),
          Object.defineProperty(t, "__esModule", { value: !0 });
      })(t, n(35), n(36));
    }.call(this, n(2)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n,
        r = "object" == typeof Reflect ? Reflect : null,
        i =
          r && "function" == typeof r.apply
            ? r.apply
            : function (e, t, n) {
                return Function.prototype.apply.call(e, t, n);
              };
      n =
        r && "function" == typeof r.ownKeys
          ? r.ownKeys
          : Object.getOwnPropertySymbols
          ? function (e) {
              return Object.getOwnPropertyNames(e).concat(
                Object.getOwnPropertySymbols(e)
              );
            }
          : function (e) {
              return Object.getOwnPropertyNames(e);
            };
      var a =
        Number.isNaN ||
        function (e) {
          return e != e;
        };
      function o() {
        o.init.call(this);
      }
      (e.exports = o),
        (e.exports.once = function (e, n) {
          return new t(function (t, r) {
            function i() {
              void 0 !== a && e.removeListener("error", a),
                t([].slice.call(arguments));
            }
            var a;
            "error" !== n &&
              ((a = function (t) {
                e.removeListener(n, i), r(t);
              }),
              e.once("error", a)),
              e.once(n, i);
          });
        }),
        (o.EventEmitter = o),
        (o.prototype._events = void 0),
        (o.prototype._eventsCount = 0),
        (o.prototype._maxListeners = void 0);
      var s = 10;
      function u(e) {
        if ("function" != typeof e)
          throw new TypeError(
            'The "listener" argument must be of type Function. Received type ' +
              typeof e
          );
      }
      function c(e) {
        return void 0 === e._maxListeners
          ? o.defaultMaxListeners
          : e._maxListeners;
      }
      function l(e, t, n, r) {
        var i, a, o, s;
        if (
          (u(n),
          void 0 === (a = e._events)
            ? ((a = e._events = Object.create(null)), (e._eventsCount = 0))
            : (void 0 !== a.newListener &&
                (e.emit("newListener", t, n.listener ? n.listener : n),
                (a = e._events)),
              (o = a[t])),
          void 0 === o)
        )
          (o = a[t] = n), ++e._eventsCount;
        else if (
          ("function" == typeof o
            ? (o = a[t] = r ? [n, o] : [o, n])
            : r
            ? o.unshift(n)
            : o.push(n),
          (i = c(e)) > 0 && o.length > i && !o.warned)
        ) {
          o.warned = !0;
          var l = new Error(
            "Possible EventEmitter memory leak detected. " +
              o.length +
              " " +
              String(t) +
              " listeners added. Use emitter.setMaxListeners() to increase limit"
          );
          (l.name = "MaxListenersExceededWarning"),
            (l.emitter = e),
            (l.type = t),
            (l.count = o.length),
            (s = l),
            console && console.warn && console.warn(s);
        }
        return e;
      }
      function f() {
        if (!this.fired)
          return (
            this.target.removeListener(this.type, this.wrapFn),
            (this.fired = !0),
            0 === arguments.length
              ? this.listener.call(this.target)
              : this.listener.apply(this.target, arguments)
          );
      }
      function p(e, t, n) {
        var r = { fired: !1, wrapFn: void 0, target: e, type: t, listener: n },
          i = f.bind(r);
        return (i.listener = n), (r.wrapFn = i), i;
      }
      function h(e, t, n) {
        var r = e._events;
        if (void 0 === r) return [];
        var i = r[t];
        return void 0 === i
          ? []
          : "function" == typeof i
          ? n
            ? [i.listener || i]
            : [i]
          : n
          ? (function (e) {
              for (var t = new Array(e.length), n = 0; n < t.length; ++n)
                t[n] = e[n].listener || e[n];
              return t;
            })(i)
          : m(i, i.length);
      }
      function d(e) {
        var t = this._events;
        if (void 0 !== t) {
          var n = t[e];
          if ("function" == typeof n) return 1;
          if (void 0 !== n) return n.length;
        }
        return 0;
      }
      function m(e, t) {
        for (var n = new Array(t), r = 0; r < t; ++r) n[r] = e[r];
        return n;
      }
      Object.defineProperty(o, "defaultMaxListeners", {
        enumerable: !0,
        get: function () {
          return s;
        },
        set: function (e) {
          if ("number" != typeof e || e < 0 || a(e))
            throw new RangeError(
              'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                e +
                "."
            );
          s = e;
        },
      }),
        (o.init = function () {
          (void 0 !== this._events &&
            this._events !== Object.getPrototypeOf(this)._events) ||
            ((this._events = Object.create(null)), (this._eventsCount = 0)),
            (this._maxListeners = this._maxListeners || void 0);
        }),
        (o.prototype.setMaxListeners = function (e) {
          if ("number" != typeof e || e < 0 || a(e))
            throw new RangeError(
              'The value of "n" is out of range. It must be a non-negative number. Received ' +
                e +
                "."
            );
          return (this._maxListeners = e), this;
        }),
        (o.prototype.getMaxListeners = function () {
          return c(this);
        }),
        (o.prototype.emit = function (e) {
          for (var t = [], n = 1; n < arguments.length; n++)
            t.push(arguments[n]);
          var r = "error" === e,
            a = this._events;
          if (void 0 !== a) r = r && void 0 === a.error;
          else if (!r) return !1;
          if (r) {
            var o;
            if ((t.length > 0 && (o = t[0]), o instanceof Error)) throw o;
            var s = new Error(
              "Unhandled error." + (o ? " (" + o.message + ")" : "")
            );
            throw ((s.context = o), s);
          }
          var u = a[e];
          if (void 0 === u) return !1;
          if ("function" == typeof u) i(u, this, t);
          else {
            var c = u.length,
              l = m(u, c);
            for (n = 0; n < c; ++n) i(l[n], this, t);
          }
          return !0;
        }),
        (o.prototype.addListener = function (e, t) {
          return l(this, e, t, !1);
        }),
        (o.prototype.on = o.prototype.addListener),
        (o.prototype.prependListener = function (e, t) {
          return l(this, e, t, !0);
        }),
        (o.prototype.once = function (e, t) {
          return u(t), this.on(e, p(this, e, t)), this;
        }),
        (o.prototype.prependOnceListener = function (e, t) {
          return u(t), this.prependListener(e, p(this, e, t)), this;
        }),
        (o.prototype.removeListener = function (e, t) {
          var n, r, i, a, o;
          if ((u(t), void 0 === (r = this._events))) return this;
          if (void 0 === (n = r[e])) return this;
          if (n === t || n.listener === t)
            0 == --this._eventsCount
              ? (this._events = Object.create(null))
              : (delete r[e],
                r.removeListener &&
                  this.emit("removeListener", e, n.listener || t));
          else if ("function" != typeof n) {
            for (i = -1, a = n.length - 1; a >= 0; a--)
              if (n[a] === t || n[a].listener === t) {
                (o = n[a].listener), (i = a);
                break;
              }
            if (i < 0) return this;
            0 === i
              ? n.shift()
              : (function (e, t) {
                  for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                  e.pop();
                })(n, i),
              1 === n.length && (r[e] = n[0]),
              void 0 !== r.removeListener &&
                this.emit("removeListener", e, o || t);
          }
          return this;
        }),
        (o.prototype.off = o.prototype.removeListener),
        (o.prototype.removeAllListeners = function (e) {
          var t, n, r;
          if (void 0 === (n = this._events)) return this;
          if (void 0 === n.removeListener)
            return (
              0 === arguments.length
                ? ((this._events = Object.create(null)),
                  (this._eventsCount = 0))
                : void 0 !== n[e] &&
                  (0 == --this._eventsCount
                    ? (this._events = Object.create(null))
                    : delete n[e]),
              this
            );
          if (0 === arguments.length) {
            var i,
              a = Object.keys(n);
            for (r = 0; r < a.length; ++r)
              "removeListener" !== (i = a[r]) && this.removeAllListeners(i);
            return (
              this.removeAllListeners("removeListener"),
              (this._events = Object.create(null)),
              (this._eventsCount = 0),
              this
            );
          }
          if ("function" == typeof (t = n[e])) this.removeListener(e, t);
          else if (void 0 !== t)
            for (r = t.length - 1; r >= 0; r--) this.removeListener(e, t[r]);
          return this;
        }),
        (o.prototype.listeners = function (e) {
          return h(this, e, !0);
        }),
        (o.prototype.rawListeners = function (e) {
          return h(this, e, !1);
        }),
        (o.listenerCount = function (e, t) {
          return "function" == typeof e.listenerCount
            ? e.listenerCount(t)
            : d.call(e, t);
        }),
        (o.prototype.listenerCount = d),
        (o.prototype.eventNames = function () {
          return this._eventsCount > 0 ? n(this._events) : [];
        });
    }.call(this, n(11)));
  },
  function (e, t, n) {
    "use strict";
    (function (e) {
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <http://feross.org>
       * @license  MIT
       */
      var r = n(37),
        i = n(38),
        a = n(19);
      function o() {
        return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function s(e, t) {
        if (o() < t) throw new RangeError("Invalid typed array length");
        return (
          u.TYPED_ARRAY_SUPPORT
            ? ((e = new Uint8Array(t)).__proto__ = u.prototype)
            : (null === e && (e = new u(t)), (e.length = t)),
          e
        );
      }
      function u(e, t, n) {
        if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u))
          return new u(e, t, n);
        if ("number" == typeof e) {
          if ("string" == typeof t)
            throw new Error(
              "If encoding is specified then the first argument must be a string"
            );
          return f(this, e);
        }
        return c(this, e, t, n);
      }
      function c(e, t, n, r) {
        if ("number" == typeof t)
          throw new TypeError('"value" argument must not be a number');
        return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer
          ? (function (e, t, n, r) {
              if ((t.byteLength, n < 0 || t.byteLength < n))
                throw new RangeError("'offset' is out of bounds");
              if (t.byteLength < n + (r || 0))
                throw new RangeError("'length' is out of bounds");
              t =
                void 0 === n && void 0 === r
                  ? new Uint8Array(t)
                  : void 0 === r
                  ? new Uint8Array(t, n)
                  : new Uint8Array(t, n, r);
              u.TYPED_ARRAY_SUPPORT
                ? ((e = t).__proto__ = u.prototype)
                : (e = p(e, t));
              return e;
            })(e, t, n, r)
          : "string" == typeof t
          ? (function (e, t, n) {
              ("string" == typeof n && "" !== n) || (n = "utf8");
              if (!u.isEncoding(n))
                throw new TypeError(
                  '"encoding" must be a valid string encoding'
                );
              var r = 0 | d(t, n),
                i = (e = s(e, r)).write(t, n);
              i !== r && (e = e.slice(0, i));
              return e;
            })(e, t, n)
          : (function (e, t) {
              if (u.isBuffer(t)) {
                var n = 0 | h(t.length);
                return 0 === (e = s(e, n)).length || t.copy(e, 0, 0, n), e;
              }
              if (t) {
                if (
                  ("undefined" != typeof ArrayBuffer &&
                    t.buffer instanceof ArrayBuffer) ||
                  "length" in t
                )
                  return "number" != typeof t.length || (r = t.length) != r
                    ? s(e, 0)
                    : p(e, t);
                if ("Buffer" === t.type && a(t.data)) return p(e, t.data);
              }
              var r;
              throw new TypeError(
                "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
              );
            })(e, t);
      }
      function l(e) {
        if ("number" != typeof e)
          throw new TypeError('"size" argument must be a number');
        if (e < 0) throw new RangeError('"size" argument must not be negative');
      }
      function f(e, t) {
        if ((l(t), (e = s(e, t < 0 ? 0 : 0 | h(t))), !u.TYPED_ARRAY_SUPPORT))
          for (var n = 0; n < t; ++n) e[n] = 0;
        return e;
      }
      function p(e, t) {
        var n = t.length < 0 ? 0 : 0 | h(t.length);
        e = s(e, n);
        for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
        return e;
      }
      function h(e) {
        if (e >= o())
          throw new RangeError(
            "Attempt to allocate Buffer larger than maximum size: 0x" +
              o().toString(16) +
              " bytes"
          );
        return 0 | e;
      }
      function d(e, t) {
        if (u.isBuffer(e)) return e.length;
        if (
          "undefined" != typeof ArrayBuffer &&
          "function" == typeof ArrayBuffer.isView &&
          (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
        )
          return e.byteLength;
        "string" != typeof e && (e = "" + e);
        var n = e.length;
        if (0 === n) return 0;
        for (var r = !1; ; )
          switch (t) {
            case "ascii":
            case "latin1":
            case "binary":
              return n;
            case "utf8":
            case "utf-8":
            case void 0:
              return q(e).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * n;
            case "hex":
              return n >>> 1;
            case "base64":
              return F(e).length;
            default:
              if (r) return q(e).length;
              (t = ("" + t).toLowerCase()), (r = !0);
          }
      }
      function m(e, t, n) {
        var r = !1;
        if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return "";
        if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
          return "";
        if ((n >>>= 0) <= (t >>>= 0)) return "";
        for (e || (e = "utf8"); ; )
          switch (e) {
            case "hex":
              return A(this, t, n);
            case "utf8":
            case "utf-8":
              return _(this, t, n);
            case "ascii":
              return k(this, t, n);
            case "latin1":
            case "binary":
              return O(this, t, n);
            case "base64":
              return S(this, t, n);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return C(this, t, n);
            default:
              if (r) throw new TypeError("Unknown encoding: " + e);
              (e = (e + "").toLowerCase()), (r = !0);
          }
      }
      function g(e, t, n) {
        var r = e[t];
        (e[t] = e[n]), (e[n] = r);
      }
      function y(e, t, n, r, i) {
        if (0 === e.length) return -1;
        if (
          ("string" == typeof n
            ? ((r = n), (n = 0))
            : n > 2147483647
            ? (n = 2147483647)
            : n < -2147483648 && (n = -2147483648),
          (n = +n),
          isNaN(n) && (n = i ? 0 : e.length - 1),
          n < 0 && (n = e.length + n),
          n >= e.length)
        ) {
          if (i) return -1;
          n = e.length - 1;
        } else if (n < 0) {
          if (!i) return -1;
          n = 0;
        }
        if (("string" == typeof t && (t = u.from(t, r)), u.isBuffer(t)))
          return 0 === t.length ? -1 : v(e, t, n, r, i);
        if ("number" == typeof t)
          return (
            (t &= 255),
            u.TYPED_ARRAY_SUPPORT &&
            "function" == typeof Uint8Array.prototype.indexOf
              ? i
                ? Uint8Array.prototype.indexOf.call(e, t, n)
                : Uint8Array.prototype.lastIndexOf.call(e, t, n)
              : v(e, [t], n, r, i)
          );
        throw new TypeError("val must be string, number or Buffer");
      }
      function v(e, t, n, r, i) {
        var a,
          o = 1,
          s = e.length,
          u = t.length;
        if (
          void 0 !== r &&
          ("ucs2" === (r = String(r).toLowerCase()) ||
            "ucs-2" === r ||
            "utf16le" === r ||
            "utf-16le" === r)
        ) {
          if (e.length < 2 || t.length < 2) return -1;
          (o = 2), (s /= 2), (u /= 2), (n /= 2);
        }
        function c(e, t) {
          return 1 === o ? e[t] : e.readUInt16BE(t * o);
        }
        if (i) {
          var l = -1;
          for (a = n; a < s; a++)
            if (c(e, a) === c(t, -1 === l ? 0 : a - l)) {
              if ((-1 === l && (l = a), a - l + 1 === u)) return l * o;
            } else -1 !== l && (a -= a - l), (l = -1);
        } else
          for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
            for (var f = !0, p = 0; p < u; p++)
              if (c(e, a + p) !== c(t, p)) {
                f = !1;
                break;
              }
            if (f) return a;
          }
        return -1;
      }
      function b(e, t, n, r) {
        n = Number(n) || 0;
        var i = e.length - n;
        r ? (r = Number(r)) > i && (r = i) : (r = i);
        var a = t.length;
        if (a % 2 != 0) throw new TypeError("Invalid hex string");
        r > a / 2 && (r = a / 2);
        for (var o = 0; o < r; ++o) {
          var s = parseInt(t.substr(2 * o, 2), 16);
          if (isNaN(s)) return o;
          e[n + o] = s;
        }
        return o;
      }
      function x(e, t, n, r) {
        return U(q(t, e.length - n), e, n, r);
      }
      function w(e, t, n, r) {
        return U(
          (function (e) {
            for (var t = [], n = 0; n < e.length; ++n)
              t.push(255 & e.charCodeAt(n));
            return t;
          })(t),
          e,
          n,
          r
        );
      }
      function N(e, t, n, r) {
        return w(e, t, n, r);
      }
      function E(e, t, n, r) {
        return U(F(t), e, n, r);
      }
      function M(e, t, n, r) {
        return U(
          (function (e, t) {
            for (
              var n, r, i, a = [], o = 0;
              o < e.length && !((t -= 2) < 0);
              ++o
            )
              (n = e.charCodeAt(o)),
                (r = n >> 8),
                (i = n % 256),
                a.push(i),
                a.push(r);
            return a;
          })(t, e.length - n),
          e,
          n,
          r
        );
      }
      function S(e, t, n) {
        return 0 === t && n === e.length
          ? r.fromByteArray(e)
          : r.fromByteArray(e.slice(t, n));
      }
      function _(e, t, n) {
        n = Math.min(e.length, n);
        for (var r = [], i = t; i < n; ) {
          var a,
            o,
            s,
            u,
            c = e[i],
            l = null,
            f = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
          if (i + f <= n)
            switch (f) {
              case 1:
                c < 128 && (l = c);
                break;
              case 2:
                128 == (192 & (a = e[i + 1])) &&
                  (u = ((31 & c) << 6) | (63 & a)) > 127 &&
                  (l = u);
                break;
              case 3:
                (a = e[i + 1]),
                  (o = e[i + 2]),
                  128 == (192 & a) &&
                    128 == (192 & o) &&
                    (u = ((15 & c) << 12) | ((63 & a) << 6) | (63 & o)) >
                      2047 &&
                    (u < 55296 || u > 57343) &&
                    (l = u);
                break;
              case 4:
                (a = e[i + 1]),
                  (o = e[i + 2]),
                  (s = e[i + 3]),
                  128 == (192 & a) &&
                    128 == (192 & o) &&
                    128 == (192 & s) &&
                    (u =
                      ((15 & c) << 18) |
                      ((63 & a) << 12) |
                      ((63 & o) << 6) |
                      (63 & s)) > 65535 &&
                    u < 1114112 &&
                    (l = u);
            }
          null === l
            ? ((l = 65533), (f = 1))
            : l > 65535 &&
              ((l -= 65536),
              r.push(((l >>> 10) & 1023) | 55296),
              (l = 56320 | (1023 & l))),
            r.push(l),
            (i += f);
        }
        return (function (e) {
          var t = e.length;
          if (t <= 4096) return String.fromCharCode.apply(String, e);
          var n = "",
            r = 0;
          for (; r < t; )
            n += String.fromCharCode.apply(String, e.slice(r, (r += 4096)));
          return n;
        })(r);
      }
      (t.Buffer = u),
        (t.SlowBuffer = function (e) {
          +e != e && (e = 0);
          return u.alloc(+e);
        }),
        (t.INSPECT_MAX_BYTES = 50),
        (u.TYPED_ARRAY_SUPPORT =
          void 0 !== e.TYPED_ARRAY_SUPPORT
            ? e.TYPED_ARRAY_SUPPORT
            : (function () {
                try {
                  var e = new Uint8Array(1);
                  return (
                    (e.__proto__ = {
                      __proto__: Uint8Array.prototype,
                      foo: function () {
                        return 42;
                      },
                    }),
                    42 === e.foo() &&
                      "function" == typeof e.subarray &&
                      0 === e.subarray(1, 1).byteLength
                  );
                } catch (e) {
                  return !1;
                }
              })()),
        (t.kMaxLength = o()),
        (u.poolSize = 8192),
        (u._augment = function (e) {
          return (e.__proto__ = u.prototype), e;
        }),
        (u.from = function (e, t, n) {
          return c(null, e, t, n);
        }),
        u.TYPED_ARRAY_SUPPORT &&
          ((u.prototype.__proto__ = Uint8Array.prototype),
          (u.__proto__ = Uint8Array),
          "undefined" != typeof Symbol &&
            Symbol.species &&
            u[Symbol.species] === u &&
            Object.defineProperty(u, Symbol.species, {
              value: null,
              configurable: !0,
            })),
        (u.alloc = function (e, t, n) {
          return (function (e, t, n, r) {
            return (
              l(t),
              t <= 0
                ? s(e, t)
                : void 0 !== n
                ? "string" == typeof r
                  ? s(e, t).fill(n, r)
                  : s(e, t).fill(n)
                : s(e, t)
            );
          })(null, e, t, n);
        }),
        (u.allocUnsafe = function (e) {
          return f(null, e);
        }),
        (u.allocUnsafeSlow = function (e) {
          return f(null, e);
        }),
        (u.isBuffer = function (e) {
          return !(null == e || !e._isBuffer);
        }),
        (u.compare = function (e, t) {
          if (!u.isBuffer(e) || !u.isBuffer(t))
            throw new TypeError("Arguments must be Buffers");
          if (e === t) return 0;
          for (
            var n = e.length, r = t.length, i = 0, a = Math.min(n, r);
            i < a;
            ++i
          )
            if (e[i] !== t[i]) {
              (n = e[i]), (r = t[i]);
              break;
            }
          return n < r ? -1 : r < n ? 1 : 0;
        }),
        (u.isEncoding = function (e) {
          switch (String(e).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return !0;
            default:
              return !1;
          }
        }),
        (u.concat = function (e, t) {
          if (!a(e))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e.length) return u.alloc(0);
          var n;
          if (void 0 === t)
            for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
          var r = u.allocUnsafe(t),
            i = 0;
          for (n = 0; n < e.length; ++n) {
            var o = e[n];
            if (!u.isBuffer(o))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            o.copy(r, i), (i += o.length);
          }
          return r;
        }),
        (u.byteLength = d),
        (u.prototype._isBuffer = !0),
        (u.prototype.swap16 = function () {
          var e = this.length;
          if (e % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t = 0; t < e; t += 2) g(this, t, t + 1);
          return this;
        }),
        (u.prototype.swap32 = function () {
          var e = this.length;
          if (e % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t = 0; t < e; t += 4)
            g(this, t, t + 3), g(this, t + 1, t + 2);
          return this;
        }),
        (u.prototype.swap64 = function () {
          var e = this.length;
          if (e % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t = 0; t < e; t += 8)
            g(this, t, t + 7),
              g(this, t + 1, t + 6),
              g(this, t + 2, t + 5),
              g(this, t + 3, t + 4);
          return this;
        }),
        (u.prototype.toString = function () {
          var e = 0 | this.length;
          return 0 === e
            ? ""
            : 0 === arguments.length
            ? _(this, 0, e)
            : m.apply(this, arguments);
        }),
        (u.prototype.equals = function (e) {
          if (!u.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
          return this === e || 0 === u.compare(this, e);
        }),
        (u.prototype.inspect = function () {
          var e = "",
            n = t.INSPECT_MAX_BYTES;
          return (
            this.length > 0 &&
              ((e = this.toString("hex", 0, n).match(/.{2}/g).join(" ")),
              this.length > n && (e += " ... ")),
            "<Buffer " + e + ">"
          );
        }),
        (u.prototype.compare = function (e, t, n, r, i) {
          if (!u.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
          if (
            (void 0 === t && (t = 0),
            void 0 === n && (n = e ? e.length : 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = this.length),
            t < 0 || n > e.length || r < 0 || i > this.length)
          )
            throw new RangeError("out of range index");
          if (r >= i && t >= n) return 0;
          if (r >= i) return -1;
          if (t >= n) return 1;
          if (this === e) return 0;
          for (
            var a = (i >>>= 0) - (r >>>= 0),
              o = (n >>>= 0) - (t >>>= 0),
              s = Math.min(a, o),
              c = this.slice(r, i),
              l = e.slice(t, n),
              f = 0;
            f < s;
            ++f
          )
            if (c[f] !== l[f]) {
              (a = c[f]), (o = l[f]);
              break;
            }
          return a < o ? -1 : o < a ? 1 : 0;
        }),
        (u.prototype.includes = function (e, t, n) {
          return -1 !== this.indexOf(e, t, n);
        }),
        (u.prototype.indexOf = function (e, t, n) {
          return y(this, e, t, n, !0);
        }),
        (u.prototype.lastIndexOf = function (e, t, n) {
          return y(this, e, t, n, !1);
        }),
        (u.prototype.write = function (e, t, n, r) {
          if (void 0 === t) (r = "utf8"), (n = this.length), (t = 0);
          else if (void 0 === n && "string" == typeof t)
            (r = t), (n = this.length), (t = 0);
          else {
            if (!isFinite(t))
              throw new Error(
                "Buffer.write(string, encoding, offset[, length]) is no longer supported"
              );
            (t |= 0),
              isFinite(n)
                ? ((n |= 0), void 0 === r && (r = "utf8"))
                : ((r = n), (n = void 0));
          }
          var i = this.length - t;
          if (
            ((void 0 === n || n > i) && (n = i),
            (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
          )
            throw new RangeError("Attempt to write outside buffer bounds");
          r || (r = "utf8");
          for (var a = !1; ; )
            switch (r) {
              case "hex":
                return b(this, e, t, n);
              case "utf8":
              case "utf-8":
                return x(this, e, t, n);
              case "ascii":
                return w(this, e, t, n);
              case "latin1":
              case "binary":
                return N(this, e, t, n);
              case "base64":
                return E(this, e, t, n);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return M(this, e, t, n);
              default:
                if (a) throw new TypeError("Unknown encoding: " + r);
                (r = ("" + r).toLowerCase()), (a = !0);
            }
        }),
        (u.prototype.toJSON = function () {
          return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        });
      function k(e, t, n) {
        var r = "";
        n = Math.min(e.length, n);
        for (var i = t; i < n; ++i) r += String.fromCharCode(127 & e[i]);
        return r;
      }
      function O(e, t, n) {
        var r = "";
        n = Math.min(e.length, n);
        for (var i = t; i < n; ++i) r += String.fromCharCode(e[i]);
        return r;
      }
      function A(e, t, n) {
        var r = e.length;
        (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
        for (var i = "", a = t; a < n; ++a) i += z(e[a]);
        return i;
      }
      function C(e, t, n) {
        for (var r = e.slice(t, n), i = "", a = 0; a < r.length; a += 2)
          i += String.fromCharCode(r[a] + 256 * r[a + 1]);
        return i;
      }
      function T(e, t, n) {
        if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
        if (e + t > n)
          throw new RangeError("Trying to access beyond buffer length");
      }
      function I(e, t, n, r, i, a) {
        if (!u.isBuffer(e))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t > i || t < a)
          throw new RangeError('"value" argument is out of bounds');
        if (n + r > e.length) throw new RangeError("Index out of range");
      }
      function P(e, t, n, r) {
        t < 0 && (t = 65535 + t + 1);
        for (var i = 0, a = Math.min(e.length - n, 2); i < a; ++i)
          e[n + i] =
            (t & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
      }
      function B(e, t, n, r) {
        t < 0 && (t = 4294967295 + t + 1);
        for (var i = 0, a = Math.min(e.length - n, 4); i < a; ++i)
          e[n + i] = (t >>> (8 * (r ? i : 3 - i))) & 255;
      }
      function D(e, t, n, r, i, a) {
        if (n + r > e.length) throw new RangeError("Index out of range");
        if (n < 0) throw new RangeError("Index out of range");
      }
      function j(e, t, n, r, a) {
        return a || D(e, 0, n, 4), i.write(e, t, n, r, 23, 4), n + 4;
      }
      function R(e, t, n, r, a) {
        return a || D(e, 0, n, 8), i.write(e, t, n, r, 52, 8), n + 8;
      }
      (u.prototype.slice = function (e, t) {
        var n,
          r = this.length;
        if (
          ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
          (t = void 0 === t ? r : ~~t) < 0
            ? (t += r) < 0 && (t = 0)
            : t > r && (t = r),
          t < e && (t = e),
          u.TYPED_ARRAY_SUPPORT)
        )
          (n = this.subarray(e, t)).__proto__ = u.prototype;
        else {
          var i = t - e;
          n = new u(i, void 0);
          for (var a = 0; a < i; ++a) n[a] = this[a + e];
        }
        return n;
      }),
        (u.prototype.readUIntLE = function (e, t, n) {
          (e |= 0), (t |= 0), n || T(e, t, this.length);
          for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
            r += this[e + a] * i;
          return r;
        }),
        (u.prototype.readUIntBE = function (e, t, n) {
          (e |= 0), (t |= 0), n || T(e, t, this.length);
          for (var r = this[e + --t], i = 1; t > 0 && (i *= 256); )
            r += this[e + --t] * i;
          return r;
        }),
        (u.prototype.readUInt8 = function (e, t) {
          return t || T(e, 1, this.length), this[e];
        }),
        (u.prototype.readUInt16LE = function (e, t) {
          return t || T(e, 2, this.length), this[e] | (this[e + 1] << 8);
        }),
        (u.prototype.readUInt16BE = function (e, t) {
          return t || T(e, 2, this.length), (this[e] << 8) | this[e + 1];
        }),
        (u.prototype.readUInt32LE = function (e, t) {
          return (
            t || T(e, 4, this.length),
            (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
              16777216 * this[e + 3]
          );
        }),
        (u.prototype.readUInt32BE = function (e, t) {
          return (
            t || T(e, 4, this.length),
            16777216 * this[e] +
              ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
          );
        }),
        (u.prototype.readIntLE = function (e, t, n) {
          (e |= 0), (t |= 0), n || T(e, t, this.length);
          for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256); )
            r += this[e + a] * i;
          return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
        }),
        (u.prototype.readIntBE = function (e, t, n) {
          (e |= 0), (t |= 0), n || T(e, t, this.length);
          for (var r = t, i = 1, a = this[e + --r]; r > 0 && (i *= 256); )
            a += this[e + --r] * i;
          return a >= (i *= 128) && (a -= Math.pow(2, 8 * t)), a;
        }),
        (u.prototype.readInt8 = function (e, t) {
          return (
            t || T(e, 1, this.length),
            128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
          );
        }),
        (u.prototype.readInt16LE = function (e, t) {
          t || T(e, 2, this.length);
          var n = this[e] | (this[e + 1] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt16BE = function (e, t) {
          t || T(e, 2, this.length);
          var n = this[e + 1] | (this[e] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt32LE = function (e, t) {
          return (
            t || T(e, 4, this.length),
            this[e] |
              (this[e + 1] << 8) |
              (this[e + 2] << 16) |
              (this[e + 3] << 24)
          );
        }),
        (u.prototype.readInt32BE = function (e, t) {
          return (
            t || T(e, 4, this.length),
            (this[e] << 24) |
              (this[e + 1] << 16) |
              (this[e + 2] << 8) |
              this[e + 3]
          );
        }),
        (u.prototype.readFloatLE = function (e, t) {
          return t || T(e, 4, this.length), i.read(this, e, !0, 23, 4);
        }),
        (u.prototype.readFloatBE = function (e, t) {
          return t || T(e, 4, this.length), i.read(this, e, !1, 23, 4);
        }),
        (u.prototype.readDoubleLE = function (e, t) {
          return t || T(e, 8, this.length), i.read(this, e, !0, 52, 8);
        }),
        (u.prototype.readDoubleBE = function (e, t) {
          return t || T(e, 8, this.length), i.read(this, e, !1, 52, 8);
        }),
        (u.prototype.writeUIntLE = function (e, t, n, r) {
          ((e = +e), (t |= 0), (n |= 0), r) ||
            I(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
          var i = 1,
            a = 0;
          for (this[t] = 255 & e; ++a < n && (i *= 256); )
            this[t + a] = (e / i) & 255;
          return t + n;
        }),
        (u.prototype.writeUIntBE = function (e, t, n, r) {
          ((e = +e), (t |= 0), (n |= 0), r) ||
            I(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
          var i = n - 1,
            a = 1;
          for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
            this[t + i] = (e / a) & 255;
          return t + n;
        }),
        (u.prototype.writeUInt8 = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 1, 255, 0),
            u.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
            (this[t] = 255 & e),
            t + 1
          );
        }),
        (u.prototype.writeUInt16LE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
              : P(this, e, t, !0),
            t + 2
          );
        }),
        (u.prototype.writeUInt16BE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
              : P(this, e, t, !1),
            t + 2
          );
        }),
        (u.prototype.writeUInt32LE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t + 3] = e >>> 24),
                (this[t + 2] = e >>> 16),
                (this[t + 1] = e >>> 8),
                (this[t] = 255 & e))
              : B(this, e, t, !0),
            t + 4
          );
        }),
        (u.prototype.writeUInt32BE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e))
              : B(this, e, t, !1),
            t + 4
          );
        }),
        (u.prototype.writeIntLE = function (e, t, n, r) {
          if (((e = +e), (t |= 0), !r)) {
            var i = Math.pow(2, 8 * n - 1);
            I(this, e, t, n, i - 1, -i);
          }
          var a = 0,
            o = 1,
            s = 0;
          for (this[t] = 255 & e; ++a < n && (o *= 256); )
            e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
              (this[t + a] = (((e / o) >> 0) - s) & 255);
          return t + n;
        }),
        (u.prototype.writeIntBE = function (e, t, n, r) {
          if (((e = +e), (t |= 0), !r)) {
            var i = Math.pow(2, 8 * n - 1);
            I(this, e, t, n, i - 1, -i);
          }
          var a = n - 1,
            o = 1,
            s = 0;
          for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
            e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
              (this[t + a] = (((e / o) >> 0) - s) & 255);
          return t + n;
        }),
        (u.prototype.writeInt8 = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 1, 127, -128),
            u.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
            e < 0 && (e = 255 + e + 1),
            (this[t] = 255 & e),
            t + 1
          );
        }),
        (u.prototype.writeInt16LE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
              : P(this, e, t, !0),
            t + 2
          );
        }),
        (u.prototype.writeInt16BE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
              : P(this, e, t, !1),
            t + 2
          );
        }),
        (u.prototype.writeInt32LE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 4, 2147483647, -2147483648),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = 255 & e),
                (this[t + 1] = e >>> 8),
                (this[t + 2] = e >>> 16),
                (this[t + 3] = e >>> 24))
              : B(this, e, t, !0),
            t + 4
          );
        }),
        (u.prototype.writeInt32BE = function (e, t, n) {
          return (
            (e = +e),
            (t |= 0),
            n || I(this, e, t, 4, 2147483647, -2147483648),
            e < 0 && (e = 4294967295 + e + 1),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e))
              : B(this, e, t, !1),
            t + 4
          );
        }),
        (u.prototype.writeFloatLE = function (e, t, n) {
          return j(this, e, t, !0, n);
        }),
        (u.prototype.writeFloatBE = function (e, t, n) {
          return j(this, e, t, !1, n);
        }),
        (u.prototype.writeDoubleLE = function (e, t, n) {
          return R(this, e, t, !0, n);
        }),
        (u.prototype.writeDoubleBE = function (e, t, n) {
          return R(this, e, t, !1, n);
        }),
        (u.prototype.copy = function (e, t, n, r) {
          if (
            (n || (n = 0),
            r || 0 === r || (r = this.length),
            t >= e.length && (t = e.length),
            t || (t = 0),
            r > 0 && r < n && (r = n),
            r === n)
          )
            return 0;
          if (0 === e.length || 0 === this.length) return 0;
          if (t < 0) throw new RangeError("targetStart out of bounds");
          if (n < 0 || n >= this.length)
            throw new RangeError("sourceStart out of bounds");
          if (r < 0) throw new RangeError("sourceEnd out of bounds");
          r > this.length && (r = this.length),
            e.length - t < r - n && (r = e.length - t + n);
          var i,
            a = r - n;
          if (this === e && n < t && t < r)
            for (i = a - 1; i >= 0; --i) e[i + t] = this[i + n];
          else if (a < 1e3 || !u.TYPED_ARRAY_SUPPORT)
            for (i = 0; i < a; ++i) e[i + t] = this[i + n];
          else Uint8Array.prototype.set.call(e, this.subarray(n, n + a), t);
          return a;
        }),
        (u.prototype.fill = function (e, t, n, r) {
          if ("string" == typeof e) {
            if (
              ("string" == typeof t
                ? ((r = t), (t = 0), (n = this.length))
                : "string" == typeof n && ((r = n), (n = this.length)),
              1 === e.length)
            ) {
              var i = e.charCodeAt(0);
              i < 256 && (e = i);
            }
            if (void 0 !== r && "string" != typeof r)
              throw new TypeError("encoding must be a string");
            if ("string" == typeof r && !u.isEncoding(r))
              throw new TypeError("Unknown encoding: " + r);
          } else "number" == typeof e && (e &= 255);
          if (t < 0 || this.length < t || this.length < n)
            throw new RangeError("Out of range index");
          if (n <= t) return this;
          var a;
          if (
            ((t >>>= 0),
            (n = void 0 === n ? this.length : n >>> 0),
            e || (e = 0),
            "number" == typeof e)
          )
            for (a = t; a < n; ++a) this[a] = e;
          else {
            var o = u.isBuffer(e) ? e : q(new u(e, r).toString()),
              s = o.length;
            for (a = 0; a < n - t; ++a) this[a + t] = o[a % s];
          }
          return this;
        });
      var L = /[^+\/0-9A-Za-z-_]/g;
      function z(e) {
        return e < 16 ? "0" + e.toString(16) : e.toString(16);
      }
      function q(e, t) {
        var n;
        t = t || 1 / 0;
        for (var r = e.length, i = null, a = [], o = 0; o < r; ++o) {
          if ((n = e.charCodeAt(o)) > 55295 && n < 57344) {
            if (!i) {
              if (n > 56319) {
                (t -= 3) > -1 && a.push(239, 191, 189);
                continue;
              }
              if (o + 1 === r) {
                (t -= 3) > -1 && a.push(239, 191, 189);
                continue;
              }
              i = n;
              continue;
            }
            if (n < 56320) {
              (t -= 3) > -1 && a.push(239, 191, 189), (i = n);
              continue;
            }
            n = 65536 + (((i - 55296) << 10) | (n - 56320));
          } else i && (t -= 3) > -1 && a.push(239, 191, 189);
          if (((i = null), n < 128)) {
            if ((t -= 1) < 0) break;
            a.push(n);
          } else if (n < 2048) {
            if ((t -= 2) < 0) break;
            a.push((n >> 6) | 192, (63 & n) | 128);
          } else if (n < 65536) {
            if ((t -= 3) < 0) break;
            a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
          } else {
            if (!(n < 1114112)) throw new Error("Invalid code point");
            if ((t -= 4) < 0) break;
            a.push(
              (n >> 18) | 240,
              ((n >> 12) & 63) | 128,
              ((n >> 6) & 63) | 128,
              (63 & n) | 128
            );
          }
        }
        return a;
      }
      function F(e) {
        return r.toByteArray(
          (function (e) {
            if (
              (e = (function (e) {
                return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
              })(e).replace(L, "")).length < 2
            )
              return "";
            for (; e.length % 4 != 0; ) e += "=";
            return e;
          })(e)
        );
      }
      function U(e, t, n, r) {
        for (var i = 0; i < r && !(i + n >= t.length || i >= e.length); ++i)
          t[i + n] = e[i];
        return i;
      }
    }.call(this, n(2)));
  },
  function (e, t, n) {
    (function (e) {
      function n(e) {
        return Object.prototype.toString.call(e);
      }
      (t.isArray = function (e) {
        return Array.isArray ? Array.isArray(e) : "[object Array]" === n(e);
      }),
        (t.isBoolean = function (e) {
          return "boolean" == typeof e;
        }),
        (t.isNull = function (e) {
          return null === e;
        }),
        (t.isNullOrUndefined = function (e) {
          return null == e;
        }),
        (t.isNumber = function (e) {
          return "number" == typeof e;
        }),
        (t.isString = function (e) {
          return "string" == typeof e;
        }),
        (t.isSymbol = function (e) {
          return "symbol" == typeof e;
        }),
        (t.isUndefined = function (e) {
          return void 0 === e;
        }),
        (t.isRegExp = function (e) {
          return "[object RegExp]" === n(e);
        }),
        (t.isObject = function (e) {
          return "object" == typeof e && null !== e;
        }),
        (t.isDate = function (e) {
          return "[object Date]" === n(e);
        }),
        (t.isError = function (e) {
          return "[object Error]" === n(e) || e instanceof Error;
        }),
        (t.isFunction = function (e) {
          return "function" == typeof e;
        }),
        (t.isPrimitive = function (e) {
          return (
            null === e ||
            "boolean" == typeof e ||
            "number" == typeof e ||
            "string" == typeof e ||
            "symbol" == typeof e ||
            void 0 === e
          );
        }),
        (t.isBuffer = e.isBuffer);
    }.call(this, n(8).Buffer));
  },
  function (e, t, n) {
    "use strict";
    var r = n(14).Buffer,
      i =
        r.isEncoding ||
        function (e) {
          switch ((e = "" + e) && e.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return !0;
            default:
              return !1;
          }
        };
    function a(e) {
      var t;
      switch (
        ((this.encoding = (function (e) {
          var t = (function (e) {
            if (!e) return "utf8";
            for (var t; ; )
              switch (e) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return e;
                default:
                  if (t) return;
                  (e = ("" + e).toLowerCase()), (t = !0);
              }
          })(e);
          if ("string" != typeof t && (r.isEncoding === i || !i(e)))
            throw new Error("Unknown encoding: " + e);
          return t || e;
        })(e)),
        this.encoding)
      ) {
        case "utf16le":
          (this.text = u), (this.end = c), (t = 4);
          break;
        case "utf8":
          (this.fillLast = s), (t = 4);
          break;
        case "base64":
          (this.text = l), (this.end = f), (t = 3);
          break;
        default:
          return (this.write = p), void (this.end = h);
      }
      (this.lastNeed = 0),
        (this.lastTotal = 0),
        (this.lastChar = r.allocUnsafe(t));
    }
    function o(e) {
      return e <= 127
        ? 0
        : e >> 5 == 6
        ? 2
        : e >> 4 == 14
        ? 3
        : e >> 3 == 30
        ? 4
        : e >> 6 == 2
        ? -1
        : -2;
    }
    function s(e) {
      var t = this.lastTotal - this.lastNeed,
        n = (function (e, t, n) {
          if (128 != (192 & t[0])) return (e.lastNeed = 0), "�";
          if (e.lastNeed > 1 && t.length > 1) {
            if (128 != (192 & t[1])) return (e.lastNeed = 1), "�";
            if (e.lastNeed > 2 && t.length > 2 && 128 != (192 & t[2]))
              return (e.lastNeed = 2), "�";
          }
        })(this, e);
      return void 0 !== n
        ? n
        : this.lastNeed <= e.length
        ? (e.copy(this.lastChar, t, 0, this.lastNeed),
          this.lastChar.toString(this.encoding, 0, this.lastTotal))
        : (e.copy(this.lastChar, t, 0, e.length),
          void (this.lastNeed -= e.length));
    }
    function u(e, t) {
      if ((e.length - t) % 2 == 0) {
        var n = e.toString("utf16le", t);
        if (n) {
          var r = n.charCodeAt(n.length - 1);
          if (r >= 55296 && r <= 56319)
            return (
              (this.lastNeed = 2),
              (this.lastTotal = 4),
              (this.lastChar[0] = e[e.length - 2]),
              (this.lastChar[1] = e[e.length - 1]),
              n.slice(0, -1)
            );
        }
        return n;
      }
      return (
        (this.lastNeed = 1),
        (this.lastTotal = 2),
        (this.lastChar[0] = e[e.length - 1]),
        e.toString("utf16le", t, e.length - 1)
      );
    }
    function c(e) {
      var t = e && e.length ? this.write(e) : "";
      if (this.lastNeed) {
        var n = this.lastTotal - this.lastNeed;
        return t + this.lastChar.toString("utf16le", 0, n);
      }
      return t;
    }
    function l(e, t) {
      var n = (e.length - t) % 3;
      return 0 === n
        ? e.toString("base64", t)
        : ((this.lastNeed = 3 - n),
          (this.lastTotal = 3),
          1 === n
            ? (this.lastChar[0] = e[e.length - 1])
            : ((this.lastChar[0] = e[e.length - 2]),
              (this.lastChar[1] = e[e.length - 1])),
          e.toString("base64", t, e.length - n));
    }
    function f(e) {
      var t = e && e.length ? this.write(e) : "";
      return this.lastNeed
        ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
        : t;
    }
    function p(e) {
      return e.toString(this.encoding);
    }
    function h(e) {
      return e && e.length ? this.write(e) : "";
    }
    (t.StringDecoder = a),
      (a.prototype.write = function (e) {
        if (0 === e.length) return "";
        var t, n;
        if (this.lastNeed) {
          if (void 0 === (t = this.fillLast(e))) return "";
          (n = this.lastNeed), (this.lastNeed = 0);
        } else n = 0;
        return n < e.length
          ? t
            ? t + this.text(e, n)
            : this.text(e, n)
          : t || "";
      }),
      (a.prototype.end = function (e) {
        var t = e && e.length ? this.write(e) : "";
        return this.lastNeed ? t + "�" : t;
      }),
      (a.prototype.text = function (e, t) {
        var n = (function (e, t, n) {
          var r = t.length - 1;
          if (r < n) return 0;
          var i = o(t[r]);
          if (i >= 0) return i > 0 && (e.lastNeed = i - 1), i;
          if (--r < n || -2 === i) return 0;
          if ((i = o(t[r])) >= 0) return i > 0 && (e.lastNeed = i - 2), i;
          if (--r < n || -2 === i) return 0;
          if ((i = o(t[r])) >= 0)
            return i > 0 && (2 === i ? (i = 0) : (e.lastNeed = i - 3)), i;
          return 0;
        })(this, e, t);
        if (!this.lastNeed) return e.toString("utf8", t);
        this.lastTotal = n;
        var r = e.length - (n - this.lastNeed);
        return e.copy(this.lastChar, 0, r), e.toString("utf8", t, r);
      }),
      (a.prototype.fillLast = function (e) {
        if (this.lastNeed <= e.length)
          return (
            e.copy(
              this.lastChar,
              this.lastTotal - this.lastNeed,
              0,
              this.lastNeed
            ),
            this.lastChar.toString(this.encoding, 0, this.lastTotal)
          );
        e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length),
          (this.lastNeed -= e.length);
      });
  },
  function (e, t, n) {
    (function (t, n) {
      /*!
       * @overview es6-promise - a tiny implementation of Promises/A+.
       * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
       * @license   Licensed under MIT license
       *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
       * @version   v4.2.8+1e68dce6
       */ var r;
      (r = function () {
        "use strict";
        function e(e) {
          return "function" == typeof e;
        }
        var r = Array.isArray
            ? Array.isArray
            : function (e) {
                return "[object Array]" === Object.prototype.toString.call(e);
              },
          i = 0,
          a = void 0,
          o = void 0,
          s = function (e, t) {
            (d[i] = e), (d[i + 1] = t), 2 === (i += 2) && (o ? o(m) : x());
          },
          u = "undefined" != typeof window ? window : void 0,
          c = u || {},
          l = c.MutationObserver || c.WebKitMutationObserver,
          f =
            "undefined" == typeof self &&
            void 0 !== t &&
            "[object process]" === {}.toString.call(t),
          p =
            "undefined" != typeof Uint8ClampedArray &&
            "undefined" != typeof importScripts &&
            "undefined" != typeof MessageChannel;
        function h() {
          var e = setTimeout;
          return function () {
            return e(m, 1);
          };
        }
        var d = new Array(1e3);
        function m() {
          for (var e = 0; e < i; e += 2)
            (0, d[e])(d[e + 1]), (d[e] = void 0), (d[e + 1] = void 0);
          i = 0;
        }
        var g,
          y,
          v,
          b,
          x = void 0;
        function w(e, t) {
          var n = this,
            r = new this.constructor(M);
          void 0 === r[E] && B(r);
          var i = n._state;
          if (i) {
            var a = arguments[i - 1];
            s(function () {
              return I(i, r, a, n._result);
            });
          } else C(n, r, e, t);
          return r;
        }
        function N(e) {
          if (e && "object" == typeof e && e.constructor === this) return e;
          var t = new this(M);
          return _(t, e), t;
        }
        f
          ? (x = function () {
              return t.nextTick(m);
            })
          : l
          ? ((y = 0),
            (v = new l(m)),
            (b = document.createTextNode("")),
            v.observe(b, { characterData: !0 }),
            (x = function () {
              b.data = y = ++y % 2;
            }))
          : p
          ? (((g = new MessageChannel()).port1.onmessage = m),
            (x = function () {
              return g.port2.postMessage(0);
            }))
          : (x =
              void 0 === u
                ? (function () {
                    try {
                      var e = Function("return this")().require("vertx");
                      return void 0 !== (a = e.runOnLoop || e.runOnContext)
                        ? function () {
                            a(m);
                          }
                        : h();
                    } catch (e) {
                      return h();
                    }
                  })()
                : h());
        var E = Math.random().toString(36).substring(2);
        function M() {}
        function S(t, n, r) {
          n.constructor === t.constructor &&
          r === w &&
          n.constructor.resolve === N
            ? (function (e, t) {
                1 === t._state
                  ? O(e, t._result)
                  : 2 === t._state
                  ? A(e, t._result)
                  : C(
                      t,
                      void 0,
                      function (t) {
                        return _(e, t);
                      },
                      function (t) {
                        return A(e, t);
                      }
                    );
              })(t, n)
            : void 0 === r
            ? O(t, n)
            : e(r)
            ? (function (e, t, n) {
                s(function (e) {
                  var r = !1,
                    i = (function (e, t, n, r) {
                      try {
                        e.call(t, n, r);
                      } catch (e) {
                        return e;
                      }
                    })(
                      n,
                      t,
                      function (n) {
                        r || ((r = !0), t !== n ? _(e, n) : O(e, n));
                      },
                      function (t) {
                        r || ((r = !0), A(e, t));
                      },
                      e._label
                    );
                  !r && i && ((r = !0), A(e, i));
                }, e);
              })(t, n, r)
            : O(t, n);
        }
        function _(e, t) {
          if (e === t)
            A(e, new TypeError("You cannot resolve a promise with itself"));
          else if (
            ((i = typeof (r = t)),
            null === r || ("object" !== i && "function" !== i))
          )
            O(e, t);
          else {
            var n = void 0;
            try {
              n = t.then;
            } catch (t) {
              return void A(e, t);
            }
            S(e, t, n);
          }
          var r, i;
        }
        function k(e) {
          e._onerror && e._onerror(e._result), T(e);
        }
        function O(e, t) {
          void 0 === e._state &&
            ((e._result = t),
            (e._state = 1),
            0 !== e._subscribers.length && s(T, e));
        }
        function A(e, t) {
          void 0 === e._state && ((e._state = 2), (e._result = t), s(k, e));
        }
        function C(e, t, n, r) {
          var i = e._subscribers,
            a = i.length;
          (e._onerror = null),
            (i[a] = t),
            (i[a + 1] = n),
            (i[a + 2] = r),
            0 === a && e._state && s(T, e);
        }
        function T(e) {
          var t = e._subscribers,
            n = e._state;
          if (0 !== t.length) {
            for (
              var r = void 0, i = void 0, a = e._result, o = 0;
              o < t.length;
              o += 3
            )
              (r = t[o]), (i = t[o + n]), r ? I(n, r, i, a) : i(a);
            e._subscribers.length = 0;
          }
        }
        function I(t, n, r, i) {
          var a = e(r),
            o = void 0,
            s = void 0,
            u = !0;
          if (a) {
            try {
              o = r(i);
            } catch (e) {
              (u = !1), (s = e);
            }
            if (n === o)
              return void A(
                n,
                new TypeError(
                  "A promises callback cannot return that same promise."
                )
              );
          } else o = i;
          void 0 !== n._state ||
            (a && u
              ? _(n, o)
              : !1 === u
              ? A(n, s)
              : 1 === t
              ? O(n, o)
              : 2 === t && A(n, o));
        }
        var P = 0;
        function B(e) {
          (e[E] = P++),
            (e._state = void 0),
            (e._result = void 0),
            (e._subscribers = []);
        }
        var D = (function () {
            function e(e, t) {
              (this._instanceConstructor = e),
                (this.promise = new e(M)),
                this.promise[E] || B(this.promise),
                r(t)
                  ? ((this.length = t.length),
                    (this._remaining = t.length),
                    (this._result = new Array(this.length)),
                    0 === this.length
                      ? O(this.promise, this._result)
                      : ((this.length = this.length || 0),
                        this._enumerate(t),
                        0 === this._remaining && O(this.promise, this._result)))
                  : A(
                      this.promise,
                      new Error("Array Methods must be provided an Array")
                    );
            }
            return (
              (e.prototype._enumerate = function (e) {
                for (var t = 0; void 0 === this._state && t < e.length; t++)
                  this._eachEntry(e[t], t);
              }),
              (e.prototype._eachEntry = function (e, t) {
                var n = this._instanceConstructor,
                  r = n.resolve;
                if (r === N) {
                  var i = void 0,
                    a = void 0,
                    o = !1;
                  try {
                    i = e.then;
                  } catch (e) {
                    (o = !0), (a = e);
                  }
                  if (i === w && void 0 !== e._state)
                    this._settledAt(e._state, t, e._result);
                  else if ("function" != typeof i)
                    this._remaining--, (this._result[t] = e);
                  else if (n === j) {
                    var s = new n(M);
                    o ? A(s, a) : S(s, e, i), this._willSettleAt(s, t);
                  } else
                    this._willSettleAt(
                      new n(function (t) {
                        return t(e);
                      }),
                      t
                    );
                } else this._willSettleAt(r(e), t);
              }),
              (e.prototype._settledAt = function (e, t, n) {
                var r = this.promise;
                void 0 === r._state &&
                  (this._remaining--,
                  2 === e ? A(r, n) : (this._result[t] = n)),
                  0 === this._remaining && O(r, this._result);
              }),
              (e.prototype._willSettleAt = function (e, t) {
                var n = this;
                C(
                  e,
                  void 0,
                  function (e) {
                    return n._settledAt(1, t, e);
                  },
                  function (e) {
                    return n._settledAt(2, t, e);
                  }
                );
              }),
              e
            );
          })(),
          j = (function () {
            function t(e) {
              (this[E] = P++),
                (this._result = this._state = void 0),
                (this._subscribers = []),
                M !== e &&
                  ("function" != typeof e &&
                    (function () {
                      throw new TypeError(
                        "You must pass a resolver function as the first argument to the promise constructor"
                      );
                    })(),
                  this instanceof t
                    ? (function (e, t) {
                        try {
                          t(
                            function (t) {
                              _(e, t);
                            },
                            function (t) {
                              A(e, t);
                            }
                          );
                        } catch (t) {
                          A(e, t);
                        }
                      })(this, e)
                    : (function () {
                        throw new TypeError(
                          "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."
                        );
                      })());
            }
            return (
              (t.prototype.catch = function (e) {
                return this.then(null, e);
              }),
              (t.prototype.finally = function (t) {
                var n = this.constructor;
                return e(t)
                  ? this.then(
                      function (e) {
                        return n.resolve(t()).then(function () {
                          return e;
                        });
                      },
                      function (e) {
                        return n.resolve(t()).then(function () {
                          throw e;
                        });
                      }
                    )
                  : this.then(t, t);
              }),
              t
            );
          })();
        return (
          (j.prototype.then = w),
          (j.all = function (e) {
            return new D(this, e).promise;
          }),
          (j.race = function (e) {
            var t = this;
            return r(e)
              ? new t(function (n, r) {
                  for (var i = e.length, a = 0; a < i; a++)
                    t.resolve(e[a]).then(n, r);
                })
              : new t(function (e, t) {
                  return t(new TypeError("You must pass an array to race."));
                });
          }),
          (j.resolve = N),
          (j.reject = function (e) {
            var t = new this(M);
            return A(t, e), t;
          }),
          (j._setScheduler = function (e) {
            o = e;
          }),
          (j._setAsap = function (e) {
            s = e;
          }),
          (j._asap = s),
          (j.polyfill = function () {
            var e = void 0;
            if (void 0 !== n) e = n;
            else if ("undefined" != typeof self) e = self;
            else
              try {
                e = Function("return this")();
              } catch (e) {
                throw new Error(
                  "polyfill failed because global object is unavailable in this environment"
                );
              }
            var t = e.Promise;
            if (t) {
              var r = null;
              try {
                r = Object.prototype.toString.call(t.resolve());
              } catch (e) {}
              if ("[object Promise]" === r && !t.cast) return;
            }
            e.Promise = j;
          }),
          (j.Promise = j),
          j
        );
      }),
        (e.exports = r());
    }.call(this, n(0), n(2)));
  },
  function (e, t, n) {
    ((t = e.exports = n(18)).Stream = t),
      (t.Readable = t),
      (t.Writable = n(16)),
      (t.Duplex = n(3)),
      (t.Transform = n(23)),
      (t.PassThrough = n(44));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      void 0 === t ||
      !t.version ||
      0 === t.version.indexOf("v0.") ||
      (0 === t.version.indexOf("v1.") && 0 !== t.version.indexOf("v1.8."))
        ? (e.exports = {
            nextTick: function (e, n, r, i) {
              if ("function" != typeof e)
                throw new TypeError('"callback" argument must be a function');
              var a,
                o,
                s = arguments.length;
              switch (s) {
                case 0:
                case 1:
                  return t.nextTick(e);
                case 2:
                  return t.nextTick(function () {
                    e.call(null, n);
                  });
                case 3:
                  return t.nextTick(function () {
                    e.call(null, n, r);
                  });
                case 4:
                  return t.nextTick(function () {
                    e.call(null, n, r, i);
                  });
                default:
                  for (a = new Array(s - 1), o = 0; o < a.length; )
                    a[o++] = arguments[o];
                  return t.nextTick(function () {
                    e.apply(null, a);
                  });
              }
            },
          })
        : (e.exports = t);
    }.call(this, n(0)));
  },
  function (e, t, n) {
    var r = n(8),
      i = r.Buffer;
    function a(e, t) {
      for (var n in e) t[n] = e[n];
    }
    function o(e, t, n) {
      return i(e, t, n);
    }
    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow
      ? (e.exports = r)
      : (a(r, t), (t.Buffer = o)),
      a(i, o),
      (o.from = function (e, t, n) {
        if ("number" == typeof e)
          throw new TypeError("Argument must not be a number");
        return i(e, t, n);
      }),
      (o.alloc = function (e, t, n) {
        if ("number" != typeof e)
          throw new TypeError("Argument must be a number");
        var r = i(e);
        return (
          void 0 !== t
            ? "string" == typeof n
              ? r.fill(t, n)
              : r.fill(t)
            : r.fill(0),
          r
        );
      }),
      (o.allocUnsafe = function (e) {
        if ("number" != typeof e)
          throw new TypeError("Argument must be a number");
        return i(e);
      }),
      (o.allocUnsafeSlow = function (e) {
        if ("number" != typeof e)
          throw new TypeError("Argument must be a number");
        return r.SlowBuffer(e);
      });
  },
  function (e, t, n) {
    e.exports = i;
    var r = n(7).EventEmitter;
    function i() {
      r.call(this);
    }
    n(1)(i, r),
      (i.Readable = n(12)),
      (i.Writable = n(45)),
      (i.Duplex = n(46)),
      (i.Transform = n(47)),
      (i.PassThrough = n(48)),
      (i.Stream = i),
      (i.prototype.pipe = function (e, t) {
        var n = this;
        function i(t) {
          e.writable && !1 === e.write(t) && n.pause && n.pause();
        }
        function a() {
          n.readable && n.resume && n.resume();
        }
        n.on("data", i),
          e.on("drain", a),
          e._isStdio ||
            (t && !1 === t.end) ||
            (n.on("end", s), n.on("close", u));
        var o = !1;
        function s() {
          o || ((o = !0), e.end());
        }
        function u() {
          o || ((o = !0), "function" == typeof e.destroy && e.destroy());
        }
        function c(e) {
          if ((l(), 0 === r.listenerCount(this, "error"))) throw e;
        }
        function l() {
          n.removeListener("data", i),
            e.removeListener("drain", a),
            n.removeListener("end", s),
            n.removeListener("close", u),
            n.removeListener("error", c),
            e.removeListener("error", c),
            n.removeListener("end", l),
            n.removeListener("close", l),
            e.removeListener("close", l);
        }
        return (
          n.on("error", c),
          e.on("error", c),
          n.on("end", l),
          n.on("close", l),
          e.on("close", l),
          e.emit("pipe", n),
          e
        );
      });
  },
  function (e, t, n) {
    "use strict";
    (function (t, r, i) {
      var a = n(13);
      function o(e) {
        var t = this;
        (this.next = null),
          (this.entry = null),
          (this.finish = function () {
            !(function (e, t, n) {
              var r = e.entry;
              e.entry = null;
              for (; r; ) {
                var i = r.callback;
                t.pendingcb--, i(n), (r = r.next);
              }
              t.corkedRequestsFree
                ? (t.corkedRequestsFree.next = e)
                : (t.corkedRequestsFree = e);
            })(t, e);
          });
      }
      e.exports = v;
      var s,
        u =
          !t.browser && ["v0.10", "v0.9."].indexOf(t.version.slice(0, 5)) > -1
            ? r
            : a.nextTick;
      v.WritableState = y;
      var c = Object.create(n(9));
      c.inherits = n(1);
      var l = { deprecate: n(22) },
        f = n(20),
        p = n(14).Buffer,
        h = i.Uint8Array || function () {};
      var d,
        m = n(21);
      function g() {}
      function y(e, t) {
        (s = s || n(3)), (e = e || {});
        var r = t instanceof s;
        (this.objectMode = !!e.objectMode),
          r && (this.objectMode = this.objectMode || !!e.writableObjectMode);
        var i = e.highWaterMark,
          c = e.writableHighWaterMark,
          l = this.objectMode ? 16 : 16384;
        (this.highWaterMark = i || 0 === i ? i : r && (c || 0 === c) ? c : l),
          (this.highWaterMark = Math.floor(this.highWaterMark)),
          (this.finalCalled = !1),
          (this.needDrain = !1),
          (this.ending = !1),
          (this.ended = !1),
          (this.finished = !1),
          (this.destroyed = !1);
        var f = !1 === e.decodeStrings;
        (this.decodeStrings = !f),
          (this.defaultEncoding = e.defaultEncoding || "utf8"),
          (this.length = 0),
          (this.writing = !1),
          (this.corked = 0),
          (this.sync = !0),
          (this.bufferProcessing = !1),
          (this.onwrite = function (e) {
            !(function (e, t) {
              var n = e._writableState,
                r = n.sync,
                i = n.writecb;
              if (
                ((function (e) {
                  (e.writing = !1),
                    (e.writecb = null),
                    (e.length -= e.writelen),
                    (e.writelen = 0);
                })(n),
                t)
              )
                !(function (e, t, n, r, i) {
                  --t.pendingcb,
                    n
                      ? (a.nextTick(i, r),
                        a.nextTick(M, e, t),
                        (e._writableState.errorEmitted = !0),
                        e.emit("error", r))
                      : (i(r),
                        (e._writableState.errorEmitted = !0),
                        e.emit("error", r),
                        M(e, t));
                })(e, n, r, t, i);
              else {
                var o = N(n);
                o ||
                  n.corked ||
                  n.bufferProcessing ||
                  !n.bufferedRequest ||
                  w(e, n),
                  r ? u(x, e, n, o, i) : x(e, n, o, i);
              }
            })(t, e);
          }),
          (this.writecb = null),
          (this.writelen = 0),
          (this.bufferedRequest = null),
          (this.lastBufferedRequest = null),
          (this.pendingcb = 0),
          (this.prefinished = !1),
          (this.errorEmitted = !1),
          (this.bufferedRequestCount = 0),
          (this.corkedRequestsFree = new o(this));
      }
      function v(e) {
        if (((s = s || n(3)), !(d.call(v, this) || this instanceof s)))
          return new v(e);
        (this._writableState = new y(e, this)),
          (this.writable = !0),
          e &&
            ("function" == typeof e.write && (this._write = e.write),
            "function" == typeof e.writev && (this._writev = e.writev),
            "function" == typeof e.destroy && (this._destroy = e.destroy),
            "function" == typeof e.final && (this._final = e.final)),
          f.call(this);
      }
      function b(e, t, n, r, i, a, o) {
        (t.writelen = r),
          (t.writecb = o),
          (t.writing = !0),
          (t.sync = !0),
          n ? e._writev(i, t.onwrite) : e._write(i, a, t.onwrite),
          (t.sync = !1);
      }
      function x(e, t, n, r) {
        n ||
          (function (e, t) {
            0 === t.length &&
              t.needDrain &&
              ((t.needDrain = !1), e.emit("drain"));
          })(e, t),
          t.pendingcb--,
          r(),
          M(e, t);
      }
      function w(e, t) {
        t.bufferProcessing = !0;
        var n = t.bufferedRequest;
        if (e._writev && n && n.next) {
          var r = t.bufferedRequestCount,
            i = new Array(r),
            a = t.corkedRequestsFree;
          a.entry = n;
          for (var s = 0, u = !0; n; )
            (i[s] = n), n.isBuf || (u = !1), (n = n.next), (s += 1);
          (i.allBuffers = u),
            b(e, t, !0, t.length, i, "", a.finish),
            t.pendingcb++,
            (t.lastBufferedRequest = null),
            a.next
              ? ((t.corkedRequestsFree = a.next), (a.next = null))
              : (t.corkedRequestsFree = new o(t)),
            (t.bufferedRequestCount = 0);
        } else {
          for (; n; ) {
            var c = n.chunk,
              l = n.encoding,
              f = n.callback;
            if (
              (b(e, t, !1, t.objectMode ? 1 : c.length, c, l, f),
              (n = n.next),
              t.bufferedRequestCount--,
              t.writing)
            )
              break;
          }
          null === n && (t.lastBufferedRequest = null);
        }
        (t.bufferedRequest = n), (t.bufferProcessing = !1);
      }
      function N(e) {
        return (
          e.ending &&
          0 === e.length &&
          null === e.bufferedRequest &&
          !e.finished &&
          !e.writing
        );
      }
      function E(e, t) {
        e._final(function (n) {
          t.pendingcb--,
            n && e.emit("error", n),
            (t.prefinished = !0),
            e.emit("prefinish"),
            M(e, t);
        });
      }
      function M(e, t) {
        var n = N(t);
        return (
          n &&
            (!(function (e, t) {
              t.prefinished ||
                t.finalCalled ||
                ("function" == typeof e._final
                  ? (t.pendingcb++, (t.finalCalled = !0), a.nextTick(E, e, t))
                  : ((t.prefinished = !0), e.emit("prefinish")));
            })(e, t),
            0 === t.pendingcb && ((t.finished = !0), e.emit("finish"))),
          n
        );
      }
      c.inherits(v, f),
        (y.prototype.getBuffer = function () {
          for (var e = this.bufferedRequest, t = []; e; )
            t.push(e), (e = e.next);
          return t;
        }),
        (function () {
          try {
            Object.defineProperty(y.prototype, "buffer", {
              get: l.deprecate(
                function () {
                  return this.getBuffer();
                },
                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                "DEP0003"
              ),
            });
          } catch (e) {}
        })(),
        "function" == typeof Symbol &&
        Symbol.hasInstance &&
        "function" == typeof Function.prototype[Symbol.hasInstance]
          ? ((d = Function.prototype[Symbol.hasInstance]),
            Object.defineProperty(v, Symbol.hasInstance, {
              value: function (e) {
                return (
                  !!d.call(this, e) ||
                  (this === v && e && e._writableState instanceof y)
                );
              },
            }))
          : (d = function (e) {
              return e instanceof this;
            }),
        (v.prototype.pipe = function () {
          this.emit("error", new Error("Cannot pipe, not readable"));
        }),
        (v.prototype.write = function (e, t, n) {
          var r,
            i = this._writableState,
            o = !1,
            s = !i.objectMode && ((r = e), p.isBuffer(r) || r instanceof h);
          return (
            s &&
              !p.isBuffer(e) &&
              (e = (function (e) {
                return p.from(e);
              })(e)),
            "function" == typeof t && ((n = t), (t = null)),
            s ? (t = "buffer") : t || (t = i.defaultEncoding),
            "function" != typeof n && (n = g),
            i.ended
              ? (function (e, t) {
                  var n = new Error("write after end");
                  e.emit("error", n), a.nextTick(t, n);
                })(this, n)
              : (s ||
                  (function (e, t, n, r) {
                    var i = !0,
                      o = !1;
                    return (
                      null === n
                        ? (o = new TypeError(
                            "May not write null values to stream"
                          ))
                        : "string" == typeof n ||
                          void 0 === n ||
                          t.objectMode ||
                          (o = new TypeError(
                            "Invalid non-string/buffer chunk"
                          )),
                      o && (e.emit("error", o), a.nextTick(r, o), (i = !1)),
                      i
                    );
                  })(this, i, e, n)) &&
                (i.pendingcb++,
                (o = (function (e, t, n, r, i, a) {
                  if (!n) {
                    var o = (function (e, t, n) {
                      e.objectMode ||
                        !1 === e.decodeStrings ||
                        "string" != typeof t ||
                        (t = p.from(t, n));
                      return t;
                    })(t, r, i);
                    r !== o && ((n = !0), (i = "buffer"), (r = o));
                  }
                  var s = t.objectMode ? 1 : r.length;
                  t.length += s;
                  var u = t.length < t.highWaterMark;
                  u || (t.needDrain = !0);
                  if (t.writing || t.corked) {
                    var c = t.lastBufferedRequest;
                    (t.lastBufferedRequest = {
                      chunk: r,
                      encoding: i,
                      isBuf: n,
                      callback: a,
                      next: null,
                    }),
                      c
                        ? (c.next = t.lastBufferedRequest)
                        : (t.bufferedRequest = t.lastBufferedRequest),
                      (t.bufferedRequestCount += 1);
                  } else b(e, t, !1, s, r, i, a);
                  return u;
                })(this, i, s, e, t, n))),
            o
          );
        }),
        (v.prototype.cork = function () {
          this._writableState.corked++;
        }),
        (v.prototype.uncork = function () {
          var e = this._writableState;
          e.corked &&
            (e.corked--,
            e.writing ||
              e.corked ||
              e.finished ||
              e.bufferProcessing ||
              !e.bufferedRequest ||
              w(this, e));
        }),
        (v.prototype.setDefaultEncoding = function (e) {
          if (
            ("string" == typeof e && (e = e.toLowerCase()),
            !(
              [
                "hex",
                "utf8",
                "utf-8",
                "ascii",
                "binary",
                "base64",
                "ucs2",
                "ucs-2",
                "utf16le",
                "utf-16le",
                "raw",
              ].indexOf((e + "").toLowerCase()) > -1
            ))
          )
            throw new TypeError("Unknown encoding: " + e);
          return (this._writableState.defaultEncoding = e), this;
        }),
        Object.defineProperty(v.prototype, "writableHighWaterMark", {
          enumerable: !1,
          get: function () {
            return this._writableState.highWaterMark;
          },
        }),
        (v.prototype._write = function (e, t, n) {
          n(new Error("_write() is not implemented"));
        }),
        (v.prototype._writev = null),
        (v.prototype.end = function (e, t, n) {
          var r = this._writableState;
          "function" == typeof e
            ? ((n = e), (e = null), (t = null))
            : "function" == typeof t && ((n = t), (t = null)),
            null != e && this.write(e, t),
            r.corked && ((r.corked = 1), this.uncork()),
            r.ending ||
              r.finished ||
              (function (e, t, n) {
                (t.ending = !0),
                  M(e, t),
                  n && (t.finished ? a.nextTick(n) : e.once("finish", n));
                (t.ended = !0), (e.writable = !1);
              })(this, r, n);
        }),
        Object.defineProperty(v.prototype, "destroyed", {
          get: function () {
            return (
              void 0 !== this._writableState && this._writableState.destroyed
            );
          },
          set: function (e) {
            this._writableState && (this._writableState.destroyed = e);
          },
        }),
        (v.prototype.destroy = m.destroy),
        (v.prototype._undestroy = m.undestroy),
        (v.prototype._destroy = function (e, t) {
          this.end(), t(e);
        });
    }.call(this, n(0), n(42).setImmediate, n(2)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(4).codes.ERR_STREAM_PREMATURE_CLOSE;
    function i() {}
    e.exports = function e(t, n, a) {
      if ("function" == typeof n) return e(t, null, n);
      n || (n = {}),
        (a = (function (e) {
          var t = !1;
          return function () {
            if (!t) {
              t = !0;
              for (
                var n = arguments.length, r = new Array(n), i = 0;
                i < n;
                i++
              )
                r[i] = arguments[i];
              e.apply(this, r);
            }
          };
        })(a || i));
      var o = n.readable || (!1 !== n.readable && t.readable),
        s = n.writable || (!1 !== n.writable && t.writable),
        u = function () {
          t.writable || l();
        },
        c = t._writableState && t._writableState.finished,
        l = function () {
          (s = !1), (c = !0), o || a.call(t);
        },
        f = t._readableState && t._readableState.endEmitted,
        p = function () {
          (o = !1), (f = !0), s || a.call(t);
        },
        h = function (e) {
          a.call(t, e);
        },
        d = function () {
          var e;
          return o && !f
            ? ((t._readableState && t._readableState.ended) || (e = new r()),
              a.call(t, e))
            : s && !c
            ? ((t._writableState && t._writableState.ended) || (e = new r()),
              a.call(t, e))
            : void 0;
        },
        m = function () {
          t.req.on("finish", l);
        };
      return (
        !(function (e) {
          return e.setHeader && "function" == typeof e.abort;
        })(t)
          ? s && !t._writableState && (t.on("end", u), t.on("close", u))
          : (t.on("complete", l),
            t.on("abort", d),
            t.req ? m() : t.on("request", m)),
        t.on("end", p),
        t.on("finish", l),
        !1 !== n.error && t.on("error", h),
        t.on("close", d),
        function () {
          t.removeListener("complete", l),
            t.removeListener("abort", d),
            t.removeListener("request", m),
            t.req && t.req.removeListener("finish", l),
            t.removeListener("end", u),
            t.removeListener("close", u),
            t.removeListener("finish", l),
            t.removeListener("end", p),
            t.removeListener("error", h),
            t.removeListener("close", d);
        }
      );
    };
  },
  function (e, t, n) {
    "use strict";
    (function (t, r) {
      var i = n(13);
      e.exports = b;
      var a,
        o = n(19);
      b.ReadableState = v;
      n(7).EventEmitter;
      var s = function (e, t) {
          return e.listeners(t).length;
        },
        u = n(20),
        c = n(14).Buffer,
        l = t.Uint8Array || function () {};
      var f = Object.create(n(9));
      f.inherits = n(1);
      var p = n(39),
        h = void 0;
      h = p && p.debuglog ? p.debuglog("stream") : function () {};
      var d,
        m = n(40),
        g = n(21);
      f.inherits(b, u);
      var y = ["error", "close", "destroy", "pause", "resume"];
      function v(e, t) {
        e = e || {};
        var r = t instanceof (a = a || n(3));
        (this.objectMode = !!e.objectMode),
          r && (this.objectMode = this.objectMode || !!e.readableObjectMode);
        var i = e.highWaterMark,
          o = e.readableHighWaterMark,
          s = this.objectMode ? 16 : 16384;
        (this.highWaterMark = i || 0 === i ? i : r && (o || 0 === o) ? o : s),
          (this.highWaterMark = Math.floor(this.highWaterMark)),
          (this.buffer = new m()),
          (this.length = 0),
          (this.pipes = null),
          (this.pipesCount = 0),
          (this.flowing = null),
          (this.ended = !1),
          (this.endEmitted = !1),
          (this.reading = !1),
          (this.sync = !0),
          (this.needReadable = !1),
          (this.emittedReadable = !1),
          (this.readableListening = !1),
          (this.resumeScheduled = !1),
          (this.destroyed = !1),
          (this.defaultEncoding = e.defaultEncoding || "utf8"),
          (this.awaitDrain = 0),
          (this.readingMore = !1),
          (this.decoder = null),
          (this.encoding = null),
          e.encoding &&
            (d || (d = n(10).StringDecoder),
            (this.decoder = new d(e.encoding)),
            (this.encoding = e.encoding));
      }
      function b(e) {
        if (((a = a || n(3)), !(this instanceof b))) return new b(e);
        (this._readableState = new v(e, this)),
          (this.readable = !0),
          e &&
            ("function" == typeof e.read && (this._read = e.read),
            "function" == typeof e.destroy && (this._destroy = e.destroy)),
          u.call(this);
      }
      function x(e, t, n, r, i) {
        var a,
          o = e._readableState;
        null === t
          ? ((o.reading = !1),
            (function (e, t) {
              if (t.ended) return;
              if (t.decoder) {
                var n = t.decoder.end();
                n &&
                  n.length &&
                  (t.buffer.push(n), (t.length += t.objectMode ? 1 : n.length));
              }
              (t.ended = !0), E(e);
            })(e, o))
          : (i ||
              (a = (function (e, t) {
                var n;
                (r = t),
                  c.isBuffer(r) ||
                    r instanceof l ||
                    "string" == typeof t ||
                    void 0 === t ||
                    e.objectMode ||
                    (n = new TypeError("Invalid non-string/buffer chunk"));
                var r;
                return n;
              })(o, t)),
            a
              ? e.emit("error", a)
              : o.objectMode || (t && t.length > 0)
              ? ("string" == typeof t ||
                  o.objectMode ||
                  Object.getPrototypeOf(t) === c.prototype ||
                  (t = (function (e) {
                    return c.from(e);
                  })(t)),
                r
                  ? o.endEmitted
                    ? e.emit(
                        "error",
                        new Error("stream.unshift() after end event")
                      )
                    : w(e, o, t, !0)
                  : o.ended
                  ? e.emit("error", new Error("stream.push() after EOF"))
                  : ((o.reading = !1),
                    o.decoder && !n
                      ? ((t = o.decoder.write(t)),
                        o.objectMode || 0 !== t.length
                          ? w(e, o, t, !1)
                          : S(e, o))
                      : w(e, o, t, !1)))
              : r || (o.reading = !1));
        return (function (e) {
          return (
            !e.ended &&
            (e.needReadable || e.length < e.highWaterMark || 0 === e.length)
          );
        })(o);
      }
      function w(e, t, n, r) {
        t.flowing && 0 === t.length && !t.sync
          ? (e.emit("data", n), e.read(0))
          : ((t.length += t.objectMode ? 1 : n.length),
            r ? t.buffer.unshift(n) : t.buffer.push(n),
            t.needReadable && E(e)),
          S(e, t);
      }
      Object.defineProperty(b.prototype, "destroyed", {
        get: function () {
          return (
            void 0 !== this._readableState && this._readableState.destroyed
          );
        },
        set: function (e) {
          this._readableState && (this._readableState.destroyed = e);
        },
      }),
        (b.prototype.destroy = g.destroy),
        (b.prototype._undestroy = g.undestroy),
        (b.prototype._destroy = function (e, t) {
          this.push(null), t(e);
        }),
        (b.prototype.push = function (e, t) {
          var n,
            r = this._readableState;
          return (
            r.objectMode
              ? (n = !0)
              : "string" == typeof e &&
                ((t = t || r.defaultEncoding) !== r.encoding &&
                  ((e = c.from(e, t)), (t = "")),
                (n = !0)),
            x(this, e, t, !1, n)
          );
        }),
        (b.prototype.unshift = function (e) {
          return x(this, e, null, !0, !1);
        }),
        (b.prototype.isPaused = function () {
          return !1 === this._readableState.flowing;
        }),
        (b.prototype.setEncoding = function (e) {
          return (
            d || (d = n(10).StringDecoder),
            (this._readableState.decoder = new d(e)),
            (this._readableState.encoding = e),
            this
          );
        });
      function N(e, t) {
        return e <= 0 || (0 === t.length && t.ended)
          ? 0
          : t.objectMode
          ? 1
          : e != e
          ? t.flowing && t.length
            ? t.buffer.head.data.length
            : t.length
          : (e > t.highWaterMark &&
              (t.highWaterMark = (function (e) {
                return (
                  e >= 8388608
                    ? (e = 8388608)
                    : (e--,
                      (e |= e >>> 1),
                      (e |= e >>> 2),
                      (e |= e >>> 4),
                      (e |= e >>> 8),
                      (e |= e >>> 16),
                      e++),
                  e
                );
              })(e)),
            e <= t.length
              ? e
              : t.ended
              ? t.length
              : ((t.needReadable = !0), 0));
      }
      function E(e) {
        var t = e._readableState;
        (t.needReadable = !1),
          t.emittedReadable ||
            (h("emitReadable", t.flowing),
            (t.emittedReadable = !0),
            t.sync ? i.nextTick(M, e) : M(e));
      }
      function M(e) {
        h("emit readable"), e.emit("readable"), A(e);
      }
      function S(e, t) {
        t.readingMore || ((t.readingMore = !0), i.nextTick(_, e, t));
      }
      function _(e, t) {
        for (
          var n = t.length;
          !t.reading &&
          !t.flowing &&
          !t.ended &&
          t.length < t.highWaterMark &&
          (h("maybeReadMore read 0"), e.read(0), n !== t.length);

        )
          n = t.length;
        t.readingMore = !1;
      }
      function k(e) {
        h("readable nexttick read 0"), e.read(0);
      }
      function O(e, t) {
        t.reading || (h("resume read 0"), e.read(0)),
          (t.resumeScheduled = !1),
          (t.awaitDrain = 0),
          e.emit("resume"),
          A(e),
          t.flowing && !t.reading && e.read(0);
      }
      function A(e) {
        var t = e._readableState;
        for (h("flow", t.flowing); t.flowing && null !== e.read(); );
      }
      function C(e, t) {
        return 0 === t.length
          ? null
          : (t.objectMode
              ? (n = t.buffer.shift())
              : !e || e >= t.length
              ? ((n = t.decoder
                  ? t.buffer.join("")
                  : 1 === t.buffer.length
                  ? t.buffer.head.data
                  : t.buffer.concat(t.length)),
                t.buffer.clear())
              : (n = (function (e, t, n) {
                  var r;
                  e < t.head.data.length
                    ? ((r = t.head.data.slice(0, e)),
                      (t.head.data = t.head.data.slice(e)))
                    : (r =
                        e === t.head.data.length
                          ? t.shift()
                          : n
                          ? (function (e, t) {
                              var n = t.head,
                                r = 1,
                                i = n.data;
                              e -= i.length;
                              for (; (n = n.next); ) {
                                var a = n.data,
                                  o = e > a.length ? a.length : e;
                                if (
                                  (o === a.length
                                    ? (i += a)
                                    : (i += a.slice(0, e)),
                                  0 === (e -= o))
                                ) {
                                  o === a.length
                                    ? (++r,
                                      n.next
                                        ? (t.head = n.next)
                                        : (t.head = t.tail = null))
                                    : ((t.head = n), (n.data = a.slice(o)));
                                  break;
                                }
                                ++r;
                              }
                              return (t.length -= r), i;
                            })(e, t)
                          : (function (e, t) {
                              var n = c.allocUnsafe(e),
                                r = t.head,
                                i = 1;
                              r.data.copy(n), (e -= r.data.length);
                              for (; (r = r.next); ) {
                                var a = r.data,
                                  o = e > a.length ? a.length : e;
                                if (
                                  (a.copy(n, n.length - e, 0, o),
                                  0 === (e -= o))
                                ) {
                                  o === a.length
                                    ? (++i,
                                      r.next
                                        ? (t.head = r.next)
                                        : (t.head = t.tail = null))
                                    : ((t.head = r), (r.data = a.slice(o)));
                                  break;
                                }
                                ++i;
                              }
                              return (t.length -= i), n;
                            })(e, t));
                  return r;
                })(e, t.buffer, t.decoder)),
            n);
        var n;
      }
      function T(e) {
        var t = e._readableState;
        if (t.length > 0)
          throw new Error('"endReadable()" called on non-empty stream');
        t.endEmitted || ((t.ended = !0), i.nextTick(I, t, e));
      }
      function I(e, t) {
        e.endEmitted ||
          0 !== e.length ||
          ((e.endEmitted = !0), (t.readable = !1), t.emit("end"));
      }
      function P(e, t) {
        for (var n = 0, r = e.length; n < r; n++) if (e[n] === t) return n;
        return -1;
      }
      (b.prototype.read = function (e) {
        h("read", e), (e = parseInt(e, 10));
        var t = this._readableState,
          n = e;
        if (
          (0 !== e && (t.emittedReadable = !1),
          0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended))
        )
          return (
            h("read: emitReadable", t.length, t.ended),
            0 === t.length && t.ended ? T(this) : E(this),
            null
          );
        if (0 === (e = N(e, t)) && t.ended)
          return 0 === t.length && T(this), null;
        var r,
          i = t.needReadable;
        return (
          h("need readable", i),
          (0 === t.length || t.length - e < t.highWaterMark) &&
            h("length less than watermark", (i = !0)),
          t.ended || t.reading
            ? h("reading or ended", (i = !1))
            : i &&
              (h("do read"),
              (t.reading = !0),
              (t.sync = !0),
              0 === t.length && (t.needReadable = !0),
              this._read(t.highWaterMark),
              (t.sync = !1),
              t.reading || (e = N(n, t))),
          null === (r = e > 0 ? C(e, t) : null)
            ? ((t.needReadable = !0), (e = 0))
            : (t.length -= e),
          0 === t.length &&
            (t.ended || (t.needReadable = !0), n !== e && t.ended && T(this)),
          null !== r && this.emit("data", r),
          r
        );
      }),
        (b.prototype._read = function (e) {
          this.emit("error", new Error("_read() is not implemented"));
        }),
        (b.prototype.pipe = function (e, t) {
          var n = this,
            a = this._readableState;
          switch (a.pipesCount) {
            case 0:
              a.pipes = e;
              break;
            case 1:
              a.pipes = [a.pipes, e];
              break;
            default:
              a.pipes.push(e);
          }
          (a.pipesCount += 1), h("pipe count=%d opts=%j", a.pipesCount, t);
          var u =
            (!t || !1 !== t.end) && e !== r.stdout && e !== r.stderr ? l : b;
          function c(t, r) {
            h("onunpipe"),
              t === n &&
                r &&
                !1 === r.hasUnpiped &&
                ((r.hasUnpiped = !0),
                h("cleanup"),
                e.removeListener("close", y),
                e.removeListener("finish", v),
                e.removeListener("drain", f),
                e.removeListener("error", g),
                e.removeListener("unpipe", c),
                n.removeListener("end", l),
                n.removeListener("end", b),
                n.removeListener("data", m),
                (p = !0),
                !a.awaitDrain ||
                  (e._writableState && !e._writableState.needDrain) ||
                  f());
          }
          function l() {
            h("onend"), e.end();
          }
          a.endEmitted ? i.nextTick(u) : n.once("end", u), e.on("unpipe", c);
          var f = (function (e) {
            return function () {
              var t = e._readableState;
              h("pipeOnDrain", t.awaitDrain),
                t.awaitDrain && t.awaitDrain--,
                0 === t.awaitDrain && s(e, "data") && ((t.flowing = !0), A(e));
            };
          })(n);
          e.on("drain", f);
          var p = !1;
          var d = !1;
          function m(t) {
            h("ondata"),
              (d = !1),
              !1 !== e.write(t) ||
                d ||
                (((1 === a.pipesCount && a.pipes === e) ||
                  (a.pipesCount > 1 && -1 !== P(a.pipes, e))) &&
                  !p &&
                  (h(
                    "false write response, pause",
                    n._readableState.awaitDrain
                  ),
                  n._readableState.awaitDrain++,
                  (d = !0)),
                n.pause());
          }
          function g(t) {
            h("onerror", t),
              b(),
              e.removeListener("error", g),
              0 === s(e, "error") && e.emit("error", t);
          }
          function y() {
            e.removeListener("finish", v), b();
          }
          function v() {
            h("onfinish"), e.removeListener("close", y), b();
          }
          function b() {
            h("unpipe"), n.unpipe(e);
          }
          return (
            n.on("data", m),
            (function (e, t, n) {
              if ("function" == typeof e.prependListener)
                return e.prependListener(t, n);
              e._events && e._events[t]
                ? o(e._events[t])
                  ? e._events[t].unshift(n)
                  : (e._events[t] = [n, e._events[t]])
                : e.on(t, n);
            })(e, "error", g),
            e.once("close", y),
            e.once("finish", v),
            e.emit("pipe", n),
            a.flowing || (h("pipe resume"), n.resume()),
            e
          );
        }),
        (b.prototype.unpipe = function (e) {
          var t = this._readableState,
            n = { hasUnpiped: !1 };
          if (0 === t.pipesCount) return this;
          if (1 === t.pipesCount)
            return (
              (e && e !== t.pipes) ||
                (e || (e = t.pipes),
                (t.pipes = null),
                (t.pipesCount = 0),
                (t.flowing = !1),
                e && e.emit("unpipe", this, n)),
              this
            );
          if (!e) {
            var r = t.pipes,
              i = t.pipesCount;
            (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1);
            for (var a = 0; a < i; a++) r[a].emit("unpipe", this, n);
            return this;
          }
          var o = P(t.pipes, e);
          return (
            -1 === o ||
              (t.pipes.splice(o, 1),
              (t.pipesCount -= 1),
              1 === t.pipesCount && (t.pipes = t.pipes[0]),
              e.emit("unpipe", this, n)),
            this
          );
        }),
        (b.prototype.on = function (e, t) {
          var n = u.prototype.on.call(this, e, t);
          if ("data" === e) !1 !== this._readableState.flowing && this.resume();
          else if ("readable" === e) {
            var r = this._readableState;
            r.endEmitted ||
              r.readableListening ||
              ((r.readableListening = r.needReadable = !0),
              (r.emittedReadable = !1),
              r.reading ? r.length && E(this) : i.nextTick(k, this));
          }
          return n;
        }),
        (b.prototype.addListener = b.prototype.on),
        (b.prototype.resume = function () {
          var e = this._readableState;
          return (
            e.flowing ||
              (h("resume"),
              (e.flowing = !0),
              (function (e, t) {
                t.resumeScheduled ||
                  ((t.resumeScheduled = !0), i.nextTick(O, e, t));
              })(this, e)),
            this
          );
        }),
        (b.prototype.pause = function () {
          return (
            h("call pause flowing=%j", this._readableState.flowing),
            !1 !== this._readableState.flowing &&
              (h("pause"),
              (this._readableState.flowing = !1),
              this.emit("pause")),
            this
          );
        }),
        (b.prototype.wrap = function (e) {
          var t = this,
            n = this._readableState,
            r = !1;
          for (var i in (e.on("end", function () {
            if ((h("wrapped end"), n.decoder && !n.ended)) {
              var e = n.decoder.end();
              e && e.length && t.push(e);
            }
            t.push(null);
          }),
          e.on("data", function (i) {
            (h("wrapped data"),
            n.decoder && (i = n.decoder.write(i)),
            n.objectMode && null == i) ||
              ((n.objectMode || (i && i.length)) &&
                (t.push(i) || ((r = !0), e.pause())));
          }),
          e))
            void 0 === this[i] &&
              "function" == typeof e[i] &&
              (this[i] = (function (t) {
                return function () {
                  return e[t].apply(e, arguments);
                };
              })(i));
          for (var a = 0; a < y.length; a++)
            e.on(y[a], this.emit.bind(this, y[a]));
          return (
            (this._read = function (t) {
              h("wrapped _read", t), r && ((r = !1), e.resume());
            }),
            this
          );
        }),
        Object.defineProperty(b.prototype, "readableHighWaterMark", {
          enumerable: !1,
          get: function () {
            return this._readableState.highWaterMark;
          },
        }),
        (b._fromList = C);
    }.call(this, n(2), n(0)));
  },
  function (e, t) {
    var n = {}.toString;
    e.exports =
      Array.isArray ||
      function (e) {
        return "[object Array]" == n.call(e);
      };
  },
  function (e, t, n) {
    e.exports = n(7).EventEmitter;
  },
  function (e, t, n) {
    "use strict";
    var r = n(13);
    function i(e, t) {
      e.emit("error", t);
    }
    e.exports = {
      destroy: function (e, t) {
        var n = this,
          a = this._readableState && this._readableState.destroyed,
          o = this._writableState && this._writableState.destroyed;
        return a || o
          ? (t
              ? t(e)
              : !e ||
                (this._writableState && this._writableState.errorEmitted) ||
                r.nextTick(i, this, e),
            this)
          : (this._readableState && (this._readableState.destroyed = !0),
            this._writableState && (this._writableState.destroyed = !0),
            this._destroy(e || null, function (e) {
              !t && e
                ? (r.nextTick(i, n, e),
                  n._writableState && (n._writableState.errorEmitted = !0))
                : t && t(e);
            }),
            this);
      },
      undestroy: function () {
        this._readableState &&
          ((this._readableState.destroyed = !1),
          (this._readableState.reading = !1),
          (this._readableState.ended = !1),
          (this._readableState.endEmitted = !1)),
          this._writableState &&
            ((this._writableState.destroyed = !1),
            (this._writableState.ended = !1),
            (this._writableState.ending = !1),
            (this._writableState.finished = !1),
            (this._writableState.errorEmitted = !1));
      },
    };
  },
  function (e, t, n) {
    (function (t) {
      function n(e) {
        try {
          if (!t.localStorage) return !1;
        } catch (e) {
          return !1;
        }
        var n = t.localStorage[e];
        return null != n && "true" === String(n).toLowerCase();
      }
      e.exports = function (e, t) {
        if (n("noDeprecation")) return e;
        var r = !1;
        return function () {
          if (!r) {
            if (n("throwDeprecation")) throw new Error(t);
            n("traceDeprecation") ? console.trace(t) : console.warn(t),
              (r = !0);
          }
          return e.apply(this, arguments);
        };
      };
    }.call(this, n(2)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = o;
    var r = n(3),
      i = Object.create(n(9));
    function a(e, t) {
      var n = this._transformState;
      n.transforming = !1;
      var r = n.writecb;
      if (!r)
        return this.emit(
          "error",
          new Error("write callback called multiple times")
        );
      (n.writechunk = null),
        (n.writecb = null),
        null != t && this.push(t),
        r(e);
      var i = this._readableState;
      (i.reading = !1),
        (i.needReadable || i.length < i.highWaterMark) &&
          this._read(i.highWaterMark);
    }
    function o(e) {
      if (!(this instanceof o)) return new o(e);
      r.call(this, e),
        (this._transformState = {
          afterTransform: a.bind(this),
          needTransform: !1,
          transforming: !1,
          writecb: null,
          writechunk: null,
          writeencoding: null,
        }),
        (this._readableState.needReadable = !0),
        (this._readableState.sync = !1),
        e &&
          ("function" == typeof e.transform && (this._transform = e.transform),
          "function" == typeof e.flush && (this._flush = e.flush)),
        this.on("prefinish", s);
    }
    function s() {
      var e = this;
      "function" == typeof this._flush
        ? this._flush(function (t, n) {
            u(e, t, n);
          })
        : u(this, null, null);
    }
    function u(e, t, n) {
      if (t) return e.emit("error", t);
      if ((null != n && e.push(n), e._writableState.length))
        throw new Error("Calling transform done when ws.length != 0");
      if (e._transformState.transforming)
        throw new Error("Calling transform done when still transforming");
      return e.push(null);
    }
    (i.inherits = n(1)),
      i.inherits(o, r),
      (o.prototype.push = function (e, t) {
        return (
          (this._transformState.needTransform = !1),
          r.prototype.push.call(this, e, t)
        );
      }),
      (o.prototype._transform = function (e, t, n) {
        throw new Error("_transform() is not implemented");
      }),
      (o.prototype._write = function (e, t, n) {
        var r = this._transformState;
        if (
          ((r.writecb = n),
          (r.writechunk = e),
          (r.writeencoding = t),
          !r.transforming)
        ) {
          var i = this._readableState;
          (r.needTransform || i.needReadable || i.length < i.highWaterMark) &&
            this._read(i.highWaterMark);
        }
      }),
      (o.prototype._read = function (e) {
        var t = this._transformState;
        null !== t.writechunk && t.writecb && !t.transforming
          ? ((t.transforming = !0),
            this._transform(t.writechunk, t.writeencoding, t.afterTransform))
          : (t.needTransform = !0);
      }),
      (o.prototype._destroy = function (e, t) {
        var n = this;
        r.prototype._destroy.call(this, e, function (e) {
          t(e), n.emit("close");
        });
      });
  },
  function (e, t, n) {
    "use strict";
    (function (t, r) {
      var i;
      (e.exports = S), (S.ReadableState = M);
      n(7).EventEmitter;
      var a = function (e, t) {
          return e.listeners(t).length;
        },
        o = n(25),
        s = n(8).Buffer,
        u = t.Uint8Array || function () {};
      var c,
        l = n(52);
      c = l && l.debuglog ? l.debuglog("stream") : function () {};
      var f,
        p,
        h,
        d = n(53),
        m = n(26),
        g = n(27).getHighWaterMark,
        y = n(4).codes,
        v = y.ERR_INVALID_ARG_TYPE,
        b = y.ERR_STREAM_PUSH_AFTER_EOF,
        x = y.ERR_METHOD_NOT_IMPLEMENTED,
        w = y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
      n(1)(S, o);
      var N = m.errorOrDestroy,
        E = ["error", "close", "destroy", "pause", "resume"];
      function M(e, t, r) {
        (i = i || n(5)),
          (e = e || {}),
          "boolean" != typeof r && (r = t instanceof i),
          (this.objectMode = !!e.objectMode),
          r && (this.objectMode = this.objectMode || !!e.readableObjectMode),
          (this.highWaterMark = g(this, e, "readableHighWaterMark", r)),
          (this.buffer = new d()),
          (this.length = 0),
          (this.pipes = null),
          (this.pipesCount = 0),
          (this.flowing = null),
          (this.ended = !1),
          (this.endEmitted = !1),
          (this.reading = !1),
          (this.sync = !0),
          (this.needReadable = !1),
          (this.emittedReadable = !1),
          (this.readableListening = !1),
          (this.resumeScheduled = !1),
          (this.paused = !0),
          (this.emitClose = !1 !== e.emitClose),
          (this.autoDestroy = !!e.autoDestroy),
          (this.destroyed = !1),
          (this.defaultEncoding = e.defaultEncoding || "utf8"),
          (this.awaitDrain = 0),
          (this.readingMore = !1),
          (this.decoder = null),
          (this.encoding = null),
          e.encoding &&
            (f || (f = n(10).StringDecoder),
            (this.decoder = new f(e.encoding)),
            (this.encoding = e.encoding));
      }
      function S(e) {
        if (((i = i || n(5)), !(this instanceof S))) return new S(e);
        var t = this instanceof i;
        (this._readableState = new M(e, this, t)),
          (this.readable = !0),
          e &&
            ("function" == typeof e.read && (this._read = e.read),
            "function" == typeof e.destroy && (this._destroy = e.destroy)),
          o.call(this);
      }
      function _(e, t, n, r, i) {
        c("readableAddChunk", t);
        var a,
          o = e._readableState;
        if (null === t)
          (o.reading = !1),
            (function (e, t) {
              if ((c("onEofChunk"), t.ended)) return;
              if (t.decoder) {
                var n = t.decoder.end();
                n &&
                  n.length &&
                  (t.buffer.push(n), (t.length += t.objectMode ? 1 : n.length));
              }
              (t.ended = !0),
                t.sync
                  ? A(e)
                  : ((t.needReadable = !1),
                    t.emittedReadable || ((t.emittedReadable = !0), C(e)));
            })(e, o);
        else if (
          (i ||
            (a = (function (e, t) {
              var n;
              (r = t),
                s.isBuffer(r) ||
                  r instanceof u ||
                  "string" == typeof t ||
                  void 0 === t ||
                  e.objectMode ||
                  (n = new v("chunk", ["string", "Buffer", "Uint8Array"], t));
              var r;
              return n;
            })(o, t)),
          a)
        )
          N(e, a);
        else if (o.objectMode || (t && t.length > 0))
          if (
            ("string" == typeof t ||
              o.objectMode ||
              Object.getPrototypeOf(t) === s.prototype ||
              (t = (function (e) {
                return s.from(e);
              })(t)),
            r)
          )
            o.endEmitted ? N(e, new w()) : k(e, o, t, !0);
          else if (o.ended) N(e, new b());
          else {
            if (o.destroyed) return !1;
            (o.reading = !1),
              o.decoder && !n
                ? ((t = o.decoder.write(t)),
                  o.objectMode || 0 !== t.length ? k(e, o, t, !1) : T(e, o))
                : k(e, o, t, !1);
          }
        else r || ((o.reading = !1), T(e, o));
        return !o.ended && (o.length < o.highWaterMark || 0 === o.length);
      }
      function k(e, t, n, r) {
        t.flowing && 0 === t.length && !t.sync
          ? ((t.awaitDrain = 0), e.emit("data", n))
          : ((t.length += t.objectMode ? 1 : n.length),
            r ? t.buffer.unshift(n) : t.buffer.push(n),
            t.needReadable && A(e)),
          T(e, t);
      }
      Object.defineProperty(S.prototype, "destroyed", {
        enumerable: !1,
        get: function () {
          return (
            void 0 !== this._readableState && this._readableState.destroyed
          );
        },
        set: function (e) {
          this._readableState && (this._readableState.destroyed = e);
        },
      }),
        (S.prototype.destroy = m.destroy),
        (S.prototype._undestroy = m.undestroy),
        (S.prototype._destroy = function (e, t) {
          t(e);
        }),
        (S.prototype.push = function (e, t) {
          var n,
            r = this._readableState;
          return (
            r.objectMode
              ? (n = !0)
              : "string" == typeof e &&
                ((t = t || r.defaultEncoding) !== r.encoding &&
                  ((e = s.from(e, t)), (t = "")),
                (n = !0)),
            _(this, e, t, !1, n)
          );
        }),
        (S.prototype.unshift = function (e) {
          return _(this, e, null, !0, !1);
        }),
        (S.prototype.isPaused = function () {
          return !1 === this._readableState.flowing;
        }),
        (S.prototype.setEncoding = function (e) {
          f || (f = n(10).StringDecoder);
          var t = new f(e);
          (this._readableState.decoder = t),
            (this._readableState.encoding = this._readableState.decoder.encoding);
          for (var r = this._readableState.buffer.head, i = ""; null !== r; )
            (i += t.write(r.data)), (r = r.next);
          return (
            this._readableState.buffer.clear(),
            "" !== i && this._readableState.buffer.push(i),
            (this._readableState.length = i.length),
            this
          );
        });
      function O(e, t) {
        return e <= 0 || (0 === t.length && t.ended)
          ? 0
          : t.objectMode
          ? 1
          : e != e
          ? t.flowing && t.length
            ? t.buffer.head.data.length
            : t.length
          : (e > t.highWaterMark &&
              (t.highWaterMark = (function (e) {
                return (
                  e >= 1073741824
                    ? (e = 1073741824)
                    : (e--,
                      (e |= e >>> 1),
                      (e |= e >>> 2),
                      (e |= e >>> 4),
                      (e |= e >>> 8),
                      (e |= e >>> 16),
                      e++),
                  e
                );
              })(e)),
            e <= t.length
              ? e
              : t.ended
              ? t.length
              : ((t.needReadable = !0), 0));
      }
      function A(e) {
        var t = e._readableState;
        c("emitReadable", t.needReadable, t.emittedReadable),
          (t.needReadable = !1),
          t.emittedReadable ||
            (c("emitReadable", t.flowing),
            (t.emittedReadable = !0),
            r.nextTick(C, e));
      }
      function C(e) {
        var t = e._readableState;
        c("emitReadable_", t.destroyed, t.length, t.ended),
          t.destroyed ||
            (!t.length && !t.ended) ||
            (e.emit("readable"), (t.emittedReadable = !1)),
          (t.needReadable =
            !t.flowing && !t.ended && t.length <= t.highWaterMark),
          j(e);
      }
      function T(e, t) {
        t.readingMore || ((t.readingMore = !0), r.nextTick(I, e, t));
      }
      function I(e, t) {
        for (
          ;
          !t.reading &&
          !t.ended &&
          (t.length < t.highWaterMark || (t.flowing && 0 === t.length));

        ) {
          var n = t.length;
          if ((c("maybeReadMore read 0"), e.read(0), n === t.length)) break;
        }
        t.readingMore = !1;
      }
      function P(e) {
        var t = e._readableState;
        (t.readableListening = e.listenerCount("readable") > 0),
          t.resumeScheduled && !t.paused
            ? (t.flowing = !0)
            : e.listenerCount("data") > 0 && e.resume();
      }
      function B(e) {
        c("readable nexttick read 0"), e.read(0);
      }
      function D(e, t) {
        c("resume", t.reading),
          t.reading || e.read(0),
          (t.resumeScheduled = !1),
          e.emit("resume"),
          j(e),
          t.flowing && !t.reading && e.read(0);
      }
      function j(e) {
        var t = e._readableState;
        for (c("flow", t.flowing); t.flowing && null !== e.read(); );
      }
      function R(e, t) {
        return 0 === t.length
          ? null
          : (t.objectMode
              ? (n = t.buffer.shift())
              : !e || e >= t.length
              ? ((n = t.decoder
                  ? t.buffer.join("")
                  : 1 === t.buffer.length
                  ? t.buffer.first()
                  : t.buffer.concat(t.length)),
                t.buffer.clear())
              : (n = t.buffer.consume(e, t.decoder)),
            n);
        var n;
      }
      function L(e) {
        var t = e._readableState;
        c("endReadable", t.endEmitted),
          t.endEmitted || ((t.ended = !0), r.nextTick(z, t, e));
      }
      function z(e, t) {
        if (
          (c("endReadableNT", e.endEmitted, e.length),
          !e.endEmitted &&
            0 === e.length &&
            ((e.endEmitted = !0),
            (t.readable = !1),
            t.emit("end"),
            e.autoDestroy))
        ) {
          var n = t._writableState;
          (!n || (n.autoDestroy && n.finished)) && t.destroy();
        }
      }
      function q(e, t) {
        for (var n = 0, r = e.length; n < r; n++) if (e[n] === t) return n;
        return -1;
      }
      (S.prototype.read = function (e) {
        c("read", e), (e = parseInt(e, 10));
        var t = this._readableState,
          n = e;
        if (
          (0 !== e && (t.emittedReadable = !1),
          0 === e &&
            t.needReadable &&
            ((0 !== t.highWaterMark
              ? t.length >= t.highWaterMark
              : t.length > 0) ||
              t.ended))
        )
          return (
            c("read: emitReadable", t.length, t.ended),
            0 === t.length && t.ended ? L(this) : A(this),
            null
          );
        if (0 === (e = O(e, t)) && t.ended)
          return 0 === t.length && L(this), null;
        var r,
          i = t.needReadable;
        return (
          c("need readable", i),
          (0 === t.length || t.length - e < t.highWaterMark) &&
            c("length less than watermark", (i = !0)),
          t.ended || t.reading
            ? c("reading or ended", (i = !1))
            : i &&
              (c("do read"),
              (t.reading = !0),
              (t.sync = !0),
              0 === t.length && (t.needReadable = !0),
              this._read(t.highWaterMark),
              (t.sync = !1),
              t.reading || (e = O(n, t))),
          null === (r = e > 0 ? R(e, t) : null)
            ? ((t.needReadable = t.length <= t.highWaterMark), (e = 0))
            : ((t.length -= e), (t.awaitDrain = 0)),
          0 === t.length &&
            (t.ended || (t.needReadable = !0), n !== e && t.ended && L(this)),
          null !== r && this.emit("data", r),
          r
        );
      }),
        (S.prototype._read = function (e) {
          N(this, new x("_read()"));
        }),
        (S.prototype.pipe = function (e, t) {
          var n = this,
            i = this._readableState;
          switch (i.pipesCount) {
            case 0:
              i.pipes = e;
              break;
            case 1:
              i.pipes = [i.pipes, e];
              break;
            default:
              i.pipes.push(e);
          }
          (i.pipesCount += 1), c("pipe count=%d opts=%j", i.pipesCount, t);
          var o =
            (!t || !1 !== t.end) && e !== r.stdout && e !== r.stderr ? u : g;
          function s(t, r) {
            c("onunpipe"),
              t === n &&
                r &&
                !1 === r.hasUnpiped &&
                ((r.hasUnpiped = !0),
                c("cleanup"),
                e.removeListener("close", d),
                e.removeListener("finish", m),
                e.removeListener("drain", l),
                e.removeListener("error", h),
                e.removeListener("unpipe", s),
                n.removeListener("end", u),
                n.removeListener("end", g),
                n.removeListener("data", p),
                (f = !0),
                !i.awaitDrain ||
                  (e._writableState && !e._writableState.needDrain) ||
                  l());
          }
          function u() {
            c("onend"), e.end();
          }
          i.endEmitted ? r.nextTick(o) : n.once("end", o), e.on("unpipe", s);
          var l = (function (e) {
            return function () {
              var t = e._readableState;
              c("pipeOnDrain", t.awaitDrain),
                t.awaitDrain && t.awaitDrain--,
                0 === t.awaitDrain && a(e, "data") && ((t.flowing = !0), j(e));
            };
          })(n);
          e.on("drain", l);
          var f = !1;
          function p(t) {
            c("ondata");
            var r = e.write(t);
            c("dest.write", r),
              !1 === r &&
                (((1 === i.pipesCount && i.pipes === e) ||
                  (i.pipesCount > 1 && -1 !== q(i.pipes, e))) &&
                  !f &&
                  (c("false write response, pause", i.awaitDrain),
                  i.awaitDrain++),
                n.pause());
          }
          function h(t) {
            c("onerror", t),
              g(),
              e.removeListener("error", h),
              0 === a(e, "error") && N(e, t);
          }
          function d() {
            e.removeListener("finish", m), g();
          }
          function m() {
            c("onfinish"), e.removeListener("close", d), g();
          }
          function g() {
            c("unpipe"), n.unpipe(e);
          }
          return (
            n.on("data", p),
            (function (e, t, n) {
              if ("function" == typeof e.prependListener)
                return e.prependListener(t, n);
              e._events && e._events[t]
                ? Array.isArray(e._events[t])
                  ? e._events[t].unshift(n)
                  : (e._events[t] = [n, e._events[t]])
                : e.on(t, n);
            })(e, "error", h),
            e.once("close", d),
            e.once("finish", m),
            e.emit("pipe", n),
            i.flowing || (c("pipe resume"), n.resume()),
            e
          );
        }),
        (S.prototype.unpipe = function (e) {
          var t = this._readableState,
            n = { hasUnpiped: !1 };
          if (0 === t.pipesCount) return this;
          if (1 === t.pipesCount)
            return (
              (e && e !== t.pipes) ||
                (e || (e = t.pipes),
                (t.pipes = null),
                (t.pipesCount = 0),
                (t.flowing = !1),
                e && e.emit("unpipe", this, n)),
              this
            );
          if (!e) {
            var r = t.pipes,
              i = t.pipesCount;
            (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1);
            for (var a = 0; a < i; a++)
              r[a].emit("unpipe", this, { hasUnpiped: !1 });
            return this;
          }
          var o = q(t.pipes, e);
          return (
            -1 === o ||
              (t.pipes.splice(o, 1),
              (t.pipesCount -= 1),
              1 === t.pipesCount && (t.pipes = t.pipes[0]),
              e.emit("unpipe", this, n)),
            this
          );
        }),
        (S.prototype.on = function (e, t) {
          var n = o.prototype.on.call(this, e, t),
            i = this._readableState;
          return (
            "data" === e
              ? ((i.readableListening = this.listenerCount("readable") > 0),
                !1 !== i.flowing && this.resume())
              : "readable" === e &&
                (i.endEmitted ||
                  i.readableListening ||
                  ((i.readableListening = i.needReadable = !0),
                  (i.flowing = !1),
                  (i.emittedReadable = !1),
                  c("on readable", i.length, i.reading),
                  i.length ? A(this) : i.reading || r.nextTick(B, this))),
            n
          );
        }),
        (S.prototype.addListener = S.prototype.on),
        (S.prototype.removeListener = function (e, t) {
          var n = o.prototype.removeListener.call(this, e, t);
          return "readable" === e && r.nextTick(P, this), n;
        }),
        (S.prototype.removeAllListeners = function (e) {
          var t = o.prototype.removeAllListeners.apply(this, arguments);
          return ("readable" !== e && void 0 !== e) || r.nextTick(P, this), t;
        }),
        (S.prototype.resume = function () {
          var e = this._readableState;
          return (
            e.flowing ||
              (c("resume"),
              (e.flowing = !e.readableListening),
              (function (e, t) {
                t.resumeScheduled ||
                  ((t.resumeScheduled = !0), r.nextTick(D, e, t));
              })(this, e)),
            (e.paused = !1),
            this
          );
        }),
        (S.prototype.pause = function () {
          return (
            c("call pause flowing=%j", this._readableState.flowing),
            !1 !== this._readableState.flowing &&
              (c("pause"),
              (this._readableState.flowing = !1),
              this.emit("pause")),
            (this._readableState.paused = !0),
            this
          );
        }),
        (S.prototype.wrap = function (e) {
          var t = this,
            n = this._readableState,
            r = !1;
          for (var i in (e.on("end", function () {
            if ((c("wrapped end"), n.decoder && !n.ended)) {
              var e = n.decoder.end();
              e && e.length && t.push(e);
            }
            t.push(null);
          }),
          e.on("data", function (i) {
            (c("wrapped data"),
            n.decoder && (i = n.decoder.write(i)),
            n.objectMode && null == i) ||
              ((n.objectMode || (i && i.length)) &&
                (t.push(i) || ((r = !0), e.pause())));
          }),
          e))
            void 0 === this[i] &&
              "function" == typeof e[i] &&
              (this[i] = (function (t) {
                return function () {
                  return e[t].apply(e, arguments);
                };
              })(i));
          for (var a = 0; a < E.length; a++)
            e.on(E[a], this.emit.bind(this, E[a]));
          return (
            (this._read = function (t) {
              c("wrapped _read", t), r && ((r = !1), e.resume());
            }),
            this
          );
        }),
        "function" == typeof Symbol &&
          (S.prototype[Symbol.asyncIterator] = function () {
            return void 0 === p && (p = n(55)), p(this);
          }),
        Object.defineProperty(S.prototype, "readableHighWaterMark", {
          enumerable: !1,
          get: function () {
            return this._readableState.highWaterMark;
          },
        }),
        Object.defineProperty(S.prototype, "readableBuffer", {
          enumerable: !1,
          get: function () {
            return this._readableState && this._readableState.buffer;
          },
        }),
        Object.defineProperty(S.prototype, "readableFlowing", {
          enumerable: !1,
          get: function () {
            return this._readableState.flowing;
          },
          set: function (e) {
            this._readableState && (this._readableState.flowing = e);
          },
        }),
        (S._fromList = R),
        Object.defineProperty(S.prototype, "readableLength", {
          enumerable: !1,
          get: function () {
            return this._readableState.length;
          },
        }),
        "function" == typeof Symbol &&
          (S.from = function (e, t) {
            return void 0 === h && (h = n(56)), h(S, e, t);
          });
    }.call(this, n(2), n(0)));
  },
  function (e, t, n) {
    e.exports = n(7).EventEmitter;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function n(e, t) {
        i(e, t), r(e);
      }
      function r(e) {
        (e._writableState && !e._writableState.emitClose) ||
          (e._readableState && !e._readableState.emitClose) ||
          e.emit("close");
      }
      function i(e, t) {
        e.emit("error", t);
      }
      e.exports = {
        destroy: function (e, a) {
          var o = this,
            s = this._readableState && this._readableState.destroyed,
            u = this._writableState && this._writableState.destroyed;
          return s || u
            ? (a
                ? a(e)
                : e &&
                  (this._writableState
                    ? this._writableState.errorEmitted ||
                      ((this._writableState.errorEmitted = !0),
                      t.nextTick(i, this, e))
                    : t.nextTick(i, this, e)),
              this)
            : (this._readableState && (this._readableState.destroyed = !0),
              this._writableState && (this._writableState.destroyed = !0),
              this._destroy(e || null, function (e) {
                !a && e
                  ? o._writableState
                    ? o._writableState.errorEmitted
                      ? t.nextTick(r, o)
                      : ((o._writableState.errorEmitted = !0),
                        t.nextTick(n, o, e))
                    : t.nextTick(n, o, e)
                  : a
                  ? (t.nextTick(r, o), a(e))
                  : t.nextTick(r, o);
              }),
              this);
        },
        undestroy: function () {
          this._readableState &&
            ((this._readableState.destroyed = !1),
            (this._readableState.reading = !1),
            (this._readableState.ended = !1),
            (this._readableState.endEmitted = !1)),
            this._writableState &&
              ((this._writableState.destroyed = !1),
              (this._writableState.ended = !1),
              (this._writableState.ending = !1),
              (this._writableState.finalCalled = !1),
              (this._writableState.prefinished = !1),
              (this._writableState.finished = !1),
              (this._writableState.errorEmitted = !1));
        },
        errorOrDestroy: function (e, t) {
          var n = e._readableState,
            r = e._writableState;
          (n && n.autoDestroy) || (r && r.autoDestroy)
            ? e.destroy(t)
            : e.emit("error", t);
        },
      };
    }.call(this, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(4).codes.ERR_INVALID_OPT_VALUE;
    e.exports = {
      getHighWaterMark: function (e, t, n, i) {
        var a = (function (e, t, n) {
          return null != e.highWaterMark ? e.highWaterMark : t ? e[n] : null;
        })(t, i, n);
        if (null != a) {
          if (!isFinite(a) || Math.floor(a) !== a || a < 0)
            throw new r(i ? n : "highWaterMark", a);
          return Math.floor(a);
        }
        return e.objectMode ? 16 : 16384;
      },
    };
  },
  function (e, t, n) {
    "use strict";
    (function (t, r) {
      function i(e) {
        var t = this;
        (this.next = null),
          (this.entry = null),
          (this.finish = function () {
            !(function (e, t, n) {
              var r = e.entry;
              e.entry = null;
              for (; r; ) {
                var i = r.callback;
                t.pendingcb--, i(n), (r = r.next);
              }
              t.corkedRequestsFree.next = e;
            })(t, e);
          });
      }
      var a;
      (e.exports = S), (S.WritableState = M);
      var o = { deprecate: n(22) },
        s = n(25),
        u = n(8).Buffer,
        c = t.Uint8Array || function () {};
      var l,
        f = n(26),
        p = n(27).getHighWaterMark,
        h = n(4).codes,
        d = h.ERR_INVALID_ARG_TYPE,
        m = h.ERR_METHOD_NOT_IMPLEMENTED,
        g = h.ERR_MULTIPLE_CALLBACK,
        y = h.ERR_STREAM_CANNOT_PIPE,
        v = h.ERR_STREAM_DESTROYED,
        b = h.ERR_STREAM_NULL_VALUES,
        x = h.ERR_STREAM_WRITE_AFTER_END,
        w = h.ERR_UNKNOWN_ENCODING,
        N = f.errorOrDestroy;
      function E() {}
      function M(e, t, o) {
        (a = a || n(5)),
          (e = e || {}),
          "boolean" != typeof o && (o = t instanceof a),
          (this.objectMode = !!e.objectMode),
          o && (this.objectMode = this.objectMode || !!e.writableObjectMode),
          (this.highWaterMark = p(this, e, "writableHighWaterMark", o)),
          (this.finalCalled = !1),
          (this.needDrain = !1),
          (this.ending = !1),
          (this.ended = !1),
          (this.finished = !1),
          (this.destroyed = !1);
        var s = !1 === e.decodeStrings;
        (this.decodeStrings = !s),
          (this.defaultEncoding = e.defaultEncoding || "utf8"),
          (this.length = 0),
          (this.writing = !1),
          (this.corked = 0),
          (this.sync = !0),
          (this.bufferProcessing = !1),
          (this.onwrite = function (e) {
            !(function (e, t) {
              var n = e._writableState,
                i = n.sync,
                a = n.writecb;
              if ("function" != typeof a) throw new g();
              if (
                ((function (e) {
                  (e.writing = !1),
                    (e.writecb = null),
                    (e.length -= e.writelen),
                    (e.writelen = 0);
                })(n),
                t)
              )
                !(function (e, t, n, i, a) {
                  --t.pendingcb,
                    n
                      ? (r.nextTick(a, i),
                        r.nextTick(T, e, t),
                        (e._writableState.errorEmitted = !0),
                        N(e, i))
                      : (a(i),
                        (e._writableState.errorEmitted = !0),
                        N(e, i),
                        T(e, t));
                })(e, n, i, t, a);
              else {
                var o = A(n) || e.destroyed;
                o ||
                  n.corked ||
                  n.bufferProcessing ||
                  !n.bufferedRequest ||
                  O(e, n),
                  i ? r.nextTick(k, e, n, o, a) : k(e, n, o, a);
              }
            })(t, e);
          }),
          (this.writecb = null),
          (this.writelen = 0),
          (this.bufferedRequest = null),
          (this.lastBufferedRequest = null),
          (this.pendingcb = 0),
          (this.prefinished = !1),
          (this.errorEmitted = !1),
          (this.emitClose = !1 !== e.emitClose),
          (this.autoDestroy = !!e.autoDestroy),
          (this.bufferedRequestCount = 0),
          (this.corkedRequestsFree = new i(this));
      }
      function S(e) {
        var t = this instanceof (a = a || n(5));
        if (!t && !l.call(S, this)) return new S(e);
        (this._writableState = new M(e, this, t)),
          (this.writable = !0),
          e &&
            ("function" == typeof e.write && (this._write = e.write),
            "function" == typeof e.writev && (this._writev = e.writev),
            "function" == typeof e.destroy && (this._destroy = e.destroy),
            "function" == typeof e.final && (this._final = e.final)),
          s.call(this);
      }
      function _(e, t, n, r, i, a, o) {
        (t.writelen = r),
          (t.writecb = o),
          (t.writing = !0),
          (t.sync = !0),
          t.destroyed
            ? t.onwrite(new v("write"))
            : n
            ? e._writev(i, t.onwrite)
            : e._write(i, a, t.onwrite),
          (t.sync = !1);
      }
      function k(e, t, n, r) {
        n ||
          (function (e, t) {
            0 === t.length &&
              t.needDrain &&
              ((t.needDrain = !1), e.emit("drain"));
          })(e, t),
          t.pendingcb--,
          r(),
          T(e, t);
      }
      function O(e, t) {
        t.bufferProcessing = !0;
        var n = t.bufferedRequest;
        if (e._writev && n && n.next) {
          var r = t.bufferedRequestCount,
            a = new Array(r),
            o = t.corkedRequestsFree;
          o.entry = n;
          for (var s = 0, u = !0; n; )
            (a[s] = n), n.isBuf || (u = !1), (n = n.next), (s += 1);
          (a.allBuffers = u),
            _(e, t, !0, t.length, a, "", o.finish),
            t.pendingcb++,
            (t.lastBufferedRequest = null),
            o.next
              ? ((t.corkedRequestsFree = o.next), (o.next = null))
              : (t.corkedRequestsFree = new i(t)),
            (t.bufferedRequestCount = 0);
        } else {
          for (; n; ) {
            var c = n.chunk,
              l = n.encoding,
              f = n.callback;
            if (
              (_(e, t, !1, t.objectMode ? 1 : c.length, c, l, f),
              (n = n.next),
              t.bufferedRequestCount--,
              t.writing)
            )
              break;
          }
          null === n && (t.lastBufferedRequest = null);
        }
        (t.bufferedRequest = n), (t.bufferProcessing = !1);
      }
      function A(e) {
        return (
          e.ending &&
          0 === e.length &&
          null === e.bufferedRequest &&
          !e.finished &&
          !e.writing
        );
      }
      function C(e, t) {
        e._final(function (n) {
          t.pendingcb--,
            n && N(e, n),
            (t.prefinished = !0),
            e.emit("prefinish"),
            T(e, t);
        });
      }
      function T(e, t) {
        var n = A(t);
        if (
          n &&
          ((function (e, t) {
            t.prefinished ||
              t.finalCalled ||
              ("function" != typeof e._final || t.destroyed
                ? ((t.prefinished = !0), e.emit("prefinish"))
                : (t.pendingcb++, (t.finalCalled = !0), r.nextTick(C, e, t)));
          })(e, t),
          0 === t.pendingcb &&
            ((t.finished = !0), e.emit("finish"), t.autoDestroy))
        ) {
          var i = e._readableState;
          (!i || (i.autoDestroy && i.endEmitted)) && e.destroy();
        }
        return n;
      }
      n(1)(S, s),
        (M.prototype.getBuffer = function () {
          for (var e = this.bufferedRequest, t = []; e; )
            t.push(e), (e = e.next);
          return t;
        }),
        (function () {
          try {
            Object.defineProperty(M.prototype, "buffer", {
              get: o.deprecate(
                function () {
                  return this.getBuffer();
                },
                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                "DEP0003"
              ),
            });
          } catch (e) {}
        })(),
        "function" == typeof Symbol &&
        Symbol.hasInstance &&
        "function" == typeof Function.prototype[Symbol.hasInstance]
          ? ((l = Function.prototype[Symbol.hasInstance]),
            Object.defineProperty(S, Symbol.hasInstance, {
              value: function (e) {
                return (
                  !!l.call(this, e) ||
                  (this === S && e && e._writableState instanceof M)
                );
              },
            }))
          : (l = function (e) {
              return e instanceof this;
            }),
        (S.prototype.pipe = function () {
          N(this, new y());
        }),
        (S.prototype.write = function (e, t, n) {
          var i,
            a = this._writableState,
            o = !1,
            s = !a.objectMode && ((i = e), u.isBuffer(i) || i instanceof c);
          return (
            s &&
              !u.isBuffer(e) &&
              (e = (function (e) {
                return u.from(e);
              })(e)),
            "function" == typeof t && ((n = t), (t = null)),
            s ? (t = "buffer") : t || (t = a.defaultEncoding),
            "function" != typeof n && (n = E),
            a.ending
              ? (function (e, t) {
                  var n = new x();
                  N(e, n), r.nextTick(t, n);
                })(this, n)
              : (s ||
                  (function (e, t, n, i) {
                    var a;
                    return (
                      null === n
                        ? (a = new b())
                        : "string" == typeof n ||
                          t.objectMode ||
                          (a = new d("chunk", ["string", "Buffer"], n)),
                      !a || (N(e, a), r.nextTick(i, a), !1)
                    );
                  })(this, a, e, n)) &&
                (a.pendingcb++,
                (o = (function (e, t, n, r, i, a) {
                  if (!n) {
                    var o = (function (e, t, n) {
                      e.objectMode ||
                        !1 === e.decodeStrings ||
                        "string" != typeof t ||
                        (t = u.from(t, n));
                      return t;
                    })(t, r, i);
                    r !== o && ((n = !0), (i = "buffer"), (r = o));
                  }
                  var s = t.objectMode ? 1 : r.length;
                  t.length += s;
                  var c = t.length < t.highWaterMark;
                  c || (t.needDrain = !0);
                  if (t.writing || t.corked) {
                    var l = t.lastBufferedRequest;
                    (t.lastBufferedRequest = {
                      chunk: r,
                      encoding: i,
                      isBuf: n,
                      callback: a,
                      next: null,
                    }),
                      l
                        ? (l.next = t.lastBufferedRequest)
                        : (t.bufferedRequest = t.lastBufferedRequest),
                      (t.bufferedRequestCount += 1);
                  } else _(e, t, !1, s, r, i, a);
                  return c;
                })(this, a, s, e, t, n))),
            o
          );
        }),
        (S.prototype.cork = function () {
          this._writableState.corked++;
        }),
        (S.prototype.uncork = function () {
          var e = this._writableState;
          e.corked &&
            (e.corked--,
            e.writing ||
              e.corked ||
              e.bufferProcessing ||
              !e.bufferedRequest ||
              O(this, e));
        }),
        (S.prototype.setDefaultEncoding = function (e) {
          if (
            ("string" == typeof e && (e = e.toLowerCase()),
            !(
              [
                "hex",
                "utf8",
                "utf-8",
                "ascii",
                "binary",
                "base64",
                "ucs2",
                "ucs-2",
                "utf16le",
                "utf-16le",
                "raw",
              ].indexOf((e + "").toLowerCase()) > -1
            ))
          )
            throw new w(e);
          return (this._writableState.defaultEncoding = e), this;
        }),
        Object.defineProperty(S.prototype, "writableBuffer", {
          enumerable: !1,
          get: function () {
            return this._writableState && this._writableState.getBuffer();
          },
        }),
        Object.defineProperty(S.prototype, "writableHighWaterMark", {
          enumerable: !1,
          get: function () {
            return this._writableState.highWaterMark;
          },
        }),
        (S.prototype._write = function (e, t, n) {
          n(new m("_write()"));
        }),
        (S.prototype._writev = null),
        (S.prototype.end = function (e, t, n) {
          var i = this._writableState;
          return (
            "function" == typeof e
              ? ((n = e), (e = null), (t = null))
              : "function" == typeof t && ((n = t), (t = null)),
            null != e && this.write(e, t),
            i.corked && ((i.corked = 1), this.uncork()),
            i.ending ||
              (function (e, t, n) {
                (t.ending = !0),
                  T(e, t),
                  n && (t.finished ? r.nextTick(n) : e.once("finish", n));
                (t.ended = !0), (e.writable = !1);
              })(this, i, n),
            this
          );
        }),
        Object.defineProperty(S.prototype, "writableLength", {
          enumerable: !1,
          get: function () {
            return this._writableState.length;
          },
        }),
        Object.defineProperty(S.prototype, "destroyed", {
          enumerable: !1,
          get: function () {
            return (
              void 0 !== this._writableState && this._writableState.destroyed
            );
          },
          set: function (e) {
            this._writableState && (this._writableState.destroyed = e);
          },
        }),
        (S.prototype.destroy = f.destroy),
        (S.prototype._undestroy = f.undestroy),
        (S.prototype._destroy = function (e, t) {
          t(e);
        });
    }.call(this, n(2), n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = l;
    var r = n(4).codes,
      i = r.ERR_METHOD_NOT_IMPLEMENTED,
      a = r.ERR_MULTIPLE_CALLBACK,
      o = r.ERR_TRANSFORM_ALREADY_TRANSFORMING,
      s = r.ERR_TRANSFORM_WITH_LENGTH_0,
      u = n(5);
    function c(e, t) {
      var n = this._transformState;
      n.transforming = !1;
      var r = n.writecb;
      if (null === r) return this.emit("error", new a());
      (n.writechunk = null),
        (n.writecb = null),
        null != t && this.push(t),
        r(e);
      var i = this._readableState;
      (i.reading = !1),
        (i.needReadable || i.length < i.highWaterMark) &&
          this._read(i.highWaterMark);
    }
    function l(e) {
      if (!(this instanceof l)) return new l(e);
      u.call(this, e),
        (this._transformState = {
          afterTransform: c.bind(this),
          needTransform: !1,
          transforming: !1,
          writecb: null,
          writechunk: null,
          writeencoding: null,
        }),
        (this._readableState.needReadable = !0),
        (this._readableState.sync = !1),
        e &&
          ("function" == typeof e.transform && (this._transform = e.transform),
          "function" == typeof e.flush && (this._flush = e.flush)),
        this.on("prefinish", f);
    }
    function f() {
      var e = this;
      "function" != typeof this._flush || this._readableState.destroyed
        ? p(this, null, null)
        : this._flush(function (t, n) {
            p(e, t, n);
          });
    }
    function p(e, t, n) {
      if (t) return e.emit("error", t);
      if ((null != n && e.push(n), e._writableState.length)) throw new s();
      if (e._transformState.transforming) throw new o();
      return e.push(null);
    }
    n(1)(l, u),
      (l.prototype.push = function (e, t) {
        return (
          (this._transformState.needTransform = !1),
          u.prototype.push.call(this, e, t)
        );
      }),
      (l.prototype._transform = function (e, t, n) {
        n(new i("_transform()"));
      }),
      (l.prototype._write = function (e, t, n) {
        var r = this._transformState;
        if (
          ((r.writecb = n),
          (r.writechunk = e),
          (r.writeencoding = t),
          !r.transforming)
        ) {
          var i = this._readableState;
          (r.needTransform || i.needReadable || i.length < i.highWaterMark) &&
            this._read(i.highWaterMark);
        }
      }),
      (l.prototype._read = function (e) {
        var t = this._transformState;
        null === t.writechunk || t.transforming
          ? (t.needTransform = !0)
          : ((t.transforming = !0),
            this._transform(t.writechunk, t.writeencoding, t.afterTransform));
      }),
      (l.prototype._destroy = function (e, t) {
        u.prototype._destroy.call(this, e, function (e) {
          t(e);
        });
      });
  },
  function (e, t, n) {
    e.exports = (function (e) {
      "use strict";
      function t(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r);
        }
      }
      e =
        e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
      var n = function (e) {
          return document.getElementById(e);
        },
        r = function (e) {
          return document.createElement(e);
        },
        i = function () {
          var e;
          return (e = document).addEventListener.apply(e, arguments);
        },
        a = function () {
          var e;
          return (e = document).removeEventListener.apply(e, arguments);
        },
        o = (function (e, t) {
          return (
            (function (e) {
              var t = (e.exports = {});
              (t.playSVG =
                '\n  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="20" viewBox="0 0 18 20">\n    <path fill="#999" fill-rule="nonzero" d="M16.224 8.515L2.582.245A1.7 1.7 0 0 0 0 1.702V18.24a1.7 1.7 0 0 0 2.582 1.455l13.642-8.27a1.7 1.7 0 0 0 0-2.91z"/>\n</svg>\n\n'),
                (t.dcSVG =
                  '\n  <svg class="svg" style="transform:scale(0.55)" version="1.0" xmlns="http://www.w3.org/2000/svg"\n width="1705.000000pt" height="1903.000000pt" viewBox="0 0 1705.000000 1903.000000"\n preserveAspectRatio="xMidYMid meet">\n<metadata>\nCreated by potrace 1.15, written by Peter Selinger 2001-2017\n</metadata>\n<g transform="translate(0.000000,1903.000000) scale(0.100000,-0.100000)"\nfill="#000000" stroke="none">\n<path d="M0 9515 l0 -9515 1583 0 1582 0 4430 4655 c2437 2561 4457 4687 4490\n4726 33 38 1164 1227 2513 2642 l2452 2572 0 2192 c0 1206 -2 2193 -4 2193 -3\n0 -1597 -1652 -3542 -3671 l-3538 -3671 -31 35 c-16 20 -1497 1683 -3290 3696\nl-3260 3661 -1692 0 -1693 0 0 -9515z m5504 2412 c1253 -1413 2279 -2574 2282\n-2580 3 -9 -3274 -3438 -4597 -4811 -5 -6 -9 1968 -9 4999 l0 5010 24 -25 c13\n-14 1048 -1181 2300 -2593z"/>\n<path d="M13924 7584 c-34 -17 -2029 -2158 -2029 -2178 0 -15 5121 -5400 5141\n-5404 12 -3 14 295 14 2241 l0 2245 -1478 1543 c-813 849 -1490 1550 -1505\n1557 -38 16 -105 15 -143 -4z"/>\n</g>\n</svg>\n'),
                (t.pauseSVG =
                  '\n  <svg class="svg" style="transform:scale(1.5)" width="100%" height="100%" viewBox="0 0 36 36" >\n    <path id="pause-icon" data-state="playing" d="M11,10 L17,10 17,26 11,26 M20,10 L26,10 26,26 20,26" />\n  </svg>\n'),
                (t.replaySVG =
                  '\n  <svg class="svg" width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1000 1000" enable-background="new 0 0 1000 1000" xml:space="preserve">\n    <metadata> Svg Vector Icons : http://www.onlinewebfonts.com/icon </metadata>\n    <g><g transform="translate(0.000000,511.000000) scale(0.100000,-0.100000)">\n      <path d="M5356.3,4203.8c-1247.8-153.1-2324.2-811.3-3000.7-1839.7c-379.4-578.2-596.5-1209-660.5-1933.4l-27.4-294.8H883.9c-431.9,0-783.9-6.9-783.9-18.3c0-9.2,477.6-493.7,1062.7-1078.7l1062.7-1062.7L3288.1-961.1C3873.1-376,4350.8,108.5,4350.8,117.6c0,11.4-356.5,18.3-790.7,18.3h-793l18.3,189.7C2831,876.3,2991,1338,3288.1,1779.1C4122.3,3026.9,5706,3472.5,7065.8,2841.8C7639.4,2578.9,8197,2035,8487.3,1461.4C8581,1274,8709,896.9,8754.7,666.1c48-246.8,54.8-811.3,9.1-1055.8C8567.3-1491.3,7788-2394,6720.7-2750.5c-315.4-107.4-541.6-139.4-941.6-139.4c-287.9,0-415.9,11.4-598.8,50.3c-523.3,112-973.6,335.9-1371.2,681c-75.4,68.6-148.5,123.4-160,123.4c-9.1,0-187.4-169.1-393.1-374.8c-434.2-434.2-420.5-363.4-105.1-628.5c852.4-710.7,1972.3-1055.8,3046.4-937c1627.2,176,2977.8,1257,3489.8,2790.4c457.1,1368.9,169.1,2843-777,3969.7C8322.7,3484,7417.8,4000.4,6503.6,4160.4C6197.4,4213,5619.2,4235.8,5356.3,4203.8z"/>\n      <path d="M4990.7,124.5c0-1503.8,4.6-1794,32-1778c16,9.1,505.1,413.6,1085.6,895.8C7113.8,78.8,7161.8,122.2,7122.9,161c-80,75.4-2109.4,1757.5-2120.8,1757.5C4995.3,1918.5,4990.7,1111.8,4990.7,124.5z"/>\n    </g></g>\n  </svg>\n'),
                (t.volumeSVG =
                  '\n  <svg class="svg" width="100%" height="100%" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n   viewBox="0 0 286.374 286.374" enable-background="new 0 0 286.374 286.374" xml:space="preserve">\n    <g id="Volume_2">\n      <path style="fill-rule:evenodd;clip-rule:evenodd;" d="M233.636,26.767l-33.372,28.5c25.659,21.07,42.006,52.616,42.006,87.92\n        c0,35.305-16.347,66.851-42.006,87.921l33.372,28.499c32.324-28.869,52.738-70.268,52.738-116.421\n        C286.374,97.034,265.96,55.635,233.636,26.767z M177.737,74.513l-34.69,29.64c15.14,6.818,27.19,21.681,27.19,39.034\n        s-12.05,32.216-27.19,39.034l34.69,29.64c21.294-15.717,36.051-40.586,36.051-68.674C213.788,115.099,199.03,90.23,177.737,74.513z\n         M108.672,48.317L44.746,98.441H17.898C4.671,98.441,0,103.268,0,116.34v53.695c0,13.072,4.951,17.898,17.898,17.898h26.848\n        l63.926,50.068c7.668,4.948,16.558,6.505,16.558-7.365V55.683C125.23,41.813,116.34,43.37,108.672,48.317z"/>\n    </g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\n  </svg>\n'),
                (t.volumeMuteSVG =
                  '\n  <svg class="svg" width="100%" height="100%" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n   viewBox="0 0 286.277 286.277" enable-background="new 0 0 286.277 286.277" xml:space="preserve">\n    <g id="Volume_none">\n      <path style="fill-rule:evenodd;clip-rule:evenodd;" d="M245.102,143.151l36.98-37.071c5.593-5.605,5.593-14.681,0-20.284\n        l-10.124-10.142c-5.593-5.604-14.655-5.604-20.247,0l-36.98,37.071l-36.977-37.043c-5.594-5.603-14.654-5.603-20.247,0\n        l-10.124,10.143c-5.594,5.603-5.594,14.679,0,20.282l36.987,37.053l-36.961,37.051c-5.591,5.604-5.591,14.681,0,20.284\n        l10.126,10.141c5.593,5.604,14.654,5.604,20.247,0l36.96-37.05l36.97,37.035c5.592,5.605,14.654,5.605,20.247,0l10.124-10.141\n        c5.593-5.603,5.593-14.68,0-20.282L245.102,143.151z M108.674,48.296L44.747,98.42H17.9c-13.228,0-17.899,4.826-17.899,17.898\n        L0,142.719l0.001,27.295c0,13.072,4.951,17.898,17.899,17.898h26.847l63.927,50.068c7.667,4.948,16.557,6.505,16.557-7.365V55.662\n        C125.23,41.792,116.341,43.349,108.674,48.296z"/>\n    </g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\n  </svg>\n'),
                (t.settingsSVG =
                  '\n  <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" viewBox="0 0 19 19">\n    <path fill="#999" fill-rule="nonzero" d="M17.812 7.52h-1.474a7.09 7.09 0 0 0-.604-1.456l1.043-1.042a1.187 1.187 0 0 0 0-1.68l-1.12-1.118a1.188 1.188 0 0 0-1.68 0l-1.043 1.042a7.05 7.05 0 0 0-1.455-.604V1.188C11.48.531 10.948 0 10.292 0H8.708c-.656 0-1.187.532-1.187 1.188v1.474a7.1 7.1 0 0 0-1.456.604L5.022 2.224a1.187 1.187 0 0 0-1.68 0l-1.12 1.12a1.188 1.188 0 0 0 0 1.68l1.044 1.042c-.256.46-.458.949-.604 1.455H1.188C.531 7.52 0 8.052 0 8.708v1.584c0 .656.532 1.187 1.188 1.187h1.474c.146.507.348.995.604 1.456L2.22 13.979a1.188 1.188 0 0 0 0 1.68l1.12 1.119a1.223 1.223 0 0 0 1.68 0l1.043-1.043c.462.255.95.458 1.457.605v1.472c0 .656.531 1.188 1.187 1.188h1.584c.656 0 1.187-.532 1.187-1.188V16.34c.506-.147.995-.35 1.456-.604l1.043 1.043a1.188 1.188 0 0 0 1.68 0l1.119-1.12a1.187 1.187 0 0 0 0-1.679l-1.043-1.043c.256-.461.458-.95.604-1.456h1.474A1.188 1.188 0 0 0 19 10.29V8.709c0-.656-.532-1.187-1.188-1.187zM9.5 13.459a3.958 3.958 0 1 1 0-7.916 3.958 3.958 0 0 1 0 7.916z"/>\n</svg>\n\n'),
                (t.arrowRightSVG =
                  '\n  <svg class="svg arrow" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 50 80" xml:space="preserve">\n    <polyline fill="none" stroke-width="10" stroke-linecap="round" stroke-linejoin="round" points="0.375,0.375 45.63,38.087 0.375,75.8 "/>\n  </svg>\n'),
                (t.arrowLeftSVG =
                  '\n  <svg class="svg arrow" class="svg" width="100%" height="100%" viewBox="0 0 50 80" xml:space="preserve">\n    <polyline fill="none" stroke-width="10" stroke-linecap="round" stroke-linejoin="round" points="45.63,75.8 0.375,38.087 45.63,0.375 "/>\n  </svg> \n'),
                (t.fullScreenSVG =
                  '\n <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" viewBox="0 0 19 19">\n    <g fill="#999" fill-rule="nonzero">\n        <path d="M18.802 1.942A1.746 1.746 0 0 0 17.06.2h-4.537a.99.99 0 1 0 0 1.98h4.102c.11 0 .198.088.198.197v2.588a.99.99 0 1 0 1.98 0V1.942zM.198 4.965a.99.99 0 0 0 1.98 0v-2.59a.198.198 0 0 1 .197-.199h4.102a.99.99 0 0 0 0-1.979H1.944C.983.2.204.978.202 1.94L.198 4.965zM18.802 17.056v-3.023a.99.99 0 1 0-1.98 0v2.592c0 .11-.088.198-.197.198h-4.102a.99.99 0 1 0 0 1.98h4.533c.964-.001 1.746-.783 1.746-1.747zM.198 17.056a1.746 1.746 0 0 0 1.746 1.742h4.533a.99.99 0 1 0 0-1.979H2.375a.198.198 0 0 1-.198-.194v-2.592a.99.99 0 1 0-1.98 0v3.023z"/>\n        <rect width="10.651" height="6.117" x="4.174" y="6.441" rx="1.954"/>\n    </g>\n</svg>\n\n'),
                (t.loopSVG =
                  '\n<svg xmlns="http://www.w3.org/2000/svg" width="24" height="22" viewBox="0 0 24 22">\n    <g fill="#999" fill-rule="nonzero">\n        <path d="M16.773 15.476H16.3a1.25 1.25 0 0 0 0 2.5h.478a6.944 6.944 0 0 0 .98-13.823.251.251 0 0 1-.208-.246V1.93A1.25 1.25 0 0 0 15.584.906l-4.778 3.341a1.25 1.25 0 0 0 .717 2.274h4.764c2.829 0 4.963 1.925 4.963 4.478a4.482 4.482 0 0 1-4.477 4.477zM6.247 17.845c.12.02.208.124.208.246v1.976a1.249 1.249 0 0 0 1.966 1.024l4.773-3.34a1.251 1.251 0 0 0-.717-2.275H7.713c-2.829 0-4.963-1.925-4.963-4.476a4.482 4.482 0 0 1 4.477-4.479h.478a1.25 1.25 0 1 0 0-2.5h-.478a6.945 6.945 0 0 0-.98 13.824z"/>\n    </g>\n</svg>\n'),
                (t.loadingSVG =
                  '<svg class="lds-spinner" width="200px"  height="200px"  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" style="background: none;"><g transform="rotate(0 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.9166666666666666s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(30 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.8333333333333334s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(60 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.75s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(90 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.6666666666666666s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(120 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5833333333333334s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(150 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(180 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.4166666666666667s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(210 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.3333333333333333s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(240 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.25s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(270 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.16666666666666666s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(300 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.08333333333333333s" repeatCount="indefinite"></animate>\n  </rect>\n</g><g transform="rotate(330 50 50)">\n  <rect x="47" y="24" rx="9.4" ry="4.8" width="6" height="12" fill="#999">\n    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animate>\n  </rect>\n</g></svg>');
            })((t = { exports: {} })),
            t.exports
          );
        })(),
        s = {
          name: "mc-player",
          set playerName(e) {
            this.name += "-" + e;
          },
        },
        u = function (e, t) {
          return {
            default: {
              "settings-background-color": "whitesmoke",
              "hms-background-color": "whitesmoke",
              "background-color": "whitesmoke",
              "grad-height": "0px",
              color: "black",
              "svg-color": "black",
              "loopbar-color": "#808086",
              "speedbar-color": "#999",
              "runningbar-color": "red",
              "cursor-color": "red",
              "speedbar-cursor-color": "red",
              "button-opacity": "1",
              "hover-color": "rgba(200, 200, 200, 0.5)",
              "slider-off-color": "#ccc",
              "slider-on-color": "red",
              "preview-border": "1px solid rgba(0,0,0,1)",
              border: "1px solid rgba(255,255,255,0.2)",
              "controls-border": "none",
              "svg-selected-color": "red",
              "loopbar-boundaries-style::before": "",
              "loopbar-boundaries-style::after": "",
              "theme-style": "",
              "loopbar-boundaries-color": "#808086",
            },
            dark: {
              "settings-background-color": "black",
              "hms-background-color": "black",
              "background-color": "black",
              "grad-height": "0px",
              color: "white",
              "svg-color": "white",
              "loopbar-color": "#808086",
              "speedbar-color": "#999",
              "runningbar-color": "red",
              "cursor-color": "red",
              "speedbar-cursor-color": "red",
              "button-opacity": "1",
              "hover-color": "rgba(90, 90, 90, 0.5)",
              "slider-off-color": "#ccc",
              "slider-on-color": "red",
              "preview-border": "1px solid rgba(0,0,0,1)",
              border: "1px solid rgba(255,255,255,0.2)",
              "controls-border": "none",
              "svg-selected-color": "red",
              "loopbar-boundaries-style::before": "",
              "loopbar-boundaries-style::after": "",
              "theme-style": "",
              "loopbar-boundaries-color": "#808086",
            },
            whiteGold: {
              "settings-background-color": "white",
              "hms-background-color": "white",
              "background-color": "white",
              "grad-height": "0px",
              color: "#a17f1a",
              "svg-color": "#a17f1a",
              "loopbar-color": "#808086",
              "speedbar-color": "#999",
              "runningbar-color": "#a17f1a",
              "cursor-color": "#a17f1a",
              "speedbar-cursor-color": "#a17f1a",
              "button-opacity": "1",
              "hover-color": "rgba(200, 200, 200, 0.5)",
              "slider-off-color": "#ccc",
              "slider-on-color": "#a17f1a",
              "preview-border": "1px solid rgba(0,0,0,1)",
              border: "1px solid rgba(255,255,255,0.2)",
              "controls-border": "none",
              "svg-selected-color": "red",
              "loopbar-boundaries-style::before": "",
              "loopbar-boundaries-style::after": "",
              "theme-style": "",
              "loopbar-boundaries-color": "#808086",
            },
            darkGold: {
              "settings-background-color": "black",
              "hms-background-color": "black",
              "background-color": "black",
              "grad-height": "0px",
              color: "#a17f1a",
              "svg-color": "#a17f1a",
              "loopbar-color": "#808086",
              "speedbar-color": "#999",
              "runningbar-color": "#a17f1a",
              "cursor-color": "#a17f1a",
              "speedbar-cursor-color": "#a17f1a",
              "button-opacity": "1",
              "hover-color": "rgba(90, 90, 90, 0.5)",
              "slider-off-color": "#ccc",
              "slider-on-color": "#a17f1a",
              "preview-border": "1px solid rgba(0,0,0,1)",
              border: "1px solid rgba(255,255,255,0.2)",
              "controls-border": "none",
              "svg-selected-color": "red",
              "loopbar-boundaries-style::before": "",
              "loopbar-boundaries-style::after": "",
              "theme-style": "",
              "loopbar-boundaries-color": "#808086",
            },
            transparent: {
              "background-color": "transparent",
              "settings-background-color": "rgba(0,0,0,0.5)",
              "hms-background-color": "rgba(0,0,0,0.5)",
              "preview-border": "1px solid rgba(0,0,0,1)",
              color: "#999",
              "grad-height": "60px",
              "svg-color": "#999",
              "loopbar-color": "#808086",
              "speedbar-color": "#999",
              "runningbar-color": "red",
              "cursor-color": "#9e2d11",
              "cursor-style::before":
                '\n        box-shadow: 0px 0px 6px 6px red;\n        width: 6px;\n        height: 6px;\n        border-radius: 100%;\n        display: block;\n        content: "";\n        background-color: red;\n        position: relative;\n        left: -2px;\n        top: -2px;\n    ',
              "cursor-style::after":
                '\n        width: 6px;\n        height: 6px;\n        border-radius: 100%;\n        box-shadow: 0px 0px 6px 6px red;\n        content: "";\n        display: block;\n        position: absolute;\n        background-color: red;\n        right: -2px;\n        bottom: -2px;\n    ',
              "speedbar-cursor-color": "red",
              "button-opacity": "1",
              "hover-color": "rgba(200, 200, 200, 0.5)",
              "slider-off-color": "#ccc",
              "slider-on-color": "red",
              border: "1px solid rgba(255,255,255,0.1)",
              "controls-border": "1px solid rgba(255,255,255,0.1)",
              "svg-selected-color": "red",
              "loopbar-boundaries-style":
                "\n        transform: translate(-50%,-37%);\n        position: absolute;\n        width: 18px;\n        background-color: #ff0000;\n        height: 18px;\n        border-radius: 10px;\n        z-index: 40;\n        position: absolute;\n        width: 18px;\n        background-color: #ff0000;\n        height: 18px;\n        border-radius: 10px;\n        z-index: 40;\n        width: 18px;\n        height: 9px;\n        border-radius: 100%;\n        top: 1.5px;\n    ",
              "loopbar-boundaries-style::before":
                '\n            width: 16px;\n        height: 5px;\n        background: #ff0000;\n        border-radius: 100%;\n        display: block;\n        content: "";\n        position: relative;\n        left: -2px;\n        top: 2px;\n    ',
              "loopbar-boundaries-style::after":
                '\n        width: 14px;\n        height: 11px;\n        border-radius: 100%;\n        background: #ff0000;\n        content: "";\n        display: block;\n        position: relative;\n        top: -6px;\n        left: 5px;\n    ',
              "theme-style": "\n        #".concat(
                t,
                "-loopbar-start {\n            left: -9px !important;\n            transform: rotate(180deg);\n            top: -2px;\n        }\n    "
              ),
            },
            "mc-green": {
              "background-color": "#141416",
              "settings-background-color": "rgba(0,0,0,0.5)",
              "hms-background-color": "rgba(0,0,0,0.5)",
              "preview-border": "1px solid rgba(0,0,0,1)",
              color: "#999",
              "grad-height": "0px",
              "svg-color": "#999",
              "loopbar-color": "rgba(0,184,139,0.2)",
              "loopbar-boundaries-color": "#00b88b",
              "totalbar-color": "rgba(255, 255, 255, 0.11)",
              "speedbar-color": "#999",
              "runningbar-color": "#00b88b",
              "cursor-color": "#00b88b",
              "speedbar-cursor-color": "#00b88b",
              "button-opacity": "1",
              "hover-color": "rgba(0,184,139,0.2)",
              "slider-off-color": "#ccc",
              "slider-on-color": "#00b88b",
              border: "1px solid rgba(255,255,255,0.1)",
              "controls-border": "1px solid #151515",
              "svg-selected-color": "#00b88b",
              "loopbar-boundaries-style":
                "\n        transform: translate(-50%,-37%);\n        position: absolute;\n        width: 18px;\n        background-color: #00b88b;\n        height: 18px;\n        border-radius: 10px;\n        z-index: 40;\n        position: absolute;\n        width: 18px;\n        background-color: #00b88b;\n        height: 18px;\n        border-radius: 10px;\n        z-index: 40;\n        width: 18px;\n        height: 9px;\n        border-radius: 100%;\n        top: 1.5px;\n    ",
              "loopbar-boundaries-style::before":
                '\n            width: 16px;\n        height: 5px;\n        background: #00b88b;\n        border-radius: 100%;\n        display: block;\n        content: "";\n        position: relative;\n        left: -2px;\n        top: 2px;\n    ',
              "loopbar-boundaries-style::after":
                '\n        width: 14px;\n        height: 11px;\n        border-radius: 100%;\n        background: #00b88b;\n        content: "";\n        display: block;\n        position: relative;\n        top: -6px;\n        left: 5px;\n    ',
              "theme-style": "\n        #".concat(
                t,
                "-loopbar-start {\n            left: -9px !important;\n            transform: rotate(180deg);\n            top: -2px;\n        }\n    "
              ),
            },
            "mc-blue": {
              "background-color": "#141416",
              "settings-background-color": "rgba(0,0,0,0.5)",
              "hms-background-color": "rgba(0,0,0,0.5)",
              "preview-border": "1px solid rgba(0,0,0,1)",
              color: "#999",
              "grad-height": "0px",
              "svg-color": "#999",
              "loopbar-color": "rgba(0,153,225,0.2)",
              "loopbar-boundaries-color": "#0099e1",
              "totalbar-color": "rgba(255, 255, 255, 0.11)",
              "speedbar-color": "#999",
              "runningbar-color": "#0099e1",
              "cursor-color": "#0099e1",
              "speedbar-cursor-color": "#0099e1",
              "button-opacity": "1",
              "hover-color": "rgba(0,153,225,0.2)",
              "slider-off-color": "#ccc",
              "slider-on-color": "#0099e1",
              border: "1px solid rgba(255,255,255,0.1)",
              "controls-border": "1px solid #151515",
              "svg-selected-color": "#0099e1",
              "loopbar-boundaries-style":
                "\n        transform: translate(-50%,-37%);\n        position: absolute;\n        width: 18px;\n        background-color: #0099e1;\n        height: 18px;\n        border-radius: 10px;\n        z-index: 40;\n        position: absolute;\n        width: 18px;\n        background-color: #0099e1;\n        height: 18px;\n        border-radius: 10px;\n        z-index: 40;\n        width: 18px;\n        height: 9px;\n        border-radius: 100%;\n        top: 1.5px;\n    ",
              "loopbar-boundaries-style::before":
                '\n            width: 16px;\n        height: 5px;\n        background: #0099e1;\n        border-radius: 100%;\n        display: block;\n        content: "";\n        position: relative;\n        left: -2px;\n        top: 2px;\n    ',
              "loopbar-boundaries-style::after":
                '\n        width: 14px;\n        height: 11px;\n        border-radius: 100%;\n        background: #0099e1;\n        content: "";\n        display: block;\n        position: relative;\n        top: -6px;\n        left: 5px;\n    ',
              "theme-style": "\n        #".concat(
                t,
                "-loopbar-start {\n            left: -9px !important;\n            transform: rotate(180deg);\n            top: -2px;\n        }\n    "
              ),
            },
            "on-top": {
              "background-height": "100%",
              "pointer-event-panel-height": "calc(100% - 44px)",
              "controls-bottom": "0px",
              "settings-panel-bottom": "48px",
              "controls-position": "0px",
            },
            "position-bottom": {
              "background-height": "calc(100% - 44px)",
              "pointer-event-panel-height": "calc(100% - 44px)",
              "controls-bottom": "-0px",
              "settings-panel-bottom": "48px",
              "controls-position": "40px",
            },
          }[e];
        },
        c = n,
        l = r,
        f = i,
        p = a,
        h = n,
        d = i,
        m = a,
        g = i,
        y = a,
        v = i,
        b = a,
        x = n,
        w = i,
        N = a,
        E = n,
        M = i,
        S = a,
        _ = n,
        k = n;
      function O(e, t) {
        for (var n = t.parentNode; null != n; ) {
          if (n == e) return !0;
          n = n.parentNode;
        }
        return !1;
      }
      var A = function () {
          var e = new Date().getTime();
          return "xxxxxxxx-xxxx".replace(/[xy]/g, function (t) {
            var n = (e + 16 * Math.random()) % 16 | 0;
            e = Math.floor(e / 16);
            var r = Math.random() > 0.5,
              i = ("x" == t ? n : (3 & n) | 8).toString(16);
            return r ? i.toUpperCase() : i;
          });
        },
        C = n,
        T = i,
        I = a,
        P = function (e) {
          return document.querySelectorAll(e);
        },
        B = n,
        D = new e.TimeCapsule(),
        j = n,
        R = function (e) {
          return document.getElementsByTagName(e);
        },
        L = r,
        z = function (e, t) {
          function n(e) {
            return "number" == typeof e && isFinite(e);
          }
          var r = new RegExp("^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)", "gi"),
            i = null,
            a = null;
          if (Object.prototype.hasOwnProperty.call(e, "width")) {
            var o = e.width.match(r)[0],
              s = e.width.substring(o.length);
            i =
              !n(Number(o)) || ("%" !== s && "px" !== s)
                ? null
                : { number: Number(o), unit: s };
          }
          if (Object.prototype.hasOwnProperty.call(e, "height")) {
            var u = e.height.match(r)[0],
              c = e.height.substring(u.length);
            a =
              !n(Number(u)) || ("%" !== c && "px" !== c)
                ? null
                : { number: Number(u), unit: c };
          }
          var l,
            f = 1,
            p = 1;
          null !== i &&
            "px" === i.unit &&
            i.number > t.width &&
            (f = t.width / i.number),
            null !== a &&
              "px" === a.unit &&
              a.number > t.height &&
              (p = t.height / a.number),
            (l = p <= f ? p : f);
          var h = {};
          if (null !== i) {
            var d;
            d = "px" === i.unit ? i.number * l : (i.number / 100) * t.width * l;
            var m = t.width - d;
            h.left = m / 2;
          }
          if (null !== i) {
            var g;
            g =
              "px" === a.unit ? a.number * l : (a.number / 100) * t.height * l;
            var y = t.height - g;
            h.top = y / 2;
          }
          return { scale: l, position: h };
        };
      return (function () {
        function e(t) {
          var n = this;
          for (var r in ((function (e, t) {
            if (!(e instanceof t))
              throw new TypeError("Cannot call a class as a function");
          })(this, e),
          (t.id = t.id || Date.now()),
          (t.preview = t.preview || !1),
          (t.showVolume = t.showVolume || !1),
          (t.showIndicator = t.showIndicator || !1),
          (t.theme = t.theme || "transparent on-top"),
          (t.host = t.host || t.clip.props.host),
          (t.buttons = t.buttons || {}),
          (t.timeFormat = t.timeFormat || "ss"),
          (t.scaleToFit = t.scaleToFit || !1),
          void 0 === t.pointerEvents || null === t.pointerEvents
            ? (t.pointerEvents = !0)
            : (t.pointerEvents = Boolean(t.pointerEvents)),
          (t.onMillisecondChange = t.onMillisecondChange || null),
          (t.speedValues = t.speedValues || [
            -4,
            -2,
            -1,
            -0.5,
            0,
            0.5,
            1,
            2,
            4,
          ]),
          t.speedValues))
            isFinite(t.speedValues[r]) || t.speedValues.splice(r, 1);
          t.speedValues.sort(function (e, t) {
            return e - t;
          }),
            (this.className = s.name),
            (s.playerName = t.id),
            (this.options = t),
            (this.id = this.options.id),
            (this.name = s.name),
            (this.previewClip = null),
            (this.clip = t.clip),
            (this.clipClass = t.clipClass),
            (this.state = this.clip.runTimeInfo.state),
            (this.listeners = {}),
            (this.previewScale = 0.25),
            (this.settings = {
              volume: 1,
              journey: null,
              previousVolume: 1,
              volumeMute: !1,
              needsUpdate: !0,
              resizeLoop: !1,
              loopJourney: !1,
              previewJourney: null,
              loopActivated: !1,
              requestingLoop: !1,
              playAfterResize: !1,
              loopStartMillisecond: 0,
              loopLastPositionXPxls: 0,
              loopLastPositionXPercentage: 0,
              loopEndMillisecond: this.clip.duration,
            }),
            (this.functions = {
              millisecondChange: this.millisecondChange,
              createJourney: this.createJourney,
              createLoop: this.createLoop,
            }),
            (function (e) {
              e.elements = {};
              var t = e.clip.props.host;
              if (
                ((t.style.display = "flex"),
                (t.style.justifyContent = "center"),
                (t.style.alignItems = "center"),
                (e.clip.props.host.style.position = "relative"),
                (e.clip.props.host.style.zIndex = "0"),
                (e.elements.mcPlayer = l("div")),
                (e.elements.mcPlayer.id = "".concat(e.name)),
                (e.elements.mcPlayer.className = "".concat(e.className)),
                (e.elements.mcPlayer.innerHTML = (function (e) {
                  return '\n  <div\n    class="pointer-event-panel"\n    id="'
                    .concat(
                      e.name,
                      '-pointer-event-panel"\n  ></div>\n  <div\n    class="pointer-event-panel"\n    id="'
                    )
                    .concat(
                      e.name,
                      '-listener-helper"\n  ></div>\n  <div class="grad"></div>\n  <div class="background"></div>\n  <div id="'
                    )
                    .concat(e.name, '-controls">\n    <div id="')
                    .concat(e.name, '-totalbar">\n      <div id="')
                    .concat(e.name, '-hover-display">\n        <div id="')
                    .concat(
                      e.name,
                      '-hover-millisecond"></div>\n      </div>\n      <div id="'
                    )
                    .concat(
                      e.name,
                      '-loopbar">\n        <div\n          class="'
                    )
                    .concat(e.name, '-loop-boundaries"\n          id="')
                    .concat(
                      e.name,
                      '-loopbar-start"\n        ></div>\n        <div\n          class="'
                    )
                    .concat(e.name, '-loop-boundaries"\n          id="')
                    .concat(
                      e.name,
                      '-loopbar-end"\n        ></div>\n        <div id="'
                    )
                    .concat(e.name, '-helperbar"></div>\n        <div id="')
                    .concat(e.name, '-runningbar">\n          <div id="')
                    .concat(
                      e.name,
                      '-cursor"></div>\n        </div>\n      </div>\n    </div>\n    <div id="'
                    )
                    .concat(e.name, '-left-controls">\n      <div id="')
                    .concat(e.name, '-status-btn">\n        ')
                    .concat(e.svg.playSVG, '\n        <span id="')
                    .concat(
                      e.name,
                      '-indicator"></span>\n      </div>\n      <div id="'
                    )
                    .concat(e.name, '-volume">\n        <div id="')
                    .concat(e.name, '-volume-btn">\n          ')
                    .concat(
                      e.svg.volumeSVG,
                      '\n        </div>\n        <div id="'
                    )
                    .concat(
                      e.name,
                      '-volumebar-helper"></div>\n        <div id="'
                    )
                    .concat(e.name, '-volumebar">\n            <div id="')
                    .concat(
                      e.name,
                      '-volumebar-active">\n              <div id="'
                    )
                    .concat(
                      e.name,
                      '-volume-cursor"></div>\n            </div>\n        </div>\n      </div>\n      <div id="'
                    )
                    .concat(e.name, '-time-display">\n        <span id="')
                    .concat(
                      e.name,
                      '-time-current"></span>\n        <span id="'
                    )
                    .concat(
                      e.name,
                      '-time-separator"></span>\n        <span id="'
                    )
                    .concat(
                      e.name,
                      '-time-total"></span>\n      </div>\n    </div>\n    <div id="'
                    )
                    .concat(
                      e.name,
                      '-right-controls">\n      <div\n        id="'
                    )
                    .concat(
                      e.name,
                      '-loop-btn-container"\n      >\n        <div\n          id="'
                    )
                    .concat(e.name, '-loop-btn"\n        >')
                    .concat(
                      e.svg.loopSVG,
                      '</div>\n        <div\n          id="'
                    )
                    .concat(
                      e.name,
                      '-loop-time"\n        >\n          <span\n            id="'
                    )
                    .concat(e.name, '-loopbar-start-time"\n            class="')
                    .concat(
                      e.name,
                      '-loopbar-time"\n          ></span>\n          <span>:</span>\n          <span\n            id="'
                    )
                    .concat(e.name, '-loopbar-end-time"\n            class="')
                    .concat(
                      e.name,
                      '-loopbar-time"\n          ></span>\n        </div>\n      </div>\n      <div\n        id="'
                    )
                    .concat(e.name, '-settings-btn"\n      >')
                    .concat(
                      e.svg.settingsSVG,
                      '</div>\n      <div\n        id="'
                    )
                    .concat(e.name, '-dc-btn"\n      >\n        ')
                    .concat(
                      e.svg.dcSVG,
                      '\n      </div>\n      \n      <div\n        id="'
                    )
                    .concat(e.name, '-full-screen-btn"\n      >')
                    .concat(
                      e.svg.fullScreenSVG,
                      '</div>\n    </div>\n    \n\n  </div>\n  <div id="'
                    )
                    .concat(e.name, '-settings-panel">\n    <ul id="')
                    .concat(e.name, '-main-settings">\n      <li id="')
                    .concat(
                      e.name,
                      '-settings-pointer-events">\n        <label>Pointer Events</label>\n        <label class="switch settings-switch">\n          <input id="'
                    )
                    .concat(
                      e.name,
                      '-pointer-events-checkbox" type="checkbox">\n          <span class="slider round"></span>\n        </label>\n      </li>\n      <li id="'
                    )
                    .concat(
                      e.name,
                      '-settings-preview">\n        <label>Show Preview</label>\n        <label class="switch settings-switch">\n          <input id="'
                    )
                    .concat(
                      e.name,
                      '-show-preview-checkbox" type="checkbox">\n          <span class="slider round"></span>\n        </label>\n      </li>\n      <li id="'
                    )
                    .concat(
                      e.name,
                      '-settings-indicator">\n        <label>Show Indicator</label>\n        <label class="switch settings-switch">\n          <input id="'
                    )
                    .concat(
                      e.name,
                      '-show-indicator-checkbox" type="checkbox">\n          <span class="slider round"></span>\n        </label>\n      </li>\n      <li id="'
                    )
                    .concat(
                      e.name,
                      '-settings-volume">\n        <label>Show Volume</label>\n        <label class="switch settings-switch">\n          <input id="'
                    )
                    .concat(
                      e.name,
                      '-show-volume-checkbox" type="checkbox">\n          <span class="slider round"></span>\n        </label>\n      </li>\n      <li id="'
                    )
                    .concat(
                      e.name,
                      '-settings-speed-show">\n        <label>Speed</label>\n        <div class="'
                    )
                    .concat(e.name, '-speed-btn">')
                    .concat(e.svg.arrowRightSVG, '</div>\n        <span id="')
                    .concat(
                      e.name,
                      '-speed-current"></span>\n      </li>\n    </ul>\n    <ul id="'
                    )
                    .concat(e.name, '-speed-settings">\n      <li id="')
                    .concat(
                      e.name,
                      '-settings-speed-hide">\n        <div class="'
                    )
                    .concat(e.name, '-speed-btn">')
                    .concat(e.svg.arrowLeftSVG, "</div>\n        <label id=")
                    .concat(
                      e.name,
                      '-speed-runtime>Speed</label>\n      </li>\n      <li>\n        <div id="'
                    )
                    .concat(
                      e.name,
                      '-speed-value-helperbar"></div>\n        <div id="'
                    )
                    .concat(
                      e.name,
                      '-speed-value-bar">\n          <div\n            class="'
                    )
                    .concat(e.name, '-speed-value-step"\n            id="')
                    .concat(
                      e.name,
                      '-speed-cursor"\n          >\n            <div></div>\n          </div>\n        </div>\n        <div id="'
                    )
                    .concat(
                      e.name,
                      '-speed-value">\n        </div>\n      </li>\n    </ul>\n  </div>\n'
                    );
                })({ svg: o, name: e.name })),
                "string" == typeof e.options.host)
              ) {
                var n = document.querySelectorAll(e.options.host);
                for (var r in n)
                  isNaN(r) || n[r].appendChild(e.elements.mcPlayer);
              } else e.options.host.appendChild(e.elements.mcPlayer);
              for (var i in ((e.elements.pointerEventPanel = c(
                "".concat(e.name, "-pointer-event-panel")
              )),
              (e.elements.listenerHelper = c(
                "".concat(e.name, "-listener-helper")
              )),
              (e.elements.loopBar = c("".concat(e.name, "-loopbar"))),
              (e.elements.totalBar = c("".concat(e.name, "-totalbar"))),
              (e.elements.indicator = c("".concat(e.name, "-indicator"))),
              (e.elements.loopButton = c("".concat(e.name, "-loop-btn"))),
              (e.elements.volumeBar = c("".concat(e.name, "-volumebar"))),
              (e.elements.totalTime = c("".concat(e.name, "-time-total"))),
              (e.elements.volumeControl = c("".concat(e.name, "-volume"))),
              (e.elements.volumeBtn = c("".concat(e.name, "-volume-btn"))),
              (e.elements.runningBar = c("".concat(e.name, "-runningbar"))),
              (e.elements.loopBarEnd = c("".concat(e.name, "-loopbar-end"))),
              (e.elements.statusButton = c("".concat(e.name, "-status-btn"))),
              (e.elements.speedBar = c("".concat(e.name, "-speed-value-bar"))),
              (e.elements.currentTime = c("".concat(e.name, "-time-current"))),
              (e.elements.timeDisplay = c("".concat(e.name, "-time-display"))),
              (e.elements.speedCurrent = c(
                "".concat(e.name, "-speed-current")
              )),
              (e.elements.loopBarStart = c(
                "".concat(e.name, "-loopbar-start")
              )),
              (e.elements.volumeCursor = c(
                "".concat(e.name, "-volume-cursor")
              )),
              (e.elements.settingsButton = c(
                "".concat(e.name, "-settings-btn")
              )),
              (e.elements.donkeyclipButton = c("".concat(e.name, "-dc-btn"))),
              (e.elements.timeSeparator = c(
                "".concat(e.name, "-time-separator")
              )),
              (e.elements.settingsPanel = c(
                "".concat(e.name, "-settings-panel")
              )),
              (e.elements.settingsMainPanel = c(
                "".concat(e.name, "-main-settings")
              )),
              (e.elements.fullScreenButton = c(
                "".concat(e.name, "-full-screen-btn")
              )),
              (e.elements.volumeBarHelper = c(
                "".concat(e.name, "-volumebar-helper")
              )),
              (e.elements.volumeBarActive = c(
                "".concat(e.name, "-volumebar-active")
              )),
              (e.elements.settingsSpeedPanel = c(
                "".concat(e.name, "-speed-settings")
              )),
              (e.elements.settingsShowVolume = c(
                "".concat(e.name, "-settings-volume")
              )),
              (e.elements.settingsShowPreview = c(
                "".concat(e.name, "-settings-preview")
              )),
              (e.elements.settingsPointerEvents = c(
                "".concat(e.name, "-settings-pointer-events")
              )),
              (e.elements.speedBarHelper = c(
                "".concat(e.name, "-speed-value-helperbar")
              )),
              (e.elements.settingsShowIndicator = c(
                "".concat(e.name, "-settings-indicator")
              )),
              (e.elements.settingsSpeedButtonShow = c(
                "".concat(e.name, "-settings-speed-show")
              )),
              (e.elements.settingsSpeedButtonHide = c(
                "".concat(e.name, "-settings-speed-hide")
              )),
              (e.elements.volumeBarActive.style.width =
                100 * e.settings.volume + "%"),
              (e.elements.currentTime.innerHTML = e.timeFormat(0)),
              (e.elements.totalTime.innerHTML = e.timeFormat(e.clip.duration)),
              (e.elements.timeSeparator.innerHTML = "/"),
              e.elements.settingsPanel.classList.add(
                "m-fadeOut",
                "".concat(e.name, "-hide")
              ),
              e.options.showIndicator
                ? ((e.elements.indicator.style.visibility = "visible"),
                  (e.elements.statusButton.style.width = "35px"),
                  (e.elements.statusButton.style.height = "20px"),
                  (e.elements.statusButton.style.bottom = "5px"))
                : (e.elements.indicator.style.visibility = "hidden"),
              (e.elements.indicator.innerHTML = e.clip.runTimeInfo.state),
              (e.elements.settingsSpeedPanel.style.display = "none"),
              e.elements.settingsSpeedPanel
                .getElementsByTagName("li")[1]
                .classList.add("no-hover"),
              (e.elements.loopBarStart.style.left = "0%"),
              e.elements.loopBarStart.classList.add(
                "m-fadeOut",
                "".concat(e.name, "-hide")
              ),
              (e.elements.loopBarEnd.style.left = "100%"),
              e.elements.loopBarEnd.classList.add(
                "m-fadeOut",
                "".concat(e.name, "-hide")
              ),
              (e.elements.loopStartTime = c(
                "".concat(e.name, "-loopbar-start-time")
              )),
              (e.elements.loopEndTime = c(
                "".concat(e.name, "-loopbar-end-time")
              )),
              (e.elements.editableLoopStartTime = document.createElement(
                "input"
              )),
              (e.elements.editableLoopStartTime.type = "text"),
              (e.elements.editableLoopStartTime.size =
                c("".concat(e.name, "-time-total")).innerHTML.length + 1),
              (e.elements.editableLoopStartTime.maxLength = c(
                "".concat(e.name, "-time-total")
              ).innerHTML.length),
              (e.elements.editableLoopStartTime.style.height = c(
                "".concat(e.name, "-time-total")
              ).offsetHeight),
              (e.elements.editableLoopStartTime.value = c(
                "".concat(e.name, "-loopbar-start-time")
              ).innerHTML),
              (e.elements.editableLoopStartTime.style.fontSize = "8px"),
              (e.elements.editableLoopEndTime = document.createElement(
                "input"
              )),
              (e.elements.editableLoopEndTime.type = "text"),
              (e.elements.editableLoopEndTime.size =
                c("".concat(e.name, "-time-total")).innerHTML.length + 1),
              (e.elements.editableLoopEndTime.maxLength = c(
                "".concat(e.name, "-time-total")
              ).innerHTML.length),
              (e.elements.editableLoopEndTime.style.height = c(
                "".concat(e.name, "-time-total")
              ).offsetHeight),
              (e.elements.editableLoopEndTime.value = c(
                "".concat(e.name, "-loopbar-start-time")
              ).innerHTML),
              (e.elements.editableLoopEndTime.pattern = "d*"),
              (e.elements.editableLoopEndTime.style.fontSize = "8px"),
              c("".concat(e.name, "-loop-time")).classList.add(
                "m-fadeOut",
                "".concat(e.name, "-hide")
              ),
              c("".concat(e.name, "-hover-display")).classList.add("m-fadeOut"),
              (c("".concat(e.name, "-show-volume-checkbox")).checked =
                e.options.showVolume),
              (c("".concat(e.name, "-show-indicator-checkbox")).checked =
                e.options.showIndicator),
              (c("".concat(e.name, "-show-preview-checkbox")).checked =
                e.options.preview),
              (c("".concat(e.name, "-pointer-events-checkbox")).checked =
                e.options.pointerEvents),
              e.options.pointerEvents
                ? ((e.elements.mcPlayer.style.pointerEvents = "none"),
                  (e.elements.pointerEventPanel.style.pointerEvents = "auto"),
                  (c("".concat(e.name, "-controls")).style.pointerEvents =
                    "auto"),
                  (e.elements.settingsPanel.style.pointerEvents = "auto"))
                : ((e.elements.mcPlayer.style.pointerEvents = "none"),
                  (e.elements.pointerEventPanel.style.pointerEvents = "none"),
                  (c("".concat(e.name, "-controls")).style.pointerEvents =
                    "auto"),
                  (e.elements.settingsPanel.style.pointerEvents = "auto")),
              (e.elements.listenerHelper.style.pointerEvents = "none"),
              e.options.showVolume
                ? ((e.elements.timeDisplay.style.left = ""),
                  (e.elements.volumeControl.style.visibility = "visible"))
                : ((e.elements.timeDisplay.style.left = "45px"),
                  (e.elements.volumeControl.style.visibility = "hidden"),
                  e.elements.volumeControl.classList.toggle(
                    "".concat(e.name, "-hide")
                  ),
                  e.elements.volumeControl.classList.toggle(
                    "".concat(e.name, "-volume-width-transition")
                  )),
              e.options.speedValues)) {
                var a = l("div");
                a.className = "".concat(e.name, "-speed-value-step");
                var s = l("div");
                (s.className = "".concat(e.name, "-speed-value")),
                  (s.dataset.speedValue = e.options.speedValues[i]),
                  (s.innerHTML = e.options.speedValues[i]),
                  (s.dataset.zone = i),
                  c("".concat(e.name, "-speed-value")).prepend(s),
                  e.elements.speedBar.prepend(a);
              }
              !1 === e.options.buttons.fullScreen &&
                e.elements.fullScreenButton.remove(),
                !1 === e.options.buttons.settings &&
                  e.elements.settingsButton.remove(),
                !1 === e.options.buttons.donkeyclip &&
                  e.elements.donkeyclipButton.remove(),
                !1 === e.options.buttons.loop && e.elements.loopButton.remove();
            })(this),
            this.setTheme(),
            this.setSpeed(),
            this.subscribeToTimer(),
            this.subscribeToDurationChange(),
            this.addEventListeners(),
            this.scaleClipHost(),
            this.eventBroadcast("state-change", this.state),
            this.options.preview && this.createPreviewDisplay(),
            (this.resizeTimeout = setTimeout(function () {}, 20)),
            window.addEventListener("resize", function () {
              clearTimeout(n.resizeTimeout),
                (n.resizeTimeout = setTimeout(function () {
                  n.options.preview && n.setPreviewDimentions(),
                    n.options.scaleToFit && n.scaleClipHost();
                }, 20));
            });
        }
        var n, r;
        return (
          (n = e),
          (r = [
            {
              key: "scaleClipHost",
              value: function () {
                if (this.options.scaleToFit) {
                  var e = z(this.clip.props.containerParams, {
                    width: this.clip.props.host.offsetWidth,
                    height: this.clip.props.host.offsetHeight,
                  });
                  (this.clip.realClip.rootElement.style.transform = "scale(".concat(
                    e.scale
                  )),
                    (this.clip.realClip.rootElement.style.left =
                      e.position.left + "px"),
                    (this.clip.realClip.rootElement.style.top =
                      e.position.top + "px");
                }
              },
            },
            {
              key: "createLoop",
              value: function (e, t) {
                (this.settings.loopStartMillisecond = e),
                  (this.settings.loopEndMillisecond = t),
                  (this.elements.loopBar.style.left =
                    (e / this.clip.duration) * 100 + "%"),
                  (this.elements.loopBar.style.width =
                    ((t - e) / this.clip.duration) * 100 + "%"),
                  this.createJourney(this.clip, e),
                  (this.elements.runningBar.style.width = "0%"),
                  !this.settings.loopActivated && this.activateLoop(!1);
              },
            },
            {
              key: "createJourney",
              value: function (e, t) {
                var n = this,
                  r =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : {};
                setTimeout(function () {
                  var i = r.before,
                    a = void 0 === i ? null : i,
                    o = r.after,
                    s = void 0 === o ? null : o;
                  a && e[a](),
                    (n.settings.journey = D.startJourney(e)),
                    n.settings.journey.station(t),
                    n.settings.journey.destination(),
                    s && e[s]();
                }, 0);
              },
            },
            {
              key: "millisecondChange",
              value: function (e, t, n, r) {
                var i =
                  !(arguments.length > 4 && void 0 !== arguments[4]) ||
                  arguments[4];
                if (
                  (this.state !== t &&
                    ((this.state = t), this.eventBroadcast("state-change", t)),
                  !this.settings.needsUpdate)
                )
                  return this.clip.pause(), 1;
                var a = this.clip,
                  o = this.settings,
                  s = o.loopActivated,
                  u = o.loopEndMillisecond,
                  c = o.loopStartMillisecond,
                  l = this.clip.duration,
                  f = this.elements,
                  p = f.totalBar,
                  h = f.loopBar,
                  d = h.offsetWidth,
                  m = h.offsetLeft / p.offsetWidth,
                  g = e - l * m,
                  y = (l / p.offsetWidth) * d;
                return e >= u && s && this.clip.speed >= 0
                  ? (this.createJourney(a, c + 1, {
                      after:
                        this.settings.playAfterResize ||
                        "playing" == this.clip.runTimeInfo.state
                          ? "play"
                          : null,
                    }),
                    1)
                  : e >= u && s && this.clip.speed < 0
                  ? (this.createJourney(a, u - 1, {
                      after:
                        this.settings.playAfterResize ||
                        "playing" == this.clip.runTimeInfo.state
                          ? "play"
                          : null,
                    }),
                    1)
                  : e <= c && s && this.clip.speed >= 0
                  ? (this.createJourney(a, c + 1, {
                      after:
                        this.settings.playAfterResize ||
                        "playing" == this.clip.runTimeInfo.state
                          ? "play"
                          : null,
                    }),
                    1)
                  : e <= c && s && this.clip.speed < 0
                  ? (this.createJourney(a, u - 1, {
                      after:
                        this.settings.playAfterResize ||
                        "playing" == this.clip.runTimeInfo.state
                          ? "play"
                          : null,
                    }),
                    1)
                  : (r &&
                      this.createJourney(a, e, {
                        after: this.settings.playAfterResize ? "play" : null,
                      }),
                    (this.elements.runningBar.style.width =
                      (g / y) * 100 + "%"),
                    (this.elements.currentTime.innerHTML = this.timeFormat(e)),
                    void (
                      this.options.onMillisecondChange &&
                      i &&
                      this.options.onMillisecondChange(e)
                    ));
              },
            },
            {
              key: "eventBroadcast",
              value: function (e, t) {
                var n = j("".concat(this.name, "-controls"));
                "state-change" === e
                  ? "paused" === t ||
                    "idle" === t ||
                    "transitional" === t ||
                    "armed" === t ||
                    "blocked" === t
                    ? (n.classList.value.includes("force-show-controls") ||
                        n.classList.toggle("force-show-controls"),
                      (this.elements.statusButton.innerHTML = o.playSVG),
                      this.elements.statusButton.appendChild(
                        this.elements.indicator
                      ),
                      (this.elements.indicator.innerHTML = "".concat(
                        t.charAt(0).toUpperCase() + t.slice(1)
                      )),
                      "blocked" === t &&
                        (this.elements.pointerEventPanel.innerHTML = '\n            <div style="width:100%;height:100%;background:rgba(0,0,0,0.5);display:flex;justify-content:center;align-items:center;">'.concat(
                          o.loadingSVG,
                          "</div>"
                        )))
                    : (n.classList.value.includes("force-show-controls") &&
                        n.classList.toggle("force-show-controls"),
                      (this.elements.statusButton.innerHTML = o.pauseSVG),
                      this.elements.statusButton.appendChild(
                        this.elements.indicator
                      ),
                      (this.elements.indicator.innerHTML = "Playing"),
                      (this.elements.pointerEventPanel.innerHTML = ""),
                      "playing" === t &&
                      this.clip.runTimeInfo.currentMillisecond ===
                        this.clip.duration &&
                      this.clip.speed >= 0
                        ? this.createJourney(this.clip, 1, { after: "play" })
                        : (("playing" === t &&
                            0 === this.clip.runTimeInfo.currentMillisecond &&
                            this.clip.speed < 0) ||
                            ("playing" === t &&
                              this.clip.runTimeInfo.currentMillisecond ===
                                this.clip.duration &&
                              this.clip.speed < 0)) &&
                          this.createJourney(
                            this.clip,
                            this.clip.duration - 1,
                            { after: "play" }
                          ))
                  : "duration-change" === e &&
                    ((this.elements.totalTime.innerHTML = this.timeFormat(
                      this.clip.duration
                    )),
                    (this.settings.loopEndMillisecond = this.clip.duration),
                    (this.elements.pointerEventPanel.innerHTML = ""),
                    this.millisecondChange(
                      this.clip.runTimeInfo.currentMillisecond
                    ));
              },
            },
            {
              key: "subscribeToDurationChange",
              value: function () {
                this.clip.subscribeToDurationChange(
                  this.subscribeToDurationChangeCallback.bind(this)
                );
              },
            },
            {
              key: "subscribeToDurationChangeCallback",
              value: function () {
                this.eventBroadcast("duration-change");
              },
            },
            {
              key: "subscribeToTimer",
              value: function () {
                this.clip.subscribe(this.id, this.millisecondChange.bind(this));
              },
            },
            {
              key: "handleDragStart",
              value: function () {
                (this.settings.needsUpdate = !0),
                  (this.settings.journey = D.startJourney(this.clip));
              },
            },
            {
              key: "timeFormat",
              value: function (e) {
                if ("ss" === this.options.timeFormat) {
                  var t = e / 1e3 / 60 / 60,
                    n = (t % 1) * 60,
                    r = (n % 1) * 60,
                    i = ("0" + parseInt(t)).slice(-2),
                    a = ("0" + parseInt(n)).slice(-2),
                    o = ("0" + parseInt(r)).slice(-2);
                  return ""
                    .concat("00" === i ? "" : i + ":")
                    .concat(a, ":")
                    .concat(o);
                }
                return e;
              },
            },
            {
              key: "handleDrag",
              value: function (e) {
                var t =
                  !(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1];
                isFinite(e) || (e = 0);
                var n = this.clip.duration,
                  r = this.settings.journey,
                  i = this.elements,
                  a = i.loopBar,
                  o = i.totalBar,
                  s = i.runningBar,
                  u = i.currentTime,
                  c = e + a.offsetLeft,
                  l = Math.round((n * c) / o.offsetWidth);
                (u.innerHTML = this.timeFormat(l)),
                  (s.style.width = (e / a.offsetWidth) * 100 + "%"),
                  r.station(l),
                  this.options.onMillisecondChange &&
                    t &&
                    this.options.onMillisecondChange(l);
              },
            },
            {
              key: "handleDragEnd",
              value: function () {
                this.settings.journey.destination();
              },
            },
            {
              key: "createProgressDrag",
              value: function (e) {
                this.handleDragStart(),
                  this.handleDrag(e),
                  this.handleDragEnd();
              },
            },
            {
              key: "addEventListeners",
              value: function () {
                var e;
                ((e = this).listeners.onCursorMoveLoopEnd = function (t) {
                  t.preventDefault();
                  var n =
                    (t.clientX || ((t.touches || [])[0] || {}).clientX) -
                    e.elements.totalBar.getBoundingClientRect().left;
                  n < 0
                    ? (n = 0)
                    : n > e.elements.totalBar.offsetWidth &&
                      (n = e.elements.totalBar.offsetWidth),
                    e.elements.runningBar.offsetWidth >=
                      e.elements.loopBar.offsetWidth &&
                      (e.elements.runningBar.style.width =
                        e.elements.loopBar.offsetWidth + "px"),
                    e.settings.loopLastPositionXPxls - n < 0
                      ? (e.elements.loopBar.style.width =
                          Math.abs(e.settings.loopLastPositionXPxls - n) + "px")
                      : ((e.elements.loopBar.style.left = n + "px"),
                        (e.settings.loopLastPositionXPxls = n)),
                    (e.settings.loopEndMillisecond = Math.round(
                      (e.clip.duration *
                        ((parseFloat(e.elements.loopBar.style.left) || 0) +
                          parseFloat(e.elements.loopBar.style.width))) /
                        e.elements.totalBar.offsetWidth
                    )),
                    e.settings.loopEndMillisecond <
                      e.clip.runTimeInfo.currentMillisecond &&
                      (e.settings.loopJourney = !0),
                    e.settings.loopStartMillisecond >
                      e.settings.loopEndMillisecond &&
                      ((e.settings.loopStartMillisecond =
                        e.settings.loopEndMillisecond),
                      (e.settings.loopJourney = !0)),
                    (e.elements.loopEndTime.innerHTML =
                      e.settings.loopEndMillisecond),
                    (e.elements.loopStartTime.innerHTML =
                      e.settings.loopStartMillisecond);
                }),
                  (e.listeners.onMouseUpLoopEnd = function (t) {
                    if (
                      ((e.elements.listenerHelper.style.pointerEvents = "none"),
                      (e.settings.resizeLoop = !1),
                      t.preventDefault(),
                      (e.elements.runningBar.style.width =
                        (e.elements.runningBar.offsetWidth /
                          e.elements.loopBar.offsetWidth) *
                          100 +
                        "%"),
                      (e.elements.loopBar.style.left =
                        (e.elements.loopBar.offsetLeft /
                          e.elements.totalBar.offsetWidth) *
                          100 +
                        "%"),
                      (e.elements.loopBar.style.width =
                        (e.elements.loopBar.offsetWidth /
                          e.elements.totalBar.offsetWidth) *
                          100 +
                        "%"),
                      e.settings.loopJourney &&
                        (e.createProgressDrag(
                          e.elements.runningBar.offsetWidth
                        ),
                        (e.settings.loopJourney = !1)),
                      y("mouseup", e.listeners.onMouseUpLoopEnd, !1),
                      y("touchend", e.listeners.onMouseUpLoopEnd, !1),
                      y("mousemove", e.listeners.onCursorMoveLoopEnd, !1),
                      y("touchmove", e.listeners.onCursorMoveLoopEnd, !1),
                      e.elements.loopBar.addEventListener(
                        "mousedown",
                        e.listeners.onMouseDown,
                        !1
                      ),
                      e.elements.loopBar.addEventListener(
                        "touchstart",
                        e.listeners.onMouseDown,
                        { passive: !0 },
                        !1
                      ),
                      e.settings.playAfterResize)
                    ) {
                      var n;
                      if ("idle" === e.clip.runTimeInfo.state)
                        (n =
                          e.clip.speed >= 0
                            ? e.settings.loopStartMillisecond + 1
                            : e.settings.loopEndMillisecond - 1),
                          (e.settings.needsUpdate = !0),
                          e.createJourney(e.clip, n, {
                            before: "pause",
                            after: "play",
                          });
                      else if ("completed" === e.clip.runTimeInfo.state) {
                        var r;
                        (r =
                          e.clip.speed >= 0
                            ? e.settings.loopStartMillisecond + 1
                            : e.settings.loopEndMillisecond - 1),
                          (e.settings.needsUpdate = !0),
                          e.createJourney(e.clip, r, {
                            before: "pause",
                            after: "play",
                          });
                      } else e.clip.play();
                      e.settings.playAfterResize = !1;
                    }
                  }),
                  (e.listeners.onMouseDownLoopEnd = function (t) {
                    (e.elements.listenerHelper.style.pointerEvents = "auto"),
                      (e.settings.resizeLoop = !0),
                      (e.settings.needsUpdate = !0),
                      "playing" === e.clip.runTimeInfo.state &&
                        (e.clip.pause(), (e.settings.playAfterResize = !0)),
                      t.preventDefault(),
                      (e.elements.runningBar.style.width =
                        e.elements.runningBar.offsetWidth + "px"),
                      (e.elements.loopBar.style.left =
                        e.elements.loopBar.offsetLeft + "px"),
                      (e.elements.loopBar.style.width =
                        e.elements.loopBar.offsetWidth + "px"),
                      e.elements.loopBar.removeEventListener(
                        "mousedown",
                        e.listeners.onMouseDown,
                        !1
                      ),
                      e.elements.loopBar.removeEventListener(
                        "touchstart",
                        e.listeners.onMouseDown,
                        !1
                      ),
                      e.listeners.onCursorMoveLoopEnd(t),
                      g("mouseup", e.listeners.onMouseUpLoopEnd, !1),
                      g("touchend", e.listeners.onMouseUpLoopEnd, !1),
                      g("mousemove", e.listeners.onCursorMoveLoopEnd, !1),
                      g("touchmove", e.listeners.onCursorMoveLoopEnd, !1);
                  }),
                  e.elements.loopBarEnd.addEventListener(
                    "mousedown",
                    e.listeners.onMouseDownLoopEnd,
                    !1
                  ),
                  e.elements.loopBarEnd.addEventListener(
                    "touchstart",
                    e.listeners.onMouseDownLoopEnd,
                    { passive: !1 },
                    !1
                  ),
                  (function (e) {
                    (e.listeners.onCursorMove = function (t) {
                      t.preventDefault();
                      var n =
                        (t.clientX || ((t.touches || [])[0] || {}).clientX) -
                        e.elements.loopBar.getBoundingClientRect().left;
                      n < 0
                        ? (n = 0)
                        : n > e.elements.loopBar.offsetWidth &&
                          (n = e.elements.loopBar.offsetWidth),
                        e.handleDrag(n);
                    }),
                      (e.listeners.onMouseUp = function () {
                        (e.elements.listenerHelper.style.pointerEvents =
                          "none"),
                          b("mouseup", e.listeners.onMouseUp, !1),
                          b("touchend", e.listeners.onMouseUp, !1),
                          b("mousemove", e.listeners.onCursorMove, !1),
                          b("touchmove", e.listeners.onCursorMove, !1),
                          e.handleDragEnd(e.settings);
                      }),
                      (e.listeners.onMouseDown = function (t) {
                        (e.elements.listenerHelper.style.pointerEvents =
                          "auto"),
                          "playing" === e.clip.runTimeInfo.state &&
                            (e.settings.playAfterResize = !0),
                          e.handleDragStart(e.clip),
                          e.listeners.onCursorMove(t),
                          v("mouseup", e.listeners.onMouseUp, !1),
                          v("touchend", e.listeners.onMouseUp, !1),
                          v("mousemove", e.listeners.onCursorMove, !1),
                          v("touchmove", e.listeners.onCursorMove, !1);
                      }),
                      e.elements.loopBar.addEventListener(
                        "mousedown",
                        e.listeners.onMouseDown,
                        !1
                      ),
                      e.elements.loopBar.addEventListener(
                        "touchstart",
                        e.listeners.onMouseDown,
                        { passive: !1 },
                        !1
                      );
                  })(this),
                  (function (e) {
                    (e.listeners.onCursorMoveLoopStart = function (t) {
                      t.preventDefault();
                      var n = t.clientX || ((t.touches || [])[0] || {}).clientX,
                        r = e.elements.totalBar.getBoundingClientRect(),
                        i = Math.round(n - r.left),
                        a = Math.round(
                          (e.settings.loopEndMillisecond / e.clip.duration) *
                            e.elements.totalBar.offsetWidth
                        );
                      i < 0
                        ? (i = 0)
                        : i > e.elements.totalBar.offsetWidth &&
                          (i = e.elements.totalBar.offsetWidth);
                      var o =
                        (e.clip.runTimeInfo.currentMillisecond /
                          e.clip.duration) *
                          e.elements.totalBar.offsetWidth -
                        i;
                      (e.elements.loopBar.style.left = i + "px"),
                        (e.elements.loopBar.style.width = a - i + "px"),
                        (e.elements.runningBar.style.width = o + "px"),
                        (e.settings.loopLastPositionXPxls = i),
                        (e.settings.loopStartMillisecond = Math.round(
                          (e.clip.duration * e.elements.loopBar.offsetLeft) /
                            e.elements.totalBar.offsetWidth
                        )),
                        e.settings.loopEndMillisecond <
                          e.settings.loopStartMillisecond &&
                          ((e.settings.loopEndMillisecond =
                            e.settings.loopStartMillisecond),
                          (e.elements.loopBar.style.width = "0px"),
                          (e.elements.runningBar.style.width = "0px")),
                        (e.elements.loopEndTime.innerHTML =
                          e.settings.loopEndMillisecond),
                        (e.elements.loopStartTime.innerHTML =
                          e.settings.loopStartMillisecond),
                        e.settings.loopStartMillisecond >
                          e.clip.runTimeInfo.currentMillisecond &&
                          (e.settings.loopJourney = !0);
                    }),
                      (e.listeners.onMouseUpLoopStart = function (t) {
                        var n;
                        (e.elements.listenerHelper.style.pointerEvents =
                          "none"),
                          (e.settings.resizeLoop = !1),
                          t.preventDefault(),
                          e.settings.loopJourney &&
                            (e.createProgressDrag(
                              e.elements.runningBar.offsetWidth
                            ),
                            (e.settings.loopJourney = !1)),
                          (e.elements.loopBar.style.left =
                            (e.elements.loopBar.offsetLeft /
                              e.elements.totalBar.offsetWidth) *
                              100 +
                            "%"),
                          (e.elements.loopBar.style.width =
                            (e.elements.loopBar.offsetWidth /
                              e.elements.totalBar.offsetWidth) *
                              100 +
                            "%"),
                          (e.settings.loopStartMillisecond = Math.round(
                            (e.clip.duration * e.elements.loopBar.offsetLeft) /
                              e.elements.totalBar.offsetWidth
                          )),
                          (e.elements.runningBar.style.width =
                            (e.elements.runningBar.offsetWidth /
                              e.elements.loopBar.offsetWidth) *
                              100 +
                            "%"),
                          m("mouseup", e.listeners.onMouseUpLoopStart, !1),
                          m("touchend", e.listeners.onMouseUpLoopStart, !1),
                          m("mousemove", e.listeners.onCursorMoveLoopStart, !1),
                          m("touchmove", e.listeners.onCursorMoveLoopStart, !1),
                          e.elements.loopBar.addEventListener(
                            "mousedown",
                            e.listeners.onMouseDown,
                            !1
                          ),
                          e.elements.loopBar.addEventListener(
                            "touchstart",
                            e.listeners.onMouseDown,
                            { passive: !0 },
                            !1
                          ),
                          e.settings.playAfterResize &&
                            ("idle" === e.clip.runTimeInfo.state
                              ? ((n =
                                  e.clip.speed >= 0
                                    ? e.settings.loopStartMillisecond + 1
                                    : e.settings.loopEndMillisecond - 1),
                                (e.settings.needsUpdate = !0),
                                e.createJourney(e.clip, n, {
                                  before: "pause",
                                  after: "play",
                                }))
                              : e.clip.play(),
                            (e.settings.playAfterResize = !1));
                      }),
                      (e.listeners.onMouseDownLoopStart = function (t) {
                        (e.elements.listenerHelper.style.pointerEvents =
                          "auto"),
                          (e.settings.resizeLoop = !0),
                          t.preventDefault(),
                          (e.settings.needsUpdate = !0),
                          "playing" === e.clip.runTimeInfo.state &&
                            (e.clip.pause(), (e.settings.playAfterResize = !0)),
                          e.elements.loopBar.removeEventListener(
                            "mousedown",
                            e.listeners.onMouseDown,
                            !1
                          ),
                          e.elements.loopBar.removeEventListener(
                            "touchstart",
                            e.listeners.onMouseDown,
                            !1
                          ),
                          e.listeners.onCursorMoveLoopStart(t),
                          d("mouseup", e.listeners.onMouseUpLoopStart, !1),
                          d("touchend", e.listeners.onMouseUpLoopStart, !1),
                          d("mousemove", e.listeners.onCursorMoveLoopStart, !1),
                          d("touchmove", e.listeners.onCursorMoveLoopStart, !1);
                      }),
                      e.elements.loopBarStart.addEventListener(
                        "mousedown",
                        e.listeners.onMouseDownLoopStart,
                        !1
                      ),
                      e.elements.loopBarStart.addEventListener(
                        "touchstart",
                        e.listeners.onMouseDownLoopStart,
                        { passive: !1 },
                        !1
                      );
                  })(this),
                  (function (e) {
                    (e.listeners.editableLoopStartTime = function () {
                      (e.elements.editableLoopStartTime.value =
                        e.elements.loopStartTime.innerHTML),
                        e.elements.loopStartTime.replaceWith(
                          e.elements.editableLoopStartTime
                        ),
                        e.elements.editableLoopStartTime.focus();
                    }),
                      (e.listeners.editableLoopEndTime = function () {
                        (e.elements.editableLoopEndTime.value =
                          e.elements.loopEndTime.innerHTML),
                          e.elements.loopEndTime.replaceWith(
                            e.elements.editableLoopEndTime
                          ),
                          e.elements.editableLoopEndTime.focus();
                      }),
                      (e.elements.editableLoopEndTime.onkeydown = e.elements.editableLoopStartTime.onkeydown = function (
                        t
                      ) {
                        t.preventDefault(),
                          13 === t.keyCode &&
                            (e.elements.editableLoopStartTime.onfocusout(),
                            e.elements.editableLoopEndTime.onfocusout()),
                          8 === t.keyCode &&
                            (t.target.value = t.target.value
                              .toString()
                              .substring(
                                0,
                                t.target.value.toString().length - 1
                              )),
                          13 === t.keyCode && t.target.blur();
                        var n = parseFloat(
                          (t.target.value || 0).toString() + t.key
                        );
                        if (!(n > e.clip.duration))
                          if (
                            ((t.target.value = n),
                            t.target === e.elements.editableLoopStartTime)
                          ) {
                            var r = e.elements.totalBar.getBoundingClientRect(),
                              i = {
                                preventDefault: function () {},
                                clientX:
                                  (e.elements.totalBar.offsetWidth /
                                    e.clip.duration) *
                                    t.target.value +
                                  r.left,
                              };
                            e.listeners.onMouseDownLoopStart(i),
                              e.listeners.onCursorMoveLoopStart(i),
                              e.listeners.onMouseUpLoopStart(i);
                          } else if (
                            t.target === e.elements.editableLoopEndTime
                          ) {
                            var a = e.elements.totalBar.getBoundingClientRect(),
                              o = {
                                preventDefault: function () {},
                                clientX:
                                  (e.elements.totalBar.offsetWidth /
                                    e.clip.duration) *
                                    t.target.value +
                                  a.left,
                              };
                            e.listeners.onMouseDownLoopEnd(o),
                              e.listeners.onCursorMoveLoopEnd(o),
                              e.listeners.onMouseUpLoopEnd(o);
                          }
                      }),
                      (e.elements.loopStartTime.onclick =
                        e.listeners.editableLoopStartTime),
                      (e.elements.loopEndTime.onclick =
                        e.listeners.editableLoopEndTime),
                      (e.elements.editableLoopStartTime.onfocusout = function () {
                        e.elements.editableLoopStartTime.replaceWith(
                          e.elements.loopStartTime
                        );
                      }),
                      (e.elements.editableLoopEndTime.onfocusout = function () {
                        e.elements.editableLoopEndTime.replaceWith(
                          e.elements.loopEndTime
                        );
                      });
                  })(this),
                  (function (e) {
                    var t = !1;
                    e.elements.volumeBtn.onclick = function () {
                      if (e.settings.volumeMute) {
                        (e.elements.volumeBarActive.style.width =
                          100 * e.settings.previousVolume + "%"),
                          e.clip.setVolume(e.settings.previousVolume),
                          (e.settings.volumeMute = !1);
                        var t = document.createElement("span");
                        (t.innerHTML = o.volumeSVG),
                          e.elements.volumeBtn
                            .getElementsByTagName("svg")[0]
                            .replaceWith(t);
                      } else {
                        (e.settings.volumeMute = !0),
                          (e.elements.volumeBarActive.style.width = "0%"),
                          e.clip.setVolume(0);
                        var n = document.createElement("span");
                        (n.innerHTML = o.volumeMuteSVG),
                          e.elements.volumeBtn
                            .getElementsByTagName("svg")[0]
                            .replaceWith(n);
                      }
                    };
                    var n = !1;
                    (e.elements.volumeBtn.onmouseover = function () {
                      (n = !0),
                        e.elements.volumeCursor.classList.add(
                          "".concat(e.name, "-volume-cursor-transition")
                        ),
                        e.elements.volumeBar.classList.add(
                          "".concat(e.name, "-volume-width-transition")
                        ),
                        e.elements.volumeBarHelper.classList.add(
                          "".concat(e.name, "-volume-width-transition")
                        ),
                        e.elements.timeDisplay.classList.add(
                          "".concat(e.name, "-time-width-transition")
                        );
                    }),
                      (h(
                        "".concat(e.name, "-left-controls")
                      ).onmouseout = function () {
                        if (n && !t) {
                          var r =
                            event.toElement ||
                            event.relatedTarget ||
                            event.target;
                          (function (e, t) {
                            for (var n = t.parentNode; null != n; ) {
                              if (n == e) return !0;
                              n = n.parentNode;
                            }
                            return !1;
                          })(h("".concat(e.name, "-left-controls")), r) ||
                            r === h("".concat(e.name, "-left-controls")) ||
                            ((n = !1),
                            e.elements.volumeCursor.classList.remove(
                              "".concat(e.name, "-volume-cursor-transition")
                            ),
                            e.elements.volumeBar.classList.remove(
                              "".concat(e.name, "-volume-width-transition")
                            ),
                            e.elements.volumeBarHelper.classList.remove(
                              "".concat(e.name, "-volume-width-transition")
                            ),
                            e.elements.timeDisplay.classList.remove(
                              "".concat(e.name, "-time-width-transition")
                            ));
                        }
                      }),
                      (e.listeners.onCursorMoveVolumeBar = function (t) {
                        t.preventDefault();
                        var n =
                          (t.clientX || ((t.touches || [])[0] || {}).clientX) -
                          e.elements.volumeBarHelper.getBoundingClientRect()
                            .left;
                        if (
                          (n < 0
                            ? (n = 0)
                            : n > e.elements.volumeBarHelper.offsetWidth &&
                              (n = e.elements.volumeBarHelper.offsetWidth),
                          (e.settings.volume = Number(
                            (
                              n / e.elements.volumeBarHelper.offsetWidth
                            ).toFixed(2)
                          )),
                          (e.elements.volumeBarActive.style.width =
                            100 * e.settings.volume + "%"),
                          e.clip.setVolume(e.settings.volume),
                          e.settings.volume > 0)
                        ) {
                          e.settings.volumeMute = !1;
                          var r = document.createElement("span");
                          (r.innerHTML = o.volumeSVG),
                            e.elements.volumeBtn
                              .getElementsByTagName("svg")[0]
                              .replaceWith(r);
                        } else if (0 === e.settings.volume) {
                          e.settings.volumeMute = !0;
                          var i = document.createElement("span");
                          (i.innerHTML = o.volumeMuteSVG),
                            e.elements.volumeBtn
                              .getElementsByTagName("svg")[0]
                              .replaceWith(i);
                        }
                      }),
                      (e.listeners.onMouseUpVolumeBar = function (n) {
                        (t = !1),
                          (e.elements.listenerHelper.style.pointerEvents =
                            "none"),
                          n.preventDefault(),
                          e.settings.volume > 0 &&
                            (e.settings.previousVolume = e.settings.volume),
                          p("mouseup", e.listeners.onMouseUpVolumeBar, !1),
                          p("touchend", e.listeners.onMouseUpVolumeBar, !1),
                          p("mousemove", e.listeners.onCursorMoveVolumeBar, !1),
                          p("touchmove", e.listeners.onCursorMoveVolumeBar, !1);
                      }),
                      (e.listeners.onMouseDownVolumeBar = function (n) {
                        (t = !0),
                          (e.elements.listenerHelper.style.pointerEvents =
                            "auto"),
                          n.preventDefault(),
                          e.listeners.onCursorMoveVolumeBar(n),
                          f("mouseup", e.listeners.onMouseUpVolumeBar, !1),
                          f("touchend", e.listeners.onMouseUpVolumeBar, !1),
                          f("mousemove", e.listeners.onCursorMoveVolumeBar, !1),
                          f("touchmove", e.listeners.onCursorMoveVolumeBar, !1);
                      }),
                      e.elements.volumeBarHelper.addEventListener(
                        "mousedown",
                        e.listeners.onMouseDownVolumeBar,
                        !1
                      ),
                      e.elements.volumeCursor.addEventListener(
                        "mousedown",
                        e.listeners.onMouseDownVolumeBar,
                        !1
                      ),
                      e.elements.volumeBarHelper.addEventListener(
                        "touchstart",
                        e.listeners.onMouseDownVolumeBar,
                        { passive: !1 },
                        !1
                      ),
                      e.elements.volumeCursor.addEventListener(
                        "touchstart",
                        e.listeners.onMouseDownVolumeBar,
                        { passive: !1 },
                        !1
                      );
                  })(this),
                  (function (e) {
                    e.elements.statusButton.onclick = function (t) {
                      return (
                        t.preventDefault(),
                        "playing" === e.clip.runTimeInfo.state
                          ? e.clip.pause()
                          : "paused" === e.clip.runTimeInfo.state ||
                            "idle" === e.clip.runTimeInfo.state ||
                            "transitional" === e.clip.runTimeInfo.state ||
                            "armed" === e.clip.runTimeInfo.state
                          ? e.clip.play()
                          : "idle" === e.clip.runTimeInfo.state
                          ? e.clip.speed >= 0
                            ? (e.clip.play(), (e.settings.needsUpdate = !0))
                            : (e.createJourney(
                                e.clip,
                                e.settings.loopEndMillisecond - 1,
                                { before: "pause", after: "play" }
                              ),
                              (e.settings.needsUpdate = !0))
                          : "completed" === e.clip.runTimeInfo.state &&
                            (e.clip.speed >= 0
                              ? (e.createJourney(e.clip, 0, {
                                  before: "pause",
                                  after: "play",
                                }),
                                (e.settings.needsUpdate = !0))
                              : (e.createJourney(
                                  e.clip,
                                  e.settings.loopEndMillisecond - 1,
                                  { before: "pause", after: "play" }
                                ),
                                (e.settings.needsUpdate = !0))),
                        !1
                      );
                    };
                  })(this),
                  (function (e) {
                    (e.elements.settingsShowIndicator.onclick = function (t) {
                      t.preventDefault();
                      var n = x("".concat(e.name, "-show-indicator-checkbox"));
                      n.checked
                        ? ((n.checked = !1),
                          (e.elements.indicator.style.visibility = "hidden"))
                        : ((n.checked = !0),
                          (e.elements.indicator.style.visibility = "visible"));
                    }),
                      (e.elements.settingsPointerEvents.onclick = function (t) {
                        t.preventDefault();
                        var n = x(
                          "".concat(e.name, "-pointer-events-checkbox")
                        );
                        n.checked
                          ? ((n.checked = !1),
                            (e.options.pointerEvents = !1),
                            (e.elements.mcPlayer.style.pointerEvents = "none"),
                            (e.elements.pointerEventPanel.style.pointerEvents =
                              "none"),
                            (x(
                              "".concat(e.name, "-controls")
                            ).style.pointerEvents = "auto"),
                            (e.elements.settingsPanel.style.pointerEvents =
                              "auto"))
                          : ((n.checked = !0),
                            (e.elements.mcPlayer.style.pointerEvents = "none"),
                            (e.elements.pointerEventPanel.style.pointerEvents =
                              "auto"),
                            (x(
                              "".concat(e.name, "-controls")
                            ).style.pointerEvents = "auto"),
                            (e.elements.settingsPanel.style.pointerEvents =
                              "auto"));
                      }),
                      (e.elements.settingsShowVolume.onclick = function (t) {
                        t.preventDefault(),
                          e.elements.volumeControl.classList.toggle(
                            "".concat(e.name, "-volume-width-transition")
                          ),
                          e.elements.volumeControl.classList.toggle(
                            "".concat(e.name, "-hide")
                          );
                        var n = x("".concat(e.name, "-show-volume-checkbox"));
                        n.checked
                          ? ((n.checked = !1),
                            (e.elements.volumeControl.style.visibility =
                              "hidden"),
                            (e.elements.timeDisplay.style.left = "45px"))
                          : ((n.checked = !0),
                            (e.elements.volumeControl.style.visibility =
                              "visible"),
                            (e.elements.timeDisplay.style.left = ""));
                      }),
                      (e.elements.settingsShowPreview.onclick = function (t) {
                        t.preventDefault();
                        var n = x("".concat(e.name, "-show-preview-checkbox"));
                        n.checked
                          ? ((n.checked = !1),
                            (x(
                              "".concat(e.name, "-hover-display")
                            ).style.visibility = "hidden"),
                            (x(
                              "".concat(e.name, "-hover-display")
                            ).style.display = "none"),
                            (e.options.preview = !1))
                          : (e.previewClip || e.createPreviewDisplay(),
                            (n.checked = !0),
                            (x(
                              "".concat(e.name, "-hover-display")
                            ).style.visibility = "visible"),
                            (x(
                              "".concat(e.name, "-hover-display")
                            ).style.display = "flex"),
                            (e.options.preview = !0));
                      }),
                      (e.elements.settingsButton.onclick = function (t) {
                        t.preventDefault();
                        var n = x("".concat(e.name, "-controls")),
                          r = function t(n) {
                            if (e.elements.settingsPanel.contains(n.target))
                              return !0;
                            e.elements.settingsPanel.classList.toggle(
                              "".concat(e.name, "-hide")
                            ),
                              e.elements.settingsPanel.classList.toggle(
                                "m-fadeOut"
                              ),
                              e.elements.settingsPanel.classList.toggle(
                                "m-fadeIn"
                              ),
                              e.elements.settingsPanel.className.includes(
                                "m-fadeOut"
                              ) &&
                                (N("click", t, !1),
                                e.eventBroadcast("state-change", e.state));
                          };
                        e.elements.settingsPanel.className.includes("m-fadeOut")
                          ? (n.classList.value.includes(
                              "force-show-controls"
                            ) || n.classList.toggle("force-show-controls"),
                            w("click", r, !1))
                          : N("click", r, !1);
                      });
                  })(this),
                  (function (e) {
                    e.elements.settingsSpeedButtonShow.onclick = e.elements.settingsSpeedButtonHide.onclick = function (
                      t
                    ) {
                      t.preventDefault(),
                        e.elements.settingsPanel.classList.toggle(
                          "".concat(e.name, "-settings-speed-panel")
                        ),
                        e.elements.settingsPanel.className.includes(
                          "".concat(e.name, "-settings-speed-panel")
                        )
                          ? ((e.elements.settingsMainPanel.style.display =
                              "none"),
                            (e.elements.settingsSpeedPanel.style.display =
                              "block"))
                          : ((e.elements.settingsSpeedPanel.style.display =
                              "none"),
                            (e.elements.settingsMainPanel.style.display =
                              "block"));
                    };
                    var t = function (t) {
                        t.preventDefault();
                        var n = e.elements.speedBar.getBoundingClientRect(),
                          r =
                            (t.clientY ||
                              ((t.touches || [])[0] || {}).clientY) - n.top;
                        (r -= 8) < 0
                          ? (r = 0)
                          : r > e.elements.speedBar.offsetHeight - 16 &&
                            (r = e.elements.speedBar.offsetHeight - 16);
                        var i =
                            -1 *
                            ((r = Math.floor(r)) /
                              (16 * (e.options.speedValues.length - 1)) -
                              1),
                          a = 1 / (e.options.speedValues.length - 1),
                          o = e.calculateSpeed(a, e.options.speedValues, i);
                        (E("".concat(e.name, "-speed-runtime")).innerHTML =
                          o + "0"),
                          (E("".concat(e.name, "-speed-cursor")).style.top =
                            r + "px"),
                          (e.clip.executionSpeed = o);
                      },
                      n = function n(r) {
                        var i;
                        (e.elements.listenerHelper.style.pointerEvents =
                          "none"),
                          r.preventDefault(),
                          S("mouseup", n, !1),
                          S("touchend", n, !1),
                          S("mousemove", t, !1),
                          S("touchmove", t, !1),
                          (E("".concat(e.name, "-speed-runtime")).innerHTML =
                            "Speed"),
                          (i = 1 == e.clip.speed ? "Normal" : e.clip.speed),
                          (e.elements.speedCurrent.innerHTML = i);
                      },
                      r = function (r) {
                        (e.elements.listenerHelper.style.pointerEvents =
                          "auto"),
                          r.preventDefault(),
                          t(r),
                          M("mouseup", n, !1),
                          M("touchend", n, !1),
                          M("mousemove", t, !1),
                          M("touchmove", t, !1);
                      };
                    e.elements.speedBarHelper.addEventListener(
                      "mousedown",
                      r,
                      !1
                    ),
                      e.elements.speedBarHelper.addEventListener(
                        "touchstart",
                        r,
                        { passive: !1 },
                        !1
                      );
                  })(this),
                  (function (e) {
                    e.elements.loopButton.onclick = e.activateLoop = function () {
                      var t =
                        !(arguments.length > 0 && void 0 !== arguments[0]) ||
                        arguments[0];
                      (e.settings.loopActivated = !e.settings.loopActivated),
                        e.elements.loopButton.classList.toggle("svg-selected"),
                        e.elements.loopBarStart.classList.toggle("m-fadeOut"),
                        e.elements.loopBarEnd.classList.toggle("m-fadeOut"),
                        e.elements.loopBarStart.classList.toggle("m-fadeIn"),
                        e.elements.loopBarStart.classList.toggle(
                          "".concat(e.name, "-hide")
                        ),
                        e.elements.loopBarEnd.classList.toggle("m-fadeIn"),
                        e.elements.loopBarEnd.classList.toggle(
                          "".concat(e.name, "-hide")
                        ),
                        _("".concat(e.name, "-loop-time")).classList.toggle(
                          "m-fadeOut"
                        ),
                        _("".concat(e.name, "-loop-time")).classList.toggle(
                          "m-fadeIn"
                        ),
                        _("".concat(e.name, "-loop-time")).classList.toggle(
                          "".concat(e.name, "-hide")
                        ),
                        (e.elements.loopEndTime.innerHTML =
                          e.settings.loopEndMillisecond),
                        (e.elements.loopStartTime.innerHTML =
                          e.settings.loopStartMillisecond),
                        (e.settings.needsUpdate = !0),
                        e.settings.loopActivated ||
                          ((e.elements.loopBar.style.left = "0%"),
                          (e.elements.loopBar.style.width = "100%"),
                          (e.settings.loopStartMillisecond = 0),
                          (e.settings.loopEndMillisecond = e.clip.duration),
                          (e.settings.loopLastPositionXPxls = 0),
                          (e.settings.loopLastPositionXPercentage = 0),
                          t &&
                            (e.elements.runningBar.style.width =
                              (e.clip.runTimeInfo.currentMillisecond /
                                e.clip.duration) *
                                100 +
                              "%"));
                    };
                  })(this),
                  (function (e) {
                    (k(
                      "".concat(e.name, "-controls")
                    ).onmouseover = function () {
                      e.settings.loopActivated &&
                        (e.elements.loopBarStart.classList.remove("m-fadeOut"),
                        e.elements.loopBarEnd.classList.remove("m-fadeOut"),
                        e.elements.loopBarStart.classList.add("m-fadeIn"),
                        e.elements.loopBarEnd.classList.add("m-fadeIn"));
                    }),
                      (k("".concat(e.name, "-controls")).onmouseout = function (
                        t
                      ) {
                        var n = t.toElement || t.relatedTarget || t.target;
                        O(this, n) ||
                          n === this ||
                          (e.settings.loopActivated &&
                            (e.elements.loopBarStart.classList.add("m-fadeOut"),
                            e.elements.loopBarEnd.classList.add("m-fadeOut"),
                            e.elements.loopBarStart.classList.remove(
                              "m-fadeIn"
                            ),
                            e.elements.loopBarEnd.classList.remove(
                              "m-fadeIn"
                            )));
                      });
                    var t = !1;
                    (k("".concat(e.name, "-controls")).ontouchstart = function (
                      n
                    ) {
                      var r = n.toElement || n.relatedTarget || n.target;
                      O(e.elements.statusButton, r) ||
                        r === e.elements.statusButton ||
                        O(e.elements.settingsButton, r) ||
                        r === e.elements.settingsButton ||
                        O(e.elements.fullScreenButton, r) ||
                        r === e.elements.fullScreenButton ||
                        O(e.elements.loopButton, r) ||
                        r === e.elements.loopButton ||
                        O(e.elements.totalBar, r) ||
                        r === e.elements.totalBar ||
                        ((e.elements.volumeControl.className = "".concat(
                          e.name,
                          "-volume-width-transition"
                        )),
                        (e.elements.volumeBar.className = "".concat(
                          e.name,
                          "-volume-width-transition"
                        )),
                        (e.elements.volumeBarHelper.className = "".concat(
                          e.name,
                          "-volume-width-transition"
                        )),
                        (e.elements.timeDisplay.className = "".concat(
                          e.name,
                          "-time-width-transition"
                        )),
                        (e.elements.volumeCursor.className = "".concat(
                          e.name,
                          "-volume-cursor-transition"
                        )),
                        (t = !0));
                    }),
                      window.addEventListener("touchstart", function (n) {
                        var r = n.toElement || n.relatedTarget || n.target;
                        O(k("".concat(e.name, "-controls")), r) ||
                          r === k("".concat(e.name, "-controls")) ||
                          (t &&
                            ((e.elements.volumeControl.className = ""),
                            (e.elements.volumeBar.className = ""),
                            (e.elements.volumeBarHelper.className = ""),
                            (e.elements.timeDisplay.className = ""),
                            (e.elements.volumeCursor.className = "")));
                      });
                  })(this),
                  (function (e) {
                    e.elements.fullScreenButton.addEventListener(
                      "click",
                      function () {
                        var t = e.clip.props.host.className.includes(
                          "full-screen"
                        );
                        e.clip.props.host !== e.options.host &&
                          !t &&
                          e.clip.props.host.appendChild(e.elements.mcPlayer),
                          e.clip.props.host !== e.options.host &&
                            t &&
                            e.options.host.appendChild(e.elements.mcPlayer),
                          t
                            ? e.exitFullscreen()
                            : e.launchIntoFullscreen(e.clip.props.host);
                      }
                    );
                  })(this),
                  (function (e) {
                    e.elements.donkeyclipButton.addEventListener(
                      "click",
                      function () {
                        var t = A(),
                          n = window.open(
                            "https://donkeyclip.com?u=".concat(t)
                          ),
                          r = e.clip.exportDefinition(),
                          i = e.clipClass;
                        window.addEventListener(
                          "message",
                          function (e) {
                            e.data === t &&
                              n.postMessage(
                                JSON.stringify({
                                  definition: r,
                                  clipClass: i,
                                  u: t,
                                }),
                                "*"
                              );
                          },
                          !1
                        );
                      }
                    );
                  })(this),
                  (function (e) {
                    if (
                      !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                        navigator.userAgent
                      )
                    ) {
                      var t = function () {
                          e.options.preview &&
                            (C(
                              "".concat(e.name, "-hover-display")
                            ).classList.toggle("m-fadeOut"),
                            C(
                              "".concat(e.name, "-hover-display")
                            ).classList.toggle("m-fadeIn"),
                            (e.elements.loopBar.onmousemove = r));
                        },
                        n = function n() {
                          e.options.preview &&
                            (t(),
                            (e.elements.loopBar.onmouseover = e.elements.loopBar.onmouseout = t),
                            (e.elements.loopBar.onmousemove = r),
                            I("mouseup", n, !1),
                            I("touchend", n, !1),
                            I("mousemove", r, !1),
                            I("touchmove", r, !1));
                        };
                      (e.elements.loopBar.onmouseover = e.elements.loopBar.onmouseout = t),
                        (e.elements.loopBar.onmousedown = function () {
                          e.options.preview &&
                            ((e.elements.loopBar.onmouseover = e.elements.loopBar.onmouseout = null),
                            (e.elements.loopBar.onmousemove = null),
                            T("mouseup", n, !1),
                            T("touchend", n, !1),
                            T("mousemove", r, !1),
                            T("touchmove", r, !1));
                        }),
                        (e.elements.loopBar.onmouseup = function () {
                          e.options.preview &&
                            (I("mouseup", n, !1),
                            I("touchend", n, !1),
                            I("mousemove", r, !1),
                            I("touchmove", r, !1),
                            (e.elements.loopBar.onmouseover = e.elements.loopBar.onmouseout = t),
                            (e.elements.loopBar.onmousemove = r));
                        });
                      var r = function (t) {
                        var n = t.clientX,
                          r = e.elements.loopBar.getBoundingClientRect();
                        if (
                          n - r.left + e.settings.loopLastPositionXPxls >
                            e.settings.loopLastPositionXPxls +
                              e.elements.loopBar.offsetWidth &&
                          !e.settings.resizeLoop
                        )
                          C("".concat(e.name, "-hover-millisecond")).innerHTML =
                            e.settings.loopEndMillisecond;
                        else if (n - r.left < 0 && !e.settings.resizeLoop)
                          C("".concat(e.name, "-hover-millisecond")).innerHTML =
                            e.settings.loopStartMillisecond;
                        else {
                          var i = n - r.left + e.settings.loopLastPositionXPxls;
                          i < 0 && (i = 0);
                          var a =
                              C("".concat(e.name, "-hover-display"))
                                .offsetWidth * e.previewScale,
                            o = a / 2,
                            s =
                              C("".concat(e.name, "-hover-display"))
                                .offsetWidth / 2,
                            u = i - s;
                          i - o < 0
                            ? (u = 0 - (a + o))
                            : i + o > e.elements.totalBar.offsetWidth &&
                              (u = e.elements.totalBar.offsetWidth - s - o);
                          var c = Math.round(
                            (i / e.elements.totalBar.offsetWidth) *
                              e.clip.duration
                          );
                          if (e.options.preview) {
                            var l = c / e.clip.duration;
                            e.previewClip.onProgress(l, c);
                          }
                          (C(
                            "".concat(e.name, "-hover-millisecond")
                          ).innerHTML = c),
                            (C("".concat(e.name, "-hover-display")).style.left =
                              u + "px");
                        }
                      };
                    }
                  })(this),
                  (function (e) {
                    document.addEventListener("fullscreenchange", function () {
                      e.elements.mcPlayer.classList.toggle("full-screen"),
                        e.clip.props.host.classList.toggle("full-screen"),
                        e.options.preview && e.setPreviewDimentions();
                    }),
                      document.addEventListener(
                        "webkitfullscreenchange",
                        function () {
                          e.elements.mcPlayer.classList.toggle("full-screen"),
                            e.clip.props.host.classList.toggle("full-screen"),
                            e.options.preview && e.setPreviewDimentions();
                        }
                      ),
                      document.addEventListener(
                        "mozfullscreenchange",
                        function () {
                          e.elements.mcPlayer.classList.toggle("full-screen"),
                            e.clip.props.host.classList.toggle("full-screen"),
                            e.options.preview && e.setPreviewDimentions();
                        }
                      ),
                      document.addEventListener(
                        "MSFullscreenChange",
                        function () {
                          e.elements.mcPlayer.classList.toggle("full-screen"),
                            e.clip.props.host.classList.toggle("full-screen"),
                            e.options.preview && e.setPreviewDimentions();
                        }
                      ),
                      P("body")[0].addEventListener("click", function (t) {
                        if (
                          t.target.className ===
                          "".concat(e.name, "-speed-value")
                        ) {
                          var n = t.target.dataset.speedValue;
                          (e.clip.executionSpeed = t.target.dataset.speedValue),
                            (n = 1 == e.clip.speed ? "Normal" : e.clip.speed),
                            (e.elements.speedCurrent.innerHTML = n);
                          var r = 1 / (e.options.speedValues.length - 1),
                            i =
                              -1 *
                              (t.target.dataset.zone * r - 1) *
                              (16 * (e.options.speedValues.length - 1));
                          B("".concat(e.name, "-speed-cursor")).style.top =
                            i + "px";
                        }
                      });
                  })(this);
              },
            },
            {
              key: "launchIntoFullscreen",
              value: function (e) {
                this.options.preview && this.setPreviewDimentions(),
                  e.requestFullscreen
                    ? e.requestFullscreen()
                    : e.mozRequestFullScreen
                    ? e.mozRequestFullScreen()
                    : e.webkitRequestFullscreen
                    ? e.webkitRequestFullscreen()
                    : e.msRequestFullscreen && e.msRequestFullscreen();
              },
            },
            {
              key: "exitFullscreen",
              value: function () {
                document.exitFullscreen
                  ? document.exitFullscreen()
                  : document.mozCancelFullScreen
                  ? document.mozCancelFullScreen()
                  : document.webkitExitFullscreen &&
                    document.webkitExitFullscreen();
              },
            },
            {
              key: "setTheme",
              value: function () {
                this.options.theme.replace(/\s\s+/g, " "),
                  this.options.theme.trim(),
                  this.options.theme.includes("on-top") ||
                    this.options.theme.includes("position-bottom") ||
                    (this.options.theme += " on-top");
                var e = {};
                for (var t in this.options.theme.split(" ")) {
                  var n = u(this.options.theme.split(" ")[t], this.name);
                  for (var r in n || {}) e[r] = n[r];
                }
                var i = (function (e, t, n) {
                    return "\n.background {\n  background-color: black;\n  width:100%;\n  height:"
                      .concat(
                        e["background-height"],
                        ";;\n  position:absolute;\n  top:0px;\n  left:0px;\n  z-index:-2000;\n}\n\n.full-screen #"
                      )
                      .concat(
                        t,
                        "-controls {\n  position:fixed;\n  left:0px;\n  bottom:0px;\n}\n\n.full-screen #"
                      )
                      .concat(
                        t,
                        "-settings-panel {\n  position:fixed;\n  bottom: 45px;\n}\n\n.svg, .svg path {\n  fill: "
                      )
                      .concat(
                        e["svg-color"],
                        ";\n}\n\n.svg.arrow {\n  stroke: "
                      )
                      .concat(
                        e["svg-color"],
                        ";\n}\n\n.pointer-event-panel {\n  height: "
                      )
                      .concat(
                        e["pointer-event-panel-height"],
                        ";\n  display:flex;\n  align-items:center;\n  justify-content:center;\n}\n#"
                      )
                      .concat(
                        t,
                        "-pointer-event-panel{\n  width:100%;\n  position:absolute;\n  z-index:100;\n}\n#"
                      )
                      .concat(
                        t,
                        "-listener-helper{\n  width:100%;\n  height:calc( 100% - 45px );\n  position:absolute;\n  z-index:110;\n}\n.svg-selected svg{\n  fill: "
                      )
                      .concat(e["svg-selected-color"], ";\n  stroke: ")
                      .concat(e["svg-selected-color"], ";\n}\n#")
                      .concat(t, "-hover-display{\n    border: ")
                      .concat(
                        e["preview-border"],
                        ";\n    display: flex;\n    overflow:hidden;\n    background-color: black;\n    position: absolute;\n    bottom: 14px;\n    left: 0px;\n    align-items: flex-end;\n    justify-content: center;\n}\n\n#"
                      )
                      .concat(t, "-hover-millisecond {\n  background-color: ")
                      .concat(
                        e["hms-background-color"],
                        ";\n  padding:3px;\n  height:18px;\n  margin:0px;\n  line-height:12px;\n  font-size:10px;\n  text-align: center;\n  min-width:20px;\n  max-width:100px;\n  z-index:2;\n}\n#"
                      )
                      .concat(t, ",\n#")
                      .concat(t, " ::before,\n#")
                      .concat(t, " :::after,\n#")
                      .concat(t, " div,\n#")
                      .concat(t, " p,\n#")
                      .concat(t, " span,\n#")
                      .concat(t, " ul,\n#")
                      .concat(
                        t,
                        " li {\n  font-weight: 400;\n  line-height: 1.9 !important;\n  color: "
                      )
                      .concat(
                        e.color,
                        ';\n  font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;\n  box-sizing:border-box;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n#'
                      )
                      .concat(
                        t,
                        " {\n  line-height: 1.9;\n  font-size: 12px;\n  overflow:hidden;\n  height: calc(100% + "
                      )
                      .concat(
                        e["controls-position"],
                        ");\n  width:100%;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  color: "
                      )
                      .concat(
                        e.color,
                        ";\n  pointer-events:auto !important;\n}\n\n.force-show-controls {\n  height: 44px !important;\n  overflow:unset !important;\n}\n\n"
                      )
                      .concat(
                        n.theme.includes("position-bottom")
                          ? "\n    #".concat(
                              t,
                              "-controls {\n      height: 44px !important;\n      overflow:unset !important;\n    }\n    "
                            )
                          : "#"
                              .concat(t, ":hover #")
                              .concat(
                                t,
                                "-controls {\n  height: 44px;\n  overflow:unset;\n}\n"
                              ),
                        "\n\n#"
                      )
                      .concat(t, ":hover {\n  pointer-events:none;\n}\n\n#")
                      .concat(
                        t,
                        "-settings-speed-hide {\n  text-align:right;\n}\n\n.grad {\n  background-image: linear-gradient(\n    rgba(100,100,100,00.01),\n    rgba(100,100,100,00.02),\n    rgba(100,100,100,00.03),\n    rgba(100,100,100,0.04),\n    rgba(100,100,100,0.05),\n    rgba(0,0,0,0.06),\n    rgba(0,0,0,0.07),\n    rgba(0,0,0,0.08),\n    rgba(0,0,0,0.09),\n    rgba(0,0,0,0.1),\n    rgba(0,0,0,0.2),\n    rgba(0,0,0,0.3),\n    rgba(0,0,0,0.4),\n    rgba(0,0,0,0.4),\n    rgba(0,0,0,0.5),\n    rgba(0,0,0,0.6),\n    rgba(0,0,0,0.7),\n    rgba(0,0,0,0.8),\n    rgba(0,0,0,0.9),\n    rgba(0,0,0,1)\n  );\n  position:absolute;\n  width:100%;\n  height:"
                      )
                      .concat(
                        e["grad-height"],
                        ";\n  left:0px;\n  bottom:0px;\n  z-index:100;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-controls {\n  touch-action: none;\n  background-color: "
                      )
                      .concat(e["background-color"], ";\n  border: ")
                      .concat(
                        e["controls-border"],
                        ";\n  position: absolute;\n  bottom: "
                      )
                      .concat(
                        e["controls-bottom"],
                        ";\n  left: 0px;\n  width: 100%;\n  z-index:100;\n  height: 0px;\n  overflow:hidden;\n  display:flex;\n  border-radius: 6px;\n  align-items:center;\n  -webkit-transition: height 0.2s ease;\n  -moz-transition: height 0.2s ease;\n  transition: height 0.2s ease;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-totalbar {\n  width: calc(100% - 20px);\n  height: 5px;\n  margin: 0px 10px 0px 10px;\n  background-color: "
                      )
                      .concat(
                        e["totalbar-color"],
                        ";\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-loopbar {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0px;\n  left: 0px;\n  background-color: "
                      )
                      .concat(e["loopbar-color"], ";\n}\n\n.")
                      .concat(t, "-loop-boundaries::before {\n  ")
                      .concat(e["loopbar-boundaries-style::before"], "\n\n}\n.")
                      .concat(
                        t,
                        "-loop-boundaries {\n  transform:translate(-50%,-37%);\n  position:absolute;\n  width:18px;\n  background-color:"
                      )
                      .concat(
                        e["loopbar-boundaries-color"],
                        ";\n  height:18px;\n  border-radius:10px;\n  z-index:40;\n  "
                      )
                      .concat(e["loopbar-boundaries-style"], "\n}\n\n.")
                      .concat(t, "-loop-boundaries::after {\n  ")
                      .concat(
                        e["loopbar-boundaries-style::after"],
                        "\n\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-helperbar {\n  position: absolute;\n  height: 20px;\n  top: -10px;\n  left: 0px;\n  right: 0px;\n  z-index:2;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-runningbar {\n  position: relative;\n  width: 0px;\n  max-width:100%;\n  height: 100%;\n  background-color: "
                      )
                      .concat(e["runningbar-color"], ";\n}\n\n#")
                      .concat(
                        t,
                        "-cursor {\n  transform:translate(50%,-36%);\n  right: 0px;\n  overflow:hidden;\n  top: 0px;\n  width: 0px;\n  height: 0px;\n  position: absolute;\n  background-color: "
                      )
                      .concat(
                        e["cursor-color"],
                        ";\n  border-radius: 10px;\n  z-index: 5;\n}\n\n#"
                      )
                      .concat(t, "-cursor::before {\n  ")
                      .concat(e["cursor-style::before"], "\n}\n\n#")
                      .concat(t, "-cursor::after {\n  ")
                      .concat(e["cursor-style::after"], "\n}\n\n#")
                      .concat(t, "-left-controls,#")
                      .concat(
                        t,
                        "-right-controls {\n    display: flex;\n    align-items:center;\n    height: 100%;\n    padding: 5px 5px 0px;\n}\n#"
                      )
                      .concat(
                        t,
                        "-right-controls {\n  position:absolute;\n  right:0px;\n}\n\n\n#"
                      )
                      .concat(t, "-left-controls > div,#")
                      .concat(
                        t,
                        "-right-controls > div {\n    display: inline-flex;\n    align-items:center;\n   margin:0 10px 0 10px;\n}\n\n\n\n/*#"
                      )
                      .concat(
                        t,
                        "-time-display {\n  display: table;\n  text-align: center;\n  width: auto;\n  height: 34px;\n  position: absolute;\n  left: 90px;\n  -webkit-transition: left 0.1s ease;\n  -moz-transition: left 0.1s ease;\n  transition: left 0.1s ease;\n}\n*/\n#"
                      )
                      .concat(
                        t,
                        "-time-display span {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n#"
                      )
                      .concat(t, "-status-btn {\n  opacity: ")
                      .concat(e["button-opacity"], ";\n}\n#")
                      .concat(
                        t,
                        "-status-btn svg{\n  width:20px;\n  height:18px;\n}\n#"
                      )
                      .concat(t, "-volume {\n  opacity: ")
                      .concat(
                        e["button-opacity"],
                        ";\n  position: relative;\n}\n#"
                      )
                      .concat(
                        t,
                        "-volume-btn {\n  width: 20px;\n  height: 15px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-volumebar {\n  width: 0px;\n  height: 3px;\n  background-color: "
                      )
                      .concat(
                        e["loopbar-color"],
                        ";\n  -webkit-transition: left 0.1s ease;\n  -moz-transition: left 0.1s ease;\n  transition: left 0.1s ease;\n  position:relative;\n  left:5px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-volumebar-helper {\n  position: absolute;\n    width: 0px;\n    height: 15px;\n    bottom: 0px;\n    z-index: 10;\n    left: 25px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-volumebar-active {\n  position: relative;\n  width: 0%;\n  height: 100%;\n  background-color: "
                      )
                      .concat(
                        e.color,
                        ";\n  position:relative;\n  bottom:0px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-volume-cursor {\n  transform:translate(50%,-36%);\n  right: 0px;\n  top: 0px;\n  width: 0px;\n  height: 0px;\n  position: absolute;\n  background-color: "
                      )
                      .concat(
                        e.color,
                        ";\n  border-radius: 10px;\n  z-index: 5;\n}\n\n."
                      )
                      .concat(
                        t,
                        "-loopbar-time {\n  width:auto;\n  height:12px;\n  background-color:"
                      )
                      .concat(
                        e["background-color"],
                        ";\n  line-height:10px;\n  font-size:10px;\n}\n\n#"
                      )
                      .concat(t, "-loop-time {\n  margin: 7px;\n}\n\n#")
                      .concat(
                        t,
                        "-dc-btn {\n    background-repeat: no-repeat;\n    background-size: 100% 100%;\n    width: 20px;\n    height: 15px;\n    margin: 7px 10px 5px 0px;\n    transform: scale(1.5,1.5);\n}\n\n#"
                      )
                      .concat(t, "-loop-btn {\n  opacity: ")
                      .concat(
                        e["button-opacity"],
                        ";\n  display:flex;\n  align-items:center;\n}\n\n\n#"
                      )
                      .concat(t, "-settings-btn {\n  opacity: ")
                      .concat(e["button-opacity"], ";\n}\n\n#")
                      .concat(t, "-full-screen-btn {\n  opacity: ")
                      .concat(e["button-opacity"], ";\n}\n\n.")
                      .concat(t, "-speed-btn {\n  opacity: ")
                      .concat(e["button-opacity"], ";\n  height: 14px;\n}\n\n#")
                      .concat(
                        t,
                        "-settings-panel {\n  touch-action: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index:101;\n  background-color: "
                      )
                      .concat(e["settings-background-color"], ";\n  bottom: ")
                      .concat(e["settings-panel-bottom"], ";\n  border: ")
                      .concat(
                        e.border,
                        ";\n  right: 8px;\n  width: 167px;\n  padding: 5px;\n  margin: 0px;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n."
                      )
                      .concat(t, "-hide {\n  display:none !important;\n}\n\n#")
                      .concat(
                        t,
                        "-speed-value-bar {\n  position: relative;\n  width: 5px;\n  background-color: "
                      )
                      .concat(
                        e["speedbar-color"],
                        ";\n  display: inline-block;\n  box-sizing: border-box;\n  height: "
                      )
                      .concat(
                        16 * n.speedValues.length,
                        "px;\n  float: left;\n  margin-right:15px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-speed-value-helperbar {\n  position: absolute;\n  width: 25px;\n  height: "
                      )
                      .concat(
                        16 * n.speedValues.length,
                        "px;\n  float: left;\n  left: 18px;\n  z-index:10;\n}\n\n\n#"
                      )
                      .concat(t, "-speed-value-bar:hover,\n#")
                      .concat(
                        t,
                        "-speed-value-helperbar {\n  cursor: pointer;\n}\n\n#"
                      )
                      .concat(t, "-volumebar:hover,\n#")
                      .concat(t, "-volumebar-helper:hover,\n#")
                      .concat(t, "-volume-btn:hover,\n#")
                      .concat(t, "-volumebar:active,\n#")
                      .concat(t, "-volumebar-helper:active,\n#")
                      .concat(
                        t,
                        "-volume-btn:active {\n  cursor:pointer;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-speed-cursor {\n  position: absolute;\n  background-color: "
                      )
                      .concat(
                        e["speedbar-cursor-color"],
                        ";\n  top: 0px;\n  left: 0px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-speed-cursor div {\n  position: absolute;\n  background-color: "
                      )
                      .concat(
                        e["speedbar-cursor-color"],
                        ";\n  left: -2.5px;\n  top: -4px;\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n}\n\n#"
                      )
                      .concat(t, "-time-separator{\n  margin:0 3px;\n}\n#")
                      .concat(
                        t,
                        "-speed-cursor:hover {\n  cursor: pointer;\n}\n\n."
                      )
                      .concat(
                        t,
                        "-speed-value-step {\n  width: 16px;\n  background-color: "
                      )
                      .concat(
                        e["speedbar-color"],
                        ";\n  display: inline-block;\n  box-sizing: border-box;\n  height: 2px;\n  margin-top: 7px;\n  margin-bottom: 7px;\n  float: left;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-speed-value {\n  display: inline-block;\n  box-sizing: border-box;\n  height: "
                      )
                      .concat(
                        16 * n.speedValues.length,
                        "px;\n  text-align: left;\n}\n\n."
                      )
                      .concat(
                        t,
                        "-speed-value {\n  box-sizing: border-box;\n  height: 16px;\n  font-size: 12px;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-indicator {\n  font-size: 8px !important;\n  position: absolute;\n  bottom: -3px;\n  color: "
                      )
                      .concat(e.color, ";\n}\n\n/*#")
                      .concat(t, "-speed-settings {\n  height: ")
                      .concat(
                        16 * n.speedValues.length + 32 + 10 - 2,
                        "px;\n}*/\n\n#"
                      )
                      .concat(t, "-speed-settings li.no-hover { \n  height: ")
                      .concat(
                        16 * n.speedValues.length + 10 - 2,
                        "px !important; \n}\n#"
                      )
                      .concat(t, "-settings-panel.")
                      .concat(
                        t,
                        "-settings-speed-panel {\n  overflow: hidden;\n  width: 92px;\n  position:absolute;\n  z-index:120;\n  /*height: "
                      )
                      .concat(
                        16 * n.speedValues.length + 32 + 20,
                        "px;*/\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(t, "-settings-panel.")
                      .concat(t, "-settings-speed-panel .")
                      .concat(t, "-speed-btn {\n  float: left;\n}\n\n.")
                      .concat(
                        t,
                        "-settings-speed-panel ul:first-child {\n  text-align: right;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-speed-current {\n  float: right;\n  padding-right: 10px\n}\n\n#"
                      )
                      .concat(t, "-settings-panel .")
                      .concat(t, "-speed-btn {\n  float: right;\n}\n\n#")
                      .concat(
                        t,
                        "-settings-panel ul {\n  width: 100%;\n  margin: 0px;\n  padding: 0px;\n  overflow: hidden;\n}\n\n#"
                      )
                      .concat(t, "-settings-panel.")
                      .concat(
                        t,
                        "-settings-speed-panel ul li {\n  min-width: 70px;\n  display: flex;\n  height: 32px;\n  align-items: center;\n  justify-content:center;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-settings-panel ul li.no-hover:hover {\n  background-color: transparent;\n  cursor: default;\n}\n\ndiv."
                      )
                      .concat(t, "-speed-value:hover {\n  background-color: ")
                      .concat(e["hover-color"], ";\n  cursor: pointer;\n}\n\n#")
                      .concat(
                        t,
                        "-settings-panel ul li {\n  /*position: relative;\n  width: 100%;\n  min-width: 154px;*/\n  list-style-type: none;\n  margin: 0px;\n  padding: 5px;\n  display: flex;\n  height:32px;\n  align-items:center;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-settings-panel ul li label {\n  margin: 0px;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 32px;\n  height: 18px;\n}\n\n.switch input {\n  display: none;\n}\n\n.settings-switch {\n  position: absolute;\n  right: 24px;\n}\n\n.settings-switch::after {\n  clear: both;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: "
                      )
                      .concat(
                        e["slider-off-color"],
                        ';\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 16px;\n  width: 16px;\n  left: 1px;\n  bottom: 1px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked+.slider {\n  background-color: '
                      )
                      .concat(
                        e["slider-on-color"],
                        ";\n}\n\ninput:focus+.slider {\n  box-shadow: 0 0 1px "
                      )
                      .concat(
                        e["slider-on-color"],
                        ";\n}\n\ninput:checked+.slider:before {\n  -webkit-transform: translateX(16px);\n  -ms-transform: translateX(16px);\n  transform: translateX(16px);\n}\n\n\n/* Rounded sliders */\n\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n\n.m-fadeOut {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s linear 300ms, opacity 300ms;\n}\n\n.m-fadeIn {\n  visibility: visible;\n  opacity: 1;\n  transition: visibility 0s linear 0s, opacity 300ms;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-settings-panel ul li:hover {\n  background-color: "
                      )
                      .concat(e["hover-color"], ";\n  cursor: pointer;\n}\n\n#")
                      .concat(
                        t,
                        "-settings-panel ul li label:hover {\n  cursor: pointer;\n}\n\n#"
                      )
                      .concat(t, "-loopbar:hover {\n  cursor: pointer;\n}\n\n#")
                      .concat(
                        t,
                        "-status-btn:hover {\n  cursor: pointer;\n}\n\n#"
                      )
                      .concat(t, "-controls:active #")
                      .concat(t, "-cursor,\n#")
                      .concat(t, "-controls:hover #")
                      .concat(
                        t,
                        "-cursor  {\n  width: 16px;\n  height: 16px;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(t, "-volume .")
                      .concat(
                        t,
                        "-volume-cursor-transition {\n  width: 12px;\n  height: 12px;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(t, "-volume .")
                      .concat(
                        t,
                        "-volume-width-transition\n {\n  width: 50px;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(t, "-time-display.")
                      .concat(
                        t,
                        "-time-width-transition {\n  position:relative;\n  left: 10px;\n  -webkit-transition: left 0.3s ease;\n  -moz-transition: left 0.3s ease;\n  transition: left 0.3s ease;\n}\n\n#"
                      )
                      .concat(t, "-settings-speed:hover .")
                      .concat(
                        t,
                        "-speed-btn {\n  opacity: 1;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-status-btn:hover {\n  opacity: 1;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(t, "-loop-btn:hover,\n#")
                      .concat(
                        t,
                        "-dc-btn:hover\n {\n  cursor: pointer;\n  opacity: 1;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n#"
                      )
                      .concat(
                        t,
                        "-settings-btn:hover {\n  cursor: pointer;\n  opacity: 1;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n#"
                      )
                      .concat(
                        t,
                        "-full-screen-btn:hover {\n  cursor: pointer;\n  opacity: 1;\n  -webkit-transition: all 0.3s ease;\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n}\n"
                      )
                      .concat(e["theme-style"], "\n");
                  })(e, this.name, this.options),
                  a = L("style");
                a.styleSheet
                  ? (a.styleSheet.cssText = i)
                  : a.appendChild(document.createTextNode(i)),
                  R("head")[0].appendChild(a);
              },
            },
            {
              key: "setSpeed",
              value: function () {
                var e,
                  t = this;
                (e = 1 == this.clip.speed ? "Normal" : this.clip.speed),
                  (this.elements.speedCurrent.innerHTML = e);
                var n =
                  -1 *
                  ((function () {
                    for (var e = 0; e < t.options.speedValues.length - 1; e++)
                      if (
                        t.options.speedValues[e] <= t.clip.speed &&
                        t.options.speedValues[e + 1] > t.clip.speed
                      )
                        return (
                          e +
                          Math.abs(
                            (t.clip.speed - t.options.speedValues[e]) /
                              (t.options.speedValues[e] -
                                t.options.speedValues[e + 1])
                          )
                        );
                  })() *
                    (1 / (this.options.speedValues.length - 1)) -
                    1) *
                  (this.options.speedValues.length - 1) *
                  16;
                j("".concat(this.name, "-speed-cursor")).style.top = n + "px";
              },
            },
            {
              key: "calculateSpeed",
              value: function (e, t, n) {
                var r = Math.floor(n / e);
                if (r === t.length - 1) return t[r].toFixed(1);
                var i = (
                  ((n / e) % 1) * Math.abs(t[r] - t[r + 1]) +
                  t[r]
                ).toFixed(1);
                return 0 == i ? "0.0" : i;
              },
            },
            {
              key: "createPreviewDisplay",
              value: function () {
                this.previewClip = this.clip.paste(
                  j("".concat(this.name, "-hover-display"))
                );
                var e = j("".concat(this.name, "-hover-display"));
                (window.previewClip = this.previewClip),
                  (e.style.position = "absolute"),
                  (e.style.zIndex = 1),
                  this.setPreviewDimentions();
              },
            },
            {
              key: "setPreviewDimentions",
              value: function () {
                var e = this.clip.props.host,
                  t = this.previewClip.ownClip.props.host,
                  n = e.offsetWidth,
                  r = e.offsetHeight,
                  i = n * this.previewScale;
                i > 300 && ((i = 300), (this.previewScale = i / n)),
                  (j("".concat(this.name, "-hover-display")).style.width =
                    n + "px"),
                  (j("".concat(this.name, "-hover-display")).style.height =
                    r + "px"),
                  (t.style.transform = "scale(".concat(this.previewScale, ")")),
                  (t.style.transformOrigin = "center bottom"),
                  (t.style.boxSizing = "border-box");
              },
            },
          ]) && t(n.prototype, r),
          e
        );
      })();
    })(n(6));
  },
  function (e, t, n) {
    (function (t, r) {
      const i = n(49),
        { PassThrough: a, Readable: o } = n(15),
        s = n(50),
        u = { bubbleErrors: !0, objectMode: !0 };
      e.exports = (...e) => {
        let n, c;
        "function" == typeof e[e.length - 1] && (c = e.pop()),
          "object" != typeof e[e.length - 1] ||
            Array.isArray(e[e.length - 1]) ||
            "function" == typeof e[e.length - 1].pipe ||
            (n = e.pop()),
          Array.isArray(e[0]) && (e = e[0]);
        let l,
          f = e[0],
          p = e[e.length - 1];
        (n = Object.assign({}, u, n)),
          f
            ? (l =
                f.writable && p.readable
                  ? i(n, f, p)
                  : 1 === e.length
                  ? new o(n).wrap(e[0])
                  : f.writable
                  ? f
                  : p.readable
                  ? p
                  : new a(n))
            : ((l = f = p = new a(n)), t.nextTick(() => l.end()));
        for (const [t, n] of e.entries()) {
          const r = e[t + 1];
          r && n.pipe(r), n !== l && n.on("error", (e) => l.emit("error", e));
        }
        if (c) {
          let e = !1;
          const t = (t) => {
            e || ((e = !0), c(t));
          };
          l.on("error", t), p.on("finish", () => t()), p.on("close", () => t());
        }
        return s(
          l,
          () =>
            new r((e, t) => {
              l.on("error", t), p.on("finish", e), p.on("close", e);
            })
        );
      };
    }.call(this, n(0), n(11)));
  },
  function (e, t, n) {
    "use strict";
    const { Transform: r } = n(51),
      { StringDecoder: i } = n(10),
      a = Symbol("last"),
      o = Symbol("decoder");
    function s(e, t, n) {
      var r;
      if (this.overflow) {
        if (1 === (r = this[o].write(e).split(this.matcher)).length) return n();
        r.shift(), (this.overflow = !1);
      } else (this[a] += this[o].write(e)), (r = this[a].split(this.matcher));
      this[a] = r.pop();
      for (var i = 0; i < r.length; i++)
        try {
          c(this, this.mapper(r[i]));
        } catch (e) {
          return n(e);
        }
      if (
        ((this.overflow = this[a].length > this.maxLength),
        this.overflow && !this.skipOverflow)
      )
        return n(new Error("maximum buffer reached"));
      n();
    }
    function u(e) {
      if (((this[a] += this[o].end()), this[a]))
        try {
          c(this, this.mapper(this[a]));
        } catch (t) {
          return e(t);
        }
      e();
    }
    function c(e, t) {
      void 0 !== t && e.push(t);
    }
    function l(e) {
      return e;
    }
    e.exports = function (e, t, n) {
      switch (
        ((e = e || /\r?\n/), (t = t || l), (n = n || {}), arguments.length)
      ) {
        case 1:
          "function" == typeof e
            ? ((t = e), (e = /\r?\n/))
            : "object" != typeof e ||
              e instanceof RegExp ||
              ((n = e), (e = /\r?\n/));
          break;
        case 2:
          "function" == typeof e
            ? ((n = t), (t = e), (e = /\r?\n/))
            : "object" == typeof t && ((n = t), (t = l));
      }
      ((n = Object.assign({}, n)).transform = s),
        (n.flush = u),
        (n.readableObjectMode = !0);
      const c = new r(n);
      return (
        (c[a] = ""),
        (c[o] = new i("utf8")),
        (c.matcher = e),
        (c.mapper = t),
        (c.maxLength = n.maxLength),
        (c.skipOverflow = n.skipOverflow),
        (c.overflow = !1),
        c
      );
    };
  },
  function (e, t, n) {
    "use strict";
    e.exports = (e) => {
      if ("string" != typeof e)
        throw new TypeError("Expected a string, got " + typeof e);
      return 65279 === e.charCodeAt(0) ? e.slice(1) : e;
    };
  },
  function (e, t) {
    e.exports =
      "\n1\n00:00:00,001 --\x3e 00:00:05,000\nThese are some captions\nasdfsafd\nasdfsafds\n\n2\n00:00:05,000 --\x3e 00:00:10,000\nThese are some other captions\n\n3\n00:00:12,000 --\x3e 00:00:15,000\nThese are some other captions goes here sadfsad dsaf sadf sadf sadf\n\n4\n00:01:05,000 --\x3e 00:01:10,000\nThese are some other captions goes here.\n";
  },
  function (e, t) {},
  function (e, t, n) {
    (function (e) {
      function n(e, t) {
        for (var n = 0, r = e.length - 1; r >= 0; r--) {
          var i = e[r];
          "." === i
            ? e.splice(r, 1)
            : ".." === i
            ? (e.splice(r, 1), n++)
            : n && (e.splice(r, 1), n--);
        }
        if (t) for (; n--; n) e.unshift("..");
        return e;
      }
      function r(e, t) {
        if (e.filter) return e.filter(t);
        for (var n = [], r = 0; r < e.length; r++)
          t(e[r], r, e) && n.push(e[r]);
        return n;
      }
      (t.resolve = function () {
        for (var t = "", i = !1, a = arguments.length - 1; a >= -1 && !i; a--) {
          var o = a >= 0 ? arguments[a] : e.cwd();
          if ("string" != typeof o)
            throw new TypeError("Arguments to path.resolve must be strings");
          o && ((t = o + "/" + t), (i = "/" === o.charAt(0)));
        }
        return (
          (i ? "/" : "") +
            (t = n(
              r(t.split("/"), function (e) {
                return !!e;
              }),
              !i
            ).join("/")) || "."
        );
      }),
        (t.normalize = function (e) {
          var a = t.isAbsolute(e),
            o = "/" === i(e, -1);
          return (
            (e = n(
              r(e.split("/"), function (e) {
                return !!e;
              }),
              !a
            ).join("/")) ||
              a ||
              (e = "."),
            e && o && (e += "/"),
            (a ? "/" : "") + e
          );
        }),
        (t.isAbsolute = function (e) {
          return "/" === e.charAt(0);
        }),
        (t.join = function () {
          var e = Array.prototype.slice.call(arguments, 0);
          return t.normalize(
            r(e, function (e, t) {
              if ("string" != typeof e)
                throw new TypeError("Arguments to path.join must be strings");
              return e;
            }).join("/")
          );
        }),
        (t.relative = function (e, n) {
          function r(e) {
            for (var t = 0; t < e.length && "" === e[t]; t++);
            for (var n = e.length - 1; n >= 0 && "" === e[n]; n--);
            return t > n ? [] : e.slice(t, n - t + 1);
          }
          (e = t.resolve(e).substr(1)), (n = t.resolve(n).substr(1));
          for (
            var i = r(e.split("/")),
              a = r(n.split("/")),
              o = Math.min(i.length, a.length),
              s = o,
              u = 0;
            u < o;
            u++
          )
            if (i[u] !== a[u]) {
              s = u;
              break;
            }
          var c = [];
          for (u = s; u < i.length; u++) c.push("..");
          return (c = c.concat(a.slice(s))).join("/");
        }),
        (t.sep = "/"),
        (t.delimiter = ":"),
        (t.dirname = function (e) {
          if (("string" != typeof e && (e += ""), 0 === e.length)) return ".";
          for (
            var t = e.charCodeAt(0),
              n = 47 === t,
              r = -1,
              i = !0,
              a = e.length - 1;
            a >= 1;
            --a
          )
            if (47 === (t = e.charCodeAt(a))) {
              if (!i) {
                r = a;
                break;
              }
            } else i = !1;
          return -1 === r
            ? n
              ? "/"
              : "."
            : n && 1 === r
            ? "/"
            : e.slice(0, r);
        }),
        (t.basename = function (e, t) {
          var n = (function (e) {
            "string" != typeof e && (e += "");
            var t,
              n = 0,
              r = -1,
              i = !0;
            for (t = e.length - 1; t >= 0; --t)
              if (47 === e.charCodeAt(t)) {
                if (!i) {
                  n = t + 1;
                  break;
                }
              } else -1 === r && ((i = !1), (r = t + 1));
            return -1 === r ? "" : e.slice(n, r);
          })(e);
          return (
            t &&
              n.substr(-1 * t.length) === t &&
              (n = n.substr(0, n.length - t.length)),
            n
          );
        }),
        (t.extname = function (e) {
          "string" != typeof e && (e += "");
          for (
            var t = -1, n = 0, r = -1, i = !0, a = 0, o = e.length - 1;
            o >= 0;
            --o
          ) {
            var s = e.charCodeAt(o);
            if (47 !== s)
              -1 === r && ((i = !1), (r = o + 1)),
                46 === s
                  ? -1 === t
                    ? (t = o)
                    : 1 !== a && (a = 1)
                  : -1 !== t && (a = -1);
            else if (!i) {
              n = o + 1;
              break;
            }
          }
          return -1 === t ||
            -1 === r ||
            0 === a ||
            (1 === a && t === r - 1 && t === n + 1)
            ? ""
            : e.slice(t, r);
        });
      var i =
        "b" === "ab".substr(-1)
          ? function (e, t, n) {
              return e.substr(t, n);
            }
          : function (e, t, n) {
              return t < 0 && (t = e.length + t), e.substr(t, n);
            };
    }.call(this, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (t.byteLength = function (e) {
      var t = c(e),
        n = t[0],
        r = t[1];
      return (3 * (n + r)) / 4 - r;
    }),
      (t.toByteArray = function (e) {
        var t,
          n,
          r = c(e),
          o = r[0],
          s = r[1],
          u = new a(
            (function (e, t, n) {
              return (3 * (t + n)) / 4 - n;
            })(0, o, s)
          ),
          l = 0,
          f = s > 0 ? o - 4 : o;
        for (n = 0; n < f; n += 4)
          (t =
            (i[e.charCodeAt(n)] << 18) |
            (i[e.charCodeAt(n + 1)] << 12) |
            (i[e.charCodeAt(n + 2)] << 6) |
            i[e.charCodeAt(n + 3)]),
            (u[l++] = (t >> 16) & 255),
            (u[l++] = (t >> 8) & 255),
            (u[l++] = 255 & t);
        2 === s &&
          ((t = (i[e.charCodeAt(n)] << 2) | (i[e.charCodeAt(n + 1)] >> 4)),
          (u[l++] = 255 & t));
        1 === s &&
          ((t =
            (i[e.charCodeAt(n)] << 10) |
            (i[e.charCodeAt(n + 1)] << 4) |
            (i[e.charCodeAt(n + 2)] >> 2)),
          (u[l++] = (t >> 8) & 255),
          (u[l++] = 255 & t));
        return u;
      }),
      (t.fromByteArray = function (e) {
        for (
          var t, n = e.length, i = n % 3, a = [], o = 0, s = n - i;
          o < s;
          o += 16383
        )
          a.push(l(e, o, o + 16383 > s ? s : o + 16383));
        1 === i
          ? ((t = e[n - 1]), a.push(r[t >> 2] + r[(t << 4) & 63] + "=="))
          : 2 === i &&
            ((t = (e[n - 2] << 8) + e[n - 1]),
            a.push(r[t >> 10] + r[(t >> 4) & 63] + r[(t << 2) & 63] + "="));
        return a.join("");
      });
    for (
      var r = [],
        i = [],
        a = "undefined" != typeof Uint8Array ? Uint8Array : Array,
        o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        s = 0,
        u = o.length;
      s < u;
      ++s
    )
      (r[s] = o[s]), (i[o.charCodeAt(s)] = s);
    function c(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var n = e.indexOf("=");
      return -1 === n && (n = t), [n, n === t ? 0 : 4 - (n % 4)];
    }
    function l(e, t, n) {
      for (var i, a, o = [], s = t; s < n; s += 3)
        (i =
          ((e[s] << 16) & 16711680) +
          ((e[s + 1] << 8) & 65280) +
          (255 & e[s + 2])),
          o.push(
            r[((a = i) >> 18) & 63] +
              r[(a >> 12) & 63] +
              r[(a >> 6) & 63] +
              r[63 & a]
          );
      return o.join("");
    }
    (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
  },
  function (e, t) {
    (t.read = function (e, t, n, r, i) {
      var a,
        o,
        s = 8 * i - r - 1,
        u = (1 << s) - 1,
        c = u >> 1,
        l = -7,
        f = n ? i - 1 : 0,
        p = n ? -1 : 1,
        h = e[t + f];
      for (
        f += p, a = h & ((1 << -l) - 1), h >>= -l, l += s;
        l > 0;
        a = 256 * a + e[t + f], f += p, l -= 8
      );
      for (
        o = a & ((1 << -l) - 1), a >>= -l, l += r;
        l > 0;
        o = 256 * o + e[t + f], f += p, l -= 8
      );
      if (0 === a) a = 1 - c;
      else {
        if (a === u) return o ? NaN : (1 / 0) * (h ? -1 : 1);
        (o += Math.pow(2, r)), (a -= c);
      }
      return (h ? -1 : 1) * o * Math.pow(2, a - r);
    }),
      (t.write = function (e, t, n, r, i, a) {
        var o,
          s,
          u,
          c = 8 * a - i - 1,
          l = (1 << c) - 1,
          f = l >> 1,
          p = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          h = r ? 0 : a - 1,
          d = r ? 1 : -1,
          m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
        for (
          t = Math.abs(t),
            isNaN(t) || t === 1 / 0
              ? ((s = isNaN(t) ? 1 : 0), (o = l))
              : ((o = Math.floor(Math.log(t) / Math.LN2)),
                t * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                (t += o + f >= 1 ? p / u : p * Math.pow(2, 1 - f)) * u >= 2 &&
                  (o++, (u /= 2)),
                o + f >= l
                  ? ((s = 0), (o = l))
                  : o + f >= 1
                  ? ((s = (t * u - 1) * Math.pow(2, i)), (o += f))
                  : ((s = t * Math.pow(2, f - 1) * Math.pow(2, i)), (o = 0)));
          i >= 8;
          e[n + h] = 255 & s, h += d, s /= 256, i -= 8
        );
        for (
          o = (o << i) | s, c += i;
          c > 0;
          e[n + h] = 255 & o, h += d, o /= 256, c -= 8
        );
        e[n + h - d] |= 128 * m;
      });
  },
  function (e, t) {},
  function (e, t, n) {
    "use strict";
    var r = n(14).Buffer,
      i = n(41);
    (e.exports = (function () {
      function e() {
        !(function (e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        })(this, e),
          (this.head = null),
          (this.tail = null),
          (this.length = 0);
      }
      return (
        (e.prototype.push = function (e) {
          var t = { data: e, next: null };
          this.length > 0 ? (this.tail.next = t) : (this.head = t),
            (this.tail = t),
            ++this.length;
        }),
        (e.prototype.unshift = function (e) {
          var t = { data: e, next: this.head };
          0 === this.length && (this.tail = t), (this.head = t), ++this.length;
        }),
        (e.prototype.shift = function () {
          if (0 !== this.length) {
            var e = this.head.data;
            return (
              1 === this.length
                ? (this.head = this.tail = null)
                : (this.head = this.head.next),
              --this.length,
              e
            );
          }
        }),
        (e.prototype.clear = function () {
          (this.head = this.tail = null), (this.length = 0);
        }),
        (e.prototype.join = function (e) {
          if (0 === this.length) return "";
          for (var t = this.head, n = "" + t.data; (t = t.next); )
            n += e + t.data;
          return n;
        }),
        (e.prototype.concat = function (e) {
          if (0 === this.length) return r.alloc(0);
          if (1 === this.length) return this.head.data;
          for (
            var t, n, i, a = r.allocUnsafe(e >>> 0), o = this.head, s = 0;
            o;

          )
            (t = o.data),
              (n = a),
              (i = s),
              t.copy(n, i),
              (s += o.data.length),
              (o = o.next);
          return a;
        }),
        e
      );
    })()),
      i &&
        i.inspect &&
        i.inspect.custom &&
        (e.exports.prototype[i.inspect.custom] = function () {
          var e = i.inspect({ length: this.length });
          return this.constructor.name + " " + e;
        });
  },
  function (e, t) {},
  function (e, t, n) {
    (function (e) {
      var r =
          (void 0 !== e && e) || ("undefined" != typeof self && self) || window,
        i = Function.prototype.apply;
      function a(e, t) {
        (this._id = e), (this._clearFn = t);
      }
      (t.setTimeout = function () {
        return new a(i.call(setTimeout, r, arguments), clearTimeout);
      }),
        (t.setInterval = function () {
          return new a(i.call(setInterval, r, arguments), clearInterval);
        }),
        (t.clearTimeout = t.clearInterval = function (e) {
          e && e.close();
        }),
        (a.prototype.unref = a.prototype.ref = function () {}),
        (a.prototype.close = function () {
          this._clearFn.call(r, this._id);
        }),
        (t.enroll = function (e, t) {
          clearTimeout(e._idleTimeoutId), (e._idleTimeout = t);
        }),
        (t.unenroll = function (e) {
          clearTimeout(e._idleTimeoutId), (e._idleTimeout = -1);
        }),
        (t._unrefActive = t.active = function (e) {
          clearTimeout(e._idleTimeoutId);
          var t = e._idleTimeout;
          t >= 0 &&
            (e._idleTimeoutId = setTimeout(function () {
              e._onTimeout && e._onTimeout();
            }, t));
        }),
        n(43),
        (t.setImmediate =
          ("undefined" != typeof self && self.setImmediate) ||
          (void 0 !== e && e.setImmediate) ||
          (this && this.setImmediate)),
        (t.clearImmediate =
          ("undefined" != typeof self && self.clearImmediate) ||
          (void 0 !== e && e.clearImmediate) ||
          (this && this.clearImmediate));
    }.call(this, n(2)));
  },
  function (e, t, n) {
    (function (e, t) {
      !(function (e, n) {
        "use strict";
        if (!e.setImmediate) {
          var r,
            i,
            a,
            o,
            s,
            u = 1,
            c = {},
            l = !1,
            f = e.document,
            p = Object.getPrototypeOf && Object.getPrototypeOf(e);
          (p = p && p.setTimeout ? p : e),
            "[object process]" === {}.toString.call(e.process)
              ? (r = function (e) {
                  t.nextTick(function () {
                    d(e);
                  });
                })
              : !(function () {
                  if (e.postMessage && !e.importScripts) {
                    var t = !0,
                      n = e.onmessage;
                    return (
                      (e.onmessage = function () {
                        t = !1;
                      }),
                      e.postMessage("", "*"),
                      (e.onmessage = n),
                      t
                    );
                  }
                })()
              ? e.MessageChannel
                ? (((a = new MessageChannel()).port1.onmessage = function (e) {
                    d(e.data);
                  }),
                  (r = function (e) {
                    a.port2.postMessage(e);
                  }))
                : f && "onreadystatechange" in f.createElement("script")
                ? ((i = f.documentElement),
                  (r = function (e) {
                    var t = f.createElement("script");
                    (t.onreadystatechange = function () {
                      d(e),
                        (t.onreadystatechange = null),
                        i.removeChild(t),
                        (t = null);
                    }),
                      i.appendChild(t);
                  }))
                : (r = function (e) {
                    setTimeout(d, 0, e);
                  })
              : ((o = "setImmediate$" + Math.random() + "$"),
                (s = function (t) {
                  t.source === e &&
                    "string" == typeof t.data &&
                    0 === t.data.indexOf(o) &&
                    d(+t.data.slice(o.length));
                }),
                e.addEventListener
                  ? e.addEventListener("message", s, !1)
                  : e.attachEvent("onmessage", s),
                (r = function (t) {
                  e.postMessage(o + t, "*");
                })),
            (p.setImmediate = function (e) {
              "function" != typeof e && (e = new Function("" + e));
              for (
                var t = new Array(arguments.length - 1), n = 0;
                n < t.length;
                n++
              )
                t[n] = arguments[n + 1];
              var i = { callback: e, args: t };
              return (c[u] = i), r(u), u++;
            }),
            (p.clearImmediate = h);
        }
        function h(e) {
          delete c[e];
        }
        function d(e) {
          if (l) setTimeout(d, 0, e);
          else {
            var t = c[e];
            if (t) {
              l = !0;
              try {
                !(function (e) {
                  var t = e.callback,
                    n = e.args;
                  switch (n.length) {
                    case 0:
                      t();
                      break;
                    case 1:
                      t(n[0]);
                      break;
                    case 2:
                      t(n[0], n[1]);
                      break;
                    case 3:
                      t(n[0], n[1], n[2]);
                      break;
                    default:
                      t.apply(void 0, n);
                  }
                })(t);
              } finally {
                h(e), (l = !1);
              }
            }
          }
        }
      })("undefined" == typeof self ? (void 0 === e ? this : e) : self);
    }.call(this, n(2), n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = a;
    var r = n(23),
      i = Object.create(n(9));
    function a(e) {
      if (!(this instanceof a)) return new a(e);
      r.call(this, e);
    }
    (i.inherits = n(1)),
      i.inherits(a, r),
      (a.prototype._transform = function (e, t, n) {
        n(null, e);
      });
  },
  function (e, t, n) {
    e.exports = n(16);
  },
  function (e, t, n) {
    e.exports = n(3);
  },
  function (e, t, n) {
    e.exports = n(12).Transform;
  },
  function (e, t, n) {
    e.exports = n(12).PassThrough;
  },
  function (e, t, n) {
    "use strict";
    var r = n(12);
    function i(e, t, n) {
      void 0 === n && ((n = t), (t = e), (e = null)),
        r.Duplex.call(this, e),
        "function" != typeof n.read && (n = new r.Readable(e).wrap(n)),
        (this._writable = t),
        (this._readable = n),
        (this._waiting = !1);
      var i = this;
      t.once("finish", function () {
        i.end();
      }),
        this.once("finish", function () {
          t.end();
        }),
        n.on("readable", function () {
          i._waiting && ((i._waiting = !1), i._read());
        }),
        n.once("end", function () {
          i.push(null);
        }),
        (e && void 0 !== e.bubbleErrors && !e.bubbleErrors) ||
          (t.on("error", function (e) {
            i.emit("error", e);
          }),
          n.on("error", function (e) {
            i.emit("error", e);
          }));
    }
    (i.prototype = Object.create(r.Duplex.prototype, {
      constructor: { value: i },
    })),
      (i.prototype._write = function (e, t, n) {
        this._writable.write(e, t, n);
      }),
      (i.prototype._read = function () {
        for (var e, t = 0; null !== (e = this._readable.read()); )
          this.push(e), t++;
        0 === t && (this._waiting = !0);
      }),
      (e.exports = function (e, t, n) {
        return new i(e, t, n);
      }),
      (e.exports.DuplexWrapper = i);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      const n = ["then", "catch", "finally"].map((e) => [
        e,
        Reflect.getOwnPropertyDescriptor(t.prototype, e),
      ]);
      e.exports = (e, t) => {
        for (const [r, i] of n) {
          const n = (...e) => Reflect.apply(i.value, t(), e);
          Reflect.defineProperty(e, r, { ...i, value: n });
        }
        return e;
      };
    }.call(this, n(11)));
  },
  function (e, t, n) {
    ((t = e.exports = n(24)).Stream = t),
      (t.Readable = t),
      (t.Writable = n(28)),
      (t.Duplex = n(5)),
      (t.Transform = n(29)),
      (t.PassThrough = n(57)),
      (t.finished = n(17)),
      (t.pipeline = n(58));
  },
  function (e, t) {},
  function (e, t, n) {
    "use strict";
    function r(e, t) {
      var n = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t &&
          (r = r.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          n.push.apply(n, r);
      }
      return n;
    }
    function i(e, t, n) {
      return (
        t in e
          ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (e[t] = n),
        e
      );
    }
    function a(e, t) {
      for (var n = 0; n < t.length; n++) {
        var r = t[n];
        (r.enumerable = r.enumerable || !1),
          (r.configurable = !0),
          "value" in r && (r.writable = !0),
          Object.defineProperty(e, r.key, r);
      }
    }
    var o = n(8).Buffer,
      s = n(54).inspect,
      u = (s && s.custom) || "inspect";
    e.exports = (function () {
      function e() {
        !(function (e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        })(this, e),
          (this.head = null),
          (this.tail = null),
          (this.length = 0);
      }
      var t, n, c;
      return (
        (t = e),
        (n = [
          {
            key: "push",
            value: function (e) {
              var t = { data: e, next: null };
              this.length > 0 ? (this.tail.next = t) : (this.head = t),
                (this.tail = t),
                ++this.length;
            },
          },
          {
            key: "unshift",
            value: function (e) {
              var t = { data: e, next: this.head };
              0 === this.length && (this.tail = t),
                (this.head = t),
                ++this.length;
            },
          },
          {
            key: "shift",
            value: function () {
              if (0 !== this.length) {
                var e = this.head.data;
                return (
                  1 === this.length
                    ? (this.head = this.tail = null)
                    : (this.head = this.head.next),
                  --this.length,
                  e
                );
              }
            },
          },
          {
            key: "clear",
            value: function () {
              (this.head = this.tail = null), (this.length = 0);
            },
          },
          {
            key: "join",
            value: function (e) {
              if (0 === this.length) return "";
              for (var t = this.head, n = "" + t.data; (t = t.next); )
                n += e + t.data;
              return n;
            },
          },
          {
            key: "concat",
            value: function (e) {
              if (0 === this.length) return o.alloc(0);
              for (
                var t, n, r, i = o.allocUnsafe(e >>> 0), a = this.head, s = 0;
                a;

              )
                (t = a.data),
                  (n = i),
                  (r = s),
                  o.prototype.copy.call(t, n, r),
                  (s += a.data.length),
                  (a = a.next);
              return i;
            },
          },
          {
            key: "consume",
            value: function (e, t) {
              var n;
              return (
                e < this.head.data.length
                  ? ((n = this.head.data.slice(0, e)),
                    (this.head.data = this.head.data.slice(e)))
                  : (n =
                      e === this.head.data.length
                        ? this.shift()
                        : t
                        ? this._getString(e)
                        : this._getBuffer(e)),
                n
              );
            },
          },
          {
            key: "first",
            value: function () {
              return this.head.data;
            },
          },
          {
            key: "_getString",
            value: function (e) {
              var t = this.head,
                n = 1,
                r = t.data;
              for (e -= r.length; (t = t.next); ) {
                var i = t.data,
                  a = e > i.length ? i.length : e;
                if (
                  (a === i.length ? (r += i) : (r += i.slice(0, e)),
                  0 == (e -= a))
                ) {
                  a === i.length
                    ? (++n,
                      t.next
                        ? (this.head = t.next)
                        : (this.head = this.tail = null))
                    : ((this.head = t), (t.data = i.slice(a)));
                  break;
                }
                ++n;
              }
              return (this.length -= n), r;
            },
          },
          {
            key: "_getBuffer",
            value: function (e) {
              var t = o.allocUnsafe(e),
                n = this.head,
                r = 1;
              for (n.data.copy(t), e -= n.data.length; (n = n.next); ) {
                var i = n.data,
                  a = e > i.length ? i.length : e;
                if ((i.copy(t, t.length - e, 0, a), 0 == (e -= a))) {
                  a === i.length
                    ? (++r,
                      n.next
                        ? (this.head = n.next)
                        : (this.head = this.tail = null))
                    : ((this.head = n), (n.data = i.slice(a)));
                  break;
                }
                ++r;
              }
              return (this.length -= r), t;
            },
          },
          {
            key: u,
            value: function (e, t) {
              return s(
                this,
                (function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2
                      ? r(Object(n), !0).forEach(function (t) {
                          i(e, t, n[t]);
                        })
                      : Object.getOwnPropertyDescriptors
                      ? Object.defineProperties(
                          e,
                          Object.getOwnPropertyDescriptors(n)
                        )
                      : r(Object(n)).forEach(function (t) {
                          Object.defineProperty(
                            e,
                            t,
                            Object.getOwnPropertyDescriptor(n, t)
                          );
                        });
                  }
                  return e;
                })({}, t, { depth: 0, customInspect: !1 })
              );
            },
          },
        ]) && a(t.prototype, n),
        c && a(t, c),
        e
      );
    })();
  },
  function (e, t) {},
  function (e, t, n) {
    "use strict";
    (function (t, r) {
      var i;
      function a(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      var o = n(17),
        s = Symbol("lastResolve"),
        u = Symbol("lastReject"),
        c = Symbol("error"),
        l = Symbol("ended"),
        f = Symbol("lastPromise"),
        p = Symbol("handlePromise"),
        h = Symbol("stream");
      function d(e, t) {
        return { value: e, done: t };
      }
      function m(e) {
        var t = e[s];
        if (null !== t) {
          var n = e[h].read();
          null !== n &&
            ((e[f] = null), (e[s] = null), (e[u] = null), t(d(n, !1)));
        }
      }
      function g(e) {
        t.nextTick(m, e);
      }
      var y = Object.getPrototypeOf(function () {}),
        v = Object.setPrototypeOf(
          (a(
            (i = {
              get stream() {
                return this[h];
              },
              next: function () {
                var e = this,
                  n = this[c];
                if (null !== n) return r.reject(n);
                if (this[l]) return r.resolve(d(void 0, !0));
                if (this[h].destroyed)
                  return new r(function (n, r) {
                    t.nextTick(function () {
                      e[c] ? r(e[c]) : n(d(void 0, !0));
                    });
                  });
                var i,
                  a = this[f];
                if (a)
                  i = new r(
                    (function (e, t) {
                      return function (n, r) {
                        e.then(function () {
                          t[l] ? n(d(void 0, !0)) : t[p](n, r);
                        }, r);
                      };
                    })(a, this)
                  );
                else {
                  var o = this[h].read();
                  if (null !== o) return r.resolve(d(o, !1));
                  i = new r(this[p]);
                }
                return (this[f] = i), i;
              },
            }),
            Symbol.asyncIterator,
            function () {
              return this;
            }
          ),
          a(i, "return", function () {
            var e = this;
            return new r(function (t, n) {
              e[h].destroy(null, function (e) {
                e ? n(e) : t(d(void 0, !0));
              });
            });
          }),
          i),
          y
        );
      e.exports = function (e) {
        var t,
          n = Object.create(
            v,
            (a((t = {}), h, { value: e, writable: !0 }),
            a(t, s, { value: null, writable: !0 }),
            a(t, u, { value: null, writable: !0 }),
            a(t, c, { value: null, writable: !0 }),
            a(t, l, { value: e._readableState.endEmitted, writable: !0 }),
            a(t, p, {
              value: function (e, t) {
                var r = n[h].read();
                r
                  ? ((n[f] = null), (n[s] = null), (n[u] = null), e(d(r, !1)))
                  : ((n[s] = e), (n[u] = t));
              },
              writable: !0,
            }),
            t)
          );
        return (
          (n[f] = null),
          o(e, function (e) {
            if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
              var t = n[u];
              return (
                null !== t &&
                  ((n[f] = null), (n[s] = null), (n[u] = null), t(e)),
                void (n[c] = e)
              );
            }
            var r = n[s];
            null !== r &&
              ((n[f] = null), (n[s] = null), (n[u] = null), r(d(void 0, !0))),
              (n[l] = !0);
          }),
          e.on("readable", g.bind(null, n)),
          n
        );
      };
    }.call(this, n(0), n(11)));
  },
  function (e, t) {
    e.exports = function () {
      throw new Error("Readable.from is not available in the browser");
    };
  },
  function (e, t, n) {
    "use strict";
    e.exports = i;
    var r = n(29);
    function i(e) {
      if (!(this instanceof i)) return new i(e);
      r.call(this, e);
    }
    n(1)(i, r),
      (i.prototype._transform = function (e, t, n) {
        n(null, e);
      });
  },
  function (e, t, n) {
    "use strict";
    var r;
    var i = n(4).codes,
      a = i.ERR_MISSING_ARGS,
      o = i.ERR_STREAM_DESTROYED;
    function s(e) {
      if (e) throw e;
    }
    function u(e, t, i, a) {
      a = (function (e) {
        var t = !1;
        return function () {
          t || ((t = !0), e.apply(void 0, arguments));
        };
      })(a);
      var s = !1;
      e.on("close", function () {
        s = !0;
      }),
        void 0 === r && (r = n(17)),
        r(e, { readable: t, writable: i }, function (e) {
          if (e) return a(e);
          (s = !0), a();
        });
      var u = !1;
      return function (t) {
        if (!s && !u)
          return (
            (u = !0),
            (function (e) {
              return e.setHeader && "function" == typeof e.abort;
            })(e)
              ? e.abort()
              : "function" == typeof e.destroy
              ? e.destroy()
              : void a(t || new o("pipe"))
          );
      };
    }
    function c(e) {
      e();
    }
    function l(e, t) {
      return e.pipe(t);
    }
    function f(e) {
      return e.length
        ? "function" != typeof e[e.length - 1]
          ? s
          : e.pop()
        : s;
    }
    e.exports = function () {
      for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
        t[n] = arguments[n];
      var r,
        i = f(t);
      if ((Array.isArray(t[0]) && (t = t[0]), t.length < 2))
        throw new a("streams");
      var o = t.map(function (e, n) {
        var a = n < t.length - 1;
        return u(e, a, n > 0, function (e) {
          r || (r = e), e && o.forEach(c), a || (o.forEach(c), i(r));
        });
      });
      return t.reduce(l);
    };
  },
  function (e, t, n) {
    "use strict";
    n.r(t);
    var r = n(30),
      i = n.n(r),
      a = n(6),
      o = n.n(a),
      s = (n(15), n(31), n(32), n(33)),
      u = n.n(s);
    function c() {
      return (c =
        Object.assign ||
        function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
          }
          return e;
        }).apply(this, arguments);
    }
    var l = (function () {
      function e(e) {
        var t = e.push;
        (this.push = t),
          (this.state = {
            expect: "header",
            row: 0,
            hasContentStarted: !1,
            isWebVTT: !1,
            node: {},
            buffer: [],
          });
      }
      var t = e.prototype;
      return (
        (t.isIndex = function (e) {
          return /^\d+$/.test(e.trim());
        }),
        (t.isTimestamp = function (e) {
          return p.test(e);
        }),
        (t.isVttComment = function (e) {
          return /^NOTE/.test(e);
        }),
        (t.getError = function (e, t, n) {
          return new Error(
            "expected " +
              e +
              " at row " +
              (t + 1) +
              ', but received: "' +
              n +
              '"'
          );
        }),
        (t.parseLine = function (e) {
          var t = 0 === this.state.row ? u()(e) : e;
          if (!this.state.hasContentStarted) {
            if (!t.trim()) return;
            this.state.hasContentStarted = !0;
          }
          ({
            header: this.parseHeader,
            id: this.parseId,
            timestamp: this.parseTimestamp,
            text: this.parseText,
            vtt_comment: this.parseVttComment,
          }[this.state.expect].call(this, t),
            this.state.row++);
        }),
        (t.flush = function () {
          this.state.buffer.length > 0 && this.pushNode();
        }),
        (t.parseHeader = function (e) {
          if (!this.state.isWebVTT) {
            if (
              ((this.state.isWebVTT = /^WEBVTT/.test(e)), !this.state.isWebVTT)
            )
              return void this.parseId(e);
            this.state.node.type = "header";
          }
          this.state.buffer.push(e), e || (this.state.expect = "id");
        }),
        (t.parseId = function (e) {
          (this.state.expect = "timestamp"),
            "header" === this.state.node.type && this.pushNode(),
            this.isIndex(e) ||
              (this.state.isWebVTT && this.isVttComment(e)
                ? (this.state.expect = "vtt_comment")
                : this.parseTimestamp(e));
        }),
        (t.parseVttComment = function (e) {
          (this.state.expect = "vtt_comment"),
            "" === e.trim() && (this.state.expect = "id");
        }),
        (t.parseTimestamp = function (e) {
          if (!this.isTimestamp(e))
            throw this.getError("timestamp", this.state.row, e);
          (this.state.node = { type: "cue", data: c({}, h(e), { text: "" }) }),
            (this.state.expect = "text");
        }),
        (t.parseText = function (e) {
          if (0 !== this.state.buffer.length) {
            if (this.isTimestamp(e)) {
              var t = this.state.buffer.length - 1;
              return (
                this.isIndex(this.state.buffer[t]) && this.state.buffer.pop(),
                this.pushNode(),
                void this.parseTimestamp(e)
              );
            }
            if (this.isVttComment(e))
              return this.pushNode(), void this.parseVttComment(e);
            this.state.buffer.push(e);
          } else this.state.buffer.push(e);
        }),
        (t.pushNode = function () {
          if ("cue" === this.state.node.type) {
            for (;;) {
              var e = this.state.buffer[this.state.buffer.length - 1];
              if (!["", "\n"].includes(e)) break;
              this.state.buffer.pop();
            }
            for (;;) {
              var t = this.state.buffer[0];
              if (!["", "\n"].includes(t)) break;
              this.state.buffer.shift();
            }
            this.state.node.data.text = this.state.buffer.join("\n");
          }
          "header" === this.state.node.type &&
            (this.state.node.data = this.state.buffer.join("\n").trim()),
            this.push(this.state.node),
            (this.state.node = {}),
            (this.state.buffer = []);
        }),
        e
      );
    })();
    function f(e) {
      var t = e.match(/^(?:(\d{1,}):)?(\d{2}):(\d{2})[,.](\d{3})$/);
      if (!t) throw new Error('Invalid SRT or VTT time format: "' + e + '"');
      return (
        (t[1] ? 36e5 * parseInt(t[1], 10) : 0) +
        6e4 * parseInt(t[2], 10) +
        1e3 * parseInt(t[3], 10) +
        parseInt(t[4], 10)
      );
    }
    var p = /^((?:\d{1,}:)?\d{2}:\d{2}[,.]\d{3}) --> ((?:\d{1,}:)?\d{2}:\d{2}[,.]\d{3})(?: (.*))?$/;
    function h(e) {
      var t = p.exec(e);
      if (!t) throw new Error("Invalid timestamp format");
      var n = { start: f(t[1]), end: f(t[2]) };
      return t[3] && (n.settings = t[3]), n;
    }
    function d(e) {
      return (d =
        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
          ? function (e) {
              return typeof e;
            }
          : function (e) {
              return e &&
                "function" == typeof Symbol &&
                e.constructor === Symbol &&
                e !== Symbol.prototype
                ? "symbol"
                : typeof e;
            })(e);
    }
    function m(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function g(e, t) {
      for (var n = 0; n < t.length; n++) {
        var r = t[n];
        (r.enumerable = r.enumerable || !1),
          (r.configurable = !0),
          "value" in r && (r.writable = !0),
          Object.defineProperty(e, r.key, r);
      }
    }
    function y(e, t) {
      return (y =
        Object.setPrototypeOf ||
        function (e, t) {
          return (e.__proto__ = t), e;
        })(e, t);
    }
    function v(e) {
      var t = (function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return (
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            ),
            !0
          );
        } catch (e) {
          return !1;
        }
      })();
      return function () {
        var n,
          r = x(e);
        if (t) {
          var i = x(this).constructor;
          n = Reflect.construct(r, arguments, i);
        } else n = r.apply(this, arguments);
        return b(this, n);
      };
    }
    function b(e, t) {
      return !t || ("object" !== d(t) && "function" != typeof t)
        ? (function (e) {
            if (void 0 === e)
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            return e;
          })(e)
        : t;
    }
    function x(e) {
      return (x = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (e) {
            return e.__proto__ || Object.getPrototypeOf(e);
          })(e);
    }
    var w = {
        npm_name: "@kissmybutton/motorcortex-subtitles",
        incidents: [
          {
            exportable: (function (e) {
              !(function (e, t) {
                if ("function" != typeof t && null !== t)
                  throw new TypeError(
                    "Super expression must either be null or a function"
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && y(e, t);
              })(a, e);
              var t,
                n,
                r,
                i = v(a);
              function a() {
                return m(this, a), i.apply(this, arguments);
              }
              return (
                (t = a),
                (n = [
                  {
                    key: "onGetContext",
                    value: function () {
                      this.element.style = this.attrs.attrs.css;
                      try {
                        this.subs =
                          ((e = this.attrs.animatedAttrs.text.trim()),
                          (t = []),
                          (n = new l({
                            push: function (e) {
                              return t.push(e);
                            },
                          })),
                          e
                            .replace(/\r\n/g, "\n")
                            .split("\n")
                            .forEach(function (e) {
                              return n.parseLine(e);
                            }),
                          n.flush(),
                          t);
                      } catch (e) {
                        console.error("Error while loading subtitles", e);
                      }
                      var e, t, n;
                    },
                  },
                  {
                    key: "getScratchValue",
                    value: function () {
                      return "";
                    },
                  },
                  {
                    key: "onProgress",
                    value: function (e, t) {
                      for (var n in this.subs) {
                        var r = this.subs[n].data,
                          i = r.start,
                          a = r.end,
                          o = r.text;
                        if (t >= i && t < a) {
                          this.element.innerHTML = o;
                          break;
                        }
                        this.element.innerHTML = "";
                      }
                    },
                  },
                ]) && g(t.prototype, n),
                r && g(t, r),
                a
              );
            })(o.a.API.MonoIncident),
            name: "ParseText",
          },
        ],
      },
      N = n(34),
      E = n.n(N),
      M = Object(a.loadPlugin)(w),
      S = new a.Clip({
        html:
          '\n<div class="container">\n  <div id="subs-container"></div>\n</div>',
        css:
          "\n  .container{\n    width:100%;\n    height:100%;\n    position:relative;\n    background:black;\n  }\n  #subs-container{\n    text-align:center;\n    position:absolute;\n    bottom:80px;\n    left:50%;\n    transform:translateX(-50%);\n  }\n",
        host: document.getElementById("clip"),
        containerParams: { width: "100%", height: "100%" },
      }),
      _ = new M.ParseText(
        {
          attrs: { css: "color:white;font-size:20px" },
          animatedAttrs: { text: E.a },
        },
        { duration: 75e3, selector: "#subs-container" }
      );
    S.addIncident(_, 0),
      new i.a({
        scaleToFit: !0,
        clip: S,
        theme: "mc-blue",
        preview: !1,
        pointerEvents: !1,
      });
  },
]);
